{
    "help": {
        "TOPs": {
            "": {
                "label": "",
                "parameters": {},
                "summary": ""
            },
            "flowTOP": {
                "label": "Nvidia Flow",
                "parameters": {
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "showshapes": {
                        "label": "Show Shapes",
                        "summary": ""
                    },
                    "fuelperburn": {
                        "label": "Fuel per Burn",
                        "summary": ""
                    },
                    "memusage": {
                        "label": "Mem Usage",
                        "summary": ""
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "veldamping": {
                        "label": "Velocity Damping",
                        "summary": ""
                    },
                    "tempperburn": {
                        "label": "Temp per Burn",
                        "summary": ""
                    },
                    "fueldamping": {
                        "label": "Fuel Damping",
                        "summary": ""
                    },
                    "vortfromtemp": {
                        "label": "Vorticity from Temp",
                        "summary": ""
                    },
                    "vortconstant": {
                        "label": "Vorticity Constant",
                        "summary": ""
                    },
                    "ignitiontemp": {
                        "label": "Ignotion Temp",
                        "summary": ""
                    },
                    "vortstrength": {
                        "label": "Vorticity Strength",
                        "summary": ""
                    },
                    "velfade": {
                        "label": "Velocity Fade",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "smokefade": {
                        "label": "Smoke Fade",
                        "summary": ""
                    },
                    "simposition": {
                        "label": "Sim Position",
                        "summary": ""
                    },
                    "burnpertemp": {
                        "label": "Burn per Temp",
                        "summary": ""
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": ""
                    },
                    "gravity": {
                        "label": "Gravity",
                        "summary": ""
                    },
                    "tempdamping": {
                        "label": "Temp Damping",
                        "summary": ""
                    },
                    "showblocks": {
                        "label": "Show Blocks",
                        "summary": ""
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "buoyancy": {
                        "label": "Buoyancy",
                        "summary": ""
                    },
                    "smokeperburn": {
                        "label": "Smoke per Burn",
                        "summary": ""
                    },
                    "expansion": {
                        "label": "Expansion",
                        "summary": ""
                    },
                    "smokedamping": {
                        "label": "Smoke Damping",
                        "summary": ""
                    },
                    "vortfromsmoke": {
                        "label": "Vorticity from Smoke",
                        "summary": ""
                    },
                    "fuelfade": {
                        "label": "Fuel Fade",
                        "summary": ""
                    },
                    "simsize": {
                        "label": "Sim Size",
                        "summary": ""
                    },
                    "coolingrate": {
                        "label": "Cooling Rate",
                        "summary": ""
                    },
                    "emitters": {
                        "label": "Flow Emitters",
                        "summary": ""
                    },
                    "vortfromfuel": {
                        "label": "Vorticity from Fuel",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "tempfade": {
                        "label": "Temp Fade",
                        "summary": ""
                    },
                    "camera": {
                        "label": "Camera",
                        "summary": ""
                    },
                    "vortfromvel": {
                        "label": "Vorticity from Velocity",
                        "summary": ""
                    },
                    "showemitbounds": {
                        "label": "Show Emit Bounds",
                        "summary": ""
                    }
                },
                "summary": "The Nvidia Flow TOP calculates the Flow simulation and renders it. This operator only works with Nvidia GPUs."
            },
            "circleTOP": {
                "label": "Circle",
                "parameters": {
                    "borderwidthunit": {
                        "label": "Border Width Unit",
                        "summary": ""
                    },
                    "radiusunit": {
                        "label": "Radius Unit",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "borderwidth": {
                        "label": "Border Width",
                        "summary": "Width of the border to draw on the shape."
                    },
                    "sides": {
                        "label": "Sides",
                        "summary": "When drawing a polygon, this corresponds to the number of sides the polygon should have."
                    },
                    "border": {
                        "label": "Border Color",
                        "summary": "Color to use for the border of the shape."
                    },
                    "fillalpha": {
                        "label": "Fill Alpha",
                        "summary": "Alpha of the fill color."
                    },
                    "fillcolor": {
                        "label": "Fill Color",
                        "summary": "Color to use for the fill of the shape."
                    },
                    "multrgbbyalpha": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Multiplies the RGB values by the Alpha values."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "centerunit": {
                        "label": "Center Unit",
                        "summary": ""
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "borderoffset": {
                        "label": "Border Offset",
                        "summary": "Value from 0 to 1 indicating the fraction of the border that extends beyond the radius of the shape. Effectively sets the radius to radius + borderoffset*borderwidth."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "softnessunit": {
                        "label": "Softness Unit",
                        "summary": ""
                    },
                    "ispolygon": {
                        "label": "Polygon",
                        "summary": "When on, a polygon will be drawn. Otherwise a circle is drawn."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "softness": {
                        "label": "Softness",
                        "summary": "Specifies the amount that the background color should be blended into the shape."
                    },
                    "radius": {
                        "label": "Radius",
                        "summary": "X and Y radii of the Circle. For polygons, only the X radius is used."
                    },
                    "antialias": {
                        "label": "Anti-Alias",
                        "summary": "When on, the shape will be anti-aliased."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "arcangle": {
                        "label": "Arc Angles",
                        "summary": "Specifies the angles at which the shape is to start and end. The region between beginarcangle and endarcangle, with clockwise rotation, will not be drawn."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "Color to use for the background."
                    },
                    "rotate": {
                        "label": "Rotate",
                        "summary": "Rotates the shape by the specified number of degrees."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": "Alpha of the background color."
                    },
                    "borderalpha": {
                        "label": "Border Alpha",
                        "summary": "Alpha of the border color."
                    },
                    "center": {
                        "label": "Center",
                        "summary": "Coordinates of the center of the shape. (0,0) corresponds to a perfectly centered shape."
                    }
                },
                "summary": "The Circle TOP can be used to generate circles, ellipses and N-sided polygons."
            },
            "functionTOP": {
                "label": "Function",
                "parameters": {
                    "baseval": {
                        "label": "Base Value",
                        "summary": ""
                    },
                    "angunit": {
                        "label": "Angle Units",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "expval": {
                        "label": "Exponent Value",
                        "summary": ""
                    },
                    "funca": {
                        "label": "Function A",
                        "summary": ""
                    },
                    "constval": {
                        "label": "Constant Value",
                        "summary": ""
                    },
                    "funcb": {
                        "label": "Function B",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "funcr": {
                        "label": "Function R",
                        "summary": ""
                    },
                    "funcg": {
                        "label": "Function G",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "replace": {
                        "label": "Replace Errors",
                        "summary": ""
                    },
                    "errval": {
                        "label": "Error Value",
                        "summary": ""
                    },
                    "preconvert": {
                        "label": "Pre-Convert Integers",
                        "summary": ""
                    }
                },
                "summary": ""
            },
            "insideTOP": {
                "label": "Inside",
                "parameters": {
                    "tunit": {
                        "label": "Translate Units",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "size": {
                        "label": "Fixed Layer",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "extend": {
                        "label": "Extend Overlay",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": ""
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "punit": {
                        "label": "Pivot Units",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "prefit": {
                        "label": "Pre-Fit Overlay",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    }
                },
                "summary": "The Inside TOP places Input1 'inside' Input2."
            },
            "webrenderTOP": {
                "label": "Web Render",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "updatewhenloaded": {
                        "label": "Only Update when Loaded",
                        "summary": "Only shows the web page when it is full loaded."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "transparent": {
                        "label": "Transparent Background",
                        "summary": "Loads the webpage with a transparent background.  This option will restart the browser process."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "autorestart": {
                        "label": "Restart if Process Died",
                        "summary": "Automatically restart the browser process if it died."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Enables/disables the Web Render TOP."
                    },
                    "audio": {
                        "label": "Enable Audio",
                        "summary": "Let the browser process play audio if the web page contains audio.  This option will restart the browser process."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "url": {
                        "label": "Start URL or File",
                        "summary": "Uniform Resource Locator or the address of the web page"
                    },
                    "reload": {
                        "label": "Reload Current Page",
                        "summary": "Reloads the current page, the same as refreshing a web browser."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "options": {
                        "label": "Options",
                        "summary": "Additional options that can be passed to the browser process.  This option will restart the browser process."
                    },
                    "resetcount": {
                        "label": "Reset Update Count",
                        "summary": "Reset the counter for the number of times the webpage has been updated (available via an Info CHOP)."
                    },
                    "maxrenderrate": {
                        "label": "Maximum Render Frame Rate",
                        "summary": "Sets the maximum frame rate the page will be rendered at."
                    },
                    "autorestartpulse": {
                        "label": "Restart",
                        "summary": ""
                    }
                },
                "summary": "The Web Render TOP takes a URL or DAT and renders a webpage via a separate browser process that uses Chromium Embedded Frameworks (CEF), and passes the result back through shared memory."
            },
            "svgTOP": {
                "label": "SVG",
                "parameters": {
                    "tunit": {
                        "label": "Translate Unit",
                        "summary": ""
                    },
                    "dat": {
                        "label": "DAT",
                        "summary": "Not currently used."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The two fields for Translate allows you to specify transforms in x and y axes."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your TOP will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which the TOP scales and rotates. Altering the pivot point of a TOP produces different results depending on the transformation performed on the TOP image.  For example, during a scaling operation, if the pivot point of a TOP image is located at -1,-1 and you wanted to scale the image by 0.5 (reduce its size by 50%), then the TOP would scale toward the pivot point and appear to slide down and to the left."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "punit": {
                        "label": "Pivot Unit",
                        "summary": ""
                    },
                    "file": {
                        "label": "File",
                        "summary": "The path and name of the SVG file to load. File format .svg supported."
                    },
                    "antialias": {
                        "label": "Anti-Alias",
                        "summary": "Sets the level of anti-aliasing in the scene. Setting this to higher values uses more graphics memory."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "reload": {
                        "label": "Reload",
                        "summary": "Change from 0 to 1 to force the file to reload, useful when the file changes or did not exist at first."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "Sets the background color in the image."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The two fields for Scale allows you to specify transforms in x and y axes."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the TOP's rotations. As with transform order (above), changing the order in which the TOP's rotations take place will alter the TOP's final position."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": "Sets the background alpha in the image."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The three fields for Rotate allow you to specify the amount of rotation along any of the three axes."
                    }
                },
                "summary": "The SVG TOP loads SVG files into TouchDesigner."
            },
            "screenTOP": {
                "label": "Screen",
                "parameters": {
                    "tunit": {
                        "label": "Translate Units",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "size": {
                        "label": "Fixed Layer",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "extend": {
                        "label": "Extend Overlay",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": ""
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "punit": {
                        "label": "Pivot Units",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "prefit": {
                        "label": "Pre-Fit Overlay",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    }
                },
                "summary": "The Screen TOP brightens the underlying layers depending on how bright the screened layer's pixels are."
            },
            "leapmotionTOP": {
                "label": "Leap Motion",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": "If set, this TOP will capture data from the cameras."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "hmd": {
                        "label": "HMD Mode",
                        "summary": "Switches the device to Head Mounted Display mode."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "flipx": {
                        "label": "Flip X",
                        "summary": "Flips the image in X."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "correction": {
                        "label": "Image Correction",
                        "summary": ""
                    },
                    "flipy": {
                        "label": "Flip Y",
                        "summary": "Flips the image in Y."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "camera": {
                        "label": "Camera",
                        "summary": "Select between the two cameras in the Leap Motion Controller."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    }
                },
                "summary": "The Leap Motion TOP gets the image from the Leap Motion Controller's cameras."
            },
            "sharedmeminTOP": {
                "label": "Shared Mem In",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "name": {
                        "label": "Shared Mem Name",
                        "summary": "The name of the memory block it reads from."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "memtype": {
                        "label": "Shared Mem Type",
                        "summary": "Reads from a Local or a Global memory location."
                    }
                },
                "summary": "The Shared Mem In TOP will read image data from a shared memory block."
            },
            "syphonspoutoutTOP": {
                "label": "Syphon Spout Out",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Turns the sending on or off."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "sendername": {
                        "label": "Sender Name",
                        "summary": "The name of the Syphon/Spout sender you wish to output. This can be any text string."
                    }
                },
                "summary": "The Syphon Spout Out TOP will share its input texture with other applications that support the Spout framework on Windows or Syphon on macOS."
            },
            "videodeviceoutTOP": {
                "label": "Video Device Out",
                "parameters": {
                    "manualfield": {
                        "label": "Manual Field Control",
                        "summary": "When outputting interlaced video if you are using a source video that is also interlaced, it's likely you'll want to make sure you are keeping the odd/even fields in sync, otherwise the video will look stuttery. You can use the 'odd_field' value in the Info CHOP on the Movie File In TOP or Video Device In TOP to know if the current frame is the odd field or the even field. In general the odd field is the first frame, so you use this value in the First Field parameter to tell the Video Device Out TOP that the current frame is the first field. On the next frame you would put this value to 0 (which is also what the 'odd_frame' will go to) to tell the Video Device Out TOP that the current frame is the 2nd frame, and you now have a complete frame to output. Deinterlacing should be enabled on the Video Device In or Movie File In TOP, so that fields are fed into the network one at a time."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "bufferlength": {
                        "label": "Buffer Length",
                        "summary": "The length in seconds to delay the audio data, to avoid crackles."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "outputpixelformat": {
                        "label": "Output Pixel Format",
                        "summary": "Set the pixel format of the output when possible (depends what type of device is used)."
                    },
                    "firstfield": {
                        "label": "First Field",
                        "summary": "Tells the Video Device Out TOP if the current frame being given as it's input is the First or Second field in the final output image, when outputting an interlaced video. Look at the description for Manual Field Control for more information."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "audiobitdepth": {
                        "label": "Audio Bit Depth",
                        "summary": "Describes the number of bits of information used for each sample."
                    },
                    "chop": {
                        "label": "Audio CHOP",
                        "summary": "If you want to embed audio data into the output, put the path to a Time Sliced CHOP here."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Enable or disable the output card."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "signalformat": {
                        "label": "Signal Format",
                        "summary": "The signal format to output at. This is the resolution and the frame rate, as well as if the frames are progressive or interlaced."
                    },
                    "device": {
                        "label": "Device",
                        "summary": "A menu of available video devices to output to.  Set the Library parameter above prior to selecting your device."
                    },
                    "library": {
                        "label": "Library",
                        "summary": "Select the driver library to use."
                    }
                },
                "summary": "The Video Device Out TOP routes video to output devices using their native driver libraries."
            },
            "antialiasTOP": {
                "label": "Anti Alias",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "edgedetectsource": {
                        "label": "Edge Detect Source",
                        "summary": "This controls how edges are detected in the image. Anti-aliasing is only done along detected edges."
                    },
                    "outputedges": {
                        "label": "Output Edges",
                        "summary": "For visualizing what parts of the image will be anti-aliased. This shows the edges that are being detected, so you can tell where the anti-aliasing is being applied."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "edgethreshold": {
                        "label": "Edge Threshold",
                        "summary": "Controls the sensitivity of edge detection. Use the \\\"Output Edges\\\" mode to see it in action."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "maxdiagsearchsteps": {
                        "label": "Max Diag Search Steps",
                        "summary": "How many diagonal search steps are done when looking for edges."
                    },
                    "quality": {
                        "label": "Quality",
                        "summary": "Controls the quality of the anti-alias process. A higher quality will require more GPU power to compute."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "cornerrounding": {
                        "label": "Corner Rounding",
                        "summary": "Control strength of rounding edge corners."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "maxsearchsteps": {
                        "label": "Max Search Steps",
                        "summary": "How many horizontal and vertical search steps are done when looking for edges."
                    }
                },
                "summary": "The Anti-Alias TOP uses a screen space antialiasing technique called \\u2018SMAA: Enhanced Subpixel Morphological Antialiasing\\u2019."
            },
            "directxinTOP": {
                "label": "DirectX In",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "handle": {
                        "label": "Handle",
                        "summary": "Specify the handle pointing to the DirectX texture. You can get the handle of any DirectX Out TOP texture by attaching an Info DAT to it. The handle is one of the columns. Other applications that support sharing texture will have their own way of getting a texture handle, please consult the application's documentation."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The DirectX In TOP brings DirectX textures from other applications into TouchDesigner."
            },
            "ssaoTOP": {
                "label": "SSAO",
                "parameters": {
                    "surfaceavoid": {
                        "label": "Surface Avoid Angle",
                        "summary": "This parameter biases the angle of the rays so they don't travel too close to the plane that the starting point lays on (as determined by the point's normal)."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "ssaopassres": {
                        "label": "SSAO Pass Resolution",
                        "summary": "The SSAO pass can be set to Full, Half, or Quarter the resolution of the input image."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "contrast": {
                        "label": "Contrast",
                        "summary": "Controls the contrast of the SSAO contribution."
                    },
                    "combinewithcolor": {
                        "label": "Combine with Color",
                        "summary": "By default the final ambient occlusion result will be multiplied by the color output of the Render TOP. You can just output the ambient occlusion results by turning this parameter off."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "ssaoradius": {
                        "label": "SSAO Radius",
                        "summary": "The distance it searches from the current point for occluders (in object space units)."
                    },
                    "sampledirs": {
                        "label": "Sample Directions",
                        "summary": "For each pixel, rays are sent out in random directions to see if there is a surface nearby that would occlude the ambient light to this pixel. This parameter controls how many rays are sent out per pixel."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "blursharpness": {
                        "label": "Blur Sharpness",
                        "summary": "Controls the sharpness of the blur operation."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "samplesteps": {
                        "label": "Sample Steps",
                        "summary": "Since this is a 2D pixel-based operation, the rays need to sample multiple neighboring pixels along its path to check for points of interest. This parameter controls how many of these samples each ray does."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "attenuation": {
                        "label": "Attenuation",
                        "summary": "Controls the attenuation of the ambient lighting."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "quality": {
                        "label": "Quality",
                        "summary": "Determines the visual quality of the results. The higher the quality, the more computationally expensive it is."
                    },
                    "blurradius": {
                        "label": "Blur Radius",
                        "summary": "The amount of blur in pixels."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "edgethresh": {
                        "label": "Edge Threshold",
                        "summary": "To avoid the ambient occlusion from bleeding across the edges of objects onto other objects, an edge detect is done using the depth buffer to figure where one object ends and the next one begins. This parameter controls how sensitive the edge detection is."
                    }
                },
                "summary": "The SSAO TOP performs Screen Space Ambient Occlusion on the output of a Render TOP or Render Pass TOP."
            },
            "blurTOP": {
                "label": "Blur",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "size": {
                        "label": "Filter Size",
                        "summary": "The amount of blur in pixels."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "extend": {
                        "label": "Extend",
                        "summary": "Sets the extend conditions to determine what happens to the blur at the edge of the image."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "type": {
                        "label": "Type",
                        "summary": "Determines the mathematical function used to create the blur."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "preshrink": {
                        "label": "Pre-Shrink",
                        "summary": "Reduces the image's resolution before applying the blur."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "Determines how the blur is applied."
                    },
                    "rotate": {
                        "label": "Rotate Kernel",
                        "summary": "Rotates the blur filter. More noticeable when Method is set to Horizontal."
                    },
                    "dither": {
                        "label": "Dither",
                        "summary": "Enabling makes 8-bit blurs look smoother.  This can help if the blur operation introduces banding or other unexpected artifacts."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "offset": {
                        "label": "Sample Step",
                        "summary": "When sampling the image, this determines the distance from each pixel to the sample pixel. When units are set to pixels, it is the number of pixels away from the current pixel which is sampled to blur the image. A Sample Step of 3 would sample pixels 3 pixels away."
                    },
                    "offsetunit": {
                        "label": "Sample Step Unit",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    }
                },
                "summary": "The Blur TOP blurs the image with various kernel filters and radii."
            },
            "depthTOP": {
                "label": "Depth",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "peellayerindex": {
                        "label": "Peel Layer Index",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "rangefrom": {
                        "label": "Range from",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "cameraindex": {
                        "label": "Camera Index",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "pixelformat": {
                        "label": "Pixel Format",
                        "summary": ""
                    },
                    "clamp": {
                        "label": "Clamp to [0-1]",
                        "summary": ""
                    },
                    "gamma": {
                        "label": "Gamma",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "depthspace": {
                        "label": "Depth Space",
                        "summary": ""
                    },
                    "rendertop": {
                        "label": "Render TOP",
                        "summary": "Specifies the Render TOP used for depth values."
                    },
                    "rangeto": {
                        "label": "Range to",
                        "summary": ""
                    }
                },
                "summary": ""
            },
            "choptoTOP": {
                "label": "CHOP to",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "chop": {
                        "label": "CHOP",
                        "summary": "The path of the CHOP being referenced."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "dataformat": {
                        "label": "Data Format",
                        "summary": "Determines how the input CHOP channels will be turned into an image. If the CHOP is missing channels required to provide all the data for a scanline, the extra channels are ignored."
                    },
                    "clamp": {
                        "label": "Clamp CHOP Values",
                        "summary": "Clamps CHOP values to 0-1 range."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The CHOP to TOP puts CHOP channels into a TOP image."
            },
            "normalmapTOP": {
                "label": "Normal Map",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "heightmap": {
                        "label": "Heightmap in Alpha Channel",
                        "summary": ""
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "source": {
                        "label": "Source",
                        "summary": "This menu selects how the edges in the image are found. The edges will appear raised or depressed in the output image depending on their slope."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "Determines what pixels to use when calculating the slope at each pixel in the image."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "offset": {
                        "label": "Sample Step",
                        "summary": "When sampling the image, this determines the distance from each pixel to the sample pixel. When units are set to pixels, it is the number of pixels away from the current pixel which is sampled to find edges. A Sample Step of 3 would sample pixels 3 pixels away to look for edges."
                    },
                    "offsetunit": {
                        "label": "Sample Step Unit",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Normal Map TOP takes an input image and creates a normal map by finding edges in the image."
            },
            "substanceselectTOP": {
                "label": "Substance Select",
                "parameters": {
                    "substance": {
                        "label": "Substance TOP",
                        "summary": "Reference a specific Substance TOP from which to select a texture."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "output": {
                        "label": "Output Channel",
                        "summary": "Choose which texture is being grabbed from the Substance TOP."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Substance Select TOP allows you to select a single texture out of the Substance TOP for further filtering and manipulation in TOPs."
            },
            "blobtrackTOP": {
                "label": "Blob Track",
                "parameters": {
                    "monosource": {
                        "label": "Mono Source",
                        "summary": "Blob tracking is done using a single channel. This menu controls what single channel is used to detect blobs."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "Resets all tracking data and learned background data."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "revivedistance": {
                        "label": "Revive Distance",
                        "summary": "The distance threshold between the new blob and the dead blob."
                    },
                    "deletedist": {
                        "label": "Minimum Distance",
                        "summary": "When deleting nearby blobs, blobs will be deleted if they are within this number of pixels of each other. The smaller blob will be deleted."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "drawblobs": {
                        "label": "Draw Blob Bounds",
                        "summary": "Draws rectangles on the TOP image that shows where the tracked blobs are."
                    },
                    "deleteoverlaptol": {
                        "label": "Delete Overlap Tolerance",
                        "summary": "If this parameter is 1 then only blobs that are completely overlapped will be deleted. As this value gets smaller less and less overlap is needed for a blob to get deleted."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "deleteoverlap": {
                        "label": "Delete Overlapping Blobs",
                        "summary": "Deletes blobs that are overlapping."
                    },
                    "maxmovedistance": {
                        "label": "Maximum Move Distance",
                        "summary": "The maximum distance a blob can move in one frame and still be considered to the same blob (maintain the same ID)."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "deletenearby": {
                        "label": "Delete Nearby Blobs",
                        "summary": "Sometimes (depending on the tracking method) duplicate blobs may be created. This feature allows you to delete blobs that are too close to each other."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "maxblobsize": {
                        "label": "Maximum Blob Size",
                        "summary": "Blobs larger than this will not be tracked."
                    },
                    "revivetime": {
                        "label": "Revive Time",
                        "summary": "The time threshold for reviving a dead blob. If a blob has been dead for longer than revive time, it will not be revived."
                    },
                    "blobcolor": {
                        "label": "Blob Bound Color",
                        "summary": "Determines the color of the rectangles that are drawn to show the blobs."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "revivearea": {
                        "label": "Revive Area Difference",
                        "summary": "The area difference threshold for the new blob and the dead blob."
                    },
                    "reviveblobs": {
                        "label": "Revive Blobs",
                        "summary": "When enabled, will revive dead blobs (ie. same ID) if they satisfy all the below parameters"
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "threshold": {
                        "label": "Threshold",
                        "summary": "Threshold used to create the binary texture when using background subtraction. It is the threshold of the difference between the background texture and the input texture."
                    },
                    "minblobsize": {
                        "label": "Minimum Blob Size",
                        "summary": "Blobs must be at least this big to be tracked."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "deletenearbytol": {
                        "label": "Delete Area Tolerance",
                        "summary": "Along with the distance, the area of the two blobs can be compared. If this parameter is 1, than the area is ignored. As this parameter gets smaller only blobs that have a significant size difference (between the two blobs being compared) will be deleted."
                    }
                },
                "summary": "The Blob Track TOP is implemented using source code from OpenCV, much of which was ported to the GPU for faster performance."
            },
            "openvrTOP": {
                "label": "OpenVR",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Control if this node is outputting data to the OpenVR driver."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "See also OpenVR, OpenVR CHOP, OpenVR SOP, Audio Render CHOP"
            },
            "rgbtohsvTOP": {
                "label": "RGB to HSV",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The RGV to HSV TOP converts the image from RGB to HSV colorspace."
            },
            "analyzeTOP": {
                "label": "Analyze",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "op": {
                        "label": "Operation",
                        "summary": "Which operation to do."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "select": {
                        "label": "Select",
                        "summary": "Controls how the pixel values are used for the comparison."
                    }
                },
                "summary": "The Analyze TOP takes any image and determines various characteristics of it, such as the average pixel color, or the pixel with the maximum luminance."
            },
            "realsenseTOP": {
                "label": "RealSense",
                "parameters": {
                    "sensor": {
                        "label": "Sensor",
                        "summary": "Select the device to use."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "mirrorimage": {
                        "label": "Mirror Image",
                        "summary": "Flip the image horizontally."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "defaulttradeoff": {
                        "label": "Use Default Tradeoff",
                        "summary": "Use the default Motion Range Tradeoff specified by the device."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "maxdepth": {
                        "label": "Max Depth",
                        "summary": "The depth value pixels with a value of 1 will be set to. Specified in Meters. Pixels with a depth larger than this will be clamped to 1 for fixed point texture output, or go above 1 for floating point output."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "When set to 1 the TOP captures the image stream from the camera."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "tradeoff": {
                        "label": "Motion Range Tradeoff",
                        "summary": "Specifies the tradeoff between motion and range. Value is from 0 (short exposure, short range, and better motion) to 100 (long exposure and long range)."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "image": {
                        "label": "Image",
                        "summary": "Select the image type to output."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "model": {
                        "label": "Model",
                        "summary": "Select the model of device to use."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "colorres": {
                        "label": "Color Camera Resolution",
                        "summary": "Select the resolution of the video. Currently only usable for the Color image."
                    }
                },
                "summary": "The RealSense TOP connects to Intel RealSense devices and outputs color, depth and IR data from it."
            },
            "underTOP": {
                "label": "Under",
                "parameters": {
                    "tunit": {
                        "label": "Translate Units",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "size": {
                        "label": "Fixed Layer",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "extend": {
                        "label": "Extend Overlay",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": ""
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "punit": {
                        "label": "Pivot Units",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "prefit": {
                        "label": "Pre-Fit Overlay",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    }
                },
                "summary": "The Under TOP places Input1 'under' Input2."
            },
            "timemachineTOP": {
                "label": "Time Machine",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "blackoffsetunit": {
                        "label": "Black Offset Unit",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "whiteoffset": {
                        "label": "White Offset",
                        "summary": "Sets the time offset for white areas of the Input 2 image."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "whiteoffsetunit": {
                        "label": "White Offset Unit",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "blackoffset": {
                        "label": "Black Offset",
                        "summary": "Sets the time offset for black areas of the Input 2 image."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Time Machine TOP combines pixels in a sequence of images stored in a Texture 3D TOP. Whereas \\\"morphing\\\" warps an image \\\"spatially\\\" (in xy), Time Machine warps images only in time."
            },
            "glslmultiTOP": {
                "label": "GLSL Multi",
                "parameters": {
                    "chopuniname4": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chopunitype2": {
                        "label": "Type",
                        "summary": ""
                    },
                    "matuniname0": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "acsize0": {
                        "label": "Size",
                        "summary": ""
                    },
                    "uniname12": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "matuniname2": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "acsize2": {
                        "label": "Size",
                        "summary": ""
                    },
                    "matuniname7": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname9": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chopuniname0": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "outputaccess": {
                        "label": "Output Access",
                        "summary": ""
                    },
                    "uniname18": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chopunitype5": {
                        "label": "Type",
                        "summary": ""
                    },
                    "chop4": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "value27": {
                        "label": "Value",
                        "summary": ""
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "choparraytype0": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "uniname25": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname16": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value13": {
                        "label": "Value",
                        "summary": ""
                    },
                    "uniname21": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname6": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chop1": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "acinitval2": {
                        "label": "Initial Value Type",
                        "summary": ""
                    },
                    "chop3": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "value7": {
                        "label": "Value",
                        "summary": ""
                    },
                    "type": {
                        "label": "Output Type",
                        "summary": ""
                    },
                    "uniname23": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "value3": {
                        "label": "Value",
                        "summary": ""
                    },
                    "choparraytype2": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "chopunitype9": {
                        "label": "Type",
                        "summary": ""
                    },
                    "inputmapping": {
                        "label": "Input Mapping",
                        "summary": ""
                    },
                    "matvalue9": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "uniname24": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chop9": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "matvalue2": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "matuniname5": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname11": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value19": {
                        "label": "Value",
                        "summary": ""
                    },
                    "chopuniname7": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "matuniname1": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chopunitype8": {
                        "label": "Type",
                        "summary": ""
                    },
                    "uniname20": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "matvalue0": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "chop0": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "choparraytype1": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "uniname10": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname28": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value17": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value20": {
                        "label": "Value",
                        "summary": ""
                    },
                    "choparraytype5": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "enablevectorpage3": {
                        "label": "Enable These Uniforms",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "choparraytype9": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "value8": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value18": {
                        "label": "Value",
                        "summary": ""
                    },
                    "chopunitype1": {
                        "label": "Type",
                        "summary": ""
                    },
                    "acsingleval1": {
                        "label": "Initial Value",
                        "summary": ""
                    },
                    "value9": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value12": {
                        "label": "Value",
                        "summary": ""
                    },
                    "acsingleval3": {
                        "label": "Initial Value",
                        "summary": ""
                    },
                    "uniname8": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "value0": {
                        "label": "Value",
                        "summary": ""
                    },
                    "chopuniname5": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname14": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value25": {
                        "label": "Value",
                        "summary": ""
                    },
                    "chopuniname3": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "glslversion": {
                        "label": "GLSL Version",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "uniname1": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname7": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "acinitval1": {
                        "label": "Initial Value Type",
                        "summary": ""
                    },
                    "depth": {
                        "label": "Depth",
                        "summary": ""
                    },
                    "value23": {
                        "label": "Value",
                        "summary": ""
                    },
                    "acinitval0": {
                        "label": "Initial Value Type",
                        "summary": ""
                    },
                    "chopunitype0": {
                        "label": "Type",
                        "summary": ""
                    },
                    "chopuniname8": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chopuniname6": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "acbinding3": {
                        "label": "Binding",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "value15": {
                        "label": "Value",
                        "summary": ""
                    },
                    "computedat": {
                        "label": "Compute Shader",
                        "summary": ""
                    },
                    "uniname4": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "matuniname4": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value5": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value24": {
                        "label": "Value",
                        "summary": ""
                    },
                    "uniname3": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chop7": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "uniname0": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chopuniname9": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value21": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value6": {
                        "label": "Value",
                        "summary": ""
                    },
                    "mode": {
                        "label": "Mode",
                        "summary": ""
                    },
                    "matuniname9": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname2": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "dispatchsize": {
                        "label": "Dispatch Size",
                        "summary": ""
                    },
                    "uniname17": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value14": {
                        "label": "Value",
                        "summary": ""
                    },
                    "loaduniformnames": {
                        "label": "Load Uniform Names",
                        "summary": ""
                    },
                    "chopunitype3": {
                        "label": "Type",
                        "summary": ""
                    },
                    "matvalue3": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "value4": {
                        "label": "Value",
                        "summary": ""
                    },
                    "acchopval1": {
                        "label": "Initial Values CHOP",
                        "summary": ""
                    },
                    "value22": {
                        "label": "Value",
                        "summary": ""
                    },
                    "acbinding0": {
                        "label": "Binding",
                        "summary": ""
                    },
                    "matvalue1": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "value1": {
                        "label": "Value",
                        "summary": ""
                    },
                    "vertexdat": {
                        "label": "Vertex Shader",
                        "summary": ""
                    },
                    "choparraytype6": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "chop6": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "matuniname8": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "inputextenduv": {
                        "label": "Input Extend Mode UV",
                        "summary": ""
                    },
                    "acsize3": {
                        "label": "Size",
                        "summary": ""
                    },
                    "chop8": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "chopunitype6": {
                        "label": "Type",
                        "summary": ""
                    },
                    "matvalue8": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "value29": {
                        "label": "Value",
                        "summary": ""
                    },
                    "acinitval3": {
                        "label": "Initial Value Type",
                        "summary": ""
                    },
                    "acsingleval0": {
                        "label": "Initial Value",
                        "summary": ""
                    },
                    "nval": {
                        "label": "N Value",
                        "summary": ""
                    },
                    "numcolorbufs": {
                        "label": "# of Color Buffers",
                        "summary": ""
                    },
                    "chopunitype4": {
                        "label": "Type",
                        "summary": ""
                    },
                    "value26": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value28": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value10": {
                        "label": "Value",
                        "summary": ""
                    },
                    "chopuniname1": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname15": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname5": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "acsingleval2": {
                        "label": "Initial Value",
                        "summary": ""
                    },
                    "acsize1": {
                        "label": "Size",
                        "summary": ""
                    },
                    "matvalue5": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "matvalue4": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "matvalue7": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "value11": {
                        "label": "Value",
                        "summary": ""
                    },
                    "uniname27": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value16": {
                        "label": "Value",
                        "summary": ""
                    },
                    "uniname13": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "acbinding1": {
                        "label": "Binding",
                        "summary": ""
                    },
                    "uniname19": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "acbinding2": {
                        "label": "Binding",
                        "summary": ""
                    },
                    "chop2": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "inputextendw": {
                        "label": "Input Extend Mode W",
                        "summary": ""
                    },
                    "matvalue6": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "matuniname3": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chopuniname2": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "acchopval3": {
                        "label": "Initial Values CHOP",
                        "summary": ""
                    },
                    "value2": {
                        "label": "Value",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "uniname29": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "customdepth": {
                        "label": "Custom Depth",
                        "summary": ""
                    },
                    "choparraytype7": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "uniname22": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "choparraytype8": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "chop5": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "chopunitype7": {
                        "label": "Type",
                        "summary": ""
                    },
                    "choparraytype4": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "uniname26": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "choparraytype3": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "acchopval2": {
                        "label": "Initial Values CHOP",
                        "summary": ""
                    },
                    "pixeldat": {
                        "label": "Pixel Shader",
                        "summary": ""
                    },
                    "acchopval0": {
                        "label": "Initial Values CHOP",
                        "summary": ""
                    },
                    "matuniname6": {
                        "label": "Uniform Name",
                        "summary": ""
                    }
                },
                "summary": "The GLSL Multi TOP renders a GLSL shader into a TOP image."
            },
            "ndiinTOP": {
                "label": "NDI In",
                "parameters": {
                    "grouptable": {
                        "label": "Group Names Table",
                        "summary": "Sources can tag themselves as part of one or more 'Groups'. Fill in rows of this table with the names of one or more groups this node is interested in to limited the 'Sources' listed as available."
                    },
                    "audiobuflen": {
                        "label": "Audio Buffer Length",
                        "summary": "The length of the audio buffer in seconds. Audio output is delayed by this amount. For example, if the Buffer Length is 0.1 then the sound will occur 100ms = 0.1 seconds later than received (to keep the buffer full)."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Receives image data while Active is on."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "extraips": {
                        "label": "Extra Search IPs",
                        "summary": "By default NDI searches using mDNS, which is usually limited to locate networks. To find sources available on machines not reachable by mDNS, this parameter can be filled with a space-separated list of one or more IP address."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "name": {
                        "label": "Source Name",
                        "summary": "Select which source stream to use."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "bandwidth": {
                        "label": "Bandwidth",
                        "summary": "Choose High or Low bandwidth option."
                    }
                },
                "summary": "The NDI In TOP will obtain its image data over IP from other NDI (Network Data Interface) enabled applications."
            },
            "renderselectTOP": {
                "label": "Render Select",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "top": {
                        "label": "TOP",
                        "summary": "Specify the TOP to use as a source. Currently Render TOP, GLSL TOP and CPlusPlus TOPs are valid TOPs to select from."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "colorbufindex": {
                        "label": "Color Buffer Index",
                        "summary": "Specify which color buffer to select. Refer to the \\\"# of Color Buffers\\\" parameter in the Render TOP for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "peellayerindex": {
                        "label": "Peel Layer Index",
                        "summary": "When the \\\"Depth Peel\\\" feature of the Render TOP is on, this selects out the specified peel layer."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "cameraindex": {
                        "label": "Camera Index",
                        "summary": "When multiple cameras are listed in the Render TOP's Camera parameter, this selects which cameras's output to select."
                    }
                },
                "summary": "The Render Select TOP allows you to select one of the color buffers from any Render TOP."
            },
            "chromakeyTOP": {
                "label": "Chroma Key",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "alphaout": {
                        "label": "Alpha Output",
                        "summary": "Determines the output of the Alpha channel from the Chroma Key TOP."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "vsoftlow": {
                        "label": "Val Soft Low",
                        "summary": "The rate off falloff at the Val Min setting."
                    },
                    "hsofthigh": {
                        "label": "Hue Soft High",
                        "summary": "The rate of falloff at the Hue Max setting."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "valmin": {
                        "label": "Val Min",
                        "summary": "The minimum value that is added to the key."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "vsofthigh": {
                        "label": "Val Soft High",
                        "summary": "The rate of falloff at the Val Max setting."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "ssofthigh": {
                        "label": "Sat Soft High",
                        "summary": "The rate of falloff at the Sat Max setting."
                    },
                    "valmax": {
                        "label": "Val Max",
                        "summary": "The maximum value that is added to the key."
                    },
                    "hsoftlow": {
                        "label": "Hue Soft Low",
                        "summary": "The rate of falloff at the Hue Min setting."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "rgbout": {
                        "label": "RGB Output",
                        "summary": "Determines the output of the RGB channels from the Chroma Key TOP."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "invert": {
                        "label": "Invert New Alpha",
                        "summary": "Inverts the key that is created."
                    },
                    "satmin": {
                        "label": "Sat Min",
                        "summary": "The minimum saturation value that is added to the key."
                    },
                    "huemax": {
                        "label": "Hue Max",
                        "summary": "The maximum hue value that is added to the key. 0 = min, 360 = max."
                    },
                    "huemin": {
                        "label": "Hue Min",
                        "summary": "The minimum hue value that is added to the chroma key. 0 = min, 360 = max."
                    },
                    "ssoftlow": {
                        "label": "Sat Soft Low",
                        "summary": "The rate of falloff at the Sat Min setting."
                    },
                    "satmax": {
                        "label": "Sat Max",
                        "summary": "The maximum saturation value that is added to the key."
                    }
                },
                "summary": "The Chroma Key TOP pulls a key matte from the image using Hue, Saturation, and Value settings."
            },
            "ndioutTOP": {
                "label": "NDI Out",
                "parameters": {
                    "grouptable": {
                        "label": "Group Names Table",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Makes itself available as a source and sends out image data when active."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "fps": {
                        "label": "FPS",
                        "summary": "Specify the frame rate to send at. Note that NDI uses the FPS partially as a guide to control how to compress the frames. The higher the FPS, the more compressed the frames will be. So for example sending at 1 FPS will result in higher image quality that sending at 30 FPS."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "name": {
                        "label": "Source Name",
                        "summary": "Specify the name for this source."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "includealpha": {
                        "label": "Include Alpha",
                        "summary": "Also sends the alpha channel when this is turned on. If this is off the alpha will be 1.0."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "audiochop": {
                        "label": "Audio CHOP",
                        "summary": "Specify the CHOP (containing audio data) to send out on the NDI stream."
                    },
                    "failovername": {
                        "label": "Failover Source Name",
                        "summary": "If this source fails while receivers are connected to it, they will instead try to connect to the specified Failover Source. This format of this should be (MACHINENAME) SourceName. This format is the same as you would see the source listed in the NDI In TOP."
                    }
                },
                "summary": "The NDI Out TOP will send image and audio data over IP to other NDI (Network Data Interface) enabled applications."
            },
            "videodeviceinTOP": {
                "label": "Video Device In",
                "parameters": {
                    "deinterlace": {
                        "label": "Deinterlace",
                        "summary": "Sets which fields to capture."
                    },
                    "syncinputs": {
                        "label": "Sync Inputs",
                        "summary": "Enabling syncing of multiple Video Device In TOPs."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "inputpixelformat": {
                        "label": "Input Pixel Format",
                        "summary": "Some capture devices support pixel formats other than 8-bit. For supported devices this will make the node attempt to use that capability."
                    },
                    "device": {
                        "label": "Device",
                        "summary": "Select which camera or decoder you want from this menu."
                    },
                    "maxsyncoffset": {
                        "label": "Max Sync Offset",
                        "summary": "Specified in milliseconds. The maximum difference in time two image could have arrived at be considered in-sync. Images that arrive at times more different than this offset will be considered to be part of different 'frame'."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "channel": {
                        "label": "TV Channel",
                        "summary": "Selects the TV channel if a TV tuner is used as the video input."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "precedence": {
                        "label": "Field Precedence",
                        "summary": "When using Bob (Split) deinterlacing, this selects which field is shown first for each frame."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "When set to one the TOP captures the image stream from the camera or decoder."
                    },
                    "specifyip": {
                        "label": "Specify IP",
                        "summary": "When using Allied Vision library allows you to specify the camera address by IP."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "ip": {
                        "label": "IP",
                        "summary": "The IP address used when Specify IP above is turned on."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "asyncupload": {
                        "label": "Async Upload to GPU",
                        "summary": "This will upload video images to the GPU asynchronously, at the cost of using more GPU and CPU memory (about 3x as for this one node). The extra memory usage is only a concern if you are using Async Upload on a lot of nodes (many Movie File In TOPs for example, which use the same mechanism).  Note: Syncing is only supported by DataPath cards currently.  Syncing allows multiple nodes using multiple inputs and capture cards on a single system to ensure they are outputting frames in sync. Without this each node will be free running and will possible be outputting frames that came it at different times due to internal queuing. It's important the input sources are GenLocked to ensure all of their data arrives to all of the inputs at the same time, otherwise syncing will not work."
                    },
                    "library": {
                        "label": "Library",
                        "summary": "Selects the library to use to interface with the cameras."
                    },
                    "syncgroupindex": {
                        "label": "Sync Group Index",
                        "summary": "There can be multiple sync groups active in a .toe file. Nodes will only sync to other nodes that are part of the same sync group."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "options": {
                        "label": "Options",
                        "summary": "Opens the options or control panel for the camera. NOTE: Only works when using DirectShow (WDM) cameras."
                    },
                    "signalformat": {
                        "label": "Signal Format",
                        "summary": "Some Blackmagic cards do not automatically set signal format, this parameter allows it to be set correctly."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "quadlink": {
                        "label": "Quad Link",
                        "summary": ""
                    }
                },
                "summary": "The Video Device In TOP can be used to capture video from an external camera, capture card, capture dongle, or dideo decoder connected to the system."
            },
            "rgbkeyTOP": {
                "label": "RGB Key",
                "parameters": {
                    "rsoftlow": {
                        "label": "Red Soft Low",
                        "summary": "The rate of falloff at the Red Min setting."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "redmin": {
                        "label": "Red Min",
                        "summary": "The minimum red value that is added to the key. 0 = min, 1 = max."
                    },
                    "greenmax": {
                        "label": "Green Max",
                        "summary": "The maximum green value that is added to the key. 0 = min, 1 = max."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "bsofthigh": {
                        "label": "Blue Soft High",
                        "summary": "The rate of falloff at the Blue Max setting."
                    },
                    "alphaout": {
                        "label": "Alpha Output",
                        "summary": "Determines the output of the Alpha channel from the RGB Key TOP."
                    },
                    "gsofthigh": {
                        "label": "Green Soft High",
                        "summary": "The rate of falloff at the Green Max setting."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "bluemax": {
                        "label": "Blue Max",
                        "summary": "The maximum blue value that is added to the key. 0 = min, 1 = max."
                    },
                    "redmax": {
                        "label": "Red Max",
                        "summary": "The maximum red value that is added to the key. 0 = min, 1 = max."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "rsofthigh": {
                        "label": "Red Soft High",
                        "summary": "The rate of falloff at the Red Max setting."
                    },
                    "rgbout": {
                        "label": "RGB Output",
                        "summary": "Determines the output of the RGB channels from the RGB Key TOP."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "gsoftlow": {
                        "label": "Green Soft Low",
                        "summary": "The rate of falloff at the Green Min setting."
                    },
                    "bluemin": {
                        "label": "Blue Min",
                        "summary": "The minimum blue value that is added to the key. 0 = min, 1 = max."
                    },
                    "greenmin": {
                        "label": "Green Min",
                        "summary": "The minimum green value that is added to the key. 0 = min, 1 = max."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "invert": {
                        "label": "Invert New Alpha",
                        "summary": "Inverts the key that is created."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "bsoftlow": {
                        "label": "Blue Soft Low",
                        "summary": "The rate of falloff at the Blue Min setting."
                    }
                },
                "summary": "The RGB Key TOP pulls a key from the image using Red, Green, and Blue channel settings."
            },
            "cornerpinTOP": {
                "label": "Corner Pin",
                "parameters": {
                    "pinp4": {
                        "label": "Bottom Right",
                        "summary": "The x and y position of the bottom right corner of the extraction."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "pinp1": {
                        "label": "Top Left",
                        "summary": "The x and y position of the top left corner of the extraction."
                    },
                    "extend": {
                        "label": "Extend",
                        "summary": "Determines how the image is handled at its edges."
                    },
                    "extractp1unit": {
                        "label": "Top Left Unit",
                        "summary": ""
                    },
                    "extractp1": {
                        "label": "Top Left",
                        "summary": "The x and y position of the top left corner of the extraction."
                    },
                    "pinp4unit": {
                        "label": "Bottom Right Unit",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "pinp2unit": {
                        "label": "Top Right Unit",
                        "summary": ""
                    },
                    "extractp2unit": {
                        "label": "Top Right Unit",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "extractp4": {
                        "label": "Bottom Right",
                        "summary": "The x and y position of the bottom right corner of the extraction."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "pinp1unit": {
                        "label": "Top Left Unit",
                        "summary": ""
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "Color applied behind the foreground image. The background is visible when the corners of the Corner Pin have been positioned inside the original image space. Set the Bottom Left x-position to 1.0 and you will see the background color in the bottom left corner of the image."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "extractp4unit": {
                        "label": "Bottom Right Unit",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "pinp3": {
                        "label": "Bottom Left",
                        "summary": "The x and y position of the bottom left corner of the extraction."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "extractp2": {
                        "label": "Top Right",
                        "summary": "The x and y position of the top right corner of the extraction."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "extractp3": {
                        "label": "Bottom Left",
                        "summary": "The x and y position of the bottom left corner of the extraction."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "pinp3unit": {
                        "label": "Bottom Left Unit",
                        "summary": ""
                    },
                    "extractp3unit": {
                        "label": "Bottom Left Unit",
                        "summary": ""
                    },
                    "pinp2": {
                        "label": "Top Right",
                        "summary": "The x and y position of the top right corner of the extraction."
                    },
                    "gridrefine": {
                        "label": "Grid Refinement",
                        "summary": "To perform the Extract and Pin operations, the image is placed on a polygonal grid to break it up into blocks that can be distorted. Grid Refinement sets the number of divisions in this grid."
                    }
                },
                "summary": "The Corner Pin TOP can perform two operations."
            },
            "moviefileinTOP": {
                "label": "Movie File In",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "interp": {
                        "label": "Interpolate Frames",
                        "summary": "Interpolates between frames based based on exact time. For example, if the index (in frames) is 1.5, then frames 1 and 2 will be blended 50-50. If the index is 1.7 then 30% of frame 1 is blended with 70% of frame 2 and so on."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "samplerate": {
                        "label": "Sample Rate",
                        "summary": ""
                    },
                    "audioloop": {
                        "label": "Audio Loop",
                        "summary": "This menu helps you determine how to treat the audio as the end of a movie approaches. This is needed because of all the cases of playing a movie, like when driving with an index, the TOP will not know if you intend to loop it or not."
                    },
                    "cuepulse": {
                        "label": "Cue Pulse",
                        "summary": ""
                    },
                    "prereadframes": {
                        "label": "Pre-Read Frames",
                        "summary": "Sets how many video frames TouchDesigner reads ahead and stores in memory. The Movie File In TOP will read and decode frames of the movie into CPU memory before they are used, this can eliminate pops or stutters in playback that occur from some frames taking too long to decode, other resources accessing the hard drive, or movie looping. When reading a sequence of image, having more Pre Read Frames will allow multiple images to be decode at the same time. This allows playback of heavy file formats such as .exr in real-time, assuming the machine has enough CPU cores."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "maxdecodecpus": {
                        "label": "Max Decode CPUs",
                        "summary": "Limit the maximum number of CPUs that will be used to decode certain video codecs that are capable of multi-CPU decoding, such as H264/H265 and Cineform.Note that this does not affect multi-threaded decoding for image sequence playback, which is instead controlled by increasing the Pre-Read Frame parameter."
                    },
                    "alwaysloadinitial": {
                        "label": "Always Load Initial Frame",
                        "summary": "If this parameter is turned on, then for the first loaded frame the Frame Read Timeout will be ignored, and it will always wait for the first frame to ensure the node always starts up with a valid image."
                    },
                    "playmode": {
                        "label": "Play Mode",
                        "summary": "Specifies the method used to play the movie, there are 3 options."
                    },
                    "cuepoint": {
                        "label": "Cue Point",
                        "summary": "Set any index in the movie as a point to jump to."
                    },
                    "cuepointunit": {
                        "label": "Cue Point Unit",
                        "summary": ""
                    },
                    "uselatestontimeout": {
                        "label": "On Timeout, use Latest Avail",
                        "summary": "When on, if the Disk Read Timeout is reached TouchDesigner will use the latest available frame in place of the skipped frame."
                    },
                    "precedence": {
                        "label": "Field Precedence",
                        "summary": "Where fields are extracted one field at a time, this will extract the Even field first by default, otehrwise it will extract the odd field first. The video industry has not standardized on one or the other."
                    },
                    "cuebehavior": {
                        "label": "Cue Behavior",
                        "summary": "Customize the Cue parameter's behavior."
                    },
                    "imageindexing": {
                        "label": "Image Sequence Indexing",
                        "summary": "Determines how an image sequence is ordered."
                    },
                    "inputsrgb": {
                        "label": "Input is sRGB",
                        "summary": ""
                    },
                    "frametimeout": {
                        "label": "Frame Read Timeout",
                        "summary": "The time (in milliseconds) TouchDesigner will wait for a frame from the hard drive before giving up. If the Disk Read Timeout time is reached, that frame is simply skipped. This also works for network files that are downloaded via http://."
                    },
                    "tstartunit": {
                        "label": "Trim Start Unit",
                        "summary": ""
                    },
                    "opentimeout": {
                        "label": "File Open Timeout",
                        "summary": "The time (in milliseconds) TouchDesigner will wait for a movie to open. If the Disk Open Timout is reached, the Movie File In TOP will stop waiting and make its image all black, with a grey square in the bottom right corner. If the file still isn't opened the next time the TOP cooks, it'll wait again, and do the same. It'll keep doing this until the file is opened, or the open fails."
                    },
                    "tendunit": {
                        "label": "Trim End Unit",
                        "summary": ""
                    },
                    "tend": {
                        "label": "Trim End",
                        "summary": ""
                    },
                    "indexunit": {
                        "label": "Index Unit",
                        "summary": ""
                    },
                    "highperfread": {
                        "label": "High Performance Read",
                        "summary": "This option should be used when playing back files that require very high SSD read speeds such as high resolution (4K+) HAP Q files. It greatly improves read performance in those cases. It should not be used for low resolution or low data rate files such as 1080p H264 files."
                    },
                    "stepsize": {
                        "label": "Step Size",
                        "summary": "Sets how many frames to skip before displaying next frame. For example, a StepSize of 30 will display every 30th frame. This timing of movie playback does not change, so with a Step Size of 30 and a sample rate of 30, a new frame will be displayed every second."
                    },
                    "deinterlace": {
                        "label": "Deinterlace",
                        "summary": "For movies that are stored as fields, where each image is made of two images interleaved together. A 30-frame per second movie would contain 60 fields per second. For each image, the even scanlines of the first field are interleaved with the odd scanlines of the second field. The Movie File In TOP has several ways of dealing with this:"
                    },
                    "reloadpulse": {
                        "label": "Reload Pulse",
                        "summary": ""
                    },
                    "textendright": {
                        "label": "Extend Right",
                        "summary": "Determines how the Movie File In TOP handles movie positions that lie after the Trim End position. For example, if Trim End is set to 20, and the movie's current index is 25, the Extend Right menu determines how the movie position is calculated."
                    },
                    "overridesample": {
                        "label": "Override Sample Rate",
                        "summary": ""
                    },
                    "cue": {
                        "label": "Cue",
                        "summary": "Jumps to Cue Point when set to 1. Only available when Play Mode is Sequential."
                    },
                    "speed": {
                        "label": "Speed",
                        "summary": "This is a speed multiplier which only works when Play Mode is Sequential. A value of 1 is the default playback speed. A value of 2 is double speed, 0.5 is half speed and so on. Negative values will play the movie backwards."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "Movie plays when 1, movie stops when 0."
                    },
                    "textendleft": {
                        "label": "Extend Left",
                        "summary": "Determines how the Movie File In TOP handles movie positions that lie before the Trim Start position. For example, if Trim Start is set to 1, and the movie's current index is -10, the Extend Left menu determines how the movie position is calculated."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "highperfreadfactor": {
                        "label": "High Performance Read Factor",
                        "summary": "When doing high performance reads, this parameter controls the size of the read operations that are done on disk. Whatever the largest operation the codec asks to be done, this is multiplied by the read factor and all subsequent reads will read that much data instead. This can result in higher throughput depending on the drives. For example if a request is made to read 1MB and the factor is set to 3, then instead the operations will read 3MB from the disk and the extra 2MB read will be ready for the next frame and will likely already have the next 2 frames available in CPU RAM."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "loopcrossfade": {
                        "label": "Loop Crossfade",
                        "summary": "Crossfades the beginning and end of the movie together to create a smooth transition when looping. If the movie uses Trim options, it will crossfade Trim Start with Trim End positions."
                    },
                    "file": {
                        "label": "File",
                        "summary": "The path and name of the image or movie file to load. Image and movie formats are those found in File Types.  You can specify files on the internet using http:// ...   To treat a folder of images as if they are one movie, specify the folder containing the images instead of a filename. All the files be the same resolution. It will treat all stills/movies in that folder as if each is a frame in one movie. The order of the images is the alphanumeric. By default the first image has an index of 0, second is 1, etc, regardless of their file names. Overriding the sample rate on the Trim parameter page will let you playback the image sequence at any frame rate.    Using an info.xml file in the directory containing a sequence of images allows you to specify the frames per second and an audio file to be used with the sequence of images. Example xml file:  <?xml version=\\\"1.0\\\" encoding=\\\"ISO-8859-1\\\" standalone=\\\"yes\\\" ?>   <Settings>       <attributes fps=\\\"30.0\\\" />       <audio filename=\\\"audio.wav\\\" />   </Settings>  URLs can be used to fetch images and movies. The image or movie is downloaded to the user's Derivative temp directory and is read into the Movie File In TOP."
                    },
                    "usecpucache": {
                        "label": "Use Global CPU Cache",
                        "summary": "Uses CPU cache to store image into main memory. The size of the Global CPU Cache is set under Edit > Preferences > TOPs. This CPU cache only works for very specific circumstances like looping a single movie. It will store frames of a movie in CPU cache, but the entire movie must fit in the cache or it will be pushed out. We do not use this feature regularly and recommend contacting support for more details if you think you need to use it."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "loopcrossfadeunit": {
                        "label": "Loop Crossfade Unit",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "updateimage": {
                        "label": "Update Image",
                        "summary": "Image will not update when set to 0. Movie index will continue to move forward but the output image will not update. This is useful when you are using a Movie Audio CHOP to get audio from the movie, but you don't care about the video."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "bottomhalfalpha": {
                        "label": "Bottom Half is Alpha (AAA)",
                        "summary": ""
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "tstart": {
                        "label": "Trim Start",
                        "summary": ""
                    },
                    "asyncupload": {
                        "label": "Async Upload to GPU",
                        "summary": "When enabled, this will use OpenGL features to upload movie images to the GPU asynchronously. This will reduce the cook time of the Movie File In TOP considerably (in the performance monitor the lines that say \\\"Uploading Image to GPU\\\" will go down to almost nothing). There is a GPU memory cost to using this feature however. It uses up another (Width * Height * 4 * Read Ahead Size) bytes of GPU memory. If you are having poor results with this feature, make sure your graphics drivers are up to date."
                    },
                    "trim": {
                        "label": "Trim",
                        "summary": ""
                    },
                    "loadingerrorimage": {
                        "label": "Loading/Error Image",
                        "summary": ""
                    },
                    "index": {
                        "label": "Index",
                        "summary": "This parameter explicitly sets the movie position when Play Mode is set to Specify Index. The units menu on the right lets you specify the index in the following units: Index, Frames, Seconds, and Fraction (percentage). For example, assume you have a movie that internally is 25 fps, and the timeline that is 60 fps. If you set Units to Index and the parameter value to 25, you get the image that is 1 second into the movie. If you set the Units to Frames and set the value to 60 you get the same image at 1 second into the movie."
                    },
                    "reload": {
                        "label": "Reload",
                        "summary": "Change from 0 to 1 to force the image to reload, useful when the file changes or did not exist at first."
                    },
                    "multalpha": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Premultiplies the image."
                    }
                },
                "summary": "The Movie File In TOP loads movies, still images, or a sequence of still images into TOPs."
            },
            "photoshopinTOP": {
                "label": "Photoshop In",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "maxupdaterate": {
                        "label": "Max Update Rate",
                        "summary": "The maximum update rate of the image when Update Mode is set to automatic."
                    },
                    "update": {
                        "label": "Update",
                        "summary": "Click to anually update the image."
                    },
                    "imageformat": {
                        "label": "Image Format",
                        "summary": "Determines what format the Photoshop stream is transferred with."
                    },
                    "unlock": {
                        "label": "Unlock",
                        "summary": "Clears the Locked Document Name parameter.  When unlocked, the Photoshop In TOP will grab whichever document is currently active in Photoshop."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "locktocurrent": {
                        "label": "Lock to Current Document",
                        "summary": "click this button to lock the Photoshop In TOP's input to the currently active file in Photoshop.  Clicking this button fills out the parameter above Locked Document Name."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "password": {
                        "label": "Password",
                        "summary": "Enter the password specified in Photoshop's Remote Connection dialog."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "lockeddocument": {
                        "label": "Locked Document Name",
                        "summary": "This parameter can be used to lock the Photoshop In TOP's input to a particular file that is open in Photoshop."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the TOP will receive data from Photoshop."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "updatemode": {
                        "label": "Update Mode",
                        "summary": "Determines how the image is updated."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "address": {
                        "label": "Address",
                        "summary": "The IP address of the computer that Photoshop is running on.  If Photoshop is running on the same computer as TouchDesigner, localhost can be used in this parameter.  Otherwise, Photoshop's Remote Connection dialog (shown above) will show the IP address required."
                    }
                },
                "summary": "The Photoshop In TOP can stream the output from Photoshop CS6 into TouchDesigner."
            },
            "cacheselectTOP": {
                "label": "Cache Select",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "index": {
                        "label": "Cache Index",
                        "summary": "Specify the image to grab from the sequence of cached images. The index starts at 0, which is the current image. Images are then accessed backwards in time, such that the image before the current image has an index of -1, the image before that has an index of -2, and so on."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "cachetop": {
                        "label": "Cache TOP",
                        "summary": "Specify which Cache TOP to grab the image from."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Cache Select TOP grabs an image from a Cache TOP based on the index parameter."
            },
            "touchoutTOP": {
                "label": "Touch Out",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "port": {
                        "label": "Network Port",
                        "summary": "Which TCP/IP port to send the images on."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Sends image data over the TCP/IP connection when active is on."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "fps": {
                        "label": "FPS",
                        "summary": "This specifies how many frames pass before sending another frame.  This effectively lowers frame rate and bandwidth of the output.  For example, if the input frame rate is 60 and Send Step Size is 2, the output frame rate will be 30."
                    },
                    "videocodec": {
                        "label": "Video Codec",
                        "summary": "Choose between Uncompressed and HAP Q codecs to transmit the image stream."
                    },
                    "alwayscook": {
                        "label": "Cook Always",
                        "summary": "Forces the TOP to cook every frame."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Touch Out TOP sends a TOP image stream over TCP/IP to a Touch In TOP."
            },
            "noiseTOP": {
                "label": "Noise",
                "parameters": {
                    "amp": {
                        "label": "Amplitude",
                        "summary": "Defines the noise value's amplitude (a scale on the values output)."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "harmon": {
                        "label": "Harmonics",
                        "summary": "The number of higher frequency components to layer on top of the base frequency. The higher this number, the bumpier the noise will be (as long as roughness is not set to zero). 0 harmonics give the base shape."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The Translate, Rotate, Scale and Pivot parameters let you sample in a different part of the 3D noise space. Imagine a different noise value for every XYZ point in space. Normally, the Noise CHOP samples the noise space from (0,0,0) along the X-axis in steps of 2/period. /tx /ty /tz /rx /ry /rx /sx /sy /sz /px /py /pz  By changing the transform, you are translating, rotating and scaling the line along which the Noise CHOPs samples the noise space. A slight Y-rotation is like walking in a straight path in the mountains, recording your altitude along the way, then re-starting from the same initial location, walking in a slightly different direction. Your altitude starts off being similar but then diverges."
                    },
                    "spread": {
                        "label": "Harmonic Spread",
                        "summary": "The factor by which the frequency of the harmonics are increased. It is normally 2. A spread of 3 and a base frequency of 0.1Hz will produce harmonics at 0.3Hz, 0.9Hz, 2.7Hz, etc.. This parameter is only valid for the Harmonic Summation type."
                    },
                    "t4d": {
                        "label": "Translate 4D",
                        "summary": "When doing 4D noise, this applies a translation to the 4th coordinate. The previous transformation parameters do not affect the 4th coordinate."
                    },
                    "aspectcorrect": {
                        "label": "Aspect Correct",
                        "summary": "Controls if the noise takes aspect ratio into account when calculating it's noise coordinates. When this is off, the noise will stretch to fit a non-square aspect ratio texture."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the transforms will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The Translate, Rotate, Scale and Pivot parameters let you sample in a different part of the 3D noise space. Imagine a different noise value for every XYZ point in space. Normally, the Noise CHOP samples the noise space from (0,0,0) along the X-axis in steps of 2/period. /tx /ty /tz /rx /ry /rx /sx /sy /sz /px /py /pz  By changing the transform, you are translating, rotating and scaling the line along which the Noise CHOPs samples the noise space. A slight Y-rotation is like walking in a straight path in the mountains, recording your altitude along the way, then re-starting from the same initial location, walking in a slightly different direction. Your altitude starts off being similar but then diverges."
                    },
                    "exp": {
                        "label": "Exponent",
                        "summary": "Pushes the noise values toward 0, or +1 and -1. (It raises the value to the power of the exponent.) Exponents greater than one will pull the channel toward zero, and powers less than one will pull peaks towards +1 and -1. It is used to reshape the channels."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Translate, Rotate, Scale and Pivot parameters let you sample in a different part of the 3D noise space. Imagine a different noise value for every XYZ point in space. Normally, the Noise CHOP samples the noise space from (0,0,0) along the X-axis in steps of 2/period. /tx /ty /tz /rx /ry /rx /sx /sy /sz /px /py /pz  By changing the transform, you are translating, rotating and scaling the line along which the Noise CHOPs samples the noise space. A slight Y-rotation is like walking in a straight path in the mountains, recording your altitude along the way, then re-starting from the same initial location, walking in a slightly different direction. Your altitude starts off being similar but then diverges."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The Translate, Rotate, Scale and Pivot parameters let you sample in a different part of the 3D noise space. Imagine a different noise value for every XYZ point in space. Normally, the Noise CHOP samples the noise space from (0,0,0) along the X-axis in steps of 2/period. /tx /ty /tz /rx /ry /rx /sx /sy /sz /px /py /pz  By changing the transform, you are translating, rotating and scaling the line along which the Noise CHOPs samples the noise space. A slight Y-rotation is like walking in a straight path in the mountains, recording your altitude along the way, then re-starting from the same initial location, walking in a slightly different direction. Your altitude starts off being similar but then diverges."
                    },
                    "s4d": {
                        "label": "Scale 4D",
                        "summary": "When doing 4D noise, this applies a scale to the 4th coordinate."
                    },
                    "inputscale": {
                        "label": "Input Scale",
                        "summary": "Adjusts how much of the input image is added to the output."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "rgb": {
                        "label": "RGB",
                        "summary": "When an input is connected to the Noise TOP, the noise pattern is placed over the input image using UV coordinates and the settings from this menu."
                    },
                    "alpha": {
                        "label": "Alpha",
                        "summary": "Sets the alpha channel for the output image."
                    },
                    "type": {
                        "label": "Type",
                        "summary": "The noise function used to generate noise. The functions available are:"
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "noisescale": {
                        "label": "Noise Scale",
                        "summary": "Adjusts how much of the noise is added to the output."
                    },
                    "gain": {
                        "label": "Harmonic Gain",
                        "summary": ""
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the rotations. As with transform order (above), changing the order in which the rotations take place will alter the final position."
                    },
                    "dither": {
                        "label": "Dither",
                        "summary": "Dithers the output to help deal with banding and other artifacts created by precision limitations of 8-bit displays."
                    },
                    "seed": {
                        "label": "Seed",
                        "summary": "Any number, integer or non-integer, which starts the random number generator. Each number gives completely different noise patterns, but with similar characteristics."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Defines the midpoint color of the noise pattern, the default is 0.5 grey."
                    },
                    "period": {
                        "label": "Period",
                        "summary": "The approximate separation between peaks of a noise cycle. It is expressed in Units. Increasing the period stretches the noise pattern out.  Period is the opposite of frequency. If the period is 2 seconds, the base frequency is 0.5 cycles per second, or 0.5Hz for short. Hz refers to Hertz, the electrical and audio engineer of the 19th century, not the car guy.  If the Type is set to Random, setting this to zero will produce completely random noise. Otherwise, the period should be greater than zero."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "mono": {
                        "label": "Monochrome",
                        "summary": "Toggle color or monochrome noise."
                    },
                    "rough": {
                        "label": "Roughness",
                        "summary": "Controls the effect of the higher frequency noise. When roughness is zero, all harmonics above the base frequency have no effect. At one, all harmonics are equal in amplitude to the base frequency. When roughness is between one and zero, the amplitude of higher harmonics drops off exponentially from the base frequency.  The default roughness is 0.5. This means the amplitude of the first harmonic is 0.5 of the base frequency, the second is 0.25, the third is 0.125. The harmonics are added to the base to give the final shape. The Harmonics parameter and the Roughness parameter must both be non-zero to see the harmonic effects."
                    }
                },
                "summary": "The Noise TOP generates a variety of noise patterns including perlin, simplex, sparse, alligator and random."
            },
            "crossTOP": {
                "label": "Cross",
                "parameters": {
                    "tunit": {
                        "label": "Translate Unit",
                        "summary": ""
                    },
                    "extend": {
                        "label": "Extend Overlay",
                        "summary": ""
                    },
                    "size": {
                        "label": "Fixed Layer",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "cross": {
                        "label": "Cross",
                        "summary": "Determines the amount each input is added to the output. When Cross = 0, Input1 is output; when Cross = 1, Input2 is output."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "punit": {
                        "label": "Pivot Unit",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "prefit": {
                        "label": "Pre-Fit Overlay",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    }
                },
                "summary": "The Cross TOP blends between the two input images based on the value of the Cross parameter (refered to as Cross_value below)."
            },
            "opviewerTOP": {
                "label": "OP Viewer",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Determines which operator's viewer to use. Drag & drop any operator on this parameter or type in the path directly."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "preservealpha": {
                        "label": "Preserve Alpha",
                        "summary": "Uses the alpha channel to determine transparency in the texture."
                    },
                    "allowpanel": {
                        "label": "Allow Panel Interaction",
                        "summary": "This option is being deprecated.  Please see OP Viewer COMP for its replacement."
                    }
                },
                "summary": "The OP Viewer TOP can display the Node Viewer for any other operator as a TOP image."
            },
            "sharedmemoutTOP": {
                "label": "Shared Mem Out",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": "When active, the TOP cooks its inputs and writes to the memory block."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "downloadtype": {
                        "label": "Download Type",
                        "summary": "Select between Immediate(Slow) and Next Frame(Fast) for better performance."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "name": {
                        "label": "Shared Mem Name",
                        "summary": "Name of the memory block that it writes to."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "memtype": {
                        "label": "Shared Mem Type",
                        "summary": "Writes to a Local or a Global memory location."
                    }
                },
                "summary": "The Shared Mem Out TOP will write image data out to a shared memory block for use by other TouchDesigner processes or other 3rd party applications."
            },
            "constantTOP": {
                "label": "Constant",
                "parameters": {
                    "rgbaunit": {
                        "label": "RGBA Units",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "alpha": {
                        "label": "Alpha",
                        "summary": "Sets the alpha channel value."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "color": {
                        "label": "Color",
                        "summary": "Sets the red, green and blue color channels. Clicking on the color swatch opens a color picker with RGB and HSV (Hue, Sat, and Value) pickers."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "multrgbbyalpha": {
                        "label": "Multiply RGB by Alpha",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Constant TOP sets the red, green, blue, and alpha (r, g, b, and a) channels individually."
            },
            "inTOP": {
                "label": "In",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "label": {
                        "label": "Label",
                        "summary": "Creates a pop-up label when the cursor rolls over this Component input."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The In TOP is used to create a TOP input in a Component."
            },
            "remapTOP": {
                "label": "Remap",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "extend": {
                        "label": "Extend",
                        "summary": ""
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "vertsource": {
                        "label": "Vertical Source",
                        "summary": ""
                    },
                    "horzsource": {
                        "label": "Horizontal Source",
                        "summary": ""
                    },
                    "fliphorz": {
                        "label": "Flip Horizontal Direction",
                        "summary": ""
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "flipvert": {
                        "label": "Flip Vertical Direction",
                        "summary": ""
                    }
                },
                "summary": "The Remap TOP uses the second input to warp the first input."
            },
            "opencolorioTOP": {
                "label": "OpenColorIO",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "slope": {
                        "label": "Slope",
                        "summary": "Adjust the gain."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "lutsize": {
                        "label": "Lookup Table Size",
                        "summary": "Size of the lookup tables specified in the configuration file."
                    },
                    "precision": {
                        "label": "Lookup Precision",
                        "summary": "Precision of the lookup color. Automatic will automatically grab the precision from the configuration file or specific precision formats can be chosen."
                    },
                    "view": {
                        "label": "View",
                        "summary": "Specifies the color space transform to be applied to the image."
                    },
                    "interpolation": {
                        "label": "Interpolation",
                        "summary": "Interpolation method of the file."
                    },
                    "config": {
                        "label": "Configuration File",
                        "summary": "File holding all the relevant information, such as lookup tables, transforms, color spaces, views, and displays. Several sample configurations are provided in the application installation folder /Samples/OpenColorIO."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "power": {
                        "label": "Power",
                        "summary": "Adjust the gamma."
                    },
                    "display": {
                        "label": "Display",
                        "summary": "Color space of the device that will be used to view the image."
                    },
                    "usefiletransform": {
                        "label": "Use Transform",
                        "summary": "Toggle this transform's effect on or off. File transforms apply individual color space conversion files. Various file formats are supported, spi1d and spi3d to name a couple."
                    },
                    "ccfile": {
                        "label": "Color Correction File",
                        "summary": "The slope, offset, power, and saturation information can instead be loaded from a color correction file (.cc)."
                    },
                    "useoutput": {
                        "label": "Use Output",
                        "summary": "Toggle a display transform. Display transforms allow for color space conversion onto specific display devices."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "incolorspace": {
                        "label": "Input",
                        "summary": "Specify the input color space, the color space of the incoming image."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "cdlmode": {
                        "label": "CDL Mode",
                        "summary": "Select this transform's effect on the image, either manually using inputted values or using a color correction file (.cc). https://en.wikipedia.org/wiki/ASC_CDL"
                    },
                    "gain": {
                        "label": "Gain",
                        "summary": "Adjust exposure applied before the display transform."
                    },
                    "usecolorspacetransform": {
                        "label": "Use Transform",
                        "summary": "Toggle this transform's effect on or off. Color space transforms convert an image from one color space to another."
                    },
                    "colorspace": {
                        "label": "Input Color Space",
                        "summary": "Specifies the input color space."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "saturation": {
                        "label": "Saturation",
                        "summary": "Adjust the saturation."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "outcolorspace": {
                        "label": "Output",
                        "summary": "Specify the output color space. The image will be converted to this color space from the input color space."
                    },
                    "reloadconfig": {
                        "label": "Reload Config",
                        "summary": "Manually reload the configuration file."
                    },
                    "filesource": {
                        "label": "File Source",
                        "summary": "The file to be loaded.  Note that the file will expect a certain color space and file transforms do not internally handle this, so ensure that the image is in the correct color space before applying the transform or you will get incorrect results."
                    },
                    "gamma": {
                        "label": "Gamma",
                        "summary": "Adjust amount of gamma correction applied after the display transform."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Adjust the offset."
                    },
                    "filedirection": {
                        "label": "Direction",
                        "summary": "The direction of the transform. To invert the transform, select Inverse."
                    },
                    "cdldirection": {
                        "label": "Direction",
                        "summary": "The direction of the transform. To invert the transform, select Inverse."
                    }
                },
                "summary": "The OpenColorIO TOP utilizes the OpenColorIO library (http://opencolorio.org/) to apply various transforms and lookup tables to your textures and images."
            },
            "multiplyTOP": {
                "label": "Multiply",
                "parameters": {
                    "tunit": {
                        "label": "Translate Units",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "size": {
                        "label": "Fixed Layer",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "extend": {
                        "label": "Extend Overlay",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": ""
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "punit": {
                        "label": "Pivot Units",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "prefit": {
                        "label": "Pre-Fit Overlay",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    }
                },
                "summary": "The Multiply TOP performs a multiply operation on Input1 and Input2."
            },
            "prefiltermapTOP": {
                "label": "PreFilter Map",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "output": {
                        "label": "Output",
                        "summary": "Select between calculating the PreFilter for the Diffuse Map or Specular Map."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The PreFilter TOP calculates a Pre-Filtered Diffuse Map or Pre-Filtered Specular Map for use in the Environment Light COMP."
            },
            "resolutionTOP": {
                "label": "Resolution",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "highqualresize": {
                        "label": "High Quality Resize",
                        "summary": "Uses weighted averages of multiple-pixels when scaling down the image."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Resolution TOP changes the resolution of the TOP image."
            },
            "importselectTOP": {
                "label": "Import Select",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "texture": {
                        "label": "Texture",
                        "summary": "Specifies a path to the texture image."
                    }
                },
                "summary": ""
            },
            "rampTOP": {
                "label": "Ramp",
                "parameters": {
                    "dat": {
                        "label": "DAT",
                        "summary": "Specifies the DAT which defines the entries in the ramp."
                    },
                    "interp": {
                        "label": "Interpolate Notches",
                        "summary": "Change type of interpolation between the color keyframes in the ramp."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "color": {
                        "label": "",
                        "summary": "The color and alpha of each ramp keyframe can be set here. Select between an HSV or RGB colorpicker, or click the \\\"+\\\" button to open a color dialog box with predefined colors."
                    },
                    "multrgbbyalpha": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Premultiplies the image."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "tension": {
                        "label": "Curve Tension",
                        "summary": "Only enabled when using Hermite interpolation. Adjusts the tension bias of the Hermite curve used for interpolation."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "period": {
                        "label": "Period",
                        "summary": "Adjusts the length of the ramp, similar to a UV scaling."
                    },
                    "position": {
                        "label": "Position",
                        "summary": "Sets the center point for radial and circular ramps."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "extendleft": {
                        "label": "Extend Left",
                        "summary": "Sets the extend (or repeat) conditions of the ramp beyond the defined range. This parameter determines what happens at the edges of the ramp."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "type": {
                        "label": "Type",
                        "summary": "The type of ramp, choose between vertical, horizontal, radial, and circular."
                    },
                    "antialias": {
                        "label": "Anti-Alias",
                        "summary": "Sets level of anti-aliasing for Radial and Circular type ramps."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "fitaspect": {
                        "label": "Fit Aspect",
                        "summary": "Adjusts the fit of Radial and Circular type ramps based on aspect ratio."
                    },
                    "extendright": {
                        "label": "Extend Right",
                        "summary": "Sets the extend (or repeat) conditions of the ramp beyond the defined range. This parameter determines what happens at the edges of the ramp."
                    },
                    "dither": {
                        "label": "Dither",
                        "summary": "Dithers the ramp to help deal with banding and other artifacts created by precision limitations."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "phase": {
                        "label": "Phase",
                        "summary": "Offsets the beginning of the ramp."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    }
                },
                "summary": "The Ramp TOP allows you to interactively create vertical, horizontal, radial, and circular ramps."
            },
            "screengrabTOP": {
                "label": "Screen Grab",
                "parameters": {
                    "top": {
                        "label": "Top",
                        "summary": "Sets the top edge of the window to be grabbed."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "right": {
                        "label": "Right",
                        "summary": "Sets the right edge of the window to be grabbed."
                    },
                    "bottom": {
                        "label": "Bottom",
                        "summary": "Sets the bottom edge of the window to be grabbed. (Bottom = 0)"
                    },
                    "activepulse": {
                        "label": "Active Pulse",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "bottomunit": {
                        "label": "Bottom Unit",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "left": {
                        "label": "Left",
                        "summary": "Sets the left edge of the window to be grabbed."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "When set to one, the TOP will grab the screen contents."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "topunit": {
                        "label": "Top Unit",
                        "summary": ""
                    },
                    "delayed": {
                        "label": "Delayed (Faster)",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "leftunit": {
                        "label": "Left Unit",
                        "summary": ""
                    },
                    "rightunit": {
                        "label": "Right Unit",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    }
                },
                "summary": "The Screen Grab TOP turns the main screen output into a TOP image."
            },
            "compositeTOP": {
                "label": "Composite",
                "parameters": {
                    "tunit": {
                        "label": "Translate Units",
                        "summary": ""
                    },
                    "operand": {
                        "label": "Operation",
                        "summary": "Choose which composite operation is performed from this menu. Search the web for 'blend modes' for more detailed information on the effects of each type."
                    },
                    "top": {
                        "label": "TOP",
                        "summary": "In addition to all the inputs attached, you can specify more using the TOPs listed in this field. Example: ramp* will composite all TOPs whose name starts with ramp."
                    },
                    "size": {
                        "label": "Fixed Layer",
                        "summary": ""
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": ""
                    },
                    "inputindex": {
                        "label": "Input Index",
                        "summary": "When passing through an input with Select Input on, this is the index of the image that is passed through."
                    },
                    "previewgrid": {
                        "label": "Preview Grid",
                        "summary": "This outputs an image showing the effect of all operation types in a grid, with the inputs swapped on the right side of each tile."
                    },
                    "extend": {
                        "label": "Extend Overlay",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "selectinput": {
                        "label": "Select Input",
                        "summary": "Instead of doing the composites, this causes only one of the inputs to pass through."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "punit": {
                        "label": "Pivot Units",
                        "summary": ""
                    },
                    "tstepunit": {
                        "label": "Translate Step Units",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "prefit": {
                        "label": "Pre-Fit Overlay",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "swaporder": {
                        "label": "Swap Operation Order",
                        "summary": "Swaps the order of the input pairs. A operation B is changed to B operation A. Operations like Add don't matter, but many do, like Over and Hard Light."
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "tstep": {
                        "label": "Translate Step",
                        "summary": ""
                    }
                },
                "summary": "The Composite TOP is a multi-input TOP that will perform a composite operation for each input."
            },
            "lumablurTOP": {
                "label": "Luma Blur",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "type": {
                        "label": "Type",
                        "summary": "Determines the mathematical function used to create the blur."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "blackvalue": {
                        "label": "Black Value",
                        "summary": "The pixel luminance value used for the Black Filter Size parameter below."
                    },
                    "extend": {
                        "label": "Extend",
                        "summary": ""
                    },
                    "blackwidth": {
                        "label": "Black Filter Width",
                        "summary": "The amount of blur where the second input is black."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "whitevalue": {
                        "label": "White Value",
                        "summary": "The pixel luminance value used for the White Filter Size parameter below."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "widthchan": {
                        "label": "Kernel Width Channel",
                        "summary": "The greyscale can be any channel of the second input, or composites like luminance and RGB average."
                    },
                    "whitewidth": {
                        "label": "White Filter Width",
                        "summary": "The amount of blur where the second input is white."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    }
                },
                "summary": "The Luma Blur TOP blurs image on a per-pixel basis depending on the luminance or greyscale value of its second input."
            },
            "hsvtorgbTOP": {
                "label": "HSV to RGB",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": ""
            },
            "texture3dTOP": {
                "label": "Texture 3D",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "prefill": {
                        "label": "Pre Fill",
                        "summary": "This feature is used to pre-setup all of the slices of the 3D texture in a single cook. When set to 1, it will fill the cache. If set to 1 during playback, it will fill immediately. If set to 1 and saved out, then next time the file is opened the cache will pre-fill. It sets up the cache by cooking its inputs at $F = 1, $F = 2, $F = 3 etc. up until the number of slice it needs to fill. Refer to Pre-Filling for more information."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "When set to 1, the cache is flushed and the TOP is reset."
                    },
                    "cachesize": {
                        "label": "Cache Size",
                        "summary": "The number of images the Texture 3D TOP will hold. This is the number of 3D slices in the texture."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "step": {
                        "label": "Step Size",
                        "summary": "This parameter sets how many frames pass before the TOP grabs one into cache. A Sample Step of 1 will grab each consecutive frame, a Sample Step of 2 will grab every other frame, and so on.  When Prefilling you would normally setup the inputs to the Texture 3D node in some way that is tied to $F. Such as a Movie File In TOP where set the Specify Index parameter to $F - 1 (since 0 is the first frame). Or a Noise TOP that is changing it's translation based on $F. If Step Size is 3, it would cook frame 1, 4, 7 etc."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "type": {
                        "label": "Type",
                        "summary": "Specifies the texture type to create."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "When set to 1, the Texture 3D TOP will fill up it cache with images. The texture3D TOP replaces a slice of its 3d data with its input every frame. When it has filled up all of its slices it wraps around and starts overwriting the oldest slice."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "prefillpulse": {
                        "label": "Pre Fill Pulse",
                        "summary": ""
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "replacesingle": {
                        "label": "Replace Single",
                        "summary": "While this is set > 0, the Texture 3D TOP will replace the slice at 'Replace Index' with the input image. This allows you to replace specific slices of the 3D texture at will."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "replacesinglepulse": {
                        "label": "Replace Single Pulse",
                        "summary": ""
                    },
                    "replaceindex": {
                        "label": "Replace Index",
                        "summary": "Select the slice index that will be replaced by the input, when 'Replace Single' is turned on."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    }
                },
                "summary": "The Texture 3D TOP creates a 3D texture map. It saves a series of images in one array of pixels."
            },
            "layoutTOP": {
                "label": "Layout",
                "parameters": {
                    "tunit": {
                        "label": "Translate Unit",
                        "summary": ""
                    },
                    "align": {
                        "label": "Align",
                        "summary": "The menu determines how the inputs are laid out, in row, column , or grid format."
                    },
                    "top": {
                        "label": "TOP",
                        "summary": "Specify the path(s) to a TOP to include in the layout."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The two fields for Translate allows you to specify transforms in x and y axes for each input image."
                    },
                    "fit": {
                        "label": "Fit",
                        "summary": "Determines how the input images are fit to the space they are given. Depending on the setting, it will either fit the entire image inside the space given or crop some of the image off."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your inputs will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block."
                    },
                    "compover": {
                        "label": "Comp Over Background Color",
                        "summary": "Fill any area with the background color if it has alpha less than 1."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The two fields for Scale allows you to specify transforms in x and y axes for each input image."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "maxrows": {
                        "label": "Max Rows",
                        "summary": "Maximum number of rows until a new column is started."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "bcolor": {
                        "label": "Border Color",
                        "summary": "The color of the border around each input."
                    },
                    "maxcols": {
                        "label": "Max Columns",
                        "summary": "Maximum number of columns until a new row is started."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "Color and alpha for the space not covered by the input images."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "rotate": {
                        "label": "Rotate",
                        "summary": "The field for rotation allows you to specify the amount of rotation for each input image."
                    },
                    "scaleres": {
                        "label": "Scale Resolution",
                        "summary": "When 'off', the resolution of the first wired input is used, or a custom resolution can be specified on the Common page. When 'on' and the output resolution is 'Use Input', the Layout TOP's resolution is the first input's resolution scaled up by number of columns horiontally, and the number of rows vertically. For example, if there are 4 input textures and the first one is 1280x720 and Align Left to Right is selected, then the grid size is 4x1 and so the final resolution will be 5120x720 (ie. (1280*4)x(720*1)). However whether off or on, each texture gets an allotted space of the same size. How the texture fits into that space is determined using the Fit parameter."
                    },
                    "borders": {
                        "label": "Borders",
                        "summary": "The border width for each input. The borders will scale down the input."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    }
                },
                "summary": "The Layout TOP positions multiple input TOPs into rows, columns, or grids."
            },
            "convolveTOP": {
                "label": "Convolve",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "dat": {
                        "label": "Coefficients DAT",
                        "summary": "The DAT containing the rows and columns of coefficients."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "normalize": {
                        "label": "Normalize Coefficients",
                        "summary": "This will normalize the coefficients before using them in the convolve. Note: If the coefficients add up to 0, then this parameter does nothing."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "After the convolution, this value will be added to the R, G and B of the pixel (and A if enabled)."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "applytoalpha": {
                        "label": "Apply to Alpha",
                        "summary": "When off, the alpha channel will not be convolved."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Convolve TOP uses a DAT table containing numeric coefficients."
            },
            "zedTOP": {
                "label": "ZED",
                "parameters": {
                    "camerafps": {
                        "label": "Camera FPS",
                        "summary": "Sets the frame rate of the camera capture."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "perspective": {
                        "label": "Perspective",
                        "summary": "Choose between Left or Right camera."
                    },
                    "mirrorimage": {
                        "label": "Mirror Image",
                        "summary": "Flips the image in the y-axis."
                    },
                    "mindepth": {
                        "label": "Minimuum Depth",
                        "summary": "Sets the minimum depth in meters that will be computed."
                    },
                    "sensingmode": {
                        "label": "Sensing Mode",
                        "summary": "Selects betweem Standard and Fill mode."
                    },
                    "rerange": {
                        "label": "Rerange",
                        "summary": "Enabling this will remap pixel values to 0-1."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "toofarvalue": {
                        "label": "Too Far Value",
                        "summary": "For depth pixels that are too far to resolve, this pixel value will be output instead."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "camerares": {
                        "label": "Camera Resolution",
                        "summary": "Selects the resolution of the camera capture."
                    },
                    "maxdepth": {
                        "label": "Maximum Depth",
                        "summary": "Sets the maximum depth in meters."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "When set to 1 the TOP captures the image stream from the camera."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "unknownvalue": {
                        "label": "Unknown Value",
                        "summary": "For depth pixels whose depth can not be determined, output this value instead."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "image": {
                        "label": "Image",
                        "summary": "Selects between the Color, Depth, Confidence, Disparity, Normals, Point Cloud or Spatial Texture modes."
                    },
                    "depthmode": {
                        "label": "Depth Mode",
                        "summary": "Selects the depth computation mode of the camera."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "referenceframe": {
                        "label": "Reference Frame",
                        "summary": "Select between World and Camera reference frames for the Point Cloud pixels."
                    },
                    "depthstabilization": {
                        "label": "Depth Stabilization",
                        "summary": "Enables depth stabilization for the camera."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "camera": {
                        "label": "Camera",
                        "summary": "Selects which ZED camera to use."
                    },
                    "tooclosevalue": {
                        "label": "Too Close Value",
                        "summary": "For depth pixels that are too close to resolve, this pixel value will be output instead."
                    }
                },
                "summary": "The ZED TOP captures video from the ZED depth camera."
            },
            "reorderTOP": {
                "label": "Reorder",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "outputalpha": {
                        "label": "Output Alpha",
                        "summary": "Specify which input and channel is used as the alpha channel in the output image."
                    },
                    "outputgreen": {
                        "label": "Ouput Green",
                        "summary": "Specify which input and channel is used as the green channel in the output image."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "outputalphachan": {
                        "label": "Output Alpha Channel",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputred": {
                        "label": "Output Red",
                        "summary": "Specify which input and channel is used as the red channel in the output image."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputredchan": {
                        "label": "Output Red Channel",
                        "summary": ""
                    },
                    "outputblue": {
                        "label": "Ouput Blue",
                        "summary": "Specify which input and channel is used as the blue channel in the output image."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "outputgreenchan": {
                        "label": "Ouput Green Channel",
                        "summary": ""
                    },
                    "outputbluechan": {
                        "label": "Ouput Blue Channel",
                        "summary": ""
                    }
                },
                "summary": "The Reorder TOP is a multi-input TOP which lets you choose any of the input channels for the R, G, B, and A output."
            },
            "channelmixTOP": {
                "label": "Channel Mix",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "red": {
                        "label": "Red",
                        "summary": "Red output mix. Use these 4 values to mix the RGBA inputs into the output's red channel."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "alpha": {
                        "label": "Alpha",
                        "summary": "Alpha output mix. Use these 4 values to mix the RGBA inputs into the output's alpha channel."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "green": {
                        "label": "Green",
                        "summary": "Green output mix. Use these 4 values to mix the RGBA inputs into the output's green channel."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "blue": {
                        "label": "Blue",
                        "summary": "Blue output mix. Use these 4 values to mix the RGBA inputs into the output's blue channel."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "constant": {
                        "label": "Constant",
                        "summary": "Use these 4 values to add or subtract a constant amount to the output channels."
                    }
                },
                "summary": "The Channel Mix TOP allows mixing of the input RGBA channels to any other color channel of the output."
            },
            "selectTOP": {
                "label": "Select",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "top": {
                        "label": "TOP",
                        "summary": "The path of the TOP being referenced. Drag & drop any TOP here, or manually enter the path to the TOP."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Select TOP allows you to reference a TOP from any other location in TouchDesigner."
            },
            "displaceTOP": {
                "label": "Displace",
                "parameters": {
                    "midpoint": {
                        "label": "Source Midpoint",
                        "summary": "This value is the color values that will result in no displacement. Values below this will cause the displacment to come from the left/bottom of the pixel, while values above this will cause the displacement to come from the right/top of the pixel."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "horzsource": {
                        "label": "Horizontal Source",
                        "summary": "Instead of using the Red channel to displace horizontally, you can choose a different channel."
                    },
                    "offsetweight": {
                        "label": "Offset Weight",
                        "summary": "Scales the Offset parameter values. When this is 0 the Offset parameter will have no effect."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "extend": {
                        "label": "Extend",
                        "summary": "This parameter determines what happens at the edges of the tiles."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "vertsource": {
                        "label": "Vertical Source",
                        "summary": "Instead of using the Blue channel to displace vertically, you can choose a different channel."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "The Offset is first multiplied by the Offset Weight. Then it will be added to the coordinates caluclated after looking up into the displacement map. These final coordinates is what will be used to sample from the source image."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "uvweight": {
                        "label": "UV Weight",
                        "summary": "This reduces the influence of the pixel's position when brought toward 0. At its default of 1, it doesn't zoom into the Displace Image. When 0, it anchors the displacements relative to one pixel in the Source Image defined by the Offset and Offset Weight parameters."
                    },
                    "displaceweight": {
                        "label": "Displace Weight",
                        "summary": "This scales the offset caused by the Displace Image. It will cause the pixels fetched to be closer/farther along the sample vector created by the Horizontal and Vertical Source."
                    }
                },
                "summary": "The Displace TOP will cause one image to be warped by another image."
            },
            "glslTOP": {
                "label": "GLSL",
                "parameters": {
                    "chopuniname4": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chopunitype2": {
                        "label": "Type",
                        "summary": ""
                    },
                    "matuniname0": {
                        "label": "Uniform Name",
                        "summary": "The name of the matrix uniform."
                    },
                    "acsize0": {
                        "label": "Size",
                        "summary": "The size allocated for the atomic counter. The size corresponds to the number of atomic counters allowed in that binding, not the size of the allowed offset. Because atomic counters are 4 bytes each it means that the offset in the shader code will be able to be 4 times as large as the number in the size parameter. So, the offset in the code for that binding cannot be larger than (4 * Size) - 4"
                    },
                    "uniname12": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "matuniname2": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "acsize2": {
                        "label": "Size",
                        "summary": ""
                    },
                    "matuniname7": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname9": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chopuniname0": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform. You can send up to 4 channels into the GLSL shader in a single uniform. The number of channels is determined by the float/vec2/vec3/vec4 menu to the right of the name. For a CHOP with a single channel declare your uniform as a float, for one with two channels declare your uniform as a vec2, etc. The data is interleaved in the uniform. I.e the .x component is the 1st channel, .y is the 2nd channel, etc."
                    },
                    "outputaccess": {
                        "label": "Output Access",
                        "summary": "Controls how the output textures will be accessed. If the textures will be read from (such as using previous frame's values), then the access should be changed to Read-Write instead of Write Only."
                    },
                    "uniname18": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chopunitype5": {
                        "label": "Type",
                        "summary": ""
                    },
                    "chop4": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "value27": {
                        "label": "Value",
                        "summary": ""
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "choparraytype0": {
                        "label": "Array Type",
                        "summary": "The type of the uniform."
                    },
                    "uniname25": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname16": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value13": {
                        "label": "Value",
                        "summary": ""
                    },
                    "uniname21": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname6": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chop1": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "acinitval2": {
                        "label": "Initial Value Type",
                        "summary": ""
                    },
                    "chop3": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "value7": {
                        "label": "Value",
                        "summary": ""
                    },
                    "type": {
                        "label": "Output Type",
                        "summary": "Specify what type of texture to create. When creating  a 3D texture the TOP will render once for every slice of the output. Refer to  3D Textures and 2D Texture Arrays for more info."
                    },
                    "uniname23": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "value3": {
                        "label": "Value",
                        "summary": ""
                    },
                    "choparraytype2": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "chopunitype9": {
                        "label": "Type",
                        "summary": ""
                    },
                    "inputmapping": {
                        "label": "Input Mapping",
                        "summary": "Determines how the node's input(s) are passed into the shader for use when creating a 3D Texture. By default all of the inputs are passed to each slice. When using the N inputs per Slice mode, the first N inputs are passed to the first slice, the next N inputs are passed the second slice, and so on. When it runs out of inputs it loops back to the first input. N is selected by the parameter N Value."
                    },
                    "matvalue9": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "uniname24": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chop9": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "matvalue2": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "matuniname5": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname11": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value19": {
                        "label": "Value",
                        "summary": ""
                    },
                    "chopuniname7": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "matuniname1": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chopunitype8": {
                        "label": "Type",
                        "summary": ""
                    },
                    "uniname20": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "matvalue0": {
                        "label": "Matrix",
                        "summary": "The value to assign the matrix. For valid ways to specify this, see the Matrix Parameters article."
                    },
                    "chop0": {
                        "label": "CHOP",
                        "summary": "The channels from this CHOP will be sent to the GLSL shader."
                    },
                    "choparraytype1": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "uniname10": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname28": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value17": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value20": {
                        "label": "Value",
                        "summary": ""
                    },
                    "choparraytype5": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "enablevectorpage3": {
                        "label": "Enable These Uniforms",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "choparraytype9": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "value8": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value18": {
                        "label": "Value",
                        "summary": ""
                    },
                    "chopunitype1": {
                        "label": "Type",
                        "summary": ""
                    },
                    "acsingleval1": {
                        "label": "Initial Value",
                        "summary": ""
                    },
                    "value9": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value12": {
                        "label": "Value",
                        "summary": ""
                    },
                    "acsingleval3": {
                        "label": "Initial Value",
                        "summary": ""
                    },
                    "uniname8": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "value0": {
                        "label": "Value",
                        "summary": "The value(s) to give the uniform."
                    },
                    "chopuniname5": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname14": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value25": {
                        "label": "Value",
                        "summary": ""
                    },
                    "chopuniname3": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "glslversion": {
                        "label": "GLSL Version",
                        "summary": "Pick what version of GLSL to compile the shader with."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "uniname1": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname7": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "acinitval1": {
                        "label": "Initial Value Type",
                        "summary": ""
                    },
                    "depth": {
                        "label": "Depth",
                        "summary": "Set the depth of the 3D texture from the Input or the Custom Depth parameter."
                    },
                    "value23": {
                        "label": "Value",
                        "summary": ""
                    },
                    "acinitval0": {
                        "label": "Initial Value Type",
                        "summary": "Specifies how the atomic counters receive their initial value, either through a single default value or a CHOP."
                    },
                    "chopunitype0": {
                        "label": "Type",
                        "summary": "The data type of the uniform in the shader."
                    },
                    "chopuniname8": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chopuniname6": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "acbinding3": {
                        "label": "Binding",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "value15": {
                        "label": "Value",
                        "summary": ""
                    },
                    "computedat": {
                        "label": "Compute Shader",
                        "summary": "Points to the DAT holding the Compute Shader. Drag & Drop a DAT here, or manually enter the path to the DAT."
                    },
                    "uniname4": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "matuniname4": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value5": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value24": {
                        "label": "Value",
                        "summary": ""
                    },
                    "uniname3": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chop7": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "uniname0": {
                        "label": "Uniform Name",
                        "summary": "The uniform name, as declared in the shader"
                    },
                    "chopuniname9": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value21": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value6": {
                        "label": "Value",
                        "summary": ""
                    },
                    "mode": {
                        "label": "Mode",
                        "summary": "Choose what type of shader you are writing, vertex/pixel shader, or a compute shader."
                    },
                    "matuniname9": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname2": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "dispatchsize": {
                        "label": "Dispatch Size",
                        "summary": "The dispatch size to use when executing a compute shader."
                    },
                    "uniname17": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value14": {
                        "label": "Value",
                        "summary": ""
                    },
                    "loaduniformnames": {
                        "label": "Load Uniform Names",
                        "summary": "When this button is pressed the node will try to pre-fill all it's uniform parameter with uniforms that are declare in the shader. Note that the shader compiler will likely not expose uniforms that are unused."
                    },
                    "chopunitype3": {
                        "label": "Type",
                        "summary": ""
                    },
                    "matvalue3": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "value4": {
                        "label": "Value",
                        "summary": ""
                    },
                    "acchopval1": {
                        "label": "Initial Values CHOP",
                        "summary": ""
                    },
                    "value22": {
                        "label": "Value",
                        "summary": ""
                    },
                    "acbinding0": {
                        "label": "Binding",
                        "summary": "The binding location of the counter. This value must be equal to the binding value specified in the shader for the desired atomic counter."
                    },
                    "matvalue1": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "value1": {
                        "label": "Value",
                        "summary": ""
                    },
                    "vertexdat": {
                        "label": "Vertex Shader",
                        "summary": "Points to the DAT holding the Vertex Shader. Drag & Drop a DAT here, or manually enter the path to the DAT."
                    },
                    "choparraytype6": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "chop6": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "matuniname8": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "inputextenduv": {
                        "label": "Input Extend Mode UV",
                        "summary": "Controls what is returned from your texture sampling functions when the U and V texture coordinates (called S and T in the shader) are outside [0-1] range."
                    },
                    "acsize3": {
                        "label": "Size",
                        "summary": ""
                    },
                    "chop8": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "chopunitype6": {
                        "label": "Type",
                        "summary": ""
                    },
                    "matvalue8": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "value29": {
                        "label": "Value",
                        "summary": ""
                    },
                    "acinitval3": {
                        "label": "Initial Value Type",
                        "summary": ""
                    },
                    "acsingleval0": {
                        "label": "Initial Value",
                        "summary": "Specifies a single value that all atomic counters in this binding will be initialized to."
                    },
                    "nval": {
                        "label": "N Value",
                        "summary": "Determines how many inputs are passed to the shader per slice when using the N inputs per Slice mode for Input Mapping. If for example this is set to 2, then the first 2 inputs will be passed to the first slice, the next 2 inputs will be passed the second slice, and so on. It will loop back to the start of the inputs if it runs out before it reaches the last slice."
                    },
                    "numcolorbufs": {
                        "label": "# of Color Buffers",
                        "summary": "Any shader you write can output to more than one RGBA buffer at a time. Turn up this value to have more color buffers allocated for you, and refer to [Write_a_GLSL_TOP#Outputting_to_Multiple_Color_Buffers Write a GLSL TOP] for more information on using this feature."
                    },
                    "chopunitype4": {
                        "label": "Type",
                        "summary": ""
                    },
                    "value26": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value28": {
                        "label": "Value",
                        "summary": ""
                    },
                    "value10": {
                        "label": "Value",
                        "summary": ""
                    },
                    "chopuniname1": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname15": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "uniname5": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "acsingleval2": {
                        "label": "Initial Value",
                        "summary": ""
                    },
                    "acsize1": {
                        "label": "Size",
                        "summary": ""
                    },
                    "matvalue5": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "matvalue4": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "matvalue7": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "value11": {
                        "label": "Value",
                        "summary": ""
                    },
                    "uniname27": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value16": {
                        "label": "Value",
                        "summary": ""
                    },
                    "uniname13": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "acbinding1": {
                        "label": "Binding",
                        "summary": ""
                    },
                    "uniname19": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "acbinding2": {
                        "label": "Binding",
                        "summary": ""
                    },
                    "chop2": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "inputextendw": {
                        "label": "Input Extend Mode W",
                        "summary": "Controls what is returned from your texture sampling functions when the W texture coordinate (called W in the shader) are outside [0-1] range. Only useful for 3D Texture."
                    },
                    "matvalue6": {
                        "label": "Matrix",
                        "summary": ""
                    },
                    "matuniname3": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "chopuniname2": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "acchopval3": {
                        "label": "Initial Values CHOP",
                        "summary": ""
                    },
                    "value2": {
                        "label": "Value",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "uniname29": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "customdepth": {
                        "label": "Custom Depth",
                        "summary": "Manually set the depth of the 3D texture, otherwise it will use the depth of the input."
                    },
                    "choparraytype7": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "uniname22": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "choparraytype8": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "chop5": {
                        "label": "CHOP",
                        "summary": ""
                    },
                    "chopunitype7": {
                        "label": "Type",
                        "summary": ""
                    },
                    "choparraytype4": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "uniname26": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "choparraytype3": {
                        "label": "Array Type",
                        "summary": ""
                    },
                    "acchopval2": {
                        "label": "Initial Values CHOP",
                        "summary": ""
                    },
                    "pixeldat": {
                        "label": "Pixel Shader",
                        "summary": "Points to the DAT holding the Pixel Shader. Drag & Drop a DAT here, or manually enter the path to the DAT."
                    },
                    "acchopval0": {
                        "label": "Initial Values CHOP",
                        "summary": "A reference to the CHOP that will determine the initial values of the atomic counters in this binding. The CHOP will be spanned in track order, so the values from the first track will be read in order first, then the next track (if there is one) and so on. If there are more initial values to fill than there are values in the CHOP then they will all be set to 0. Atomic counters will be initialized from low to high offsets."
                    },
                    "matuniname6": {
                        "label": "Uniform Name",
                        "summary": ""
                    }
                },
                "summary": "The GLSL TOP renders a GLSL shader into a TOP image."
            },
            "videostreaminTOP": {
                "label": "Video Stream In",
                "parameters": {
                    "deinterlace": {
                        "label": "Deinterlace",
                        "summary": "For movies that are stored as fields, where each image is made of two images interleaved together. A 30-frame per second movie would contain 60 fields per second. For each image, the even scanlines of the first field are interleaved with the odd scanlines of the second field. The Video Stream In TOP has several ways of dealing with this:"
                    },
                    "reloadpulse": {
                        "label": "Reload Pulse",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "play": {
                        "label": "Play",
                        "summary": ""
                    },
                    "asyncupload": {
                        "label": "Async Upload to GPU",
                        "summary": "When enabled, this will use OpenGL features to upload movie images to the GPU asynchronously. This will reduce the cook time of the Movie File In TOP considerably (in the performance monitor the lines that say \\\"Uploading Image to GPU\\\" will go down to almost nothing). There is a GPU memory cost to using this feature however. It uses up another (Width * Height * 4 * Read Ahead Size) bytes of GPU memory. If you are having poor results with this feature, make sure your graphics drivers are up to date."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "prereadframes": {
                        "label": "Pre-Read Frames",
                        "summary": "Sets how many video frames TouchDesigner reads ahead and stores in memory. Using this, smooth reading of an image stream is possible even when the disk files are fragmented. The Movie File In TOP will read frames of the movie into memory before they are used, this can eliminate pops or stutters in playback that occur from fragmented files, other resources accessing the hard drive, or movie looping."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "maxdecodecpus": {
                        "label": "Max Decode CPUs",
                        "summary": "Limit the maximum number of CPUs that will be used to decode certain codecs that are capable of multi-CPU decoding, such as H264."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "networkbuffersize": {
                        "label": "Network Buffer Size (KB)",
                        "summary": ""
                    },
                    "precedence": {
                        "label": "Field Precedence",
                        "summary": "Where fields are extracted one field at a time, this will extract the Even field first by default, otehrwise it will extract the odd field first. The industry has not standardized on one or the other."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "url": {
                        "label": "URL",
                        "summary": ""
                    },
                    "reload": {
                        "label": "Reload",
                        "summary": ""
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "bottomhalfalpha": {
                        "label": "Bottom Half is Alpha (AAA)",
                        "summary": "This is a way of encoding alpha into RGB-only formats like H.264. and several other QuickTime formats. You need to create your movies so that the bottom half of the image is the alpha (RGB = AAA). Turning on this features tells the Video Stream In TOP to take the bottom half of the image and put it into the alpha channel of the output. The image height will be cut in half."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "networkqueuesize": {
                        "label": "Network Queue Size (4KB Each)",
                        "summary": ""
                    }
                },
                "summary": "The Video Stream In TOP creates an RTSP client to receive video and audio across the network."
            },
            "cubemapTOP": {
                "label": "Cube Map",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "mode": {
                        "label": "Mode",
                        "summary": "Determine how the cube map is created from the input images."
                    }
                },
                "summary": "The Cube Map TOP builds a texture map in the Cube Map internal texture format."
            },
            "nullTOP": {
                "label": "Null",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Null TOP has no effect on the image. It is an instance of the TOP connected to its input."
            },
            "monochromeTOP": {
                "label": "Monochrome",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "rgb": {
                        "label": "RGB",
                        "summary": "This menu selects how the monochrome conversion is calculated for the RGB channels."
                    },
                    "alpha": {
                        "label": "Alpha",
                        "summary": "This menu selects how the monochrome conversion is calculated for the alpha channel."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "mono": {
                        "label": "Monochrome",
                        "summary": "Adjust the amount of color left in the image. 0 is full color, 1 is full greyscale."
                    }
                },
                "summary": "The Monochrome TOP changes an image to greyscale colors."
            },
            "textTOP": {
                "label": "Text",
                "parameters": {
                    "strokewidth": {
                        "label": "Stroke Width",
                        "summary": "Controls the width of the outline when using Stroke Display Method."
                    },
                    "dat": {
                        "label": "DAT",
                        "summary": "Specifies a DAT to use for the source of the text. Drag and Drop a DAT onto this field, or manually enter the DAT's path."
                    },
                    "bottomborder": {
                        "label": "Bottom Border",
                        "summary": "What color the 2 bottom-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "positionunit": {
                        "label": "Position Unit",
                        "summary": ""
                    },
                    "colindex": {
                        "label": "DAT Col",
                        "summary": "The column number of the cell, if the DAT is a table."
                    },
                    "multrgbbyalpha": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Multiplies the RGB channels by the alpha channel."
                    },
                    "charset": {
                        "label": "Character Set",
                        "summary": "Select which character set to use."
                    },
                    "topborderi": {
                        "label": "Top Border Inside",
                        "summary": ""
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "dispmethod": {
                        "label": "Display Method",
                        "summary": "The display method used."
                    },
                    "field": {
                        "label": "Field Component",
                        "summary": "Specifies a Field Component to use as the source of the text. The font and style of the text displayed in the Field Component are set using the parameters in the Text TOP."
                    },
                    "borderbalpha": {
                        "label": "Border B Alpha",
                        "summary": ""
                    },
                    "rowindex": {
                        "label": "DAT Row",
                        "summary": "The row number (starting from 0) of the cell, if the DAT is a table."
                    },
                    "fontalpha": {
                        "label": "Font Alpha",
                        "summary": ""
                    },
                    "fontsizexunit": {
                        "label": "Font Size X Unit",
                        "summary": ""
                    },
                    "decimaldigits": {
                        "label": "Decimal Digits",
                        "summary": "The number of digits displayed after the decimal place."
                    },
                    "chop": {
                        "label": "CHOP",
                        "summary": "The CHOP containing all the values to insert in the Text strings. The Text TOP will repeat the Text string until all CHOP channels are displayed. They are displayed by using a special syntax in your Text string, defined as string starting with %, for example %4d:    %[flags][width][.precision][type]  * flags (optional) - Alignment options. ** - : left align (text is right aligned by default) ** 0 : pad the left side with zeros * width (optional) - Total number of digits in the number displayed. * precision (optional) - Number of digits after the decimal place. * type - Number format. ** d : integer ** f : float ** g : double, exponential format is used only when the exponent of the value is less than ?4.  Drag and Drop a CHOP onto this field, or manually enter the CHOP's path.  image:TextTOPCHOPValue.jpg"
                    },
                    "fontcolor": {
                        "label": "Font Color",
                        "summary": "RGBA values for the text displayed. (default: white (1,1,1,1))"
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "posttext": {
                        "label": "Post Text",
                        "summary": "The text string appended after Text and Value (if present)."
                    },
                    "fontsizey": {
                        "label": "Font Size Y",
                        "summary": "Sets the font size in Y (vertical). Note: Floating point font sizes are permissable when using Polygon and Outline Display Methods."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Language type hint to help format the glyphs correctly. This should be a abbreviation from the Text TOP/SOP Unicode Language Abbreviations table."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "RGBA values for the background. (default: black (0,0,0,0))"
                    },
                    "totaldigits": {
                        "label": "Total Digits",
                        "summary": "The total number of digits in the value displayed."
                    },
                    "linespacing": {
                        "label": "Line Spacing",
                        "summary": "Determines the amount of space between lines of text."
                    },
                    "borderb": {
                        "label": "Border B",
                        "summary": "RGBA values for border B color."
                    },
                    "valuetouse": {
                        "label": "Value",
                        "summary": "The numeric value to display."
                    },
                    "specdat": {
                        "label": "Specification DAT",
                        "summary": "A Table DAT that allows you to specify and position text by pixel, with the lower left corner being at 0, 0.  Column headers must include position1 or x, position2 or y, and text.  A sample table can be:   xytext  00lower left text  100100somewhere in the middle"
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "When checked text is automatically line wrapped so it doesn't extend outside the TOP's borders.  When using Word Wrap and Auto-Size together, the text will first word-wrap based on the specified font size, then auto size the resulting block of text."
                    },
                    "topborder": {
                        "label": "Top Border",
                        "summary": "What color the 2 top-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "kerning": {
                        "label": "Kerning",
                        "summary": "The amount of space to add between letters in X and Y. Kerning is way of adding an arbitrary offset between letters. There already is a default offset associated with each font so the letters are flush against each other. The Kerning parameter this adds to that and allows for a Y offset."
                    },
                    "chopvaluereplace": {
                        "label": "CHOP Value %-Replace",
                        "summary": ""
                    },
                    "bottomborderi": {
                        "label": "Bottom Border Inside",
                        "summary": ""
                    },
                    "text": {
                        "label": "Text",
                        "summary": "A string of text. It optionally can be followed by a numeric value and another post-string, as set with Value and Post Text below. If you want to display the characters \\\\ [ ] { }, you must precede them with a \\\\. If 'Legacy Parsing' is off you do not need to escape these characters.'''"
                    },
                    "legacyparsing": {
                        "label": "Legacy Parsing",
                        "summary": "In older builds the syntax \\\\XXX (E.g \\\\200 would be character 200), \\, \\  as well as [] and {} (to position strings) was parsed in the string. This is now deprecated. For specifying characters codes, \\ and \\  Python syntax should be used instead.. The 'Specification DAT' should be used to position strings instead of [], {}. This parameter can be enabled to turn back on this legacy parsing though."
                    },
                    "leftborder": {
                        "label": "Left Border",
                        "summary": "What color the 2 left-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "bordera": {
                        "label": "Border A",
                        "summary": "RGBA values for border A color."
                    },
                    "fontautosize": {
                        "label": "Auto-Size Font",
                        "summary": "Automatically controls font size using one of the following 3 options. When using this feature along with Word Wrap turned on, it will first word-wrap the text based on the specified font size, then auto size the resulting block of text."
                    },
                    "readingdirection": {
                        "label": "Reading Direction",
                        "summary": "Use to set whether the language reads Left to Right or Right to Left."
                    },
                    "aligny": {
                        "label": "Vertical Align",
                        "summary": "Sets the vertical alignment."
                    },
                    "fontsizeyunit": {
                        "label": "Font Size Y Unit",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "italic": {
                        "label": "Italic",
                        "summary": "Displays the text in Italic."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": ""
                    },
                    "compoverinput": {
                        "label": "Comp Over Input",
                        "summary": "If there is an input into the Text TOP, the text is composited over the input image using an Over operation."
                    },
                    "position": {
                        "label": "Position",
                        "summary": "The starting position of the text in X and Y.  TIP: Inside the Text and Post Text fields the position can be overridden by using brackets.  * [x,y] - \\\"bleh[x,y]newtext\\\" will place newtext at position (x,y) on the screen. * {X,Y} - \\\"bleh{(+/-)x,(+/-)y}newtext\\\" will offset newtext x,y from current position. * \\  - using \\\"\\ \\\" causes the text to move down to the next line and reset its position. (i.e. New Line and Carriage Return)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "bold": {
                        "label": "Bold",
                        "summary": "Displays the text in bold."
                    },
                    "antialias": {
                        "label": "Anti-Alias",
                        "summary": "Smoothes out the edges of the text. Not available for Texture Display Mode."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "alignx": {
                        "label": "Horizontal Align",
                        "summary": "Sets the horizontal alignment."
                    },
                    "appendvalue": {
                        "label": "Append Value",
                        "summary": "Enables the Value field defined below. This value is inserted between the Text string and the Post Text string."
                    },
                    "fontsizex": {
                        "label": "Font Size X",
                        "summary": "Sets the font size in X (horizontal). Note: Floating point font sizes are permissable when using Polygon and Outline Display Methods."
                    },
                    "fontfile": {
                        "label": "Font File",
                        "summary": "Specify any TrueType font file (.ttf file) to use for the text.  When using a font file, the Font menu above is disabled."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "borderspace": {
                        "label": "Border Space",
                        "summary": "When using Auto-Size Font, it will further shrink the text to give it a border."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "rightborderi": {
                        "label": "Right Border Inside",
                        "summary": ""
                    },
                    "rightborder": {
                        "label": "Right Border",
                        "summary": "What color the 2 right-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "keepfontratio": {
                        "label": "Keep Font Ratio",
                        "summary": "Ignores Y value in Font Size. Sets both X and Y size to Font Size X."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "leftborderi": {
                        "label": "Left Border Inside",
                        "summary": ""
                    },
                    "borderaalpha": {
                        "label": "Border A Alpha",
                        "summary": ""
                    },
                    "linespacingunit": {
                        "label": "Line Spacing Unit",
                        "summary": ""
                    },
                    "font": {
                        "label": "Font",
                        "summary": "Select the font for the text from this drop down menu. All fonts are provided by Windows, any TrueType font that is loaded into Windows can be used."
                    }
                },
                "summary": "The Text TOP displays text strings in an image. It allows for multiple fonts, sizes, colors, borders, character separation and line separation."
            },
            "switchTOP": {
                "label": "Switch",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "index": {
                        "label": "Index",
                        "summary": "Selects which input to pass though to the output. The first input is 0."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "blend": {
                        "label": "Blend between Inputs",
                        "summary": "Blends the input images when using floating point numbers in the Input parameter."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Switch TOP is a multi-input operator which lets you switch which input is passed through using the Input parameter."
            },
            "kinectTOP": {
                "label": "Kinect",
                "parameters": {
                    "sensor": {
                        "label": "Sensor",
                        "summary": "Selects which Kinect sensor to use. Only available when using Kinect v1."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "neardepthmode": {
                        "label": "Near Depth Mode",
                        "summary": "Only used for Kinect 1 devices. Enables near mode for the depth camera, which allows the depth camera to see objects as close as 40cm to the camera (instead of the default 80cm)."
                    },
                    "remap": {
                        "label": "Camera Remap",
                        "summary": "Only used for Kinect 2 devices. Enabling this will remap images that are natively from the depth camera (Depth, Infrared, Player Index) to be in the space and resolution of the Color camera instead."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "toofarvalue": {
                        "label": "Too Far Value",
                        "summary": "Only used for Kinect 1 devices. For depth pixels that are too far to resolve, this pixel value will be output instead."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "camerares": {
                        "label": "Camera Resolution",
                        "summary": "Only used for Kinect 1 devices. Selects the resolution of the camera capture."
                    },
                    "active": {
                        "label": "Active",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "unknownvalue": {
                        "label": "Unknown Value",
                        "summary": "For depth pixels whose depth can not be determined, output this value instead."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "hwversion": {
                        "label": "Hardware Version",
                        "summary": "Choose between Kinect  v1 or Kinect v2 sensors."
                    },
                    "image": {
                        "label": "Image",
                        "summary": "Selects between the Color, Depth, Infrared, Player Index, or Color Point Cloud modes.  * Color - Uses the raw image from the RGB camera. * Depth - Textures the range is from 0-1 where a pixel with a value of 1 means the pixel is 8.191 meters from the camera. * Infrared - Uses the raw image from the infrared camera. * Player Index - The pixel value will be in increments of 0.1 for each player number. I.e a pixel with value ~0.1 will be player 1, ~0.2 will be player 2, etc. The reason is it approximate 0.1 (~) is because the buffer is 8-bit which can't exactly express 0.1, 0.3 etc. So 0.1 * 255 = 25.5 which could round off to a pixel value of 25 or 26 (out of 255). * Color Point Cloud - The texture will be a 32-bit floating point texture where RGB pixel values are XYZ pixel values relative to the color camera, in meters."
                    },
                    "mirrorimage": {
                        "label": "Mirror Image",
                        "summary": "Flips the image in the y-axis."
                    },
                    "unknownpointvalue": {
                        "label": "Unknown Point Value",
                        "summary": "When using the 'Color Point Cloud' some pixel's position can not be determined. This parameter controls what value to assign those pixels instead."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "skeleton": {
                        "label": "Skeleton",
                        "summary": "Only used for Kinect 1 devices. Specify whether to track full skeleton or seated skeleton."
                    },
                    "tooclosevalue": {
                        "label": "Too Close Value",
                        "summary": "Only used for Kinect 1 devices. For depth pixels that are too close to resolve, this pixel value will be output instead."
                    }
                },
                "summary": "The Kinect TOP captures video from the Kinect depth camera or RGB color camera."
            },
            "matteTOP": {
                "label": "Matte",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "switchinputs": {
                        "label": "Switch Inputs",
                        "summary": "Changes which image is composited over the other. This has the same effect as physically swapping input1 and input2. Also the same as inverting the alpha channel to input3."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "mattechannel": {
                        "label": "Matte Channel",
                        "summary": ""
                    }
                },
                "summary": "The Matte TOP composites input1 over input2 using the alpha channel of input3 as a matte."
            },
            "directxoutTOP": {
                "label": "DirectX Out",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Enable or disable DirectX output."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "queuesize": {
                        "label": "Queue Size",
                        "summary": "Number of DirectX textures created. These textures are updated in a cycle, 1 per frame. Use an Info DAT to inspect the list of textures."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The DirectX Out TOP creates textures that a DirectX application can access, or any instance of TouchDesigner with a DirectX In TOP."
            },
            "touchinTOP": {
                "label": "Touch In",
                "parameters": {
                    "maxtarget": {
                        "label": "Maximum Target",
                        "summary": "The largest amount of queue data (represented in seconds) allowed without adjusting sampling speed."
                    },
                    "mintarget": {
                        "label": "Minimum Target",
                        "summary": "The smallest amount of queue data (represented in seconds) allowed without adjusting sampling speed."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "port": {
                        "label": "Network Port",
                        "summary": "The TCP/IP port that the Touch Out TOP is transmitting on."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Receives image data while Active is on."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "targetdelay": {
                        "label": "Queue Adjust Time",
                        "summary": "The maximum amount of time allowed for a queue to be above or below the maximum or minimum target without adjusting the sampling speed."
                    },
                    "maxqueue": {
                        "label": "Maximum Queue",
                        "summary": "The maximum allowed size of the queue (represented in seconds). If the maximum queue size is exceeded, data will be removed from the front of the queue."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "address": {
                        "label": "Computer Name / IP",
                        "summary": "The IP address of the computer with the transmitting Touch Out TOP. Use localhost to reference the local machine."
                    }
                },
                "summary": "The Touch In TOP will read in image data send over a TCP/IP network connection from a Touch Out TOP."
            },
            "cplusplusTOP": {
                "label": "CPlusPlus",
                "parameters": {
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "numcolorbufs": {
                        "label": "# of Color Buffers",
                        "summary": "Any shader you write can output to more than one RGBA buffer at a time. Instead of writing to gl_FragColor in your shader, you write to gl_FragData[i] where i is the color buffer index you want to write the value to."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "antialias": {
                        "label": "Anti-Alias",
                        "summary": "The level of anti-aliasing you want the framebuffer that will be created for you to have."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "reinitpulse": {
                        "label": "Re-Init Class",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "unloadplugin": {
                        "label": "Unload Plugin",
                        "summary": "When this parameter goes above 1, it will delete the instance of the class created by the plugin and unload the plugin. If multiple TOPs have loaded the same plugin they will all need to unload it to release the file."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "stencilbuffer": {
                        "label": "Stencil Buffer",
                        "summary": "Turn on if you want a stencil buffer."
                    },
                    "depthbuffer": {
                        "label": "Depth Buffer",
                        "summary": "Specifies the pixel format of the depth buffer you want, if any."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "plugin": {
                        "label": "Plugin Path",
                        "summary": "The path to the plugin you want to load."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "reinit": {
                        "label": "Re-Init Class",
                        "summary": "When this parameter goes above 1, it will delete the instance of the class created by the plugin, and create a new one."
                    }
                },
                "summary": "The CPlusPlus TOP allows you to make custom TOP operators by writing your own plugin using C++."
            },
            "moviefileoutTOP": {
                "label": "Movie File Out",
                "parameters": {
                    "n": {
                        "label": "N",
                        "summary": "Using me.par.n as part of the expression in the filename (in the File parameter) in conjuction with the N parameter here gives a method of incrementing file names. The N parameter must manually be incremented each time. Exporting a Count CHOP which increments each time you want to save out a new file is an easy way to do this."
                    },
                    "moviepixelformat": {
                        "label": "Movie Pixel Format",
                        "summary": "Options for the pixel format based on the Video Codec selected."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "audiocodec": {
                        "label": "Audio Codec",
                        "summary": "Select the audio compression codec used to encode the audio."
                    },
                    "peakbitrate": {
                        "label": "Peak Bitrate (Kb/s)",
                        "summary": "Set the peak bitrate allowed for the encoding."
                    },
                    "audiobitrate": {
                        "label": "Audio Bit Rate",
                        "summary": "The bitrate to write the audio out at."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "fps": {
                        "label": "Movie FPS",
                        "summary": "The frame rate of the movie file created."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "audiochop": {
                        "label": "Audio CHOP",
                        "summary": "Specify a CHOP to use as the audio track for the movie. Drag & Drop a CHOP here or manually enter the CHOP's path. The CHOP needs to be time-sliced."
                    },
                    "addframe": {
                        "label": "Add Frame",
                        "summary": "Adds a single frame to the output for each click of the button.  Pause must be On to enable the Add Frame parameter."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "stallforopen": {
                        "label": "Stall For Open",
                        "summary": "When this is on playback will stall until the file is opened and ready to receive frames, to make sure the frame that was inputted when Record was turned on gets recorded. When this is off recording may start on a later frame, after the file has been opened. Turning this off can avoid a stall in playback, if missing recording some frames at the start is acceptable."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "record": {
                        "label": "Record",
                        "summary": "When this parameter is set to 1, the movie will be recording."
                    },
                    "mipmaps": {
                        "label": "Include Mip Maps",
                        "summary": "When saving out .dds file, mipmaps can be included if this is enabled. This is primarily used for the PreFilter Map TOP, which will encode special information into the mipmap levels of the texture which needs to be maintained."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "hapsecondarycompression": {
                        "label": "Hap Secondary Compression",
                        "summary": "Hap uses a secondary CPU compression stage usually. Encoding video without this compression will result in faster playback, but potentially larger file sizes (which would require faster drives to play back)."
                    },
                    "encodetestmode": {
                        "label": "Encode Test Mode",
                        "summary": "When this mode is enabled no file will be written out. This allows testing the performance of all the encoding operations, except for writting the file out to disk. This can be used to remove the disk write speed as a variable when testing encoding performance."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "imagefiletype": {
                        "label": "Image File Type",
                        "summary": "Choose what file type to use when Type is set to Image."
                    },
                    "quality": {
                        "label": "Quality",
                        "summary": "Select the quality of the movie compression. NOTE: Some codecs can not output lossless compression."
                    },
                    "type": {
                        "label": "Type",
                        "summary": "Output either a movie or still image."
                    },
                    "file": {
                        "label": "File",
                        "summary": "Sets the path and filename of the movie file that is saved out. QuickTime movies should be saved with the .mov file extension."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "pause": {
                        "label": "Pause",
                        "summary": "Pauses the recording."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "videocodec": {
                        "label": "Video Codec",
                        "summary": "Select the video compression codec used to encode the movie."
                    },
                    "entropymode": {
                        "label": "Entropy Mode",
                        "summary": "Select the EntropyMode to use for H.264."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "profile": {
                        "label": "Profile",
                        "summary": "Select the H.264 profile to use."
                    },
                    "avgbitrate": {
                        "label": "Average Bitrate (Kb/s)",
                        "summary": "Set the average bitrate target for the encoding."
                    },
                    "keyframeinterval": {
                        "label": "Keyframe Interval",
                        "summary": "Set the number of frames between key-frames (I-frames) while encoding."
                    }
                },
                "summary": "The Movie File Out TOP saves a TOP stream out to a QuickTime or MP4 (.mp4) movie in a variety of formats, plus the Animation, Cineform and Hap Q video codecs."
            },
            "subtractTOP": {
                "label": "Subtract",
                "parameters": {
                    "tunit": {
                        "label": "Translate Units",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "size": {
                        "label": "Fixed Layer",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "extend": {
                        "label": "Extend Overlay",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": ""
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "punit": {
                        "label": "Pivot Units",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "prefit": {
                        "label": "Pre-Fit Overlay",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    }
                },
                "summary": "The Subtract TOP composites the input images together by subtracting the pixel values."
            },
            "oculusriftTOP": {
                "label": "Oculus Rift",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "debugperfhud": {
                        "label": "Debug HUD",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Controls if an image is being output to the device."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Oculus Rift TOP connects to an Oculus Rift device and applies a distortion to input textures based on the device's calibration parameters."
            },
            "transformTOP": {
                "label": "Transform",
                "parameters": {
                    "tunit": {
                        "label": "Translate Unit",
                        "summary": ""
                    },
                    "extend": {
                        "label": "Extend",
                        "summary": "This parameter determines what happens at the edges of the tiles."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "tilev": {
                        "label": "Tile V",
                        "summary": "The first Tile V parameter sets the number of tiles to repeat on the botttom of the source image. The second Tile V parameter sets the number of tiles to repeat on the top of the source image. The image must be scaled down (using the Scale parameters on the Transform page) to view these tiles."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The two fields for Translate allows you to specify transforms in x and y axes."
                    },
                    "punit": {
                        "label": "Pivot Unit",
                        "summary": ""
                    },
                    "growshrink": {
                        "label": "Grow / Shrink",
                        "summary": "Grow/Shrink is a scale that is given in pixel units. A positive value will cause the image to grow that many pixels while a negative will cause the image to shrink that many pixels."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your TOP will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block."
                    },
                    "compover": {
                        "label": "Comp Over Background Color",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which the TOP scales and rotates. Altering the pivot point of a TOP produces different results depending on the transformation performed on the TOP image.  For example, during a scaling operation, if the pivot point of a TOP image is located at -1,-1 and you wanted to scale the image by 0.5 (reduce its size by 50%), then the TOP would scale toward the pivot point and appear to slide down and to the left."
                    },
                    "mipmapbias": {
                        "label": "Mipmap Bias",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "limittiles": {
                        "label": "Limit Tiles",
                        "summary": ""
                    },
                    "tileu": {
                        "label": "Tile U",
                        "summary": "The first Tile U parameter sets the number of tiles to repeat on the left of the source image. The second Tile U parameter sets the number of tiles to repeat on the right of the source image. The image must be scaled down (using the Scale parameters on the Transform page) to view these tiles."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "bgcolor": {
                        "label": "Backgound Color",
                        "summary": "Color applied behind the foreground image. The background is visible when the image is translated or scaled down. Try scaling an image down 50% in size (Scale = 0.5,0.5) and setting the background color."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The two fields for Scale allows you to specify transforms in x and y axes."
                    },
                    "rotate": {
                        "label": "Rotate",
                        "summary": "The field for rotation allows you to specify the amount of rotation of the image."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    }
                },
                "summary": "The Transform TOP applies 2D transformations to a TOP image like translate, scale, rotate, and multi-repeat tiling."
            },
            "cropTOP": {
                "label": "Crop",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "croptopunit": {
                        "label": "Crop Top Unit",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "extend": {
                        "label": "Extend",
                        "summary": ""
                    },
                    "cropbottomunit": {
                        "label": "Crop Bottom Unit",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "cropright": {
                        "label": "Crop Right",
                        "summary": "Positions the right edge of the image."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "cropbottom": {
                        "label": "Crop Bottom",
                        "summary": "Positions the bottom edge of the image."
                    },
                    "cropleft": {
                        "label": "Crop Left",
                        "summary": "Positions the left edge of the image."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "croptop": {
                        "label": "Crop Top",
                        "summary": "Positions the top edge of the image."
                    },
                    "croprightunit": {
                        "label": "Crop Right Unit",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "cropleftunit": {
                        "label": "Crop Left Unit",
                        "summary": ""
                    }
                },
                "summary": "The Crop TOP crops an image by defining the position of the left, right, bottom, and top edges of the image."
            },
            "outTOP": {
                "label": "Out",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "label": {
                        "label": "Label",
                        "summary": "Creates a pop-up label when the cursor rolls over this Component output."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Out TOP is used to create a TOP output in a Component."
            },
            "outsideTOP": {
                "label": "Outside",
                "parameters": {
                    "tunit": {
                        "label": "Translate Units",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "size": {
                        "label": "Fixed Layer",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "extend": {
                        "label": "Extend Overlay",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": ""
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "punit": {
                        "label": "Pivot Units",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "prefit": {
                        "label": "Pre-Fit Overlay",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    }
                },
                "summary": "The Outside TOP places Input1 'outside' Input2."
            },
            "mathTOP": {
                "label": "Math",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "preop": {
                        "label": "Channel Pre OP",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "op": {
                        "label": "Operation",
                        "summary": "The math operation performed."
                    },
                    "postoff": {
                        "label": "Post-Add",
                        "summary": ""
                    },
                    "preoff": {
                        "label": "Pre-Add",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputchannels": {
                        "label": "Combine Channels Output",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "chanop": {
                        "label": "Combine Channels",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "gain": {
                        "label": "Multiply",
                        "summary": "Multiplies the RGB color values by the alpha values in the image."
                    },
                    "postop": {
                        "label": "Channel Post OP",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "torange": {
                        "label": "To Range",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "fromrange": {
                        "label": "From Range",
                        "summary": ""
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "integer": {
                        "label": "Integer",
                        "summary": ""
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "inputmask": {
                        "label": "Combine Channels Input",
                        "summary": ""
                    }
                },
                "summary": "The Math TOP performs specific mathematical operations on the pixels of the input image."
            },
            "renderpassTOP": {
                "label": "Render Pass",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "uniname4": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "cleardepth": {
                        "label": "Clear Depth Buffer",
                        "summary": "Clears the values that are currently in the depth buffer (coming from the TOP that is wired to the input of this node)."
                    },
                    "sampler4": {
                        "label": "Sampler Name",
                        "summary": ""
                    },
                    "uniname3": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value0": {
                        "label": "Value",
                        "summary": "Clears the values that are currently in the depth buffer (coming from the TOP that is wired to the input of this node)."
                    },
                    "uniname0": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "cropbottomunit": {
                        "label": "Crop Bottom Unit",
                        "summary": ""
                    },
                    "cropleft": {
                        "label": "Crop Left",
                        "summary": ""
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Front Faces, Back Faces, Both Faces, Neither. Will cause the render to avoid rendering certain polygon faces depending on their orientation to the camera. Refer to Back-Face Culling for more information."
                    },
                    "value1": {
                        "label": "Value",
                        "summary": "Clears the values that are currently in the depth buffer (coming from the TOP that is wired to the input of this node)."
                    },
                    "depthpeel": {
                        "label": "Depth Peel",
                        "summary": ""
                    },
                    "croprightunit": {
                        "label": "Crop Right Unit",
                        "summary": ""
                    },
                    "croptopunit": {
                        "label": "Crop Top Unit",
                        "summary": ""
                    },
                    "top2": {
                        "label": "TOP",
                        "summary": ""
                    },
                    "sampler1": {
                        "label": "Sampler Name",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "renderinput": {
                        "label": "Render/RenderPass TOP",
                        "summary": "The network path to the Render TOP used as input. This parameter can be used as an alternate to connecting a Render or Render Pass TOP to the Render Pass's input connector. Makes it easier to select a render from another network."
                    },
                    "value4": {
                        "label": "Value",
                        "summary": "Clears the values that are currently in the depth buffer (coming from the TOP that is wired to the input of this node)."
                    },
                    "top1": {
                        "label": "TOP",
                        "summary": ""
                    },
                    "drawdepthonly": {
                        "label": "Draw Depth Only",
                        "summary": "This will cause the render to only draw depth values to the depth buffer. No color values will be created. To make use of the depth buffer, use the Depth TOP."
                    },
                    "coloroutputneeded": {
                        "label": "Color Output Needed",
                        "summary": "This is an optimization if you don't actually need the color result from this pass. Turning this off avoids a copy from the offscreen render buffer to the TOP's texture. When anti-aliasing is enabled turning this off will also avoid 'resolving' the anti-aliasing."
                    },
                    "sampler3": {
                        "label": "Sampler Name",
                        "summary": ""
                    },
                    "dither": {
                        "label": "Dither",
                        "summary": ""
                    },
                    "sampler0": {
                        "label": "Sampler Name",
                        "summary": ""
                    },
                    "orderindtrans": {
                        "label": "Order-Independent Transparency",
                        "summary": "Refer to to the same parameter in the Render TOPs help page."
                    },
                    "allowbufblending": {
                        "label": "Allow Blending for Extra Buffers",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "transpeellayers": {
                        "label": "Transparency/Peel Layers",
                        "summary": "Refer to to the same parameter in the Render TOPs help page."
                    },
                    "top4": {
                        "label": "TOP",
                        "summary": "The network path to the Render TOP used as input. This parameter can be used as an alternate to connecting a Render or Render Pass TOP to the Render Pass's input connector. Makes it easier to select a render from another network."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Enables rendering; 1 = on, 0 = off."
                    },
                    "alphatocoverage": {
                        "label": "Alpha-to-Coverage",
                        "summary": "This is a feature that allows you to control how the anti-alias is resolved by using the pixel's alpha value. Say the anti-alias setting is set to 4x. This means that for each final pixel color, it will blend the color values of 4 pixels from the anti-alias buffer. When Alpha-to-Coverage is enabled, the alpha value controls how many pixel samples will be used to create the final pixel value. If your alpha value is 0.75, then 3 of the 4 pixels"
                    },
                    "sampler2": {
                        "label": "Sampler Name",
                        "summary": ""
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "This feature pushes the polygons back into space a tiny fraction. This is useful when you are rendering two polygons directly ontop of each other and are experiencing Z-Fighting. Refer to Polygon Depth Offset for more information. This is also an important feature when doing shadows."
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": "Refer to to the same parameter in the Render TOPs help page."
                    },
                    "geometry": {
                        "label": "Geometry",
                        "summary": "Specifies which Geometry will be included in the rendered scene."
                    },
                    "overdrawlimit": {
                        "label": "Overdraw Limit",
                        "summary": "This value quantizes the outputted color value to some # of overdraws. Refer to the Early Depth-Test for more information."
                    },
                    "top0": {
                        "label": "TOP",
                        "summary": "The network path to the Render TOP used as input. This parameter can be used as an alternate to connecting a Render or Render Pass TOP to the Render Pass's input connector. Makes it easier to select a render from another network."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "cropright": {
                        "label": "Crop Right",
                        "summary": ""
                    },
                    "lights": {
                        "label": "Lights",
                        "summary": "Specifies which Lights will be used to render the scene."
                    },
                    "cropbottom": {
                        "label": "Crop Bottom",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "value3": {
                        "label": "Value",
                        "summary": "Clears the values that are currently in the depth buffer (coming from the TOP that is wired to the input of this node)."
                    },
                    "croptop": {
                        "label": "Crop Top",
                        "summary": ""
                    },
                    "cropleftunit": {
                        "label": "Crop Left Unit",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": "Refer to to the same parameter in the Render TOPs help page."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "value2": {
                        "label": "Value",
                        "summary": "Clears the values that are currently in the depth buffer (coming from the TOP that is wired to the input of this node)."
                    },
                    "top3": {
                        "label": "TOP",
                        "summary": ""
                    },
                    "overdraw": {
                        "label": "Display Overdraw",
                        "summary": "This feature visually shows the overdraw in the scene. Refer to the Early Depth-Test article for more information. In particular the Analyzing Overdraw section."
                    },
                    "cleartocamcolor": {
                        "label": "Clear to Camera Color",
                        "summary": "Clears the values that are currently in the color buffer (coming from the TOP that is wired to the input of this node)."
                    },
                    "overridemat": {
                        "label": "Override Material",
                        "summary": "This allows you to specific a material that will be applied to every Geometry that is rendered in the Render TOP. It is useful for pre-processing passes where we are outputting infoformation about the geometry rather then lighting them and outputting RGB."
                    },
                    "uniname2": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "camera": {
                        "label": "Camera",
                        "summary": "Specifies which Camera to look through when rendering the scene."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "uniname1": {
                        "label": "Uniform Name",
                        "summary": ""
                    }
                },
                "summary": "The Render Pass TOP is used along with a Render TOP to achieve multipass rendering."
            },
            "packTOP": {
                "label": "Pack",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "packtype": {
                        "label": "Pack Type",
                        "summary": "Controls the direction and behavior of the packing/unpacking."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Pack TOP can be used to pack 32-bit floating point values into a larger 8-bit texture, so it can saved in a lossless format such as .tiff or Animation codec."
            },
            "feedbackTOP": {
                "label": "Feedback",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "top": {
                        "label": "Target TOP",
                        "summary": "Specifies a TOP for feedback to use as its source when activated."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "Activates feedback when set to 0. Disables feedback when set to 1. When disabled, the Feedback TOP passes thru the image connected to its input."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Feedback TOP can be used to create feedback effects in TOPs."
            },
            "fitTOP": {
                "label": "Fit",
                "parameters": {
                    "tunit": {
                        "label": "Translate Unit",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The two fields for Translate and Scale allows you to specify transforms in x and y axes. The field for Rotate allow you to specify the amount of rotation."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your TOP will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which the TOP scales and rotates. Altering the pivot point of a TOP produces different results depending on the transformation performed on the TOP image.  For example, during a scaling operation, if the pivot point of a TOP image is located at -1,-1 and you wanted to scale the image by 0.5 (reduce its size by 50%), then the TOP would scale toward the pivot point and appear to slide down and to the left."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "punit": {
                        "label": "Pivot Unit",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "Color applied behind the foreground image. The background is visible when the image is translated or scaled down. Try scaling an image down 50% in size (Scale = 0.5,0.5) and setting the background color."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "fit": {
                        "label": "Fit",
                        "summary": "Determines how the input is fit to the specified resolution."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    }
                },
                "summary": "The Fit TOP re-sizes its input to the resolution set on the Common Page using the method specified in the Fit parameter menu."
            },
            "addTOP": {
                "label": "Add",
                "parameters": {
                    "tunit": {
                        "label": "Translate Units",
                        "summary": "Sets the units used in the Translate parameter."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "Translates the overlay layer in x and y."
                    },
                    "size": {
                        "label": "Fixed Layer",
                        "summary": "The selected input will become the fixed layer and the other input will be the overlay. This does not change the order of the composite (Input1 + Input2), only which layer is considered fixed and which layer is adjustable by the parameters on the Transform page. The resolution and aspect ratio of the Fixed Layer is used as the composite's final resolution and aspect ratio unless manually on the Common Page."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "extend": {
                        "label": "Extend Overlay",
                        "summary": "sets the extend (or repeat) conditions of the overlay layer. This parameter determines what happens at the edges of the overlay layer."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": ""
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "Scales the overlay layer in x and y."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "punit": {
                        "label": "Pivot Units",
                        "summary": "Sets the units used in the Pivot parameter."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "prefit": {
                        "label": "Pre-Fit Overlay",
                        "summary": "determines how the overlay layer (overlay layer is the input that is NOT the Fixed Layer) fills the composite."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "Allows you to define the point about which the overlay layer scales and rotates. Altering the pivot point produces different results depending on the Transform Order."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "Rotates the overlay layer. Increasing values rotate clockwise, decreasing values rotate counter-clockwise."
                    }
                },
                "summary": "The Add TOP composites the input images together by adding the pixel values."
            },
            "thresholdTOP": {
                "label": "Threshold",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "soften": {
                        "label": "Soften",
                        "summary": "The rate of falloff at the threshold value. As this value set set larger, pixels near the threshold value will be set to something between 0-1."
                    },
                    "alpha": {
                        "label": "Alpha",
                        "summary": "This parameter determines the output for the alpha channel."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "threshold": {
                        "label": "Threshold",
                        "summary": "Using the function selected in the Comparator parameter, any pixel that satisfies this value will be set to 0. For example, if Comparator = Less then any pixel less than this Threshold value will be set to 0."
                    },
                    "rgb": {
                        "label": "RGB",
                        "summary": "Determines which part of the image used to calculate threshold. This parameter determines the output for the R, G, and B channels."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "comparator": {
                        "label": "Comparator",
                        "summary": "Select the operation to compare the Threshold parameter to."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Threshold TOP creates a matte with pixel values set to 0 for pixels below the threshold value, and 1 for pixels greater than or equal to the threshold value."
            },
            "stypeTOP": {
                "label": "Stype",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "chop": {
                        "label": "CHOP Node",
                        "summary": "Reference to a CHOP that outputs the lens distortion parameters. This can be a Stype CHOP or another operator that has the channels k1, k2, centerx, centery, pawidth and paheight defined. See Stype CHOP for more information on these channels."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "padding": {
                        "label": "Padding",
                        "summary": "Only enabled when the CHOP Node parameter does not reference a Stype CHOP. This parameter indicates if any padding has been provided on the source image and then crops the output accordingly. See the Stype CHOP for more information on padding."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Stype TOP performs simulated lens distortion using channels from a connected CHOP."
            },
            "syphonspoutinTOP": {
                "label": "Syphon Spout In",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "usespoutactivesender": {
                        "label": "Use Spout Active Sender",
                        "summary": "Spout has a external utility that allows selecting from the list of senders running, and flagging one as the global 'Active' sender. Enabling this parameter will make the node use that sender instead of the one listed in the 'Sender Name' parameter."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "sendername": {
                        "label": "Sender Name",
                        "summary": "The name of the Syphon/Spout sender you wish to receive."
                    }
                },
                "summary": "The Syphon Spout In TOP will obtain its texture image via shared memory from other applications that support the Spout framework on Windows or Syphon on macOS."
            },
            "substanceTOP": {
                "label": "Substance",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "graph": {
                        "label": "Graph",
                        "summary": "Specify which graph in the .sbsar file to use. See Substance's Graph Help for more details."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "file": {
                        "label": "Substance Designer File",
                        "summary": "Specify the .sbsar material file from Substance Designer."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "output": {
                        "label": "Output",
                        "summary": "Choose what the output of the TOP will be. Grid Preview can be used to see all the texture maps inside the material at once."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "reloadconfig": {
                        "label": "Reload File",
                        "summary": "Reloads the file from disk."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    }
                },
                "summary": "There is a tight integration between TouchDesigner and Allegorithmic's Substance Designer, a material creation package that is also node-based and has extensive material libraries."
            },
            "embossTOP": {
                "label": "Emboss",
                "parameters": {
                    "strength": {
                        "label": "Strength",
                        "summary": "The depth of the emboss. Higher values make the output look more deeply etched."
                    },
                    "midpoint": {
                        "label": "Midpoint",
                        "summary": "Sets the greyscale color of the midpoint of the emboss. This is the color of any part in the image that is not raised or depressed."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "direction": {
                        "label": "Direction",
                        "summary": "Controls the position of the light source, changing the direction of the highlights and shadows in the embossed output image."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "Determines what pixels to use when calculating the slope at each pixel in the image."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "offset": {
                        "label": "Sample Step",
                        "summary": "When sampling the image, this determines the distance from each pixel to the sample pixel. When units are set to pixels, it is the number of pixels away from the current pixel which is sampled to find edges. A Sample Step of 3 would sample pixels 3 pixels away to look for edges."
                    },
                    "offsetunit": {
                        "label": "Sample Step Unit",
                        "summary": ""
                    },
                    "select": {
                        "label": "Select",
                        "summary": "This menu selects how the edges in the image are found. The edges will appear raised or depressed in the output image depending on their slope."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Emboss TOP creates the effect that an image is embossed in a thin sheet of metal."
            },
            "scalabledisplayTOP": {
                "label": "Scalable Display",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "near": {
                        "label": "Near",
                        "summary": "Sets the near value."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "far": {
                        "label": "Far",
                        "summary": "Sets the far value."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "configfile": {
                        "label": "Configuration File",
                        "summary": "Specify the location of the Scalable Displays Calibration Data file."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Scalable Display TOP lets you load calibration data retrieved from running the Scalable Display Calibration Software."
            },
            "overTOP": {
                "label": "Over",
                "parameters": {
                    "tunit": {
                        "label": "Translate Units",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "size": {
                        "label": "Fixed Layer",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "extend": {
                        "label": "Extend Overlay",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": ""
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "punit": {
                        "label": "Pivot Units",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "prefit": {
                        "label": "Pre-Fit Overlay",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    }
                },
                "summary": "The Over TOP places Input1 'over' Input2."
            },
            "tileTOP": {
                "label": "Tile",
                "parameters": {
                    "reflecty": {
                        "label": "Reflect Y",
                        "summary": "Reflects the tiles in Y. NOTE: Must have Tile X set to 2."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "flop": {
                        "label": "Transpose",
                        "summary": "Similar to performing a flop on the image (See Flip TOP) without changing the resolution. It swaps the position of the bottom-right corner with the upper-left corner, while maintaining the original resolution and aspect ratio."
                    },
                    "croptopunit": {
                        "label": "Crop Top Unit",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "repeatx": {
                        "label": "Repeat X",
                        "summary": "Number of tiles in X direction."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "croprightunit": {
                        "label": "Crop Right Unit",
                        "summary": ""
                    },
                    "cropbottomunit": {
                        "label": "Crop Bottom Unit",
                        "summary": ""
                    },
                    "flipx": {
                        "label": "Flip X",
                        "summary": "Flips the image in X."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "cropright": {
                        "label": "Crop Right",
                        "summary": "Positions the right edge of the image."
                    },
                    "overlapu": {
                        "label": "Overlap U",
                        "summary": "Blends the edges together on the right and left edges of the tiles."
                    },
                    "cropbottom": {
                        "label": "Crop Bottom",
                        "summary": "Positions the bottom edge of the image."
                    },
                    "cropleft": {
                        "label": "Crop Left",
                        "summary": "Positions the left edge of the image."
                    },
                    "overlapvunit": {
                        "label": "Overlap V Unit",
                        "summary": ""
                    },
                    "cropleftunit": {
                        "label": "Crop Left Unit",
                        "summary": ""
                    },
                    "croptop": {
                        "label": "Crop Top",
                        "summary": "Positions the top edge of the image."
                    },
                    "overlapv": {
                        "label": "Overlap V",
                        "summary": "Blends the edges together on the bottom and top edges of the tiles."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "reflectx": {
                        "label": "Reflect X",
                        "summary": "Reflects the tiles in X. NOTE: Must have Tile Y set to 2."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "overlapuunit": {
                        "label": "Overlap U Unit",
                        "summary": ""
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "repeaty": {
                        "label": "Repeat Y",
                        "summary": "Number of tiles in Y direction."
                    },
                    "flipy": {
                        "label": "Flip Y",
                        "summary": "Flips the image in Y."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    }
                },
                "summary": "The Tile TOP tiles images in a repeating pattern."
            },
            "edgeTOP": {
                "label": "Edge",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "alphaoutputmenu": {
                        "label": "Alpha",
                        "summary": "This menu determines how the alpha channel is output from the Edge TOP."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "compinput": {
                        "label": "Comp Over Input",
                        "summary": "Turning this checkbox on will composite the edges over the input image."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "strength": {
                        "label": "Strength",
                        "summary": "Higher gain values will make more edge details appear."
                    },
                    "edgecolor": {
                        "label": "Edge Color",
                        "summary": "The color of the edges in RGBA."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "offset": {
                        "label": "Sample Step",
                        "summary": "When sampling the image, this determines the distance from each pixel to the sample pixel. When units are set to pixels, it is the number of pixels away from the current pixel which is sampled to find edges. A Sample Step of 3 would sample pixels 3 pixels away to look for edges."
                    },
                    "offsetunit": {
                        "label": "Sample Step Unit",
                        "summary": ""
                    },
                    "select": {
                        "label": "Select",
                        "summary": "This menu determines how the edges are pulled from the image."
                    },
                    "blacklevel": {
                        "label": "Black Level",
                        "summary": "Applies a black level adjustment to the input image before finding the edges."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    }
                },
                "summary": "The Edge TOP finds edges in an image and highlights them."
            },
            "flipTOP": {
                "label": "Flip",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "flop": {
                        "label": "Flop",
                        "summary": "Flops the image. Flop is a combination of a flip and a rotation. The X resolution becomes the Y resolution. The Y becomes the X.  * No Flop - No flop performed. * Bottom Left - The image is flipped in X and then rotated 90 degrees clockwise. * Top Left - The image is flipped in X and then rotated 90 degrees counter-clockwise."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "flipy": {
                        "label": "Flip Y",
                        "summary": "Flips the image in Y."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "flipx": {
                        "label": "Flip X",
                        "summary": "Flips the image in X."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Flip TOP will Flip an image in X and/or Y."
            },
            "differenceTOP": {
                "label": "Difference",
                "parameters": {
                    "tunit": {
                        "label": "Translate Units",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "size": {
                        "label": "Fixed Layer",
                        "summary": ""
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "extend": {
                        "label": "Extend Overlay",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": ""
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "punit": {
                        "label": "Pivot Units",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "prefit": {
                        "label": "Pre-Fit Overlay",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    }
                },
                "summary": "The Difference TOP performs a difference composite on its two input images."
            },
            "levelTOP": {
                "label": "Level",
                "parameters": {
                    "stepping": {
                        "label": "Apply Stepping",
                        "summary": ""
                    },
                    "opacity": {
                        "label": "Opacity",
                        "summary": "Adjust the opacity, or transparency, of the image."
                    },
                    "clampinput": {
                        "label": "Clamp Input to [0-1]",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "lowb": {
                        "label": "Low B",
                        "summary": "Clamps the minimum level of the blue channel."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "lowr": {
                        "label": "Low R",
                        "summary": "Clamps the minimum level of the red channel."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "highr": {
                        "label": "High R",
                        "summary": "Clamps the maximum level of the red channel."
                    },
                    "gamma2": {
                        "label": "Gamma 2",
                        "summary": "A second gamma correction that is added after the Range, RGBA, and Step page adjustments have been applied."
                    },
                    "gamma1": {
                        "label": "Gamma 1",
                        "summary": "The Gamma parameter applies a gamma correction to the image. Gamma is the relationship between the brightness of a pixel as it appears on the screen, and the numerical value of that pixel. This is often represented by a gamma curve. The difference between brightness and gamma is that gamma also affects the ratio of red to green to blue. A straight, linear gamma curve with a value of 1 means no change."
                    },
                    "contrast": {
                        "label": "Contrast",
                        "summary": "Contrast applies a scale factor (gain) to the RGB channels. Increasing contrast will brighten the light areas and darken the dark areas of the image, making the difference between the light and dark areas of the image stronger."
                    },
                    "outhigh": {
                        "label": "Out High",
                        "summary": "Clamps pixel values to this value or lower."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "inlow": {
                        "label": "In Low",
                        "summary": "Any pixel below this value appears black."
                    },
                    "clamphigh2": {
                        "label": "Clamp High",
                        "summary": "Clamps the image's maximum value. (value as in hue, saturation, and value)"
                    },
                    "brightness1": {
                        "label": "Brightness 1",
                        "summary": "Increases or decreases the brightness of an image. Brightness can be considered the arithmetic mean of the RGB channels. The Brightness parameter adds or subtracts an offset into the R, G, and B channels. Low brightness will result in dark tones, while high brightness will wash the color out towards white."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "blacklevel": {
                        "label": "Black Level",
                        "summary": "Any pixel with a value less than or equal to this will be black."
                    },
                    "lowa": {
                        "label": "Low A",
                        "summary": "Clamps the minimum level of the alpha channel."
                    },
                    "inhigh": {
                        "label": "In High",
                        "summary": "Any pixel above this value appears white."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "clamplow2": {
                        "label": "Clamp Low",
                        "summary": "Clamps the image's minimum value. (value as in hue, saturation, and value)"
                    },
                    "higha": {
                        "label": "High A",
                        "summary": "Clamps the maximum level of the alpha channel."
                    },
                    "brightness2": {
                        "label": "Brightness 2",
                        "summary": "A second brightness adjustment that is added after the Range, RGBA, and Step page adjustments have been applied."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "lowg": {
                        "label": "Low G",
                        "summary": "Clamps the minimum level of the green channel."
                    },
                    "clamplow": {
                        "label": "Clamp Low",
                        "summary": "Clamps the image's minimum value. (value as in hue, saturation, and value)"
                    },
                    "clamp": {
                        "label": "Clamp",
                        "summary": "Clamps pixel values to this value or lower."
                    },
                    "highg": {
                        "label": "High G",
                        "summary": "Clamps the maximum level of the green channel."
                    },
                    "soften": {
                        "label": "Soften",
                        "summary": "Softens or blends the boundaries between steps."
                    },
                    "threshold": {
                        "label": "Threshold",
                        "summary": "Offsets the position of the step boundaries."
                    },
                    "highb": {
                        "label": "High B",
                        "summary": "Clamps the maximum level of the blue channel."
                    },
                    "clamphigh": {
                        "label": "Clamp High",
                        "summary": "Clamps the image's maximum value. (value as in hue, saturation, and value)"
                    },
                    "invert": {
                        "label": "Invert",
                        "summary": "Inverts the colors in the image. Black becomes white, white becomes black. Colors invert across the color wheel, so red becomes cyan, blue becomes yellow, green becomes magenta, and so on."
                    },
                    "stepsize": {
                        "label": "Step Size",
                        "summary": "Posterizes the image into bands or stripes. Number of bands equal to the inverse of this parameter (i.e., 0.25 = 4 bands). Use a default Ramp TOP to easily see this parameter's effect."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "outlow": {
                        "label": "Out Low",
                        "summary": "Clamps pixel values to this value or higher."
                    }
                },
                "summary": "The Level TOP adjusts image contrast, brightness, gamma, black level, color range, quantization, opacity and more."
            },
            "videostreamoutTOP": {
                "label": "Video Stream Out",
                "parameters": {
                    "forceidr": {
                        "label": "Force IDR",
                        "summary": "For debugging, this will force the server to create a new video keyframe to send to all the clients. If clients aren't getting proper image this can be used to attempt to fix it. If you need to use this parameter please report the case to support@derivative.ca.  FPS <code>port<"
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "port": {
                        "label": "Network Port",
                        "summary": "The port the server should listen on. Multiple Video Stream Out TOPs can use the same port as long as each has a unique Stream Name."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "fps": {
                        "label": "FPS",
                        "summary": "The FPS to send video at."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "audiochop": {
                        "label": "Audio CHOP",
                        "summary": "A timesliced audio source to send along with the video. Audio will be resampled to 44100Hz before being encoded into MP3."
                    },
                    "numslices": {
                        "label": "Num H264 Slices per Frame",
                        "summary": "This controls how many pieces (slices) each H.264 frame is separated into. Some decoders are able to decode multiple slices simultaneously so setting this to a value above 1 allows those decoders to run more efficiently."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "streamname": {
                        "label": "Stream Name",
                        "summary": "The name of the stream for this node. This name is what comes after the / in the URL after the ipaddress:port combination."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Controls if the server is active or not. If this is Off then the port this server uses will not be tied up."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "quality": {
                        "label": "Quality",
                        "summary": "The quality level of the encoding."
                    },
                    "bitrate": {
                        "label": "Bitrate (Mb/s)",
                        "summary": "The target bitrate for the encoding. This is specified in Mb/s (megabits/second)."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "multicast": {
                        "label": "Multi-Cast",
                        "summary": "Controls if RTSP server sends its video out using unicast or multicast UDP packets."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "profile": {
                        "label": "Profile",
                        "summary": "The H.264 profile to use to encode the frames. Some decoders can only support H.264 encoder at certain profiles."
                    }
                },
                "summary": "The Video Stream Out TOP creates an RTSP server to send H.264 video and MP3 audio across the network."
            },
            "mirrorTOP": {
                "label": "Mirror",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "flipy": {
                        "label": "Flip Y",
                        "summary": "Flips the image in Y."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "extend": {
                        "label": "Extend",
                        "summary": "This parameter determines what happens at the edge of the image."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "rotate": {
                        "label": "Rotate",
                        "summary": "Rotates a copy of the image around the pivot point specified above."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "flipx": {
                        "label": "Flip X",
                        "summary": "Flips the image in X."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "pivotunit": {
                        "label": "Pivot Unit",
                        "summary": "Specify the units used to position the pivot point."
                    },
                    "pivot": {
                        "label": "Pivot",
                        "summary": "The pivot point determines where in the image the Rotate parameter will rotate around."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "Mirrors part of an image on top of itself."
            },
            "projectionTOP": {
                "label": "Projection",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "output": {
                        "label": "Output",
                        "summary": "Select output format from the menu."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "fov": {
                        "label": "FOV Angle",
                        "summary": "Only enabled in Fish-Eye output mode to specify the field of view of the Fish-Eye camera."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "input": {
                        "label": "Input",
                        "summary": "At this time the only option is a Cube Map input. You can generate a Cube Map by rendering one using the Render TOP, or converting 2D images into one using the Cube Map TOP."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Projection TOP takes a Cube Map created with a Render TOP and converts that to a fisheye projection suitable for domes, and a \\u201cequirectangular\\\" projection, where u-v is latitude-longitude, suitable for spheres."
            },
            "notchTOP": {
                "label": "Notch",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "index": {
                        "label": "Index",
                        "summary": "The index of the playback when Index mode is selected."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "play": {
                        "label": "Play",
                        "summary": "Enable playback of the block. When disabled and in Sequential mode the playback will be paused."
                    },
                    "purge": {
                        "label": "Purge VRAM",
                        "summary": "Purge Video RAM used by the block."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "layer": {
                        "label": "Layer",
                        "summary": "The layer used as the output to the Notch TOP."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "playmode": {
                        "label": "Play Mode",
                        "summary": "A menu to specify the method used for playback of the block."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "block": {
                        "label": "Block",
                        "summary": "Specify the .dfxdll file (ie. Notch Block)."
                    },
                    "init": {
                        "label": "Initialize",
                        "summary": "Initialize the playback of the block. This will reset it to the start, but not move forward with playback."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "Start the playback of the block. This will reset it to the start and begin playback."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "speed": {
                        "label": "Speed",
                        "summary": "The speed of the playback."
                    },
                    "reloadblock": {
                        "label": "Reload Block",
                        "summary": "Reloads the block."
                    }
                },
                "summary": ""
            },
            "lookupTOP": {
                "label": "Lookup",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "darkuvunit": {
                        "label": "Dark UV Unit",
                        "summary": ""
                    },
                    "darkuv": {
                        "label": "Dark UV",
                        "summary": "Set the UV position to use for dark end of the lookup table. In the original image connected to the first input, any pixel with a value of (0,0,0) will be replaced by the value found at this UV position in the image connected to the second input."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "displaylookup": {
                        "label": "Output Lookup",
                        "summary": "Outputs the lookup table itself, instead of replacing the color values of the first input."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "lightuv": {
                        "label": "Light UV",
                        "summary": "Set the UV position to use for light end of the lookup table. In the original image connected to the first input, any pixel with a value of (1,1,1) will be replaced by the value found at this UV position in the image connected to the second input."
                    },
                    "chop": {
                        "label": "CHOP",
                        "summary": "Reference the CHOP to use to define the RGBA (A is optional) values in the lookup table."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "lightuvunit": {
                        "label": "Light UV Unit",
                        "summary": ""
                    },
                    "usesourceluminance": {
                        "label": "Use Source Luminance",
                        "summary": "Instead of doing individual lookups for each of the R, G, B, and A channels in the first input, it will take the luminance of the first input instead and output the lookup value of that, which means R, G and B will also get the same output value."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "Choose to use a line from the 2nd input (defined using UV coordinates) or CHOP values to define the lookup table."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "clampchopvalues": {
                        "label": "Clamp CHOP Values",
                        "summary": "Clamps CHOP values between 0-1."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    }
                },
                "summary": "The Lookup TOP replaces color values in the TOP image connected to its first input with values derived from a lookup table created from its second intput or a lookup table created using the CHOP parameter."
            },
            "hsvadjustTOP": {
                "label": "HSV Adjust",
                "parameters": {
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "startcolor": {
                        "label": "Start Color",
                        "summary": "The start color is the hue that the HSV adjustment is centered around. When adjusting a small hue range, this is the color that will be altered. In the example image above, the Start Color color is cyan with a hue value of 180."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "huefalloff": {
                        "label": "Hue Falloff",
                        "summary": "This controls the falloff from the Hue Range. Higher values give more falloff, blending the hue range softly from hues that are adjusted to hues that are not."
                    },
                    "valuefalloff": {
                        "label": "Value Falloff",
                        "summary": "This controls the falloff from the Value Range selected."
                    },
                    "saturationfalloff": {
                        "label": "Saturation Falloff",
                        "summary": "This controls the falloff from the Saturation Range selected."
                    },
                    "huerange": {
                        "label": "Hue Range",
                        "summary": "This is the range of color from the Start Color that will be adjusted. A range of 1 will only adjust the colors that are the same as the start color. A range of 360 will adjust all colors. For example, a range of 20 and a Start Color of 180 will adjust colors in the hue range of 170-190."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "hueoffset": {
                        "label": "Hue Offset",
                        "summary": "Adjust the hues selected above. The Hue Offset ranges from 0 to 360. For example, if the initial pixel color is 180 then a Hue Offset of 100 will change the hue  of 180 (cyan) to be a hue of 280 (violet)."
                    },
                    "valuemult": {
                        "label": "Value Multiplier",
                        "summary": "Adjusts the values selected above. This will multiply the values specified by Value Range and Falloff parameters above."
                    },
                    "valuerange": {
                        "label": "Value Range",
                        "summary": "This is the range of value to adjust from the value of the Start Color. The Range is from 0 to 1."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "saturationmult": {
                        "label": "Saturation Multiplier",
                        "summary": "Adjusts the saturations selected above. This will multiply the saturation values specified by Saturation Range and Falloff parameters above. Setting this to 0 will reduce the selected saturation to 0, setting it to 1 will maintain the current saturation values, and setting it to 2 will make the selected saturation twice as saturated."
                    },
                    "saturationrange": {
                        "label": "Saturation Range",
                        "summary": "This is the range of saturation to adjust from the saturation of the Start Color. The Range is from 0 to 1."
                    }
                },
                "summary": "The HSV Adjust TOP adjust color values using hue, saturation, and value controls."
            },
            "viosoTOP": {
                "label": "Vioso",
                "parameters": {
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "projectorindex": {
                        "label": "Projector Index",
                        "summary": "Specify the index of the output projector."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "configfile": {
                        "label": "Configuration File",
                        "summary": "Specify the location of the .vwf file exported from Vioso Calibrator."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Vioso TOP lets you load calibration data retrieved from running the VIOSO Calibrator software."
            },
            "renderTOP": {
                "label": "Render",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "uniname4": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "sampler4": {
                        "label": "Sampler Name",
                        "summary": ""
                    },
                    "uniname3": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "value0": {
                        "label": "Value",
                        "summary": "The value(s) to give the uniform.  Depending on how the uniform is declared, only some of the values of the 4 available per parameter are passes to the shader. For example, if the uniform is declared as a vec2, then only the first 2 values are passes to the shader, the other 2 are ignored."
                    },
                    "cropbottomunit": {
                        "label": "Crop Bottom Unit",
                        "summary": ""
                    },
                    "top0": {
                        "label": "TOP",
                        "summary": "This is the TOP that will be referenced by the above sampler name above it.  Exposed by the + Button, texture sampling parameters:  Refer to the Texture Sampling Parameters article for more information on the parameters exposed by pressing the + button. The parameter prefix for each of the parameters is top0 up to top4."
                    },
                    "top3": {
                        "label": "TOP",
                        "summary": ""
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "cropbottom": {
                        "label": "Crop Bottom",
                        "summary": "Positions the bottom edge of the rendered image."
                    },
                    "cropleft": {
                        "label": "Crop Left",
                        "summary": "Positions the left edge of the rendered image."
                    },
                    "value1": {
                        "label": "Value",
                        "summary": ""
                    },
                    "depthpeel": {
                        "label": "Depth Peel",
                        "summary": "Depth peeling is a technique used as part of Order-Independent Transparency. This parameter enables rendering depth-peels, but without combining all the layers using blending to create order independent transparency. Instead is keeps all the layers separate and they can be retrieved using a Render Select TOP. Depth peeling is done by first rendering rendering geometry normally and saving that image and depth. Then another render is done but the closest pixels that were occluded by the previous pass are written to the color buffer instead. This can be done multiple times, each time peeling back farther into the scene. If you are rendering a sphere the first render will be the outside of the sphere, and the second peel layer will be the back-inside of the sphere."
                    },
                    "top4": {
                        "label": "TOP",
                        "summary": ""
                    },
                    "croptopunit": {
                        "label": "Crop Top Unit",
                        "summary": ""
                    },
                    "top2": {
                        "label": "TOP",
                        "summary": ""
                    },
                    "sampler1": {
                        "label": "Sampler Name",
                        "summary": ""
                    },
                    "multicamerahint": {
                        "label": "Multi-Camera Hint",
                        "summary": "Helps the Render TOP optimize rendering when multiple cameras are used. Controls the Multi-Camera Rendering behavior for this node."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "cropleftunit": {
                        "label": "Crop Left Unit",
                        "summary": ""
                    },
                    "value4": {
                        "label": "Value",
                        "summary": ""
                    },
                    "depthformat": {
                        "label": "Depth Buffer Format",
                        "summary": "Use either a 24-bit Fixed-Point or 32-bit Floating-Point depth buffer (single channel image)."
                    },
                    "overridemat": {
                        "label": "Override Material",
                        "summary": "This allows you to specify a material that will be applied to every Geometry that is rendered in the Render TOP. It is useful for pre-processing passes where we are outputting information about the geometry rather then lighting them and outputting RGB."
                    },
                    "drawdepthonly": {
                        "label": "Draw Depth Only",
                        "summary": "This will cause the render to only draw depth values to the depth buffer. No color values will be created.  To make use of the depth buffer, use the Depth TOP."
                    },
                    "coloroutputneeded": {
                        "label": "Color Output Needed",
                        "summary": "This is an optimization if you don't actually need the color result from this pass. Turning this off avoids a copy from the offscreen render buffer to the TOP's texture. When anti-aliasing is enabled, turning this off will also avoid 'resolving' the anti-aliasing."
                    },
                    "dither": {
                        "label": "Dither",
                        "summary": "Dithers the rendering to help deal with banding and other artifacts created by precision limitations of 8-bit displays."
                    },
                    "sampler0": {
                        "label": "Sampler Name",
                        "summary": "This is the sampler name that the GLSL program will use to sample from this TOP. The samplers need to be declared as the same dimensions as the TOP (sampler2D for a 2D TOP, sampler3D for 3D TOP)."
                    },
                    "orderindtrans": {
                        "label": "Order-Independent Transparency",
                        "summary": "Helps to render transparent geometry in proper depth order. This eliminates the need to sort the geometry based on distance from camera. This process is multi-pass. For every pixel the closest surface is rendered in the first pass, the second closest surface second, up to the number of passes specified by the Transparency Passes parameter below. Turning this option on will disable some advanced features in the Render TOP, as well as anti-aliasing.  The feature is a pixel-based approach, not object-based. So its performance is not directly related to the number of objects, but rather how they are layered.  It uses a technique called Depth Peeling. First you render the normal frame. On your next render you peel away all of the pixels you saw in the first frame, and reveal the pixels underneath them. The next frame you do the same, peeling away the pixels you could see from the 2nd render. And so on. Once all of the renders are done, you re composite each layer Over the other, starting at the farthest back layer.  If you take a sphere for example, you'll need to do 2 passes, the first one for the front of the sphere, and then 2nd will be the inside of the sphere.  If you have 10 spheres, one behind the other. You'll need 19-20 passes to get the correct image.  If you have 10 spheres, each next to each other across the screen, you'll only need 2 passes.  In reality though you will only need 3-5 passes to get an image that's acceptable. It may not be 100% correct, but it'll look pretty close to correct.  Each pass is a full render, so each pass adds significant overhead."
                    },
                    "allowbufblending": {
                        "label": "Allow Blending for Extra Buffers",
                        "summary": "Controls if blending (as enabled by the MAT common page setting) will be enabled for extra buffers beyond the first one. Often the extra buffers are used to write other types of information such as normals or positions, where blending wouldn't be desirable."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "transpeellayers": {
                        "label": "Transparency/Peel Layers",
                        "summary": "Number of passes the renderer will use when Order Independant Transparency is turned on."
                    },
                    "croprightunit": {
                        "label": "Crop Right Unit",
                        "summary": ""
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Enables rendering; 1 = on, 0 = off."
                    },
                    "numcolorbufs": {
                        "label": "# of Color Buffers",
                        "summary": "Any shader you write can output to more than one RGBA buffer at a time. For GLSL 3.3+ you would use the layout(location = 1) specifier on an out variable in the pixel shader to write to the 2nd buffer. In GLSL 1.2 instead of writing to gl_FragColor in your shader, you write to gl_FragData[i] where i is the color buffer index you want to write the value to."
                    },
                    "alphatocoverage": {
                        "label": "Alpha-to-Coverage",
                        "summary": "This is a feature that allows you to control how the anti-alias is resolved by using the pixel's alpha value. Say the anti-alias setting is set to 4x. This means that for each final pixel color, it will blend the color values of 4 pixels from the anti-alias buffer. When Alpha-to-Coverage is enabled, the alpha value controls how many pixel samples will be used to create the final pixel value. If your alpha value is 0.75, then 3 of the 4 pixels will be used. If it's 0.5 then 2 of the 4 pixels will be used."
                    },
                    "sampler2": {
                        "label": "Sampler Name",
                        "summary": ""
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "This feature pushes the polygons back into space a tiny fraction. This is useful when you are rendering two polygons directly ontop of each other and are experiencing Z-Fighting. Refer to Polygon Depth Offset for more information. This is also an important feature when doing shadows."
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "geometry": {
                        "label": "Geometry",
                        "summary": "Specifies which Geometry will be included in the rendered scene. You can use Pattern Matching to specify objects using patterns. Example: geo* ^geo7 will render all Geometry components whose names start with geo except geo7."
                    },
                    "overdrawlimit": {
                        "label": "Overdraw Limit",
                        "summary": "This value quantizes the outputted color value to some # of overdraws. Refer to the Early Depth-Test for more information."
                    },
                    "overdraw": {
                        "label": "Display Overdraw",
                        "summary": "This feature visually shows the overdraw in the scene. Refer to the Early Depth-Test article for more information. In particular the Analyzing Overdraw section."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "cropright": {
                        "label": "Crop Right",
                        "summary": "Positions the right edge of the rendered image."
                    },
                    "lights": {
                        "label": "Lights",
                        "summary": "Specifies which Lights will be used to render the scene. You can use Pattern Matching here as well."
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Front Faces, Back Faces, Both Faces, Neither. Will cause the render to avoid rendering certain polygon faces depending on their orientation to the camera. Refer to Back-Face Culling for more information."
                    },
                    "uniname0": {
                        "label": "Uniform Name",
                        "summary": "The uniform name, as declared in the shader."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "value3": {
                        "label": "Value",
                        "summary": ""
                    },
                    "croptop": {
                        "label": "Crop Top",
                        "summary": "Positions the top edge of the rendered image."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "antialias": {
                        "label": "Anti-Alias",
                        "summary": "Sets the level of anti-aliasing in the scene. Setting this to higher values uses more graphics memory."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "value2": {
                        "label": "Value",
                        "summary": ""
                    },
                    "rendermode": {
                        "label": "Render Mode",
                        "summary": "You can render different projections:  normal 2D, Cube Map, Fish Eye (180), or Dual Paraboloid. The Cube Map renders 6 views as needed for environment maps in the Phong MAT and Environment Light COMP.   See also the Cube Map TOP and the Projection TOP."
                    },
                    "uniname2": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "sampler3": {
                        "label": "Sampler Name",
                        "summary": ""
                    },
                    "top1": {
                        "label": "TOP",
                        "summary": ""
                    },
                    "uniname1": {
                        "label": "Uniform Name",
                        "summary": ""
                    },
                    "camera": {
                        "label": "Camera(s)",
                        "summary": "Specifies which Cameras to look through when rendering the scene. You can specify multiple cameras and retrieve each camera image using the Render Select TOP."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Render TOP is used to render all 3D scenes in TouchDesigner."
            },
            "cacheTOP": {
                "label": "Cache",
                "parameters": {
                    "replacespulse": {
                        "label": "Replace Pulse",
                        "summary": ""
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "prefill": {
                        "label": "Pre-Fill",
                        "summary": "Cooks 'Cache Size' number of times to fill the Cache TOP with images. When set to 1, it will fill the cache. If set to 1 during playback, it will fill immediately. If set to 1 and saved out, then next time the file is opened the cache will pre-fill. While this is > 0, the node behaves as if the 'On' parameter is 0. If set to 0, then back > 0, it will clear the previous data, and pre-fill again. For more information refer to the Pre-Filling article."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "This will empty the cache of stored images and release the memory held by the TOP."
                    },
                    "cachesize": {
                        "label": "Cache Size",
                        "summary": "Determines the number of images that can be stored in this Cache TOP."
                    },
                    "cacheonce": {
                        "label": "Get One Image on Startup",
                        "summary": "Checking this On will cook the TOP once after startup to load an initial image."
                    },
                    "alwayscook": {
                        "label": "Always Cook",
                        "summary": "Forces the operator to cook every frame."
                    },
                    "activepulse": {
                        "label": "Active Pulse",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "replaceindex": {
                        "label": "Replace Index",
                        "summary": "Select the image index that will be replaced by the input, when 'Replace Single' is turned on."
                    },
                    "step": {
                        "label": "Step Size",
                        "summary": "The number of cooks that go by before the Cache TOP grabs an image. A Step Size of 2 will cache an image every 2nd cook, a Step Size of 3 will cache every 3rd cook, and so on."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "outputindexunit": {
                        "label": "Output Index Unit",
                        "summary": "Sets the units used in the Output Index parameter."
                    },
                    "resetpulse": {
                        "label": "Reset",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While this is set > 0, the Cache TOP will capture images into its memory."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "prefillpulse": {
                        "label": "Pre-Fill Pulse",
                        "summary": ""
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "replace": {
                        "label": "Replace Single",
                        "summary": "While this is set > 0, the Cache TOP will replace the image at 'Replace Index' with the input image. This allows you to replace specific images in the cache at will."
                    },
                    "interp": {
                        "label": "Interpolate Frames",
                        "summary": "When On (On = 1), the Cache TOP will interpolate between frames when non-integer values are used in the Output Index parameter. For example, a value of -0.5 in Output Index will output a blended image of the most recent frame (0.0) and the second most recent frame (-1.0)."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "outputindex": {
                        "label": "Output Index",
                        "summary": "Determines which image in cache the TOP outputs. 0 is the most recent image, negative integers output image further back in time."
                    }
                },
                "summary": "The Cache TOP stores a sequence of images into GPU memory."
            },
            "slopeTOP": {
                "label": "Slope",
                "parameters": {
                    "red": {
                        "label": "Red",
                        "summary": "Select which method is used to calculate the slope of the Red channel. Horizontal and Vertical options let you calculate the slope by sampling points horizontally or vertically."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "zeropoint": {
                        "label": "Zero Point",
                        "summary": "Sets the value that is considered zero slope, similar to a midpoint."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "green": {
                        "label": "Green",
                        "summary": "Select which method is used to calulate the slope of the Green channel. Horizontal and Vertical options let you calculate the slope by sampling points horizontally or vertically."
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "alpha": {
                        "label": "Alpha",
                        "summary": "Select which method is used to calulate the slope of the Alpha channel. Horizontal and Vertical options let you calculate the slope by sampling points horizontally or vertically."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "Determines what pixels to use when calculating the slope at each pixel in the image."
                    },
                    "strength": {
                        "label": "Strength",
                        "summary": "Set the strength of the output using this multiplier. Higher values result in higher slope values."
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "offset": {
                        "label": "Sample Step",
                        "summary": "When sampling the image, this determines the distance from each pixel to the sample pixel. When units are set to pixels, it is the number of pixels away from the current pixel which is sampled to find edges. A Sample Step of 3 would sample pixels 3 pixels away to look for edges."
                    },
                    "offsetunit": {
                        "label": "Sample Step Unit",
                        "summary": ""
                    },
                    "blue": {
                        "label": "Blue",
                        "summary": "Select which method is used to calulate the slope of the Blue channel. Horizontal and Vertical options let you calculate the slope by sampling points horizontally or vertically."
                    }
                },
                "summary": "The Slope TOP generates pixels that represent the difference between its value and its neighbouring pixels' values."
            },
            "lumalevelTOP": {
                "label": "Luma Level",
                "parameters": {
                    "gamma1": {
                        "label": "Gamma 1",
                        "summary": "The Gamma parameter applies a gamma correction to the image. Gamma is the relationship between the brightness of a pixel as it appears on the screen, and the numerical value of that pixel. This is often represented by a gamma curve. The difference between brightness and gamma is that gamma also effects the ratio of red to green to blue. A straight, linear gamma curve with a value of 1 means no change."
                    },
                    "outhigh": {
                        "label": "Out High",
                        "summary": "Clamps pixel values to this value or lower."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "gamma2": {
                        "label": "Gamma 2",
                        "summary": "A second gamma correction that is added after the Range, RGBA, and Step page adjustments have been applied."
                    },
                    "source": {
                        "label": "Source",
                        "summary": "Determines the source of the image that is adjusted by the parameters. The output is determined by:   InColor * 1/Source * Lookup(Source)  Lookup is the lookup table build by the parameter settings in the TOP."
                    },
                    "contrast": {
                        "label": "Contrast",
                        "summary": "Contrast applies a scale factor (gain) to the RGB channels. Increasing contrast will brighten the light areas and darken the dark areas of the image, making the difference between the light and dark areas of the image stronger."
                    },
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "inlow": {
                        "label": "In Low",
                        "summary": "Any pixel below this value appears black."
                    },
                    "brightness1": {
                        "label": "Brightness 1",
                        "summary": "Increases or decreases the brightness of an image. Brightness can considered the arithmetic mean of the RGB channels. The Brightness parameter adds of subtracts an offset into the R, G, and B channels. Low brightness will result in dark tones, while high brightness will wash the color out towards white."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "opacity": {
                        "label": "Opacity",
                        "summary": "Adjsut the opacity, or transparency, of the image."
                    },
                    "clamphigh": {
                        "label": "Clamp High",
                        "summary": "Clamps the image's maximum value. (value as in hue, saturation, and value)"
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "soften": {
                        "label": "Soften",
                        "summary": "Softens or blends the boundaries between steps."
                    },
                    "inhigh": {
                        "label": "In High",
                        "summary": "Any pixel above this value appears white."
                    },
                    "brightness2": {
                        "label": "Brightness 2",
                        "summary": "A second brightness adjustment that is added after the Range, RGBA, and Step page adjustments have been applied."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "invert": {
                        "label": "Invert",
                        "summary": "Inverts the colors in the image. Black becomes white, white becomes black. Colors invert across the color wheel, so red becomes cyan, blue becomes yellow, green becomes magenta, and so on."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times. Making this larger than 1 is essentially the same as taking the output from each pass, and passing it into the first input of the node and repeating the process. Other inputs and parameters remain the same for each pass."
                    },
                    "clamplow": {
                        "label": "Clamp Low",
                        "summary": "Clamps the image's minimum value. (value as in hue, saturation, and value)"
                    },
                    "outlow": {
                        "label": "Out Low",
                        "summary": "Clamps pixel values to this value or higher."
                    },
                    "threshold": {
                        "label": "Threshold",
                        "summary": "Offsets the position of the step boundaries."
                    },
                    "blacklevel": {
                        "label": "Black Level",
                        "summary": "Any pixel with a value less than or equal to this will be black."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "stepsize": {
                        "label": "Step Size",
                        "summary": "Posterizes the image into bands or stripes. Number of bands equal to the inverse of this parameter. (ie. 0.25 = 4 bands) Use a dafault Ramp TOP to easily see this parameter's effect."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    }
                },
                "summary": "The Luma Level TOP adjusts image brightness, gamma, black level, quantization, opacity and more."
            },
            "rectangleTOP": {
                "label": "Rectangle",
                "parameters": {
                    "fillmode": {
                        "label": "Fill Viewer",
                        "summary": "Determine how the TOP image is displayed in the viewer. NOTE:To get an understanding of how TOPs work with images, you will want to set this to Native Resolution as you lay down TOPs when starting out. This will let you see what is actually happening without any automatic viewer resizing."
                    },
                    "size": {
                        "label": "Size",
                        "summary": "Width and Height of the rectangle to draw."
                    },
                    "resmenu": {
                        "label": "Resolution Menu",
                        "summary": ""
                    },
                    "borderwidth": {
                        "label": "Border Width",
                        "summary": "Width of the border to draw on the shape."
                    },
                    "border": {
                        "label": "Border Color",
                        "summary": "Color to use for the border of the shape."
                    },
                    "fillalpha": {
                        "label": "Fill Alpha",
                        "summary": "Alpha of the fill color."
                    },
                    "sizeunit": {
                        "label": "Size Unit",
                        "summary": ""
                    },
                    "fillcolor": {
                        "label": "Fill Color",
                        "summary": "Color to use for the fill of the shape."
                    },
                    "multrgbbyalpha": {
                        "label": "Multiply RGB by Alpha",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Enabled only when the Resolution parameter is set to Custom Resolution. Some Generators like Constant and Ramp do not use inputs and only use this field to determine their size. The drop down menu on the right provides some commonly used resolutions."
                    },
                    "centerunit": {
                        "label": "Center Unit",
                        "summary": ""
                    },
                    "outputaspect": {
                        "label": "Output Aspect",
                        "summary": "Sets the image aspect ratio allowing any textures to be viewed in any size. Watch for unexpected results when compositing TOPs with different aspect ratios. (You can define images with non-square pixels using xres, yres, aspectx, aspecty where xres/yres != aspectx/aspecty.)"
                    },
                    "borderoffset": {
                        "label": "Border Offset",
                        "summary": "Value from 0 to 1 indicating the fraction of the border that extends beyond the radius of the shape. Effectively sets the radius to radius + borderoffset*borderwidth."
                    },
                    "cornerradius": {
                        "label": "Corner Radius",
                        "summary": "Specifies the radius to be used for rounding the corners of the rectangle."
                    },
                    "outputresolution": {
                        "label": "Output Resolution",
                        "summary": "quickly change the resolution of the TOP's data."
                    },
                    "inputfiltertype": {
                        "label": "Input Smoothness",
                        "summary": "This controls pixel filtering on the input image of the TOP."
                    },
                    "softnessunit": {
                        "label": "Softness Unit",
                        "summary": ""
                    },
                    "borderwidthunit": {
                        "label": "Border Width Unit",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect",
                        "summary": "Use when Output Aspect parameter is set to Custom Aspect."
                    },
                    "softness": {
                        "label": "Softness",
                        "summary": "Specifies the amount that the background color should be blended into the shape."
                    },
                    "cornerradiusunit": {
                        "label": "Corner Radius Unit",
                        "summary": ""
                    },
                    "antialias": {
                        "label": "Anti-Alias",
                        "summary": "When on, the shape will be anti-aliased."
                    },
                    "resmult": {
                        "label": "Use Global Res Multiplier",
                        "summary": "Uses the Global Resolution Multiplier found in Edit>Preferences>TOPs. This multiplies all the TOPs resolutions by the set amount. This is handy when working on computers with different hardware specifications. If a project is designed on a desktop workstation with lots of graphics memory, a user on a laptop with only 64MB VRAM can set the Global Resolution Multiplier to a value of half or quarter so it runs at an acceptable speed. By checking this checkbox on, this TOP is affected by the global multiplier."
                    },
                    "chanmask": {
                        "label": "Channel Mask",
                        "summary": "Allows you to choose which channels (R, G, B, or A) the TOP will operate on. All channels are selected by default."
                    },
                    "format": {
                        "label": "Pixel Format",
                        "summary": "Format used to store data for each channel in the image (ie. R, G, B, and A). Refer to Pixel Formats for more information."
                    },
                    "npasses": {
                        "label": "Passes",
                        "summary": "Duplicates the operation of the TOP the specified number of times."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "Color to use for the background."
                    },
                    "rotate": {
                        "label": "Rotate",
                        "summary": "Rotates the shape by the specified number of degrees."
                    },
                    "armenu": {
                        "label": "Aspect Menu",
                        "summary": ""
                    },
                    "filtertype": {
                        "label": "Viewer Smoothness",
                        "summary": "This controls pixel filtering in the viewers."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": "Alpha of the background color."
                    },
                    "borderalpha": {
                        "label": "Border Alpha",
                        "summary": "Alpha of the border color."
                    },
                    "center": {
                        "label": "Center",
                        "summary": "Coordinates of the center of the shape. (0,0) corresponds to a perfectly centered shape."
                    }
                },
                "summary": "The Rectangle TOP can be used to generate Rectangles with rounded corners."
            }
        },
        "SOPs": {
            "attributecreateSOP": {
                "label": "Attribute Create",
                "parameters": {
                    "comptang": {
                        "label": "Compute Tangents",
                        "summary": "Creates tangents on the geometry."
                    },
                    "compnml": {
                        "label": "Compute Normals",
                        "summary": "Creates normals on the geometry."
                    }
                },
                "summary": "The Attribute Create SOP allows you to add normals or tangents to geometry."
            },
            "": {
                "label": "",
                "parameters": {},
                "summary": ""
            },
            "lineSOP": {
                "label": "Line",
                "parameters": {
                    "pa": {
                        "label": "Point A",
                        "summary": "These X,Y, and Z values set the position of the beginning of the line."
                    },
                    "points": {
                        "label": "Number of Points",
                        "summary": "The number of points the line is made of. Minimum is 2 points."
                    },
                    "texture": {
                        "label": "Texture Coordinates",
                        "summary": "Texture adds (0,1) coordinates to the vertices when set to Unit. Creates a rectangle without uv attributes when set to Off."
                    },
                    "pb": {
                        "label": "Point B",
                        "summary": "These X,Y, and Z values set the position of the end of the line."
                    }
                },
                "summary": "The Line SOP creates straight lines."
            },
            "copySOP": {
                "label": "Copy",
                "parameters": {
                    "vlength": {
                        "label": "Normals Maintain Length",
                        "summary": "Vector type attributes (i.e. normals, velocity) maintain the same length under transforms. i.e. When geometry is scaled, the normals remain constant in length."
                    },
                    "stamp": {
                        "label": "Stamp Inputs",
                        "summary": "When enabled, it will Stamp proceeding variables for each input copied."
                    },
                    "templategrp": {
                        "label": "Template Group",
                        "summary": "Specifies a subset of template primitives from which to copy onto. Accepts patterns, as described in Pattern Matching in the Tscript article."
                    },
                    "val6": {
                        "label": "Value 6",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "param7": {
                        "label": "Param 7",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "val8": {
                        "label": "Value 8",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "addprim": {
                        "label": "Add Primitive",
                        "summary": ""
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Orients the copied geometry to lookat, or point to, the object component specified in the parameter."
                    },
                    "param4": {
                        "label": "Param 4",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "Uniform Scale allows you to shrink or enlarge geometry along all three axes simultaneously."
                    },
                    "param1": {
                        "label": "Param 1",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "val5": {
                        "label": "Value 5",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "subpt": {
                        "label": "Subtract Point",
                        "summary": ""
                    },
                    "val9": {
                        "label": "Value 9",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "param10": {
                        "label": "Param 10",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "param5": {
                        "label": "Param 5",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "val1": {
                        "label": "Value 1",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "sourcegrp": {
                        "label": "Source Group",
                        "summary": "Specifies a subset of input primitives to copy from. Accepts patterns, as described in Pattern Matching in the Tscript article."
                    },
                    "param9": {
                        "label": "Param 9",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "subprim": {
                        "label": "Subtract Primitive",
                        "summary": ""
                    },
                    "mulvtx": {
                        "label": "Multiply Vertex",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "These allow you to specify the Translation (how much it moves over in a given direction), Rotation, and the Scale between each copy. Three columns are given for X, Y, and Z coordinates. Guide geometry is provided for the Pivot's translations. The Pivot is represented by a single red dot in the Viewport. Changing the Pivot parameters moves this point of reference."
                    },
                    "ncy": {
                        "label": "Number of Copies",
                        "summary": "Sets number of Copies to be made of the source. For a template input, it specifies the number of copies to be placed at each point of the template."
                    },
                    "param3": {
                        "label": "Param 3",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "param6": {
                        "label": "Param 6",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "setprim": {
                        "label": "Copy to Primitive",
                        "summary": ""
                    },
                    "nprims": {
                        "label": "Primitives per Point",
                        "summary": "Defines how many primitives to copy from each point."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "These allow you to specify the Translation (how much it moves over in a given direction), Rotation, and the Scale between each copy. Three columns are given for X, Y, and Z coordinates. Guide geometry is provided for the Pivot's translations. The Pivot is represented by a single red dot in the Viewport. Changing the Pivot parameters moves this point of reference."
                    },
                    "upvector": {
                        "label": "Up Vector",
                        "summary": "When specifying a Look At, it is possible to specify an up vector for the lookat. Without using an up vector, it is possible to get poor animation when the lookat object passes through the Y axis of the target object."
                    },
                    "val7": {
                        "label": "Value 7",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "doattr": {
                        "label": "Use Template Point Attribs",
                        "summary": ""
                    },
                    "param8": {
                        "label": "Param 8",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "setvtx": {
                        "label": "Copy to Vertex",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "These allow you to specify the Translation (how much it moves over in a given direction), Rotation, and the Scale between each copy. Three columns are given for X, Y, and Z coordinates. Guide geometry is provided for the Pivot's translations. The Pivot is represented by a single red dot in the Viewport. Changing the Pivot parameters moves this point of reference."
                    },
                    "cum": {
                        "label": "Transform Cumulative",
                        "summary": "Each transformation \\\"builds\\\" on the location left by the one before it. Transformations are cumulative as the Copy SOP produces new copies."
                    },
                    "val10": {
                        "label": "Value 10",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "subvtx": {
                        "label": "Subtract Vertex",
                        "summary": ""
                    },
                    "param2": {
                        "label": "Param 2",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "Sets the overall transform order for the transformations. The Transform Order determines the order in which transformations take place. Depending on the order, you can achieve different results using the exact same values. Choose the appropriate order from the menu."
                    },
                    "nml": {
                        "label": "Rotate to Normal",
                        "summary": "Only used when a template input is specified. If the template is a sphere, and the first input is a circle, a circle is placed at each point of the sphere. With this option on, all the circles will re-orient to face the surface of the sphere (a default sphere has normals radiating outwards from the center).  If an up attribute exists on the template geometry, then this will be used (along with the normal) to fully define the rotates for the copies. An up attribute is created with the Point SOP."
                    },
                    "newg": {
                        "label": "Create Output Groups",
                        "summary": "If selected, this creates a group for each copy number, and places each primitive created at that stage into it."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "These allow you to specify the Translation (how much it moves over in a given direction), Rotation, and the Scale between each copy. Three columns are given for X, Y, and Z coordinates. Guide geometry is provided for the Pivot's translations. The Pivot is represented by a single red dot in the Viewport. Changing the Pivot parameters moves this point of reference."
                    },
                    "setpt": {
                        "label": "Copy to Point",
                        "summary": ""
                    },
                    "mulpt": {
                        "label": "Multiply Point",
                        "summary": ""
                    },
                    "addvtx": {
                        "label": "Add Vertex",
                        "summary": ""
                    },
                    "addpt": {
                        "label": "Add Point",
                        "summary": ""
                    },
                    "val4": {
                        "label": "Value 4",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "Sets the order of the rotations within the overall transform order."
                    },
                    "mulprim": {
                        "label": "Multiply Primitive",
                        "summary": ""
                    },
                    "copyg": {
                        "label": "Copy Groups",
                        "summary": "Defines the base name of the groups created."
                    },
                    "val3": {
                        "label": "Value 3",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    },
                    "val2": {
                        "label": "Value 2",
                        "summary": "Token and value of each stamp variable. Stamped parameters are accessible via the global fetchStamp() method in the td Module in python, or param() in tscript. See the example, below."
                    }
                },
                "summary": "The Copy SOP lets you make copies of the geometry of other SOPs and apply a transformation to each copy."
            },
            "selectSOP": {
                "label": "Select",
                "parameters": {
                    "sop": {
                        "label": "SOP",
                        "summary": "The path of the SOP being referenced."
                    }
                },
                "summary": "The Select SOP allows you to reference a SOP from any other location in TouchDesigner."
            },
            "noiseSOP": {
                "label": "Noise",
                "parameters": {
                    "amp": {
                        "label": "Amplitude",
                        "summary": "Defines the noise value's amplitude (a scale on the values output)."
                    },
                    "keepnormals": {
                        "label": "Keep Computed Normals",
                        "summary": ""
                    },
                    "type": {
                        "label": "Type",
                        "summary": "The noise function used to generate noise. The functions available are:"
                    },
                    "seed": {
                        "label": "Seed",
                        "summary": "Any number, integer or non-integer, which starts the random number generator. Each number gives completely different noise patterns, but with similar characteristics."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "harmon": {
                        "label": "Harmonics",
                        "summary": "The number of higher frequency components to layer on top of the base frequency. The higher this number, the bumpier the noise will be (as long as roughness is not set to zero). 0 Harmonics give the base shape.  Harmonics with a base frequency of 0.1Hz will by default produce harmonics at 0.2Hz, 0.4Hz, 0.8Hz, etc. (up to the number of harmonics specified by the Harmonics parameter)."
                    },
                    "numint": {
                        "label": "Number of Integrals",
                        "summary": "Defines the number of times to integrate (see the Speed CHOP) the Brownian noise. Higher values produce smoother curves with fewer features. Values beyond 4 produce somewhat identical curves. This parameter is only valid for the Random noise type."
                    },
                    "spread": {
                        "label": "Harmonic Spread",
                        "summary": "The factor by which the frequency of the harmonics are increased. It is normally 2. A spread of 3 and a base frequency of 0.1Hz will produce harmonics at 0.3Hz, 0.9Hz, 2.7Hz, etc.. This parameter is only valid for the Harmonic Summation type."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "period": {
                        "label": "Period",
                        "summary": "The approximate separation between peaks of a noise cycle. It is expressed in Units. Increasing the period stretches the noise pattern out.  Period is the opposite of frequency. If the period is 2 seconds, the base frequency is 0.5 cycles per second, or 0.5Hz for short. Hz refers to Hertz, the electrical and audio engineer of the 19th century, not the car guy.  If the Type is set to Random, setting this to zero will produce completely random noise. Otherwise, the period should be greater than zero."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "exp": {
                        "label": "Exponent",
                        "summary": "Pushes the noise values toward 0, or +1 and -1. (It raises the value to the power of the exponent.) Exponents greater than one will pull the channel toward zero, and powers less than one will pull peaks towards +1 and -1. It is used to reshape the channels."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "rough": {
                        "label": "Roughness",
                        "summary": "Controls the effect of the higher frequency noise. When Roughness is zero, all harmonics above the base frequency have no effect. At one, all harmonics are equal in amplitude to the base frequency. When Roughness is between one and zero, the amplitude of higher harmonics drops off exponentially from the base frequency.  The default roughness is 0.5. This means the amplitude of the first harmonic is 0.5 of the base frequency, the second is 0.25, the third is 0.125. The harmonics are added to the base to give the final shape. The Harmonics parameter and the Roughness parameter must both be non-zero to see the harmonic effects."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "attribute": {
                        "label": "Attribute",
                        "summary": "This menu sets which attribute of the geometry the Noise SOP acts on."
                    }
                },
                "summary": "The Noise SOP displaces geometry points using noise patterns."
            },
            "switchSOP": {
                "label": "Switch",
                "parameters": {
                    "input": {
                        "label": "Select Input",
                        "summary": "The index of the source to use, where the first source is 0, the second 1, and so on."
                    }
                },
                "summary": "The Switch SOP switches between up to 9999 possible inputs."
            },
            "fractalSOP": {
                "label": "Fractal",
                "parameters": {
                    "divs": {
                        "label": "Divisions",
                        "summary": "The number of subdivisions of the input geometry. Values in the range of 1 - 3 are reasonable to start with. Higher values cause excessive geometry and should be used with caution."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Global setting of the fractal divisions. See the above discussion about Smoothness vs. Scale."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    },
                    "seed": {
                        "label": "Seed",
                        "summary": "The random seed used for fractalising. Specifying a different integer value gives a different shape."
                    },
                    "vtxnms": {
                        "label": "Use Vertex Normals",
                        "summary": "Instead of using the Direction fields below, this sets the direction of the fractalisation at any given point to be the direction of the vertex normals of the input. This may be preferable when using a sphere or other rounded object as the input, as the deviations will originate from the center of the sphere instead of all being the same direction."
                    },
                    "smooth": {
                        "label": "Smoothness",
                        "summary": "The smoothness value scales the deviations. The range is usually between 0 and 1, and small numbers create larger deviations than large numbers. Smoothness and Scale have a similar effect, but there is a subtle difference. Smoothness is calculated for each iteration of the SOP. The number of Iterations is, in turn set by the number of Divisions. Scale, by contrast, is a global scaling of the amplitude of the deviations, with no consideration of the stage at which they are created. Using low values of smoothness (producing large deviations) and a small scale value will give a slightly more random looking result than doing the opposite; high roughness values (small deviations) and large scale values, providing Divisions is greater than 1."
                    },
                    "fixed": {
                        "label": "Fixed Boundary",
                        "summary": "When enabled, this option prevents Fractal from applying any deviations to the edges (boundaries) so that you could, for example, fractalise a plane and still be able to connect the edges of the plane to the sides of the box. This is achieved by first refining the surface between all breakpoints, and then fractalized."
                    },
                    "dir": {
                        "label": "Direction",
                        "summary": "The direction of the Fractalisation. The default values of 0, 0, 1 make the fractal deviations point in the Z direction. Can be overridden by: Use Vertex Normals."
                    }
                },
                "summary": "The Fractal SOP allows you created jagged mountain-like divisions of the input geometry."
            },
            "trailSOP": {
                "label": "Trail",
                "parameters": {
                    "accurate": {
                        "label": "Accurate Timing",
                        "summary": ""
                    },
                    "inc": {
                        "label": "Trail Increment",
                        "summary": "This will skip the given number of frames to build a trail with fewer points in it, but the same length. This will lower the resolution of the trail by reducing the number of points in the trail. This is better for ghosting when using Preserve Original. If you set the Increment to 2 or more, you will see the same length trail, but fewer copies of the geometry."
                    },
                    "surftype": {
                        "label": "Connectivity",
                        "summary": "This option is used to select the type of surface, when using a Mesh Primitive Type."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "velscale": {
                        "label": "Velocity Scale",
                        "summary": "Scales the velocity by a specific value when Compute Velocity is selected."
                    },
                    "result": {
                        "label": "Result Type",
                        "summary": "How to construct the trail geometry."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": ""
                    },
                    "close": {
                        "label": "Close Rows",
                        "summary": "When selected, closes the rows in the output selection."
                    },
                    "evalframe": {
                        "label": "Evaluate Within Frame Range",
                        "summary": "This option specifies that the Trail SOP will only evaluate, or cook, within the current frame range ($FSTART, $FEND). If this option is not enabled, the SOP can evaluate prior to the start frame."
                    },
                    "length": {
                        "label": "Trail Length",
                        "summary": "This sets the length of the trail by establishing the maximum number of frames for the Trail SOP to use, i.e. a Trail Length of 25will connect the geometry from the previous twenty-five frames."
                    },
                    "cache": {
                        "label": "Cache Size",
                        "summary": "The number of frames to keep cached in available memory."
                    }
                },
                "summary": "The Trail SOP takes an input SOP and makes a trail of each point of the input SOP over the past several frames, and connects the trails in different ways."
            },
            "curvesectSOP": {
                "label": "Curvesect",
                "parameters": {
                    "leftgroup": {
                        "label": "Face Group",
                        "summary": "A subset of faces (NURBS, Bzier, polygons) to act upon. Accepts patterns, as described in Pattern Matching."
                    },
                    "tolerance": {
                        "label": "Tolerance",
                        "summary": "Determines the precision of the intersection."
                    },
                    "keeporiginal": {
                        "label": "Keep Original",
                        "summary": ""
                    },
                    "left": {
                        "label": "Left Face Pieces",
                        "summary": "Choose what parts of the left faces to keep:"
                    },
                    "right": {
                        "label": "Right Face Pieces",
                        "summary": "Choose what parts of the right faces to keep:"
                    },
                    "xsect": {
                        "label": "Find All Intersections",
                        "summary": "Compute intersection points if the faces touch the cutter primitive. If the button is unchecked, only the point of minimum distance will be found. Currently, finding the minimum distance between a face and a surface is not available."
                    },
                    "affect": {
                        "label": "Affect",
                        "summary": "Choose which input to operate on:"
                    },
                    "rightgroup": {
                        "label": "Cutter Group",
                        "summary": "A subset of faces or spline surfaces to intersect with. Accepts patterns, as described in Pattern Matching."
                    },
                    "extractpt": {
                        "label": "Extract Point",
                        "summary": "If the right input is a surface, choose between point and isoparm extraction; only points are extracted if the right input is a face."
                    }
                },
                "summary": "The Curvesect SOP finds the intersections or the points of minimum distance between two or more faces (polygons, Bziers, and NURBS curves) or between faces and a polygonal or spline surface."
            },
            "subdivideSOP": {
                "label": "Subdivide",
                "parameters": {
                    "creaseweight": {
                        "label": "Crease Weight",
                        "summary": "If the crease weight is overriden, this is the weight used.  Tip: The default is to have the Override Crease Weight Attribute enabled. So you can simply set a value which applies to all the creases. You can, however, set a crease attribute using the Vertex or Primitive SOPs which allows for more control."
                    },
                    "closeholes": {
                        "label": "Close Cracks",
                        "summary": ""
                    },
                    "overridecrease": {
                        "label": "Override Crease Weight Attribute",
                        "summary": "Determine if the crease sharpness should be determined by the primitive or vertex creaseweight attribute or by overridden by this SOP."
                    },
                    "creases": {
                        "label": "Creases",
                        "summary": "This field allows you to specify a subset of the second input to use as creases. The elements of the second input specified by the Creases field are used as creases. Each edge in a crease polygon corresponds to the edge in the polygon mesh which has the same point numbers. Point position is irrelevant. For polygon edges to be classified as the same edge, they must share the same points. Merely being physically close is not sufficient.  The primitive attribute creasesharpness is used to determine the sharpness of the specified creases unless overridden."
                    },
                    "subdivide": {
                        "label": "Group",
                        "summary": "Subset of input to use as a polygonal mesh to subdivide. Accepts patterns, as described in Pattern Matching."
                    },
                    "surroundpoly": {
                        "label": "Surrounding Faces",
                        "summary": ""
                    },
                    "iterations": {
                        "label": "Depth",
                        "summary": "How many iterations to subdivide. Higher numbers give a smoother surface."
                    },
                    "outcreasegroup": {
                        "label": "New Group",
                        "summary": "Name of the group to place the generated creases into."
                    },
                    "bias": {
                        "label": "Bias",
                        "summary": "Determines which points are moved when pulling crack closed.  * 0 means move points on subdivided area to meet boundary. * 1 means move points on boundary to meet subdivided area."
                    },
                    "outputcrease": {
                        "label": "Generate Resulting Creases",
                        "summary": "If any creases are sharper than the Depth, they will be left over in the resulting geometry. With this parameter enabled, these left over creases are created with the appropriate primitive attribute values, and placed in the specified group."
                    }
                },
                "summary": "The Subdivide SOP takes an input polygon surface (which can be piped into one or both inputs), and divides each face to create a smoothed polygon surface using a Catmull-Clark subdivision algorithm."
            },
            "objectmergeSOP": {
                "label": "Object Merge",
                "parameters": {
                    "sop9": {
                        "label": "SOP",
                        "summary": "Each source allows you to specify a pattern of SOP paths. The geometry of each SOP is merged into this SOP.  Each SOP can reside in a different component.   A pattern can be a complete path to a single SOP or it may consist of wildcards, etc."
                    },
                    "sop7": {
                        "label": "SOP",
                        "summary": "Each source allows you to specify a pattern of SOP paths. The geometry of each SOP is merged into this SOP.  Each SOP can reside in a different component.   A pattern can be a complete path to a single SOP or it may consist of wildcards, etc."
                    },
                    "sop6": {
                        "label": "SOP",
                        "summary": "Each source allows you to specify a pattern of SOP paths. The geometry of each SOP is merged into this SOP.  Each SOP can reside in a different component.   A pattern can be a complete path to a single SOP or it may consist of wildcards, etc."
                    },
                    "sop2": {
                        "label": "SOP",
                        "summary": "Each source allows you to specify a pattern of SOP paths. The geometry of each SOP is merged into this SOP.  Each SOP can reside in a different component.   A pattern can be a complete path to a single SOP or it may consist of wildcards, etc."
                    },
                    "sop3": {
                        "label": "SOP",
                        "summary": "Each source allows you to specify a pattern of SOP paths. The geometry of each SOP is merged into this SOP.  Each SOP can reside in a different component.   A pattern can be a complete path to a single SOP or it may consist of wildcards, etc."
                    },
                    "sop8": {
                        "label": "SOP",
                        "summary": "Each source allows you to specify a pattern of SOP paths. The geometry of each SOP is merged into this SOP.  Each SOP can reside in a different component.   A pattern can be a complete path to a single SOP or it may consist of wildcards, etc."
                    },
                    "xform": {
                        "label": "Transform Object",
                        "summary": "Specify a geometry component to which all the merged geometry should be transformed relative to."
                    },
                    "sop10": {
                        "label": "SOP",
                        "summary": "Each source allows you to specify a pattern of SOP paths. The geometry of each SOP is merged into this SOP.  Each SOP can reside in a different component.   A pattern can be a complete path to a single SOP or it may consist of wildcards, etc."
                    },
                    "sop4": {
                        "label": "SOP",
                        "summary": "Each source allows you to specify a pattern of SOP paths. The geometry of each SOP is merged into this SOP.  Each SOP can reside in a different component.   A pattern can be a complete path to a single SOP or it may consist of wildcards, etc."
                    },
                    "sop5": {
                        "label": "SOP",
                        "summary": "Each source allows you to specify a pattern of SOP paths. The geometry of each SOP is merged into this SOP.  Each SOP can reside in a different component.   A pattern can be a complete path to a single SOP or it may consist of wildcards, etc."
                    },
                    "sop1": {
                        "label": "SOP",
                        "summary": "Each source allows you to specify a pattern of SOP paths. The geometry of each SOP is merged into this SOP.  Each SOP can reside in a different component.   A pattern can be a complete path to a single SOP or it may consist of wildcards, etc."
                    }
                },
                "summary": "The Object Merge SOP allows you to merge the geometry of several SOPs spanning different components."
            },
            "capSOP": {
                "label": "Cap",
                "parameters": {
                    "divsu1": {
                        "label": "Divisions",
                        "summary": "Number of cross sections in the rounded cap."
                    },
                    "scalev2": {
                        "label": "Scale",
                        "summary": "Affects the height of the rounded cap (both positive and negative)."
                    },
                    "firstv": {
                        "label": "First V Cap",
                        "summary": "Select an option from the menu:"
                    },
                    "divsv1": {
                        "label": "Divisions",
                        "summary": "Number of cross sections in the rounded cap."
                    },
                    "scalev1": {
                        "label": "Scale",
                        "summary": "Affects the height of the rounded cap (both positive and negative)."
                    },
                    "lastu": {
                        "label": "Last U Cap",
                        "summary": "Similar to First Cap U / V, but builds a cap on the other end of the primitive in the opposite direction."
                    },
                    "lastv": {
                        "label": "Last V Cap",
                        "summary": "Similar to First Cap U / V, but builds a cap on the other end of the primitive in the opposite direction."
                    },
                    "divsv2": {
                        "label": "Divisions",
                        "summary": "Number of cross sections in the rounded cap."
                    },
                    "divsu2": {
                        "label": "Divisions",
                        "summary": "Number of cross sections in the rounded cap."
                    },
                    "group": {
                        "label": "Group",
                        "summary": ""
                    },
                    "firstu": {
                        "label": "First U Cap",
                        "summary": "Select an option from the menu:"
                    },
                    "scaleu2": {
                        "label": "Scale",
                        "summary": "Affects the height of the rounded cap (both positive and negative)."
                    },
                    "pshapeu": {
                        "label": "Preserve NURB Shape U",
                        "summary": "When capping a NURBS surface, use this option to preserve the original surface by clamping it at the point of capping."
                    },
                    "scaleu1": {
                        "label": "Scale",
                        "summary": "Affects the height of the rounded cap (both positive and negative)."
                    },
                    "pshapev": {
                        "label": "Preserve NURB Shape V",
                        "summary": "When capping a NURBS surface, use this option to preserve the original surface by clamping it at the point of capping."
                    }
                },
                "summary": "The Cap SOP is used to close open areas with flat or rounded coverings."
            },
            "cplusplusSOP": {
                "label": "CPlusPlus",
                "parameters": {
                    "reinitpulse": {
                        "label": "Re-Init Class",
                        "summary": ""
                    },
                    "reinit": {
                        "label": "Re-Init Class",
                        "summary": "When this parameter goes above 1, it will delete the instance of the class created by the plugin, and create a new one."
                    },
                    "unloadplugin": {
                        "label": "Unload Plugin",
                        "summary": "When this parameter goes above 1, it will delete the instance of the class created by the plugin and unload the plugin. If multiple SOPs have loaded the same plugin they will all need to unload it to release the file."
                    },
                    "plugin": {
                        "label": "Plugin Path",
                        "summary": "The path to the plugin you want to load."
                    }
                },
                "summary": "The CPlusPlus SOP allows you to make custom SOP operators by writing your own plugin using C++."
            },
            "joinSOP": {
                "label": "Join",
                "parameters": {
                    "proximity": {
                        "label": "Connect Closest Ends",
                        "summary": "The Join SOP connects the tail of the first primitive with the head on the next primitive, and so on unless this toggle is on, in which case the closest ends are chosen instead. For surfaces, this option enables the proximity test in U or V, as specified in the Direction parameter below."
                    },
                    "tolerance": {
                        "label": "Tolerance",
                        "summary": "The meaning of the tolerance varies with the type of join. The shapes of blended primitives will change less if the tolerance is low. If the tolerance is < 1, a new point, knot, row or column is inserted between the last and before-last point, row or column. The lower the tolerance, the closer the insertion to the ends being pulled together, and thus the smaller the region affected. When the tolerance is zero the blended inputs do not change at all: the faces are connected by a straight line and the surfaces by a flatish, linear patch.  Tolerance also affects the size and roundness of the fillet built between non-blended primitives. A zero tolerance yields a short, flat fillet; a unit tolerance generates pointed, non self-intersected fillet."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    },
                    "bias": {
                        "label": "Bias",
                        "summary": "Affects only blended primitives by varying the position of the common point, row or column linearly between the two original ends. If the bias is zero, the common part will coincide with the end of the second primitive and the end of the first primitive will be stretched all the way to it. If the bias is one, the common part will coincide with the end of the first primitive and the second primitive will be stretched.  The bias is irrelevant when the blend tolerance is 0."
                    },
                    "joinop": {
                        "label": "Join",
                        "summary": "Can optionally join subgroups of n primitives or every nth primitive in a cyclical manner.  For Example; assume there are six primitives numbered for 0 - 5, and N = 2. Then,   # Groups will generate 0-1 2-3 4-5 # Skipping will generate 0-2-6 and 1-3-5."
                    },
                    "inc": {
                        "label": "N",
                        "summary": "Determines the number of primitives to be either grouped or skipped. N2."
                    },
                    "blend": {
                        "label": "Blend",
                        "summary": "Determines the way the primitives are joined. A blended face or surface will typically reposition the ends to be joined and convert them into a single, common point, row or column respectively. The amount of change can be reduced or eliminated by lowering the tolerance (see Tolerance below). When not blended, the original shapes remain unaffected. Instead, the chosen ends are joined by an arc-like fillet. In either case, the result is a single primitive."
                    },
                    "prim": {
                        "label": "Keep Primitives",
                        "summary": "If this button is not checked, the input primitives will be deleted after being joined. If checked, they will be preserved."
                    },
                    "loop": {
                        "label": "Wrap Last to First",
                        "summary": "If enabled, it connects the beginning of the first primitive to the end of the last primitive, thus forming a single, closed face or hull. If a single, open primitive exists in the input, it will be closed. The Primitive SOP provides a more direct way of closing primitives but offers almost no shape controls."
                    },
                    "knotmult": {
                        "label": "Multiplicity",
                        "summary": "Affects the number of knots inserted at the blend point and thus allows for smooth or pointed connections. The connection will be pointed when the Multiplicity is on. When Blend is not on, an active multiplicity influences the shape and the tightness of the fillet by forcing a multiple knot insertion when on.  The fillet tends to be better behaved when multiplicity in on. However, this means that the resulting face or surface is built with a discontinuity at the connection points and might not lend itself to point modeling in that area too well.  Multiplicity has no effect on polygons and meshes."
                    },
                    "dir": {
                        "label": "Direction",
                        "summary": "This menu determines the parametric direction of the joining operation, which can be in U or in V, and is meaningful only when the inputs are surfaces. The U direction is associated with columns; the V direction refers to rows. For example, joining two surfaces in U will generate a surface with more columns than either input. The number of rows might be higher too, but only if the two inputs have a different number of rows or a different V basis."
                    }
                },
                "summary": "The Join SOP connects a sequence of faces or surfaces into a single primitive that inherits their attributes."
            },
            "alembicSOP": {
                "label": "Alembic",
                "parameters": {
                    "objectpath": {
                        "label": "Object Path",
                        "summary": "Specify which geometry object to be loaded. Each geometry object can represent a hierarchies of multiple geometries. It is also possible to choose the \\\"All Objects\\\" option from the list of available objects. This option is selected by default."
                    },
                    "loadfile": {
                        "label": "Unload",
                        "summary": "Toggling the unload to \\\"on\\\" will unload the file and close it. By setting it to \\\"off\\\", the file will be loaded again. When the file is unloaded it can be overwritten by other applications or deleted."
                    },
                    "interp": {
                        "label": "Interpolation",
                        "summary": "Interpolate between the samples/keyframes in the Alembic file. This parameter only works if the selected geometries are defined as dynamic and the transformation information are available from the input Alembic file."
                    },
                    "file": {
                        "label": "Alembic File",
                        "summary": "The file path to the Alembic file."
                    },
                    "time": {
                        "label": "Time",
                        "summary": "Specify which part of the Alembic samples sequence is loaded. The time unit menu converts the current time units to the selected unit. The available options are Frames, Seconds, and Fraction."
                    },
                    "straightgpu": {
                        "label": "Straight to GPU",
                        "summary": "Load the geometry directly to the GPU. This options is much faster than the default loading to CPU, however you can not use the geometry output to other SOPs or access the geometry data in the SOP to CHOP or SOP to DAT. It is recommended that the Alembic file have the normals and UVs baked into the file since you can not add them via SOPs in TouchDesigner."
                    },
                    "xform": {
                        "label": "Transform",
                        "summary": "Select which transform is applied if the transform data is available from the input Alembic file."
                    },
                    "timeunit": {
                        "label": "Time Unit",
                        "summary": ""
                    },
                    "compnml": {
                        "label": "Compute Normal",
                        "summary": "Creates normals for the input geometry."
                    }
                },
                "summary": "The Alembic SOP loads and plays back Alembic file geometry sequences."
            },
            "materialSOP": {
                "label": "Material",
                "parameters": {
                    "mat": {
                        "label": "Material",
                        "summary": "Select a material to apply. Drag and drop a MAT to this parameter or enter the path to that MAT in the parameter field."
                    }
                },
                "summary": "The Material SOP allows the assignment of materials (MATs) to geometry at the SOP level."
            },
            "forceSOP": {
                "label": "Force",
                "parameters": {
                    "axial": {
                        "label": "Axial Force",
                        "summary": "When Directional Force is checked, controls the force along the primary axis. Increasing this value will cause the particles to move up the primary axis of the metaball field as defined by the direction vector."
                    },
                    "radial": {
                        "label": "Force",
                        "summary": "When Radial Force is checked, this controls the strength of the Radial Force field."
                    },
                    "spiral": {
                        "label": "Spiral Force",
                        "summary": "Controls the attraction/repulsion force perpendicular to the primary axis (Direction field). Values greater than 0 will cause the points to be drawn toward the primary axis. Values less than 0 push particles away perpendicular to the primary axis. It is a tangential force."
                    },
                    "doaxis": {
                        "label": "Directional Force",
                        "summary": "When checked, enables all parameters below to allow control of specific force attributes."
                    },
                    "doradial": {
                        "label": "Radial Force",
                        "summary": "When checked, triggers a force towards or away from the centre of the metaball field, depending on the value of the force."
                    },
                    "vortex": {
                        "label": "Vortex Force",
                        "summary": "When Directional Force is checked, this field controls the amount of twist particles are given around the primary axis. Positive values cause the particles to spin clockwise, negative values cause counter-clockwise spins. It is a centrifugal force."
                    },
                    "dir": {
                        "label": "Direction",
                        "summary": "When Directional Force is checked, determines the direction vector axis, and activates forces along the directional vector for the directional forces below."
                    }
                },
                "summary": "The Force SOP adds force attributes to the input metaball field that is used by either Particle SOP or Spring SOP as attractor or repulsion force fields."
            },
            "booleanSOP": {
                "label": "Boolean",
                "parameters": {
                    "accattrib": {
                        "label": "Accurate Attributes Interpolation",
                        "summary": "If selected, all inputs are convexed to triangles, otherwise they are convexed to quadrilaterals."
                    },
                    "creategroup": {
                        "label": "Create Groups",
                        "summary": "If selected, a group is created containing all faces pertaining to the first input, and a second group containing all faces of the second input."
                    },
                    "groupb": {
                        "label": "Group B",
                        "summary": ""
                    },
                    "groupa": {
                        "label": "Group A",
                        "summary": ""
                    },
                    "booleanop": {
                        "label": "Operation",
                        "summary": "Some of the operations below produce guide geometry to give you visual feedback on the results of the operation being performed. The appearance of the geometry is context sensitive - if you are performing an intersect operation, or either of the edge operations the guide will be both inputs; if you are doing A minus B then the guide will be B and if B minus A then the guide will be A. If you are doing union then there will be no guide geometry.  If the guide geometry is too distracting, you can disable it by entering the Viewport options dialog and clicking on the Guide geometry button so that it no longer appears indented. This procedure is global and will disable the guide geometry of other SOPs as well.  The Boolean SOP will automatically orient polygons so they face the same way. This may not be enough in some cases because Boolean results in some unshared edges where the intersection cut took place. If the shading is still not good enough, you are best to follow Boolean with a Facet SOP. In it, Consolidate Points, Orient Polygons and finally Cusp.  If you have really strange shaped polygons, you can first triangulate one or both of the inputs with the Divide SOP."
                    }
                },
                "summary": "The Boolean SOP takes two closed polygonal sets, A and B. Set these Sources to the SOPs with the 3D shapes that you wish to operate on."
            },
            "gridSOP": {
                "label": "Grid",
                "parameters": {
                    "orderv": {
                        "label": "V Order",
                        "summary": "V Order Degree of spline basis +1 in the V parametric direction."
                    },
                    "orient": {
                        "label": "Orientation",
                        "summary": "Specifies on which plane the Grid is built."
                    },
                    "surftype": {
                        "label": "Connectivity",
                        "summary": "(Results only viewable for polygons and meshes)."
                    },
                    "type": {
                        "label": "Primitive Type",
                        "summary": "Select from the following types. For information on the different types, see the Geometry Types section. Depending on the primitive type chosen, some SOP options may not apply."
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": ""
                    },
                    "t": {
                        "label": "Center",
                        "summary": "Center of grid in X, Y, and Z."
                    },
                    "rows": {
                        "label": "Rows",
                        "summary": "The number of rows and columns. Rows are horizontal lines; Columns are vertical lines. Two rows by two columns makes a square or rectangle. For example, one row and two columns makes a single line if Connectivity is set to Rows.  For NURBS and Bzier surfaces, the Rows & Cols refer to the surface hull construction, and as such, the number of Rows and Cols should not be less than the Order in U or V."
                    },
                    "modifybounds": {
                        "label": "Modify Bounds",
                        "summary": ""
                    },
                    "cols": {
                        "label": "Columns",
                        "summary": "The number of rows and columns. Rows are horizontal lines; Columns are vertical lines. Two rows by two columns makes a square or rectangle. For example, one row and two columns makes a single line if Connectivity is set to Rows.  For NURBS and Bzier surfaces, the Rows & Cols refer to the surface hull construction, and as such, the number of Rows and Cols should not be less than the Order in U or V."
                    },
                    "orderu": {
                        "label": "U Order",
                        "summary": "U Order Degree of spline basis +1 in the U parametric direction."
                    },
                    "interpu": {
                        "label": "End Point Interpolate in U",
                        "summary": "End-point interpolate in U Extends the surface to touch the end point in the U direction."
                    },
                    "texture": {
                        "label": "Texture Coordinates",
                        "summary": "This adds uv coordinates to the geometry created by the Font SOP."
                    },
                    "interpv": {
                        "label": "End Point Interpolate in V",
                        "summary": "End-point interpolate in V Extends the surface to touch the end point in the V direction."
                    },
                    "size": {
                        "label": "Size",
                        "summary": "The X and Y scale of the grid."
                    }
                },
                "summary": "The Grid SOP allows you to create grids and rectangles using polygons, a mesh, Bzier and NURBS surfaces, or multiple lines using open polygons."
            },
            "modelSOP": {
                "label": "Model",
                "parameters": {},
                "summary": "The Model SOP holds the surface modeler in TouchDesigner."
            },
            "polyreduceSOP": {
                "label": "Polyreduce",
                "parameters": {
                    "originalpoints": {
                        "label": "Use Original Points",
                        "summary": "When it collapses edges, it will use one of the two original points instead of finding the optimal interior point."
                    },
                    "creaseweight": {
                        "label": "Stiffen Features",
                        "summary": "The amount of penalty to add to the feature edges being eroded."
                    },
                    "numpolys": {
                        "label": "Keep #",
                        "summary": ""
                    },
                    "obj": {
                        "label": "Object",
                        "summary": "The object to use as a reference."
                    },
                    "reduce": {
                        "label": "Polygons",
                        "summary": "The polygons which will be candidates for simplification. Other polygons which share points with these might also be affected."
                    },
                    "creases": {
                        "label": "Features",
                        "summary": "Which polygons are feature edges."
                    },
                    "lengthweight": {
                        "label": "Equalize Edges",
                        "summary": "This bias penalizes the removal of long edges. It tends to reduce high aspect ratio triangles at the expense of more uniform reduction."
                    },
                    "borderweight": {
                        "label": "Stiffen Border",
                        "summary": "Without any constraints, the edges of planar surfaces can erode. This controls a bias which penalizes such erosion."
                    },
                    "percentage": {
                        "label": "Keep %",
                        "summary": ""
                    },
                    "keepedges": {
                        "label": "Prevent Cracking",
                        "summary": "This prohibits the removal of any edge that occurs at the boundary of the polygons. This ensures no cracks develop with unreduced areas."
                    },
                    "meshinvert": {
                        "label": "Prevent Mesh Inversion",
                        "summary": "When enabled, each reduction is tested to see if it would flip a triangle normal. While encurring a slight cost, the results are almost always worth it."
                    },
                    "minpercent": {
                        "label": "Minimum %",
                        "summary": "A lower bound to the level of reduction."
                    },
                    "triangulate": {
                        "label": "Pre-Triangulate",
                        "summary": "As only triangular polygons will be reduced, this option will automatically triangulate the input polygons."
                    },
                    "distance": {
                        "label": "Dist. Threshhold",
                        "summary": "The world distance at which the polygons should be left at full detail."
                    }
                },
                "summary": "The Polyreduce SOP reduces a high detail polygonal model into one consisting of fewer polygons."
            },
            "filletSOP": {
                "label": "Fillet",
                "parameters": {
                    "rightuv": {
                        "label": "Right UV",
                        "summary": "Parametric point on each right primitive at which to begin the fillet."
                    },
                    "order": {
                        "label": "Order",
                        "summary": "Order at which to build the spline fillets."
                    },
                    "cut": {
                        "label": "Cut Primitives",
                        "summary": "If selected, the primitives are trimmed at the point the fillet begins."
                    },
                    "fillettype": {
                        "label": "Fillet Type",
                        "summary": ""
                    },
                    "inc": {
                        "label": "N",
                        "summary": "Determines the number of primitives to be either grouped or skipped."
                    },
                    "dir": {
                        "label": "Direction",
                        "summary": "This menu determines the parametric direction of the filleting operation, which can be in U or in V, and is meaningful only when the inputs are surfaces. The U direction is associated with columns; the V direction refers to rows."
                    },
                    "loop": {
                        "label": "Wrap Last to First",
                        "summary": "Connects the beginning of the first primitive to the end of the last primitive filleted, or, if only one primitive exists, it creates a fillet between its ends."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Which primitives to fillet. If blank, it fillets the entire input. Accepts patterns, as described in Pattern Matching."
                    },
                    "lroffset": {
                        "label": "LR Offset",
                        "summary": "Controls the position of the first and last segments of the fillet."
                    },
                    "lrscale": {
                        "label": "LR Scale",
                        "summary": "Use to control the direction and scale of the first and last segments of the fillet."
                    },
                    "seamless": {
                        "label": "Match Input to Fillets",
                        "summary": "If selected, then the inputs are modified in such a way that the isoparms appear continuous from one primitive, through the fillet to the other primitive. Also, the primitives are promoted to the same type and order. This will minimize if not eliminate any artifacts introduced in rendering at the cost of more refined geometry."
                    },
                    "leftuv": {
                        "label": "Left UV",
                        "summary": "Parametric point on each left primitive at which to begin the fillet."
                    },
                    "primtype": {
                        "label": "Primitive Type",
                        "summary": ""
                    },
                    "fillet": {
                        "label": "Fillet",
                        "summary": "Can optionally fillet subgroups of N primitives or every nth primitive in a cyclical manner.  Example: Assume there are six primitives numbered for 0 - 5, and N = 2. Then:   # Groups will fillet 0-1 2-3 4-5 # Skipping will fillet 0-2-6 and 1-3-5."
                    },
                    "lrwidth": {
                        "label": "LR Width",
                        "summary": "The first value represents the proportion of the left primitive that the left end of the fillet spans. The second value represents the proportion of the right primitive that the right end of the fillet spans."
                    }
                },
                "summary": "The Fillet SOP is used to create smooth bridging geometry between two curves / polygons or two surfaces / meshes."
            },
            "resampleSOP": {
                "label": "Resample",
                "parameters": {
                    "measure": {
                        "label": "Measure",
                        "summary": ""
                    },
                    "dosegs": {
                        "label": "Maximum Segments",
                        "summary": "When enabled, allows you to override the maximum number of segments used in the resampled geometry."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Allows you to specify which primitives or group of primitives to resample. Accepts patterns, as described in Pattern Matching."
                    },
                    "last": {
                        "label": "Maintain Last Vertex",
                        "summary": "If selected, the primitive's final CV is included in the resampled polygon, even if the final resulting edge is shorter then the given segment length."
                    },
                    "edge": {
                        "label": "Resample by Polygon Edge",
                        "summary": "This toggle allows the resampling to be done on a per-edge basis of the polygon rather than on the polygon as a whole. This means that corners will be preserved in the resampling. When this parameter is enabled, the Measure Method will be disabled. If the Segment Length is specified, only edges which are longer than the specified length will be subdivided. Each edge will be evenly subdivided so that the maximum length of each subdivision is less than or equal to the length specified.  If the Maximum Segments is chosen, the edges will not be split into more segments than are specified. If the length parameter is turned off, then each edge will be split into the specified number of segments."
                    },
                    "segs": {
                        "label": "Segments",
                        "summary": "Lets you specify the number of segments used when measuring along arc.  When both Maximum Segment Length and Maximum Segments are selected, the resultant polygon is constrained to a fixed length which may be shorter than the original input curve.  When only Maximum Segments is selected, the segments span the full distance of the original input curve.  When neither option is selected, the input curve is merely converted to a polygon."
                    },
                    "dolength": {
                        "label": "Maximum Segment Length",
                        "summary": "When this option is enabled, it overrides the value of the Arc/Chord length and allows you to specify your own values for the length of the segments in the resampled geometry. Smaller values produce smoother interpolation."
                    },
                    "lod": {
                        "label": "Level of Detail",
                        "summary": "If the geometry you are performing this operation on is made up of something other than polygons (e.g. a NURBS circle), this parameter determines how detailed the conversion to polygons will be. The higher the level of detail, the more precise the resampling process."
                    },
                    "length": {
                        "label": "Length",
                        "summary": "This parameter lets you specify the Arc/Chord length for the resampled geometry."
                    },
                    "method": {
                        "label": "Method",
                        "summary": ""
                    }
                },
                "summary": "The Resample SOP will resample one or more primitives into even length segments."
            },
            "circleSOP": {
                "label": "Circle",
                "parameters": {
                    "divs": {
                        "label": "Divisions",
                        "summary": "The number of edges (points +1) used to describe the circle. This option applies to polygons and imperfect splines. The more Divisions a circle has, the smoother it looks. Using three divisions makes a triangle, four divisions a diamond, five divisions a pentagon, and so on. Also, for open arc types, the number of points will equal Divisions + 1, and for closed arc types, Divisions + 2."
                    },
                    "orient": {
                        "label": "Orientation",
                        "summary": "The plane on which the circle lies."
                    },
                    "order": {
                        "label": "Order",
                        "summary": "If a spline curve is selected, it is built at this order."
                    },
                    "type": {
                        "label": "Primitive Type",
                        "summary": "For information on the different types, see the Geometry Types Guide. Depending on the primitive type chosen, some SOP options may not apply."
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": ""
                    },
                    "t": {
                        "label": "Center",
                        "summary": "The Center of the Circle in X, Y and Z."
                    },
                    "angle": {
                        "label": "Arc Angles",
                        "summary": "The beginning and ending angles of the arc. An arc will start at the beginning angle, and proceed towards the ending angle. If beginning=0 and end=360 it will be a full circle. As a reference:  Image:TouchGeometry222.gif  Note: The total angle can exceed 360, making multiple wraps of the circle."
                    },
                    "rad": {
                        "label": "Radius",
                        "summary": "The Radius of the Circle in the X and Y directions."
                    },
                    "modifybounds": {
                        "label": "Modify Bounds",
                        "summary": ""
                    },
                    "arc": {
                        "label": "Arc Type",
                        "summary": "Determines how the circle should be drawn. Applies to polygons and imperfect splines only."
                    },
                    "texture": {
                        "label": "Texture Coordinates",
                        "summary": ""
                    },
                    "imperfect": {
                        "label": "Imperfect",
                        "summary": "This option applies only to Bezier and NURBS circles. If selected, the circles are approximated non-rational curves, otherwise they are perfect rational closed curves."
                    }
                },
                "summary": "The Circle SOP creates open or closed arcs, circles and ellipses."
            },
            "facetSOP": {
                "label": "Facet",
                "parameters": {
                    "orientpolys": {
                        "label": "Orient Polygons",
                        "summary": "Orients all polygons so they have the same winding direction."
                    },
                    "cons": {
                        "label": "Consolidate",
                        "summary": "Consolidate eliminates the redundancy of having many points that are close to each other, by merging them together to form a fewer set of common points. Consolidate is useful for cleaning up an edge that may appear between adjacent polygons that have been merged."
                    },
                    "prenml": {
                        "label": "Compute Normals",
                        "summary": "Checking this option means that the surface normals will be computed. Where points are shared between polygons, smooth shading results, and where points are not shared (unique), faceted edges result. If you compute normals at this stage, they are computed based on the incoming geometry."
                    },
                    "unique": {
                        "label": "Unique Points",
                        "summary": "Makes each vertex have a unique point. The result of selecting this option is that all vertices are made into unique points, thus making all edges hard, with no smooth shading."
                    },
                    "angle": {
                        "label": "Cusp Angle",
                        "summary": "Cusping allows you to specify the threshold angle at which the edges become faceted. A good typical value is 20."
                    },
                    "unit": {
                        "label": "Make Normals Unit Length",
                        "summary": "Checking this option will normalize the length of normals to a length of one unit."
                    },
                    "inlinedist": {
                        "label": "Distance",
                        "summary": ""
                    },
                    "remove": {
                        "label": "Remove Degenerate",
                        "summary": "Sometimes (not often) your geometry can get messed up, where there are points hanging around that are not used for anything, or there are primitives that don't make sense. This option checks for these cases and removes them."
                    },
                    "cusp": {
                        "label": "Cusp Polygons",
                        "summary": "Most of the time, you want some polygons to be smooth shaded and others to be faceted. Usually polygons that meet at low angles should be smooth shaded, and polygon edges that meet at sharper angles should be faceted."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    },
                    "inline": {
                        "label": "Remove Inline Points",
                        "summary": "Removes points that lie inline with its neighboring points."
                    },
                    "postnml": {
                        "label": "Compute Normals",
                        "summary": "Again, allows you to compute the normals after the consolidation or cusping stages. You should select this if you have set either the Cusp or Consolidate option."
                    },
                    "dist": {
                        "label": "Distance",
                        "summary": "Points and normals less than this distance apart will be consolidated, or have their normals averaged, based on the setting in the Consolidate menu. Usually very small numbers, such as 0.01 should be used here. If the value is 0.0, then points must be in exactly the same position (co-incident) in order to be considered for the consolidation/averaging function."
                    }
                },
                "summary": "The Facet SOP lets you control the smoothness of faceting of a given object."
            },
            "creepSOP": {
                "label": "Creep",
                "parameters": {
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": ""
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "Rotate the Source Input creep geometry on the surface of the Path Input."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "Translate the Source Input Creep geometry on the surface of the Path Input."
                    },
                    "resetmethod": {
                        "label": "Reset Method",
                        "summary": "The Source Input is Translated, Rotated and Scaled so as to complete the given options listed below."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "Scale the Source Input creep geometry on the surface of the Path Input."
                    }
                },
                "summary": "The Creep SOP lets you deform and animate Source Input geometry along the surface of the PathInput geometry."
            },
            "transformSOP": {
                "label": "Transform",
                "parameters": {
                    "vlength": {
                        "label": "Normals Maintain Length",
                        "summary": "When selected, vector type attributes (i.e. normals, velocity) maintain the same length under transforms. i.e. When geometry is scaled, the normals remain constant in length."
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Allows you to orient your object by naming the object you would like it to Look At, or point to. Once you have designated this object to look at, it will continue to face that object, even if you move it. This is useful if, for instance, you want a camera to follow another object's movements. The Look At parameter points the object in question at the other object's origin.  Tip: To designate a centre of interest for the camera that doesn't appear in your scene, create a Null object and disable its display flag. Then Parent the Camera to the newly created Null object, and tell the camera to look at this object using the Look At parameter. You can direct the attention of the camera by moving the Null object with the Select state. If you want to see both the camera and the Null object, enable the Null object's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "These three fields move the Source geometry in the three axes."
                    },
                    "postty": {
                        "label": "Post Translate Y",
                        "summary": "Sets the center of the geometry after the Transform page has been applied to position."
                    },
                    "fromy": {
                        "label": "From Input",
                        "summary": ""
                    },
                    "posttx": {
                        "label": "Post Translate X",
                        "summary": "Sets the center of the geometry after the Transform page has been applied to position."
                    },
                    "fromx": {
                        "label": "From Input",
                        "summary": ""
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "Uniform Scale allows you to shrink or enlarge geometry along all three axes simultaneously."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "Sets the overall transform order for the transformations. The transform order determines the order in which transformations take place. Depending on the order, you can achieve different results using the exact same values. Choose the appropriate order from the menu."
                    },
                    "posttz": {
                        "label": "Post Translate Z",
                        "summary": "Sets the center of the geometry after the Transform page has been applied to position."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The pivot point for the transformations (not the same as the pivot point in the pivot channels). The pivot point parameters allow you to define the point about which geometry scales and rotates. Altering the pivot point produces different results depending on the transformation performed on the object.  For example, during a scaling operation, if the pivot point of an object is located at: -1, -1, 0 and you wanted to scale the object by 0.5 (reduce its size by 50%) the object would scale toward the pivot point and appear to slide down and to the left.  Image:TouchGeometry91.gif  In the example above, rotations performed on an object with different pivot points produce very different results.  Tip: In order to transform from the Bounding Box centre, simply enter the variables $CEX $CEY $CEZ into the Pivot parameter."
                    },
                    "fromz": {
                        "label": "From Input",
                        "summary": ""
                    },
                    "postscaley": {
                        "label": "Post Scale Y",
                        "summary": "Sets the scale of the geometry after the Transform page has been applied to scale."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "These three fields scale the Source geometry in the three axes."
                    },
                    "toy": {
                        "label": "To Reference",
                        "summary": ""
                    },
                    "toz": {
                        "label": "To Reference",
                        "summary": ""
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "Sets the order of the rotations within the overall transform order."
                    },
                    "tox": {
                        "label": "To Reference",
                        "summary": ""
                    },
                    "postscale": {
                        "label": "Post Scale",
                        "summary": ""
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "These three fields rotate the Source geometry in the three axes."
                    },
                    "postscalex": {
                        "label": "Post Scale X",
                        "summary": "Sets the scale of the geometry after the Transform page has been applied to scale."
                    },
                    "upvector": {
                        "label": "Up Vector",
                        "summary": "When orienting an object, the Up Vector is used to determine where the positive Y axis points."
                    },
                    "postscalez": {
                        "label": "Post Scale Z",
                        "summary": "Sets the scale of the geometry after the Transform page has been applied to scale."
                    }
                },
                "summary": "The Transform SOP translates, rotates and scales the input geometry in \\\"object space\\\" or local to the SOP."
            },
            "scriptSOP": {
                "label": "Script",
                "parameters": {
                    "setuppars": {
                        "label": "Setup Parameters",
                        "summary": "Clicking the button runs the setupParameters() callback function."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Specifies the DAT which holds the callbacks. See scriptSOP_Class for usage."
                    }
                },
                "summary": "The Script SOP runs a script each time the Script SOP cooks."
            },
            "refineSOP": {
                "label": "Refine",
                "parameters": {
                    "divsv": {
                        "label": "V Divisions",
                        "summary": "If refining or sub-dividing, this option specifies the number of refines to be performed between First V and Second V."
                    },
                    "domainv2": {
                        "label": "Second V",
                        "summary": ""
                    },
                    "unrefineu": {
                        "label": "NURB Count U",
                        "summary": "Number of knots to remove at each location in the U / V basis if refining NURBS."
                    },
                    "firstv": {
                        "label": "First V",
                        "summary": "This specifies a starting / ending location to complete the operation. Select this and a parametric V location between 0 and 1."
                    },
                    "secondv": {
                        "label": "Second V",
                        "summary": "This specifies a starting / ending location to complete the operation. Select this and a parametric V location between 0 and 1."
                    },
                    "tolv": {
                        "label": "Tolerance V",
                        "summary": "Only remove knots that do change the curve, polygon, or surface by more than this distance."
                    },
                    "subdivspace": {
                        "label": "Spacing",
                        "summary": "Subdivide refines a primitive such that the subdivision causes a sharp discontinuity if ever displaced. In essence subdivide is equivalent to refine for polygons and Bziers, since any refinement causes a potential discontinuity. In the case of a NURBS it is equivalent to a maximum refinement (i.e. count = primitive basis order - 1)."
                    },
                    "tolu": {
                        "label": "Tolerance U",
                        "summary": "Only remove knots that do change the curve, polygon, or surface by more than this distance."
                    },
                    "refinev": {
                        "label": "NURB Count V",
                        "summary": "Number of knots to insert at each location in the U / V basis when refining NURBS."
                    },
                    "secondu": {
                        "label": "Second U",
                        "summary": "This specifies a starting / ending location to complete the operation. Select this and a parametric U location between 0 and 1."
                    },
                    "domainv1": {
                        "label": "First V",
                        "summary": ""
                    },
                    "divsu": {
                        "label": "U Divisions",
                        "summary": "If refining or sub-dividing, this option specifies the number of refines to be performed between First U and Second U."
                    },
                    "unrefinev": {
                        "label": "NURB Count V",
                        "summary": "Number of knots to remove at each location in the U / V basis if refining NURBS."
                    },
                    "domainu2": {
                        "label": "Second U",
                        "summary": ""
                    },
                    "firstu": {
                        "label": "First U",
                        "summary": "This specifies a starting / ending location to complete the operation. Select this and a parametric U location between 0 and 1."
                    },
                    "refinespace": {
                        "label": "Spacing",
                        "summary": ""
                    },
                    "domainu1": {
                        "label": "First U",
                        "summary": ""
                    },
                    "refineu": {
                        "label": "NURB Count U",
                        "summary": "Number of knots to insert at each location in the U / V basis when refining NURBS."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    }
                },
                "summary": "The Refine SOP allows you to increase the number of CVs in any NURBS, Bzier, or polygonal surface or face without changing its shape."
            },
            "clipSOP": {
                "label": "Clip",
                "parameters": {
                    "above": {
                        "label": "Above Plane",
                        "summary": "When Create Groups is checked, you can assign the geometry below the cutting plane to the Group name typed in this field."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching in the Scripting Guide."
                    },
                    "clipop": {
                        "label": "Keep",
                        "summary": "Options controlling what part of the clip to keep:"
                    },
                    "below": {
                        "label": "Below Plane",
                        "summary": "When Create Groups is checked, you can assign the geometry above the cutting plane to the Group name typed in this field."
                    },
                    "newg": {
                        "label": "Create Groups",
                        "summary": "When checked, allows you to generate specific groups for the geometry above and below the cutting plane. See the two group option fields below. This option is only available when All Primitives are kept."
                    },
                    "dir": {
                        "label": "Direction",
                        "summary": "The default values of 0 1 0 creates a Normal vector straight up in Y, which is perpendicular to the XZ plane, which becomes the clipping plane. 1 0 0 points the normal in positive X, giving a clipping plane in YZ. The plane may be positioned at an angle by using values typed in (1 1 0 gives a 45 angle plane) or interactively by using the direction vector jack."
                    },
                    "dist": {
                        "label": "Distance",
                        "summary": "Allows you to move the cutting plane along the Direction vector. If the Direction (plane's normal) is 0 1 0, putting a positive number in the Distance field moves the plane up in Y."
                    }
                },
                "summary": "The Clip SOP cuts and creases source geometry with a plane."
            },
            "attributeSOP": {
                "label": "Attribute",
                "parameters": {
                    "frompt3": {
                        "label": "From Attribute 3",
                        "summary": ""
                    },
                    "topt4": {
                        "label": "To Attribute 4",
                        "summary": ""
                    },
                    "topt3": {
                        "label": "To Attribute 3",
                        "summary": ""
                    },
                    "frompt0": {
                        "label": "From Attribute 0",
                        "summary": ""
                    },
                    "todtl1": {
                        "label": "To Attribute 1",
                        "summary": ""
                    },
                    "ptdel": {
                        "label": "Delete Attributes",
                        "summary": "At the bottom of the Point page, there is a field to specify attributes to delete. Simply enter a list of the attributes (separated by spaces) to delete. For example entering:  Cd Alpha"
                    },
                    "todtl3": {
                        "label": "To Attribute 3",
                        "summary": ""
                    },
                    "fromdtl4": {
                        "label": "From Attribute 4",
                        "summary": ""
                    },
                    "topt2": {
                        "label": "To Attribute 2",
                        "summary": ""
                    },
                    "fromdtl0": {
                        "label": "From Attribute 0",
                        "summary": ""
                    },
                    "tovtx4": {
                        "label": "To Attribute 4",
                        "summary": ""
                    },
                    "frompr1": {
                        "label": "From Attribute 1",
                        "summary": ""
                    },
                    "frompt4": {
                        "label": "From Attribute 4",
                        "summary": ""
                    },
                    "tovtx1": {
                        "label": "To Attribute 1",
                        "summary": ""
                    },
                    "topr0": {
                        "label": "To Attribute 0",
                        "summary": ""
                    },
                    "tovtx3": {
                        "label": "To Attribute 3",
                        "summary": ""
                    },
                    "topr3": {
                        "label": "To Attribute 3",
                        "summary": ""
                    },
                    "topr2": {
                        "label": "To Attribute 2",
                        "summary": ""
                    },
                    "fromvtx3": {
                        "label": "From Attribute 3",
                        "summary": ""
                    },
                    "frompr2": {
                        "label": "From Attribute 2",
                        "summary": ""
                    },
                    "primdel": {
                        "label": "Delete Attributes",
                        "summary": ""
                    },
                    "todtl2": {
                        "label": "To Attribute 2",
                        "summary": ""
                    },
                    "frompr0": {
                        "label": "From Attribute 0",
                        "summary": ""
                    },
                    "topt0": {
                        "label": "To Attribute 0",
                        "summary": ""
                    },
                    "frompt2": {
                        "label": "From Attribute 2",
                        "summary": ""
                    },
                    "fromdtl3": {
                        "label": "From Attribute 3",
                        "summary": ""
                    },
                    "todtl4": {
                        "label": "To Attribute 4",
                        "summary": ""
                    },
                    "frompr4": {
                        "label": "From Attribute 4",
                        "summary": ""
                    },
                    "topt1": {
                        "label": "To Attribute 1",
                        "summary": ""
                    },
                    "fromdtl1": {
                        "label": "From Attribute 1",
                        "summary": ""
                    },
                    "vtxdel": {
                        "label": "Delete Attributes",
                        "summary": ""
                    },
                    "fromvtx4": {
                        "label": "From Attribute 4",
                        "summary": ""
                    },
                    "frompr3": {
                        "label": "From Attribute 3",
                        "summary": ""
                    },
                    "tovtx2": {
                        "label": "To Attribute 2",
                        "summary": ""
                    },
                    "fromvtx1": {
                        "label": "From Attribute 1",
                        "summary": ""
                    },
                    "tovtx0": {
                        "label": "To Attribute 0",
                        "summary": ""
                    },
                    "frompt1": {
                        "label": "From Attribute 1",
                        "summary": ""
                    },
                    "topr1": {
                        "label": "To Attribute 1",
                        "summary": ""
                    },
                    "topr4": {
                        "label": "To Attribute 4",
                        "summary": ""
                    },
                    "fromvtx2": {
                        "label": "From Attribute 2",
                        "summary": ""
                    },
                    "dtldel": {
                        "label": "Delete Attributes",
                        "summary": ""
                    },
                    "fromdtl2": {
                        "label": "From Attribute 2",
                        "summary": ""
                    },
                    "todtl0": {
                        "label": "To Attribute 0",
                        "summary": ""
                    },
                    "fromvtx0": {
                        "label": "From Attribute 0",
                        "summary": ""
                    }
                },
                "summary": "The Attribute SOP allows you to manually rename and delete point and primitive attributes."
            },
            "armSOP": {
                "label": "Arm",
                "parameters": {
                    "elbowtwist": {
                        "label": "Elbow Twist",
                        "summary": "Specifies the rotation angle of the elbow joint."
                    },
                    "autoelbow": {
                        "label": "Auto Elbow Twist",
                        "summary": "This parameter affects the default twist of the elbow joint to a more natural position."
                    },
                    "clavlength": {
                        "label": "Clavicle",
                        "summary": "Control bone lengths, as illustrated above."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "These values apply a transformation on the end affector (handprint) to reorient and reposition it. For a full explanation of transforms, see the Transform SOP."
                    },
                    "shoulder4t": {
                        "label": "Shoulder 4",
                        "summary": ""
                    },
                    "wrist": {
                        "label": "Wrist Joint",
                        "summary": "Control the joint lengths, as illustrated above."
                    },
                    "humlength": {
                        "label": "Humerous",
                        "summary": "Control bone lengths, as illustrated above."
                    },
                    "rotatehand": {
                        "label": "Rotate Hand",
                        "summary": "This parameter rotates the hand and the wrist joint to match the orientation of the hand-print object. In order to operate correctly, the end-affector (hand print) scale transformations must remain at 1.  Note: If the channel is set to 0, then the hand rotations are relative to the forearm. If the channel is set to 1, the hand rotations are the same orientation as the end affector."
                    },
                    "elbow3t": {
                        "label": "Elbow 3",
                        "summary": ""
                    },
                    "elbow1t": {
                        "label": "Elbow 1",
                        "summary": ""
                    },
                    "wrist3t": {
                        "label": "Wrist 3",
                        "summary": ""
                    },
                    "shoulder3t": {
                        "label": "Shoulder 3",
                        "summary": ""
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "These values apply a transformation on the end affector (handprint) to reorient and reposition it. For a full explanation of transforms, see the Transform SOP."
                    },
                    "elbow2t": {
                        "label": "Elbow 2",
                        "summary": ""
                    },
                    "wrist5t": {
                        "label": "Wrist 5",
                        "summary": ""
                    },
                    "bonerad": {
                        "label": "Radius",
                        "summary": "Controls the scale of the circle radii."
                    },
                    "axis": {
                        "label": "Arm Axis",
                        "summary": "Position the model along the +X or -X axis."
                    },
                    "shoulder": {
                        "label": "Shoulder Joint",
                        "summary": "Control the joint lengths, as illustrated above."
                    },
                    "shoulder2t": {
                        "label": "Shoulder 2",
                        "summary": ""
                    },
                    "handlength": {
                        "label": "Hand",
                        "summary": "Control bone lengths, as illustrated above."
                    },
                    "shoulder5t": {
                        "label": "Shoulder 5",
                        "summary": ""
                    },
                    "ulnalength": {
                        "label": "Ulna",
                        "summary": "Control bone lengths, as illustrated above."
                    },
                    "flipelbow": {
                        "label": "Flip Elbow",
                        "summary": "This toggle positions the arm using an alternative elbow position solution."
                    },
                    "wrist4t": {
                        "label": "Wrist 4",
                        "summary": ""
                    },
                    "elbow": {
                        "label": "Elbow Joint",
                        "summary": "Control the joint lengths, as illustrated above."
                    },
                    "elbow5t": {
                        "label": "Elbow 5",
                        "summary": ""
                    },
                    "affector": {
                        "label": "Affector Object",
                        "summary": "Allows the end affector to be another object, or simply defined by a default box, which is controlled by the transformations below."
                    },
                    "elbow4t": {
                        "label": "Elbow 4",
                        "summary": ""
                    },
                    "wrist2t": {
                        "label": "Wrist 2",
                        "summary": ""
                    },
                    "shoulder1t": {
                        "label": "Shoulder 1",
                        "summary": ""
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "These values apply a transformation on the end affector (handprint) to reorient and reposition it. For a full explanation of transforms, see the Transform SOP."
                    },
                    "wrist1t": {
                        "label": "Wrist 1",
                        "summary": ""
                    },
                    "capttype": {
                        "label": "Capture Type",
                        "summary": "You can use either Ellipses or Capture Regions as deformation geometry. Ellipses are for use with the Skeleton SOP. Capture Regions are for use with the Capture SOP."
                    }
                },
                "summary": "The Arm SOP creates all the necessary geometry for an arm, and provides a smooth, untwisted skin that connects the arm to the body."
            },
            "profileSOP": {
                "label": "Profile",
                "parameters": {
                    "tolerance": {
                        "label": "Tolerance",
                        "summary": "This parameter specifies the precision of the fitting process for the extracted 3D data, and is typically less than 0.01."
                    },
                    "order": {
                        "label": "Order",
                        "summary": "The spline order of the resulting 3D curve. The type of curve (Bzier or NURBS) is inherited from the spatial curve. The order, however, is not inherited because the spline order provides useful control over the quality of the fit. If the profile is a polygon, the spatial curve will be a NURBS curve."
                    },
                    "urange": {
                        "label": "U Range",
                        "summary": "Indicates in percentages what part of the U surface domain is the mapping area. A full range of 0-1 will cause the profiles to be mapped to the entire domain in the U parametric direction. The range is not restricted to the 0-1 interval."
                    },
                    "maptype": {
                        "label": "Mapping Type",
                        "summary": ""
                    },
                    "csharp": {
                        "label": "Preserve Sharp Corners",
                        "summary": "Controls the precision with which sharp corners in the profile curve are interpolated. It should be on when the profile has areas of high changes in curvature."
                    },
                    "keepsurf": {
                        "label": "Keep Surface",
                        "summary": "Specifies whether the parent surface should be removed after the extraction or not."
                    },
                    "delprof": {
                        "label": "Delete Original Profile",
                        "summary": ""
                    },
                    "group": {
                        "label": "Group",
                        "summary": "This field allows you to specify the particular group of curves on the surface. Other primitives are ignored. You can specify profile curves within the group by providing a profile pattern (e.g. *.3 specifies the fourth profile in all spline surfaces)."
                    },
                    "vrange": {
                        "label": "V Range",
                        "summary": "Indicates in percentages what part of the V surface domain is the mapping area. A full range of 0-1 will cause the profiles to be mapped to the entire domain in the V parametric direction. The range is not restricted to the 0-1 interval."
                    },
                    "parametric": {
                        "label": "Parametrically to X Y",
                        "summary": "If Fitted (this option not checked), the profile will be a spatial NURBS curve whose position and shape in space will be identical to the curve on surface. It may very well be non-planar. If Extracted Parametrically (this option checked), the result will extract the profile's parametric image as a 3D face, which will be a planar face in XY whose type (polygon, Bzier, NURBS) will the same as the profile's, and whose vertices match the profile CVs. This, however, does not guarantee spatial coincidence between profile and extracted curve, and is more of an analytical tool.  Tip: A profile extracted parametrically can be reapplied to the surface identically with the Project SOP by choosing the Parametric option with no Mapping to Range. Use this method to extract the profile, pull its points or edit it as you would any 3D face, then re-project it on the surface at the same location."
                    },
                    "sdivs": {
                        "label": "Divisions per Span",
                        "summary": "The number of points per span to be computed on the profile. A span is the line connecting two consecutive CVs on a polygon, or the arc between two breakpoints on a spline curve. The profile tends to become more accurate as the number of divisions is higher."
                    },
                    "smooth": {
                        "label": "Smooth Curve",
                        "summary": "If enabled, it will fit a spline through the extracted points. This parameter is disabled when extracting the profile parametrically. Disable this parameter in order to bypass the fitting process which might be both expensive (in processing speed) and unnecessary when extracting profiles produced by boolean operations (see Surfsect SOP)."
                    }
                },
                "summary": "The Profile SOP enables the extraction and manipulation of profiles."
            },
            "boxSOP": {
                "label": "Box",
                "parameters": {
                    "modifybounds": {
                        "label": "Modify Bounds",
                        "summary": ""
                    },
                    "rebar": {
                        "label": "Enforcement Bars",
                        "summary": "Places four diagonal crossbars in each division of the Box."
                    },
                    "size": {
                        "label": "Size",
                        "summary": "Size of the Box or Cube along the X, Y, and Z axes."
                    },
                    "divs": {
                        "label": "Divisions",
                        "summary": "The number of divisions in X, Y, and Z to split this Box into."
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": "Checking this option on will compute surface normals."
                    },
                    "consolidatepts": {
                        "label": "Consolidate Corner Points",
                        "summary": "Merges the corner points together.  Instead of the box being composed of 6 separate faces (resulting in 4 points per corner and a total of 24 points), the corner points are merged together and the box is composed of 8 points."
                    },
                    "dodivs": {
                        "label": "Use Divisions",
                        "summary": "If checked, it divides the box into the number of Divisions specified below. Boxes divided in this way do not appear when rendered because the Divisions consist of open polygons."
                    },
                    "t": {
                        "label": "Center",
                        "summary": "These X,Y, and Z Values determine where the center of the Box is located."
                    },
                    "texture": {
                        "label": "Texture Coordinates",
                        "summary": "Determines how the texture coordinates are applied to the box."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    }
                },
                "summary": "The Box SOP creates cuboids."
            },
            "textureSOP": {
                "label": "Texture",
                "parameters": {
                    "axis": {
                        "label": "Projection Axis",
                        "summary": "Axis to project along, or projection method from splines. X, Y, or Z axes."
                    },
                    "fixseams": {
                        "label": "Fix Face Seams",
                        "summary": "Attempts to correct texture continuity at face seams."
                    },
                    "type": {
                        "label": "Texture Type",
                        "summary": "The Face, Uniform Spline, and Arc-Length Spline texturing methods accept spline curves as well as polygons.  When using one of the spline-based methods, specifying a paste hierarchy in the Group field will propagate the computation of texture coordinates to all of its nodes. Projection methods will typically yield smoother texture continuity between pasted surfaces than any of the spline methods. Sometimes it helps ensuring that pasted features are Chord-length parameterized with the Basis SOP."
                    },
                    "scaletwo": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "camera": {
                        "label": "Camera Name",
                        "summary": "This is used when the Perspective From Camera Texture Type is selected. The menu is used to select which light or camera to project the perspective coordinates from."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "angle": {
                        "label": "Rotate",
                        "summary": "Rotates the texture coordinates the specified value.  Tip: Before applying a spline-based texture projection with the Texture SOP, remap the U and/or V bases of the spline surface (using a Basis SOP) between 0 and 1 to ensure a complete mapping of the texture. If a single texture map must be shared by several surfaces, the surface bases should be concatenated prior to being remapped."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "Scales the texture coordinates a specific amount."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "coord": {
                        "label": "Apply to",
                        "summary": "Select to apply texture coordinates to their Natural Location, Point textures, or Vertex textures.  When Natural location is selected, the UV's will be applied to the verticies when using Polar, Cylindrical, Rows and Columns, and Face texture types.  Orthographic, Uniform Spline, Average Spline and Arc Length Spline will always generate point UV's when you choose Natural.  Natural Location will also create vertex uvs when creating new texture layers, if a vertex uv already exists for layer 0.  IIf the primitive is open in both directions like a grid or a surface (so that the ends do not touch), then the advantage of vertex UV's does not apply since there are no matched seams on the single surface to worry about.  Using vertex UVs gives you unique points at the closed seam whereas point UVs are shared at seams and are, by default given a value of 0 for either U or V depending on the closed direction of the surface. If you want to make a closed surface open, simply insert a Carve SOP in the chain and place a single carve in the surface of the direction that the surface is closed."
                    },
                    "group": {
                        "label": "Primitive Group",
                        "summary": "If there are input primitive groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Does not work with point or vertex groups. Accepts patterns, as described in Pattern Matching."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Offsets the texture coordinates a specific amount."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "texlayer": {
                        "label": "Texture Layer",
                        "summary": "If the geometry has multiple textures layers applied to it, this parameter determines which layer of UV coordinates this Texture SOP will effect."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    }
                },
                "summary": "The Texture SOP assigns texture UV and W coordinates to the Source geometry for use in texture and bump mapping."
            },
            "bonegroupSOP": {
                "label": "Bone Group",
                "parameters": {
                    "bonespergroup": {
                        "label": "Max Bones per Group",
                        "summary": "The maximum number of bones allowed per group of primitives. If there are more bones than this number, a new group is created."
                    },
                    "bonesperpoint": {
                        "label": "Max Bones per Point",
                        "summary": "Trims the number of bones per point by ignoring the bones with the lowest weight until this maximum number is met."
                    }
                },
                "summary": "The Bone Group SOP groups primitives by common bones (shared bones)."
            },
            "groupSOP": {
                "label": "Group",
                "parameters": {
                    "transfer": {
                        "label": "Transfer Selection to Pattern",
                        "summary": "This allows you to define the range of points / primitives visually by selecting them in the Viewport with the Select state. Clicking this button transfers the selected points/primitives into the Pattern field as a compacted range (e.g. 1-23 40 67-100). This eliminates the need for typing the point or primitive numbers manually. Note: Point and primitive selections can be dumped directly into Group fields without use of the Group SOP. Do this by selecting the points or primitives in the Viewport with the Select state. Then the pop-up N menu beside the Group field of the SOP you want to cook should display the selection in the input SOP (e.g. \\\"grid1's Primitive Selection\\\"). Ranges are automatically compacted."
                    },
                    "size": {
                        "label": "Size",
                        "summary": "Dimensions of either the Bounding Box or Bounding Sphere in X, Y and Z."
                    },
                    "usenormal": {
                        "label": "Use Normal",
                        "summary": "This option is used for selecting entities based on the angle of the entity normals. When the Active, the selection options become active and can be used to select entities. The fields available are listed below.               The primary axis and the spread angle from the defined axis define a range of angles. If any entity normals lie within this range, then the associated entity is selected.  For Example: if you want to select the polygons that are very steep in a polygon mountain terrain on the XZ axis. You would set the Direction to be 0, 1, 0 and the spread angle to around 75. This selects all the polygons with normals that lie flat to fairly sloped. You will have grouped all of the polygons that lie flat up to polys that are at a 75 angle from the axis. You are left with all of the polygons that are 76 or greater."
                    },
                    "not3": {
                        "label": "Not",
                        "summary": ""
                    },
                    "dir": {
                        "label": "Direction",
                        "summary": "The default values of 0, 1, 0 create a normal vector straight up in Y, which is perpendicular to the XZ plane, which becomes the primary axis. The 1, 0, 0 points the normal in positive X, giving a normal axis perpendicular to the YZ. The plane may be positioned at an angle by using values typed in (1, 1, 0 gives a 45 angle plane) or interactively by using the direction vector jack. Values between 0 and 1 should be used."
                    },
                    "pattern": {
                        "label": "Pattern",
                        "summary": "Activated when Operation is set to Group by Pattern. In this field, enter the range of primitives to select. The required syntax is \\\"S.P\\\", where S is the index of the parent surface, and P the profile index on that surface. You can mix primitives with profiles in the list. A mixed group is automatically ordered.  For Example: *0.4 2 4 2.5 3.7 selects three profiles and two primitives, *0-100:2 selects every other number from 0 to 100, *0-10:2,3 selects every two of three, *0.0-6 selects six profiles on primitive 0, *0.* selects all profiles on primitive 0, *!4 selects every primitive or point except the fourth, *9-0 selects first ten (in reverse if ordered flag is on), *!0.* selects all profiles except those on primitive 0, ** selects all primitives or points, and no profiles.  See Pattern Matching for details."
                    },
                    "cnvtype": {
                        "label": "Convert Type",
                        "summary": "Converts a group from a point group to a primitive group, and vice versa."
                    },
                    "doangle": {
                        "label": "Edge Angle",
                        "summary": ""
                    },
                    "grp1": {
                        "label": "Group 1",
                        "summary": ""
                    },
                    "oldname": {
                        "label": "Group",
                        "summary": "Allows you to rename an existing group to something else."
                    },
                    "usenumber": {
                        "label": "Use Number",
                        "summary": "Allows selection of grouping of entities by number. When the Enable button is Active, the selection options become active and can be used to select entities. The fields available are listed below."
                    },
                    "convertg": {
                        "label": "Group",
                        "summary": "Name of the group to convert."
                    },
                    "newname": {
                        "label": "New Name",
                        "summary": "Allows you to rename an existing group to something else."
                    },
                    "filter": {
                        "label": "Filter Expression",
                        "summary": "The Filter Expression provided is evaluated for every point/primitive. Wherever it is true, the entity is added. All the local variables of point and primitive are present, though only accessable when the right type of group is being created."
                    },
                    "grp3": {
                        "label": "Group 3",
                        "summary": ""
                    },
                    "entity": {
                        "label": "Entity",
                        "summary": "Primitives or Points."
                    },
                    "dodepth": {
                        "label": "Edge Depth",
                        "summary": ""
                    },
                    "not4": {
                        "label": "Not",
                        "summary": ""
                    },
                    "ordered": {
                        "label": "Create Ordered",
                        "summary": "When selected, elements in the group are traversed in the order they are selected; otherwise they are traversed in creation order."
                    },
                    "not1": {
                        "label": "Not",
                        "summary": ""
                    },
                    "useedges": {
                        "label": "Use Edges",
                        "summary": "Allows you to group primitives by edges."
                    },
                    "geotype": {
                        "label": "Geometry Type",
                        "summary": "Select the geometry type group. The selection will only pertain to the geometry type specified. e.g. If you only wanted to group polygons."
                    },
                    "usebounds": {
                        "label": "Use Bounds",
                        "summary": "This option is used for selecting entities based on bounding volumes: Bounding Box, or Bounding Sphere. When Active, the selection options become active and can be used to select entities. The fields available are listed below. The bounding volume can be seen in the viewport as guide geometry."
                    },
                    "edgeangle": {
                        "label": "Edge Angle",
                        "summary": "Specifies an angle between edges in which to group. Works only for primitive groups."
                    },
                    "point": {
                        "label": "Point Number",
                        "summary": "Enter the specific point numbers (only for point groups)."
                    },
                    "select": {
                        "label": "Select _ of _",
                        "summary": "Activated when Operation is set to Group by Range. Select every nth occurrence of every mth entity in the above Start/End range.  For Example: entering 1 and 2 selects 1 out of every 2 entities."
                    },
                    "cnvtname": {
                        "label": "Convert Name",
                        "summary": "New group name."
                    },
                    "unshared": {
                        "label": "Unshared Edges",
                        "summary": "When selecting points, this option selects the points of a ploygonal mesh which appear on the boundary (i.e. those which are not shared) for inclusion in the group, and orders them. In addition to polygonal meshes, this option also finds the boundaries of geo Hulls and open faces."
                    },
                    "destroyname": {
                        "label": "Group",
                        "summary": "Allows you to delete an existing point or primitive group."
                    },
                    "not2": {
                        "label": "Not",
                        "summary": ""
                    },
                    "op1": {
                        "label": "Operation",
                        "summary": ""
                    },
                    "t": {
                        "label": "Center",
                        "summary": "The X, Y, and Z coordinates of the center of the bounding volume."
                    },
                    "angle": {
                        "label": "Spread Angle",
                        "summary": "The value entered in this field generates an angle of deviation from the primary axis. This can be visualized as a cone where the radius of the base of the cone is defined by the Spread Angle and the axis of the cone is determined by the Direction axis. Viewing the primitive normals in the viewport, you can see that any primitives with normals that have an angle that lies in the range of angles defined by the cone will be selected and grouped."
                    },
                    "boundarygroups": {
                        "label": "Create Boundary Groups",
                        "summary": "When selecting points with the Unshared Edges parameter, this option becomes available. Enabling it creates new groups of the form: <name>__< n> , (two underscores) where the < name> is the Group Name specified in the Create page. Numbers < n> begin at zero, and increment as more groups are created.  These groups contain the points on each boundary of the surface. For example, if you have a grid with a hole in the middle of it, two new point groups are created - one containing the points for the outer boundary and one with the points from the hole. These new point groups are also ordered."
                    },
                    "range": {
                        "label": "Start / End",
                        "summary": "Activated when Operation is set to Group by Range. Select the start and end of the primitive/point number selection."
                    },
                    "op3": {
                        "label": "Operation",
                        "summary": ""
                    },
                    "crname": {
                        "label": "Group Name",
                        "summary": "The name of the group to be created. The default name is set to match the name of the SOP."
                    },
                    "boundtype": {
                        "label": "Bounding Type",
                        "summary": "Selects the type of bounding volume to use"
                    },
                    "groupop": {
                        "label": "Operation",
                        "summary": "When the Number Enable button is checked, this option groups entities based on a defined Pattern or by a Range."
                    },
                    "grp4": {
                        "label": "Group 4",
                        "summary": ""
                    },
                    "grp2": {
                        "label": "Group 2",
                        "summary": ""
                    },
                    "edgestep": {
                        "label": "Edge Depth",
                        "summary": "Enter the depth of the edge (only for point groups)."
                    },
                    "preserve": {
                        "label": "Preserve Original",
                        "summary": "When checked, preserves original geometry."
                    },
                    "camera": {
                        "label": "Backface from",
                        "summary": "This menu allows you to select an object. Typically, a camera object would be chosen. The primitives which are backface when viewed from the object specified will be grouped or selected."
                    },
                    "op2": {
                        "label": "Operation",
                        "summary": ""
                    },
                    "grpequal": {
                        "label": "Group =",
                        "summary": ""
                    }
                },
                "summary": "The Group SOP generates groups of points or primitives according to various criteria and allows you to act upon these groups."
            },
            "rectangleSOP": {
                "label": "Rectangle",
                "parameters": {
                    "modifybounds": {
                        "label": "Modify Bounds",
                        "summary": "If a SOP is connected to the node's input, then the rectangle will be sized based on the bounding box of that SOP. Enabling Modify Bounds allows the resulting rectangle to be further modified by scaling it's size or moving it's center."
                    },
                    "orient": {
                        "label": "Orientation",
                        "summary": "Picks the major plane the rectangle's y-axis orients itself with. Set it to camera if it is to point towards a camera."
                    },
                    "size": {
                        "label": "Size",
                        "summary": "Adjusts the size of the rectangle in X and Y. If the size of the rectangle is being chosen from a Camera, or from a connected input SOP, then this parameter behaves as a scale. Otherwise it will set the size of the rectangle for all other modes."
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": "Create a normal (N) attribute for this geometry."
                    },
                    "camera": {
                        "label": "Camera",
                        "summary": "Specifies which camera to use if Orientation is set to camera."
                    },
                    "t": {
                        "label": "Center",
                        "summary": "These X, Y, and Z Values determine where the center of the Rectangle is located. If the position of the rectangle is being chosen from a Camera, or from a connected input SOP, then this parameter behaves as an offset. Otherwise it will set the center of the rectangle for all other modes."
                    },
                    "camz": {
                        "label": "Camera Z",
                        "summary": "Used when using 'Fill Camera View'. Camera Z is an arbitrary distance you specify from the camera. It will move the rectangle so it is this many units away from the camera, then scale the rectangle so it fills the viewer."
                    },
                    "texture": {
                        "label": "Texture Coordinates",
                        "summary": "Texture addes (0,1) coordinates to the vertices when set to Face. Creates a rectangle without uv attributes when set to Off."
                    }
                },
                "summary": "The Rectangle SOP creates a 4-sided polygon. It is a planar surface."
            },
            "curveclaySOP": {
                "label": "Curveclay",
                "parameters": {
                    "divs": {
                        "label": "Divisions on Face",
                        "summary": "The number of points to evaluate on the proles or the faces. This SOP works by using a straight line approximation of the given curve to deform the surface. Thus, more segments are slower, but the result looks better. Fewer divisions need to be specified when deforming proles and when the rest and deforming faces have an equal number of breakpoints."
                    },
                    "projop": {
                        "label": "Projection Axis",
                        "summary": "Choice of several projection axes:"
                    },
                    "facegroup": {
                        "label": "Face Group",
                        "summary": "Subset of faces (NURBS, B\\u00e9zier, Polygons) to project, or subset of proles to deform, depending on how many inputs are connected. Examples include: 0.5 1.2-3.9 5.*  This group can even take surfaces (possibly intermixed with profile curves) when the 2nd input is not present, indicating that all the surface\\u2019s proles must be used.  Then, the example above becomes: 0.5 1.2-3.9 5"
                    },
                    "projdir": {
                        "label": "",
                        "summary": ""
                    },
                    "deformop": {
                        "label": "Displacement Axis",
                        "summary": "Choice of several projection axes:"
                    },
                    "surfgroup": {
                        "label": "Surface Group",
                        "summary": "Subset of spline surfaces to be deformed when all three SOP inputs are connected."
                    },
                    "deforminside": {
                        "label": "Deform Inside of Loop",
                        "summary": "Check if the inside of closed loops should be deformed."
                    },
                    "refine": {
                        "label": "Refinement",
                        "summary": "Usually, CurveClay automatically renes the surface. However, you may specify some degree of renement control. In general, the more rened the surface is, the smoother the result. Better renement results in a denser surface. You should experiment with values between -1 and 1. When the value is negative, the SOP will rst rene the surface to the same detail level as when renement is 0, and then it unrenes it. The lower the value, the more unrened it becomes."
                    },
                    "deformdir": {
                        "label": "",
                        "summary": ""
                    },
                    "deformlen": {
                        "label": "Distance",
                        "summary": "Distance deformed along the vector."
                    },
                    "sharp": {
                        "label": "Sharpness",
                        "summary": "Species the area around the face to deform. The larger the sharpness is, the smaller the deformation area around them (thus having a sharper pull on the surface)."
                    },
                    "individual": {
                        "label": "Consider Profiles Individually",
                        "summary": "Check if multiple curves form a closed loop."
                    }
                },
                "summary": "The Curveclay SOP is similar to the Clay SOP in that you deform a spline surface not by modifying the CVs but by directly manipulating the surface."
            },
            "alignSOP": {
                "label": "Align",
                "parameters": {
                    "align": {
                        "label": "Align",
                        "summary": "Can optionally align subgroups of n primitives or every nth primitive in a cyclical manner."
                    },
                    "rightuv": {
                        "label": "Right UV",
                        "summary": "Pivot location for each \\\"right\\\" primitive."
                    },
                    "dotrans": {
                        "label": "Translate",
                        "summary": "When enabled, translates primitives during alignment by translating the left UV position to the right UV position."
                    },
                    "inc": {
                        "label": "N",
                        "summary": "Determines the number of primitives to be either grouped or skipped. Example: Assume there are six primitives numbered for 0 - 5, and N = 2. Then:  a)b)"
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "Allows you to perform a post-alignment transformation. Specify the amount of translation about the local xyz axes."
                    },
                    "rightuvend": {
                        "label": "Right UV End",
                        "summary": "If an auxiliary input is used, this location specifies an end point for the alignment. Left primitives are then distributed uniformly between the Right UV and the Right UV End."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "Allows you to perform a post-alignment transformation. Specify the amount of scaling about the local xyz axes."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "Sets the overall transform and rotation order for the transformations. The transform and rotation order determines the order in which transformations take place. Depending on the order, you can achieve different results using the exact same values."
                    },
                    "leftuv": {
                        "label": "Left UV",
                        "summary": "Pivot Location for each \\\"left\\\" primitive."
                    },
                    "bias": {
                        "label": "Bias",
                        "summary": "Determines which primitive remains unaffected: 0 Left, 1 Right."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "Sets the overall transform and rotation order for the transformations. The transform and rotation order determines the order in which transformations take place. Depending on the order, you can achieve different results using the exact same values."
                    },
                    "dorotate": {
                        "label": "Rotate",
                        "summary": "When enabled, rotates primitives during alignment by aligning the left UV tangents (at the left UV position) to the right UV tangents (at the right UV position)."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "Allows you to perform a post-alignment transformation. Specify the amount of rotation about the local xyz axes."
                    },
                    "individual": {
                        "label": "Individual Alignment",
                        "summary": "Causes each primitive of the input to be aligned. If unchecked, only the first primitive is aligned and all others are placed relative to it, preserving the spatial layout of the left primitives."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "Allows you to perform a post-alignment transformation. Specify the amount of translation / rotation / scaling about the local xyz axes"
                    },
                    "group": {
                        "label": "Group",
                        "summary": "A subset of primitives to align (accepts patterns, as described in Pattern Matching in the Scripting Guide). If blank, it aligns the entire input."
                    }
                },
                "summary": "The Align SOP aligns a group of primitives to each other or to an auxiliary input, by translating or rotating each primitive along any pivot point."
            },
            "lsystemSOP": {
                "label": "LSystem",
                "parameters": {
                    "generations": {
                        "label": "Generations",
                        "summary": "Determines the number of times to apply the rules to the initial string. This value controls the growth of the L-system. Place a time-based function here to animate the L-system growth."
                    },
                    "gravity": {
                        "label": "Gravity",
                        "summary": "This parameter determines the amount of gravity applied to the geometry via the T (tropism vector) turtle operator. Tropism is when a plant bends or curves in response to an external stimulus. L-systems employ a tropism vector to simulate this behaviour. The bending is characterised by the fact that the thicker or shorter parts bend less than the longer or thinner parts."
                    },
                    "contlength": {
                        "label": "Continuous Length",
                        "summary": "Calculates the incremental lengths of the geometry points if a non-integer generational value is used. As with Continuous Angles, if the Generations field is animating, this should be set to ensure smooth, continuous growth. The Continuous Width field applies to tube thickness."
                    },
                    "thickinit": {
                        "label": "Thickness",
                        "summary": "This number defines the default tube thickness."
                    },
                    "vertinc": {
                        "label": "Vertical Increment",
                        "summary": "Defines the vertical spacing of texture coordinates over tube geometry when tube texture is applied."
                    },
                    "pictop": {
                        "label": "Pic Image TOP",
                        "summary": "This is the TOP which the pic() function uses. See #Expressions L-system Specific Expression Functions below."
                    },
                    "colormap": {
                        "label": "Image File",
                        "summary": "Defines a TOP to use when the Apply Color button is selected. Also see the ` and # turtle operators."
                    },
                    "rows": {
                        "label": "Rows",
                        "summary": "The first option sets the number of tube sides and the second sets the number of divisions per step length if tube geometry is selected."
                    },
                    "contangl": {
                        "label": "Continuous Angles",
                        "summary": "Calculates the incremental angles of branches, if a non-integer generational value is used. If the Generations field is animating, this should be set to ensure smooth growth."
                    },
                    "randscale": {
                        "label": "Random Scale",
                        "summary": "Random Scale as a percentage. This will apply a random scale to the changing geometry's lengths, angles and thickness."
                    },
                    "chanprefix": {
                        "label": "Channel Prefix",
                        "summary": "If the expression chan(n) is encountered, it is replaced with the local channel prefixed with this label and ending with the ascii value of n."
                    },
                    "stampa": {
                        "label": "Leaf Param A",
                        "summary": "You can determine which parameters are used by leaves. See #CreateGroup Creating Groups within L-systems below for an example."
                    },
                    "dotexture": {
                        "label": "Apply Tube Texture Coordinates",
                        "summary": "When enabled, UV texture coordinates are applied to the tube segments, such that the texture wraps smoothly and continuously over branches."
                    },
                    "tension": {
                        "label": "Tension",
                        "summary": "Tension defines the smoothness of branching corners."
                    },
                    "smooth": {
                        "label": "Branch Blend",
                        "summary": "Enabling this option allows a child branch to be continuously joined to its parent branch."
                    },
                    "stampb": {
                        "label": "Leaf Param B",
                        "summary": "You can determine which parameters are used by leaves. See #CreateGroup Creating Groups within L-systems below for an example."
                    },
                    "vard": {
                        "label": "Variable d",
                        "summary": "Substitutes user-defined b, c and d variables in rules or premise. These variables are expanded and so may include system variables such as $F and $T."
                    },
                    "thickscale": {
                        "label": "Thickness Scale",
                        "summary": "This number is the scale factor used with the ! or ? operator."
                    },
                    "rules": {
                        "label": "Rules DAT",
                        "summary": "Path to the DAT defining the rules for the LSystem.  *Context Ignore context_ignore: - Defining this in the Rules DAT specifies all characters which are to be skipped when testing context sensitivity in the rules below. *Premise premise: - Define an initial string of characters to which the substitution rules are applied. *Rules - This is where the turtle substitution rules are defined."
                    },
                    "contwidth": {
                        "label": "Continuous Width",
                        "summary": "Calculates the incremental lengths of the geometry points if a non-integer generational value is used. As with Continuous Angles, if the Generations field is animating, this should be set to ensure smooth, continuous growth. The Continuous Width field applies to tube thickness."
                    },
                    "randseed": {
                        "label": "Random Seed",
                        "summary": "Random Seed for the SOP. This value can be used to select different sequences of random values."
                    },
                    "type": {
                        "label": "Type",
                        "summary": "Provides two options for output geometry:"
                    },
                    "stepscale": {
                        "label": "Step Size Scale",
                        "summary": "Step Size Scale defines the scale by which the geometry will be modified by the \\\" or _ (double quote, or underscore) turtle operators."
                    },
                    "angleinit": {
                        "label": "Angle",
                        "summary": "Angle defines the default turning angle for turns, rolls and pitches."
                    },
                    "stampc": {
                        "label": "Leaf Param C",
                        "summary": "You can determine which parameters are used by leaves. See #CreateGroup Creating Groups within L-systems below for an example."
                    },
                    "stepinit": {
                        "label": "Step Size",
                        "summary": "Step Size allows you to define the default length of the edges when new geometry is generated."
                    },
                    "pointwidth": {
                        "label": "Point Width Attribute",
                        "summary": ""
                    },
                    "varc": {
                        "label": "Variable c",
                        "summary": "Substitutes user-defined b, c and d variables in rules or premise. These variables are expanded and so may include system variables such as $F and $T."
                    },
                    "grpprefix": {
                        "label": "Group Prefix",
                        "summary": "If the production g(n) is encountered, all subsequent geometry is included in a primitive group prefixed with this label and ending with the ascii value of n. See #CreateGroup Creating Groups within L-systems below for an example."
                    },
                    "docolor": {
                        "label": "Apply Color",
                        "summary": "Use a TOP to apply color to the L-system as it grows."
                    },
                    "varb": {
                        "label": "Variable b",
                        "summary": "Substitutes user-defined b, c and d variables in rules or premise. These variables are expanded and so may include system variables such as $F and $T."
                    },
                    "inc": {
                        "label": "UV Increment",
                        "summary": "Defines the default color U, V index increments when the turtle symbols ` or # are used."
                    },
                    "cols": {
                        "label": "Columns",
                        "summary": "The first option sets the number of tube sides and the second sets the number of divisions per step length if tube geometry is selected."
                    },
                    "anglescale": {
                        "label": "Angle Scale",
                        "summary": "Angle Scale allows you to enter the scaling factor to be employed when the ; or @ operators are used."
                    }
                },
                "summary": "The Lsystem SOP implements L-systems (Lindenmayer-systems, named after Aristid Lindenmayer (1925-1989)), allow definition of complex shapes through the use of iteration."
            },
            "kinectSOP": {
                "label": "Kinect",
                "parameters": {
                    "skeleton": {
                        "label": "Skeleton",
                        "summary": "Only used for Kinect 1 devices. Specify whether to track full skeleton or seated skeleton."
                    },
                    "sensor": {
                        "label": "Sensor",
                        "summary": "Selects which Kinect sensor to use. Only available when using Kinect v1."
                    },
                    "neardepthmode": {
                        "label": "Near Depth Mode",
                        "summary": "Only used for Kinect 1 devices. Enables near mode which allows camera to see objects as close as 40cm to the camera (instead of the default 80cm)."
                    },
                    "hwversion": {
                        "label": "Hardware Version",
                        "summary": "Only Kinect v1 sensors supported at this time."
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": "Creates normals on the geometry."
                    }
                },
                "summary": "The Kinect SOP uses the Kinect v1 sensor to scan and create geometry."
            },
            "holeSOP": {
                "label": "Hole",
                "parameters": {
                    "unbridge": {
                        "label": "Unbridge Holes",
                        "summary": "This function checks for bridges to holes in the input and removes the bridges, leaving the interior freestanding. At times you may need to unhole faces so that you can connect them in some other way."
                    },
                    "dist": {
                        "label": "Distance Tolerance",
                        "summary": "Interior polygons that are not in exactly the same plane as the exteriors can still become holes. The Distance Tolerance value tells the Hole SOP how far away potential holes can be from the exterior surfaces. Faces beyond this distance will not become holes."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    },
                    "angle": {
                        "label": "Angle Tolerance",
                        "summary": "Interior faces that are rotated in relation to the exterior faces can become holes. The Angle value sets the maximum rotation of the potential holes from the exteriors. Faces beyond this rotation will not become holes."
                    },
                    "snap": {
                        "label": "Snap Holes to Outlines",
                        "summary": "Points of any holes that are rotated or translated away from the exterior (or outline) plane will be moved so that they lie on the surface of the outline plane, thus avoiding twisted faces."
                    }
                },
                "summary": "The Hole SOP is for making holes where faces are enclosed, even if they are not in the same plane. It can also remove existing holes from the input geometry."
            },
            "mergeSOP": {
                "label": "Merge",
                "parameters": {},
                "summary": "The Merge SOP merges geometry from multiple SOPs."
            },
            "bridgeSOP": {
                "label": "Bridge",
                "parameters": {
                    "frenet": {
                        "label": "Use",
                        "summary": "Specifies the type of normal to use for computing direction:"
                    },
                    "order": {
                        "label": "Order",
                        "summary": "Sets the spline order for both profile extraction and skinning operations."
                    },
                    "scalet": {
                        "label": "Scale  Tangents",
                        "summary": "The scaling and rotation parameters contain three fields. The rotation fields (degrees) apply further rotation to the tangents, while the scale parameter further scales the tangents."
                    },
                    "isodivs": {
                        "label": "Min X-Sections",
                        "summary": "The minimum number of cross-sections in the resulting skin. If you create a high-density surface, TouchDesigner's level of detail may display the surface less smoothly than it actually is. You can increase the level of detail by adjusting the viewdisplay options (e.g. viewdisplay -l 1.5 SOPmain.persp1 ) for the Viewport.  Production Tip: If, in generating a smooth surface, you create an extremely complex surface, some of the complexity can be removed without damaging the appearance of the surface by appending a Refine SOP, and using its Unrefine option. In the Refine SOP, set the First U parameter to zero and, in the Unrefine option's parameters, set the U value close to the order of the surface created in the Bridge SOP."
                    },
                    "inc": {
                        "label": "N",
                        "summary": "Determines the pattern of primitives to bridge using this SOP."
                    },
                    "csharp": {
                        "label": "Preserve Sharp Corners",
                        "summary": "Enables or disables fitting of sharp turns. If cracks appear in the resulting skin, Preserve Sharp Corners is usually a good solution; however, it may add additional knots which can create undesirable \\\"ripples\\\" in some cases.  If this option is disabled, fewer isoparms are generated and the surface may not follow the contours of the profile curves perfectly unless the profile curves were built using the Preserve Sharp Corners option."
                    },
                    "bridge": {
                        "label": "Bridge",
                        "summary": "Allows bridging of subgroups of N primitives or patterns of primitives."
                    },
                    "circular": {
                        "label": "Circular Arc Fillet",
                        "summary": "Tells TouchDesigner to try to generate a round fillet rather than a free-form fillet. Only the sign (positive or negative) of the tangent scales is used; the scale magnitude is ignored when building a circular fillet.  The radius of the fillet is computed automatically and adjusted according to the distance between the rails (curves and/or profiles) and their tangents."
                    },
                    "tolerance": {
                        "label": "Tolerance",
                        "summary": "Precision of 2-D fitting algorithm."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "The Group edit field allows you to enter profile groups for profiles and/or faces to bridge. This is optional if you have regular geometric curves or surfaces, however, you must enter something here in order for Bridge to work with profile curves. For example *.0 will Bridge the 0th (first) profiles of all incoming primitives.  Note: Always specify the curves on surface if you want the Bridge SOP bridge curves on surfaces; otherwise it will attempt to bridge free-floating curves."
                    },
                    "sdivs": {
                        "label": "Divisions per Span",
                        "summary": "Number of 2-D points evaluated in each span."
                    },
                    "rotatet": {
                        "label": "Rotate Tangents",
                        "summary": "The scaling and rotation parameters contain three fields. The rotation fields (degrees) apply further rotation to the tangents, while the scale parameter further scales the tangents."
                    },
                    "curvature": {
                        "label": "Use Curvature",
                        "summary": "Takes curvature into consideration as well."
                    },
                    "scalec": {
                        "label": "Scale Curvatures",
                        "summary": "Further scaling of the curvature.  Note: If the resulting skin bulges too greatly, you can achieve a smooth resulting transition between surfaces by disabling the Preserve Tangent & Preserve Curvature Magnitude parameters, and manually tweaking the Tangent Scales and the Curvature Scales. In general, avoid tweaking the Rotations of the Tangents unless you wish to deform the resulting surface.  If the bridge bulges on one side but not the other, try increasing the Min. Number of Cross sections in the bridge."
                    }
                },
                "summary": "The Bridge SOP is useful for skinning trimmed surfaces, holes, creating highly controllable joins between arms and body, branches or tube intersections."
            },
            "choptoSOP": {
                "label": "CHOP to",
                "parameters": {
                    "endpos": {
                        "label": "End Position",
                        "summary": ""
                    },
                    "chanscope": {
                        "label": "Channel Scope",
                        "summary": "The names to use to modify the attributes."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Modify only the points within this point group. If blank, all points are modified. Accepts patterns, as described in: Pattern Matching."
                    },
                    "chop": {
                        "label": "CHOP",
                        "summary": "Specifies which CHOP Network / CHOP contains the sample data to fetch."
                    },
                    "compnml": {
                        "label": "Compute Normals",
                        "summary": "Creates normals on the geometry."
                    },
                    "startpos": {
                        "label": "Start Position",
                        "summary": ""
                    },
                    "mapping": {
                        "label": "Mapping",
                        "summary": "Determines how the CHOP samples are mapped to the geometry points."
                    },
                    "comptang": {
                        "label": "Compute Tangents",
                        "summary": "Creates tangents on the geometry."
                    },
                    "organize": {
                        "label": "Organize by Attribute",
                        "summary": "Instead of using the point index, use the value of this attribute as the index to use when looking up into the CHOP."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "The sample data fetch method:"
                    },
                    "attscope": {
                        "label": "Attribute Scope",
                        "summary": "A string list of attributes to modify in the SOP. List of Common Attributes:  * P - Point position (X, Y, Z) - 3 values * Pw - Point weight - 1 value * Cd - Point color (red, green, blue, alpha) - 4 values * N - Point normal (X, Y, Z) - 3 values * uv - Point texture coordinates (U, V, W) - 3 values  See List of Attributes for a complete listing of attributes."
                    }
                },
                "summary": "The CHOP to SOP takes CHOP channels and generates 3D polygons in a SOP."
            },
            "projectSOP": {
                "label": "Project",
                "parameters": {
                    "sdivs": {
                        "label": "Divisions per Span",
                        "summary": "The number of points to be computed on the spatial face between successive spans. A span is the line connecting two consecutive CVs on a polygon, or the arc between two breakpoints on a spline curve. The projection tends to become more accurate as the number of divisions increases."
                    },
                    "axis": {
                        "label": "Axis",
                        "summary": "The axis along which the four corners of the feature are projected onto the base. When adding the feature from the outside as a Vector paste."
                    },
                    "order": {
                        "label": "Order",
                        "summary": "The spline order of the resulting profile curve. The type of curve (Bzier or NURBS) is inherited from the spatial curve. The order, however, is not inherited because the spline order provides useful control over the quality of the fit. If the spatial face is a polygon, the profile will be a NURBS curve."
                    },
                    "urange": {
                        "label": "U Range",
                        "summary": "Indicates in percentages what part of the U surface domain is the mapping area. A full range of 0-1 will cause the profiles to be mapped to the entire domain in the U parametric direction. The range is not restricted to the 0-1 interval."
                    },
                    "facegroup": {
                        "label": "Face Group",
                        "summary": "The group of faces to be projected onto the spline surfaces. Accepts patterns, as described in Pattern Matching."
                    },
                    "ufrom": {
                        "label": "U from",
                        "summary": "Specifies which of the spatial coordinates - X, Y, or Z - must be mapped to the U parametric direction of the surface."
                    },
                    "csharp": {
                        "label": "Preserve Sharp Corners",
                        "summary": "Controls the precision with which sharp corners in the projection curve are interpolated. It should be on when the projection has areas of high changes in curvature."
                    },
                    "rtolerance": {
                        "label": "Ray Tolerance",
                        "summary": "Controls the precision of the ray intersection with the surface. The ray is cast along the projection vector from every point of the 3-D curve."
                    },
                    "accurate": {
                        "label": "Super Accurate Projection",
                        "summary": "Use a very accurate yet expensive algebraic pruning algorithm to determine the intersection of the vector with the surface."
                    },
                    "vfrom": {
                        "label": "V from",
                        "summary": "Specifies which of the spatial coordinates - X, Y, or Z - must be mapped to the V parametric direction of the surface."
                    },
                    "surfgroup": {
                        "label": "Surface Group",
                        "summary": "The group of surfaces to project faces onto. Accepts patterns, as described in Pattern Matching."
                    },
                    "vector": {
                        "label": "Vector",
                        "summary": "The X, Y, and Z components of the projection vector if none of the main axes is chosen in the Axis parameter above."
                    },
                    "vrange": {
                        "label": "V Range",
                        "summary": "Indicates in percentages what part of the V surface domain is the mapping area. A full range of 0-1 will cause the profiles to be mapped to the entire domain in the V parametric direction. The range is not restricted to the 0-1 interval."
                    },
                    "projside": {
                        "label": "Side",
                        "summary": ""
                    },
                    "maptype": {
                        "label": "Mapping Type",
                        "summary": ""
                    },
                    "cycle": {
                        "label": "Cycle Type",
                        "summary": ""
                    },
                    "ftolerance": {
                        "label": "Fit Tolerance",
                        "summary": "Controls the 2-D fitting precision and is typically less than 0.01."
                    },
                    "uvgap": {
                        "label": "Max UV Gap (%)",
                        "summary": "This specifies what percentage of the size of the surface domain is acceptable for two separate profiles to be joined into a single curve."
                    },
                    "userange": {
                        "label": "Map Profile to Range:",
                        "summary": "This option is on by default. It causes the profile to be scaled and translated to fit within the surface's domain ranges described below. If this option is off, the profile's coordinates are mapped onto the surface domain without any transformation; consequently, the profile will not be visible if its points are not inside the domain of the target surface.  Typically, the projected face should not be mapped to the U/V range if it was previously extracted from the same surface using the Profile SOP with the Parametrically to XY option selected. The extraction and re-projection tandem can be very useful in achieving the modeling goals currently attainable only with 3D curves. Such tasks include the ability to edit the points of a profile, joining, stitching, or filleting profiles together, carving or refining profiles, etc. By extracting a profile parametrically to XY, Touch creates a 3D face that is identical to the 2D profile but has an additional (constant) Z component.  The resulting 3D curve can be modeled using all the 3D tools available. Finally, the modeled 3D face can be reapplied onto the surface parametrically, making sure that the range mapping option is off."
                    }
                },
                "summary": "The Project SOP creates curves on surface (also known as trim or profile curves) by projecting a 3D face onto a spline surface, much like a light casts a 2D shadow onto a 3D surface."
            },
            "metaballSOP": {
                "label": "Metaball",
                "parameters": {
                    "kernel": {
                        "label": "Kernel Function",
                        "summary": "There are four different metaball interpretations: Wyvill, Elendt, Blinn and Links. See the Geometry articles for illustrations of the differences between these."
                    },
                    "expxy": {
                        "label": "XY Exponent",
                        "summary": "The XY Exponent determines inflation / contraction in the X and Y axes."
                    },
                    "expz": {
                        "label": "Z Exponent",
                        "summary": "The Z Exponent determines inflation / contraction in the Z axis."
                    },
                    "modifybounds": {
                        "label": "Modify Bounds",
                        "summary": ""
                    },
                    "metaweight": {
                        "label": "Weight",
                        "summary": "Defines the weight of the Metaball iso-surface within metaball field. An increase in weight makes the density of the metaball greater, and thus the defined implicit surface of it and surrounding metaballs will be enlarged."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "rad": {
                        "label": "Radius",
                        "summary": "Controls the radius of the metaball field."
                    },
                    "t": {
                        "label": "Center",
                        "summary": "Metaball center in X, Y and Z."
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": ""
                    }
                },
                "summary": "The Metaball SOP creates metaballs and meta-superquadric surfaces."
            },
            "traceSOP": {
                "label": "Trace",
                "parameters": {
                    "doresample": {
                        "label": "Resample Shapes",
                        "summary": "Determines level of refinement (number of points) for generating trace outlines."
                    },
                    "top": {
                        "label": "TOP Name",
                        "summary": "Specify the TOP image to trace."
                    },
                    "convpoly": {
                        "label": "Convert to Poly",
                        "summary": "This option will convert the above curves back into polygons."
                    },
                    "step": {
                        "label": "Step Size",
                        "summary": "Value controlling trace outline refinement when Resample Shapes is checked."
                    },
                    "error": {
                        "label": "Fitting Error",
                        "summary": "Value controlling accuracy of the above curve fitting process. For best results, the input should retain as many points as possible, i.e. do not select Smooth Shapes or Resample Shapes."
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": "Creates normals on the geometry."
                    },
                    "delborder": {
                        "label": "Remove Borders",
                        "summary": "When enabled, this option eliminates extraneous data along the edges of the original image so it isn't traced. This is useful for when \\\"dirty\\\" edges exist in the original image that you don't want traced."
                    },
                    "fitcurve": {
                        "label": "Fit to Curves",
                        "summary": "If selected, the geometry at this point is converted to two-dimensional Bzier curves. Flat edges are preserved in polygons."
                    },
                    "bordwidth": {
                        "label": "Border Width",
                        "summary": "The number of pixels the removal border should be."
                    },
                    "hole": {
                        "label": "Hole Faces",
                        "summary": "This will bridge all holes in the output so that they may be rendered properly. Bzier curves and polygons can be holed, but polygonal holing sometimes produces better results. You may want to use the Convert to Poly option before holing."
                    },
                    "thresh": {
                        "label": "Threshold",
                        "summary": "Brightness level value adjusts where trace outline in image occurs."
                    },
                    "addtexture": {
                        "label": "Add Point Texture",
                        "summary": "This option allows the generation of point texture coordinates (UVs). This may occasionally be necessary when the Convert to Poly option is enabled."
                    },
                    "lod": {
                        "label": "Level of Detail",
                        "summary": "This value controls the accuracy of the conversion back into polygons."
                    },
                    "corner": {
                        "label": "Corner Delta",
                        "summary": "Value controlling corner smoothing when Smooth Shapes is checked."
                    },
                    "dosmooth": {
                        "label": "Smooth Shapes",
                        "summary": "When this option is checked, the geometry is filtered to remove sharp corners."
                    }
                },
                "summary": "The Trace SOP reads an image file and automatically traces it, generating a set of faces around areas exceeding a certain brightness threshold."
            },
            "raySOP": {
                "label": "Ray",
                "parameters": {
                    "jitter": {
                        "label": "Jitter Scale",
                        "summary": "Controls the perturbation of the extra sample rays."
                    },
                    "bounces": {
                        "label": "Bounces",
                        "summary": ""
                    },
                    "sample": {
                        "label": "Sample",
                        "summary": "This value determines the number of rays sent per point. If greater than one, the remaining rays are perturbed randomly, and averaged."
                    },
                    "newgrp": {
                        "label": "Create Point Group",
                        "summary": "If selected, it will create a point group containing all the points which were intersected successfully."
                    },
                    "lift": {
                        "label": "Lift",
                        "summary": "This value further offsets the surface input by offsetting it in the direction of its normal."
                    },
                    "dotrans": {
                        "label": "Transform Points",
                        "summary": "If selected, it will transform the input points as defined below. Leave this off when only interested in updating the source point attributes."
                    },
                    "seed": {
                        "label": "Seed",
                        "summary": "Allows a different random sequence at higher sampling rates."
                    },
                    "bouncegeo": {
                        "label": "Save Bounce Geometry",
                        "summary": ""
                    },
                    "putdist": {
                        "label": "Point Intersection Distance",
                        "summary": "If selected, updates each point intersected with the distance to the collision surface. If the point doesn't intersect at the collision surface a distance of 0 is used. This value is placed in the $DIST point attribute, accessible from the Point SOP."
                    },
                    "normal": {
                        "label": "Point Intersection Normal",
                        "summary": "If selected, updates each point in the source geometry with the normal at the collision surface it intersects with. If the point doesn't intersect at the collision surface, a normal of (0,0,0) is used."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "A value of zero will leave the input point unaffected. A value of one will land the point on the intersection surface. Negative values and values > 1 are also valid."
                    },
                    "lookfar": {
                        "label": "Intersect Farthest Surface",
                        "summary": "If selected, this option allows the user to choose between intersecting with the closest intersecting object or the furthest. See example, below."
                    },
                    "method": {
                        "label": "Method",
                        "summary": ""
                    },
                    "hitgrp": {
                        "label": "Ray Hit Group",
                        "summary": "Specifies the name of the above point group."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    }
                },
                "summary": "The Ray SOP is used to project one surface onto another."
            },
            "sequenceblendSOP": {
                "label": "Sequence Blend",
                "parameters": {
                    "donml": {
                        "label": "Blend Normals",
                        "summary": "Point normals are blended."
                    },
                    "dopos": {
                        "label": "Blend Position",
                        "summary": "If checked, only point xyz positions are blended."
                    },
                    "blend": {
                        "label": "Blend Factor",
                        "summary": "This value determines the blend transition between consecutive geometry inputs. Values between 0 and 1 will control the metamorphosis between geometry input 1 and 2, values between 1 and 2 will control the metamorphosis between geometry input 2 and 3, and so on."
                    },
                    "doclr": {
                        "label": "Blend Colors",
                        "summary": "Point Colors are blended."
                    },
                    "douvw": {
                        "label": "Blend Texture",
                        "summary": "Point texture coordinates are blended."
                    },
                    "doup": {
                        "label": "Blend Up",
                        "summary": "When checked, the Up Vector of the geometry inputs will be blended based on the weights of the blend channels."
                    }
                },
                "summary": "The Sequence Blend SOP allows you do 3D Metamorphosis between shapes and Interpolate point position, colors, point normals, and texture coordinates between shapes."
            },
            "dattoSOP": {
                "label": "DAT to",
                "parameters": {
                    "n": {
                        "label": "N",
                        "summary": "Number of points used for building primitives."
                    },
                    "prtype": {
                        "label": "Particle Type",
                        "summary": ""
                    },
                    "merge": {
                        "label": "Merge",
                        "summary": "Specify whether to merge point data or primitive data. This parameter is only enabled when there is an input connected to the SOP."
                    },
                    "primsdat": {
                        "label": "Primitives DAT",
                        "summary": "DAT with primitive data. The optional index indicates the primitive number, if none is specified, row number will be used. Column headings are required; vertices list the point numbers in order, close indicates whether the primitive is a closed or open curve. Attributes are specified in the same manner as for points.  Sample primitive data:     indexverticescloseCd(0)Cd(1)Cd(2)Cd(3)     00 1 2 310.2111     14 5 6 710.20.20.51     28 9 10 1110.20.20.21 Common attributes include the color and alpha Cd(0) Cd(1) Cd(2) Cd(3). See Primitive Attributes for a list of attributes."
                    },
                    "pointsdat": {
                        "label": "Points DAT",
                        "summary": "DAT with point data. The optional index indicates the point number, if none is specified, row number will be used. Attributes can be specified in attribute_name(attribute_index). If there are no named column headings for the Point DAT, the index column should be removed and the list of attributes is assumed to be in order P(0) P(1) P(2) Pw Cd(0) Cd(1) Cd(2) Cd(3) N(0) N(1) N(2) uv(0) uv(1) uv(2) for the first 14 columns. Sample point data:     indexP(0)P(1)P(2)PwN(0)N(1)N(2)     0-0.5-0.5-0.5100-1     1-0.50.5-0.5100-1     20.50.5-0.5100-1     30.5-0.5-0.5100-1     ... The common columns attributes include point position P(0) P(1) P(2), point weight Pw, the color and alpha Cd(0) Cd(1) Cd(2) Cd(3), texture coordinates uv(0) uv(1) uv(2), and point normal N(0) N(1) N(2).   See Point Attributes for a list of attributes."
                    },
                    "int": {
                        "label": "Add Int Attributes",
                        "summary": "Add a non-standard attribute specified in the point or primitive DAT as an int. It will not be added if it has already been specified in the Float attributes."
                    },
                    "closed": {
                        "label": "Closed U",
                        "summary": "Closed curves in U."
                    },
                    "build": {
                        "label": "Build",
                        "summary": "Specifies how to build geometry."
                    },
                    "verticesdat": {
                        "label": "Vertices DAT",
                        "summary": "DAT with vertex data.  index indicates the primitive number and vindex the vertex number in that primitive.  Attributes are specified in the same manner as for points.  ample vertex data:     indexvindexuv(0)uv(1)uv(2)     00000     01010     02110     03100     10100     11110     12111     13101     ... Common attributes include the color and alpha Cd(0) Cd(1) Cd(2) Cd(3), texture coordinates uv(0) uv(1) uv(2), and vertex normal N(0) N(1) N(2).  See Vertex Attributes for a list of attributes."
                    },
                    "closedv": {
                        "label": "Closed V",
                        "summary": "Closed curves in V."
                    },
                    "connect": {
                        "label": "Connectivity",
                        "summary": "Connectivity of polygons."
                    },
                    "detaildat": {
                        "label": "Detail DAT",
                        "summary": "DAT with detail data. Attribute names are specified on the first row and attribute data on the second row. Sample detail data:     pCaptPathpCaptData(0)pCaptData(1)pCaptData(2)...     /bone1/cregion 03.333330..."
                    },
                    "string": {
                        "label": "Add String Attributes",
                        "summary": "Add a non-standard attribute specified in the point or primitive DAT as a string. It will not be added if it has already been specified in the Float or Int attributes."
                    },
                    "float": {
                        "label": "Add Float Attributes",
                        "summary": "Add a non-standard attribute specified in the point or primitive DAT as a float."
                    }
                },
                "summary": "The DAT to SOP can be used to create geometry from DAT tables, or if a SOP input is specified, to modify attributes on existing geometry."
            },
            "linethickSOP": {
                "label": "Line Thick",
                "parameters": {
                    "divisions": {
                        "label": "Divisions",
                        "summary": "Number of Divisions (Columns) in the surface geometry created."
                    },
                    "domain": {
                        "label": "Domain",
                        "summary": "Fraction of the input curve that is used to create the new surface geometry. Domain1 sets position on the curve for Startwidth, Domain2 sets position on the curve for Endwidth."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns."
                    },
                    "symmetric": {
                        "label": "Symmetric",
                        "summary": "When this is selected, the Endwidth is positioned at the middlepoint on the curve between Domain1 and Domain2. Startwidth is placed at Domain1 and Domain2. The result is a symmetric surface."
                    },
                    "startwidth": {
                        "label": "Start Width",
                        "summary": "Controls the width of the surface created at the start of the line. Startwidth1 adjusts the width on the inside of the curve, Startwidth2 adjusts the width on the outside of the curve."
                    },
                    "shape": {
                        "label": "Shape",
                        "summary": "This menu selects the type of interpolation used between Startwidth and Endwidth."
                    },
                    "rows": {
                        "label": "Rows",
                        "summary": "Number of Rows in the surface geometry created."
                    },
                    "endwidth": {
                        "label": "End Width",
                        "summary": "Controls the width of the surface created at the end of the line. Endwidth1 adjusts the width on the inside of the curve, Endwidth2 adjusts the width on the outside of the curve."
                    }
                },
                "summary": "The Line Thick SOP extrudes a surface from a curved line."
            },
            "lodSOP": {
                "label": "LOD",
                "parameters": {
                    "tstrips": {
                        "label": "Optimize Rendering",
                        "summary": "When set, triangle strips will be generated and used for drawing."
                    },
                    "distance": {
                        "label": "Dist. Threshhold",
                        "summary": "This is the distance from the camera at which full detail will be present."
                    },
                    "minpercent": {
                        "label": "Minimum %",
                        "summary": "The objects won't be drawn with fewer than this number of polygons."
                    },
                    "lengthweight": {
                        "label": "Equalize Edges",
                        "summary": "The amount of weight to favour even sized polygons."
                    },
                    "borderweight": {
                        "label": "Stiffen Border",
                        "summary": "The amount of weight to avoid erosion of boundary polygons."
                    },
                    "steppercent": {
                        "label": "Step %",
                        "summary": "Each successive level of detail will contain approximately this percentage on the number of polygons in the higher level of detail."
                    },
                    "triangulate": {
                        "label": "Pre-Triangulate",
                        "summary": "Polygons can only be reduced if they are triangles. This option thus first converts them."
                    },
                    "polysonly": {
                        "label": "Only Affect Polygons",
                        "summary": "If this is enabled, only the polygonal portion of the model will be displayed at lower levels of detail. Otherwise, all types of surfaces are affected by the distance to the camera."
                    }
                },
                "summary": "The LOD SOP is unusual in so far as it does not actually alter any geometry."
            },
            "oculusriftSOP": {
                "label": "Oculus Rift",
                "parameters": {
                    "model": {
                        "label": "Model",
                        "summary": "Select which controller model to load."
                    }
                },
                "summary": "Loads geometry for the Oculus Rift Touch controllers."
            },
            "latticeSOP": {
                "label": "Lattice",
                "parameters": {
                    "divs": {
                        "label": "Divisions",
                        "summary": "Must be set to match the number of divisions in the lattice grid object(s)."
                    },
                    "radius": {
                        "label": "Radius",
                        "summary": "The size of the points capture regions."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Subset of points in the first input to be deformed. Accepts patterns, as described in Pattern Matching."
                    },
                    "kernel": {
                        "label": "Kernel Function",
                        "summary": "Deformation by specifying a Kernal Function and Points makes it easier to deform arbitrary clouds of points, as this makes the topology of the lattice behave more like a metaball rather than as a fixed lattice.Kernal Function determines which meta kernal to use to determine the influence of a point."
                    }
                },
                "summary": "The Lattice SOP allows you to create animated deformations of its input geometry by manipulating grids or a subdivided box that encloses the input source's geometry."
            },
            "deformSOP": {
                "label": "Deform",
                "parameters": {
                    "donormal": {
                        "label": "Deform Normals",
                        "summary": "Turn this on to deform the normals as the geometry deforms."
                    },
                    "delcolatr": {
                        "label": "Delete Point Colors",
                        "summary": "You may find that you are using point coloring from the Capture SOP to assist in the capturing process. If you do not need these point colors after the Deform SOP, you can turn this parameter on to delete the colors."
                    },
                    "delcaptatr": {
                        "label": "Delete Capture Attributes",
                        "summary": "The point capture attributes can significantly increase the memory usage of the geometry. This option will delete the point capture attributes after it deforms the geometry in order to save memory for any subsequent SOPs."
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": "Specify the path to the root of the skeleton."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Optional point and/or primitive group to be deformed. Accepts patterns, as described in Pattern Matching."
                    }
                },
                "summary": "The Deform SOP takes geometry along with point weights (assigned by the Capture SOP) and deforms geometry as Capture Regions are moved."
            },
            "isosurfaceSOP": {
                "label": "Iso Surface",
                "parameters": {
                    "normals": {
                        "label": "Compute Normals",
                        "summary": ""
                    },
                    "max": {
                        "label": "Maximum Bound",
                        "summary": "Determines maximum clipping plane boundary for display of iso surfaces."
                    },
                    "func": {
                        "label": "Implicit Function",
                        "summary": "Enter the function for implicit surface building here.  Example 1: (me.curPos.x**2) / (4*4) - (me.curPos.y**2) / (3*3) + me.curPos.z  This formula creates a hyperbolic paraboloid, or saddle shape.  Example 2: (me.curPos.x**2) / 0.1 + (me.curPos.y**2) / 2 + (me.curPos.z**2) / 6 - 1  This formula creates an ellipsoid.  Try loading some of the sample functions in $TFS/touch/presets."
                    },
                    "min": {
                        "label": "Minimum Bound",
                        "summary": "Determines the minimum clipping plane boundary for display of iso surface."
                    },
                    "divs": {
                        "label": "Divisions",
                        "summary": "The density, or resolution of the iso surface polygons in X, Y and Z."
                    }
                },
                "summary": "The Iso Surface SOP uses implicit functions to create 3D visualizations of isometric surfaces found in Grade 12 Functions and Relations textbooks."
            },
            "magnetSOP": {
                "label": "Magnet",
                "parameters": {
                    "deformgrp": {
                        "label": "Deform Group",
                        "summary": "Allows you to specify a group of geometry to be deformed, and a group that will act as the magnet respectively. Accepts patterns, as described in Pattern Matching."
                    },
                    "nml": {
                        "label": "Affect Point Normal",
                        "summary": "Allow the magnet to affect the point normals of the input geometry."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The pivot point for the transformations. Not the same as the pivot point in the pivot channels."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "These three fields move the Source geometry in the three axes. The Translates of the metaball only affect the position of the area of influence. The influence itself is provided by an imaginary magnet within the Magnet SOP itself, and the attitude of this influence is determined by the Translates of the Magnet SOP.  Note: If the Translate values of the Magnet SOP are all zero, the magnet will have no deforming influence. The weight of the Metaball SOP scales the influence of the Magnet SOP's Translates."
                    },
                    "magnetgrp": {
                        "label": "Magnet Group",
                        "summary": "Allows you to specify a group of geometry to be deformed, and a group that will act as the magnet respectively. Accepts patterns, as described in Pattern Matching."
                    },
                    "velocity": {
                        "label": "Affect Point Velocity",
                        "summary": "Allow the magnet to affect the velocity of the input geometry."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "Sets the order of the rotations within the overall transform order."
                    },
                    "color": {
                        "label": "Affect Point Color",
                        "summary": "Allow the magnet to affect the point color of the input geometry.  Tip: To control the contribution of each magnet on the surface's Point Color when the Affect Point Color option is enabled, set your point colors to black (0,0,0) before the Magnet SOP by using a Point SOP. The Translate fields in the Magnet SOP will then add per-point rgb color with values of 2,2,2 approaching white.   The scale and rotate channels of the magnet move you about in 3D color space. This is not recommended."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "Sets the overall transform order for the transformations. The transform order determines the order in which transformations take place. Depending on the order, you can achieve different results using the exact same values. Choose the appropriate order from the menu."
                    },
                    "position": {
                        "label": "Affect Position",
                        "summary": "Allow the magnet to affect the position of the input geometry. This is enabled by default."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "These three fields rotate the Source geometry in the three axes."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "These three fields scale the input geometry in the three axes."
                    }
                },
                "summary": "The Magnet SOP allows you to affect deformations of the input geometry with another object using a \\\"magnetic field\\\" of influence, defined by a metaball field."
            },
            "basisSOP": {
                "label": "Basis",
                "parameters": {
                    "orderv": {
                        "label": "Raise V to",
                        "summary": ""
                    },
                    "uknots": {
                        "label": "Knot Sequence",
                        "summary": "The basis of the first spline primitive in the input loads its knot sequence with the data specified in this field when the Parameterization is set to Manual. The values must be in ascending order, and their total count must match the number of knots in the basis. To ensure an exact count, click on the Read Basis button to read the original knot sequence into this field.  Note: Bzier bases cannot have repeated knots. NURBS bases accept repeated knots as long as the knot multiplicity does not exceed the degree of the basis. The first two and last two knots of a NURBS basis must be identical."
                    },
                    "vlength": {
                        "label": "Length",
                        "summary": ""
                    },
                    "vread": {
                        "label": "Read Basis",
                        "summary": ""
                    },
                    "vbias": {
                        "label": "Bias",
                        "summary": ""
                    },
                    "vraise": {
                        "label": "Raise to",
                        "summary": ""
                    },
                    "uparmtype": {
                        "label": "Parameterization",
                        "summary": ""
                    },
                    "vdolength": {
                        "label": "Length",
                        "summary": ""
                    },
                    "vdoscale": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "ulength": {
                        "label": "Length",
                        "summary": ""
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Group of spline primitives (accepts patterns, as described in: Scripting Guide). Non-spline types are ignored.  Two sets of pages follow, one for each parametric direction (U and V). In each set the operations are applied in tab order, starting from the left:  Parameterization, Mapping, and then raising the spline Order. To disable all the operations of a set, toggle off the U or V check mark above it. The V set is meaningful only for spline surfaces, and is ignored otherwise. Channel names are given for both the U and V pages."
                    },
                    "uraise": {
                        "label": "Raise to",
                        "summary": "The only operation here is raising the order (or degree) of the spline basis. Valid orders range from 2 to 11. Orders lower than the current spline order are ignored. The operation preserves the shape of the primitive.  Production Tip: Before applying a spline-based texture projection with the Texture SOP, remap the U and/or V bases of the spline surface between 0 and 1 to ensure a complete mapping of the texture. If a single texture map must be shared by several surfaces, the surface bases should be concatenated prior to being remapped."
                    },
                    "orderu": {
                        "label": "Raise U to",
                        "summary": ""
                    },
                    "udolength": {
                        "label": "Length",
                        "summary": "The new length of the basis, or the total length of the cummulated bases if Concatenation is On. The Length, which represents the distance between the first and last knot, must be greater than zero."
                    },
                    "udoorigin": {
                        "label": "Origin",
                        "summary": "The new origin of the basis, or the origin of the cummulated bases if Concatenation is On."
                    },
                    "vscale": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "vdoorigin": {
                        "label": "Origin",
                        "summary": ""
                    },
                    "uorigin": {
                        "label": "Origin",
                        "summary": ""
                    },
                    "vparmtype": {
                        "label": "Parameterization",
                        "summary": ""
                    },
                    "urange": {
                        "label": "Range",
                        "summary": "Range specifies the domain interval to be shifted. All the knots captured in this range are shifted by the same amount as far as the closest neighbouring knot on either side."
                    },
                    "vorigin": {
                        "label": "Origin",
                        "summary": ""
                    },
                    "ubasis": {
                        "label": "Edit the U Basis",
                        "summary": ""
                    },
                    "uscale": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "uread": {
                        "label": "Read Basis",
                        "summary": "Loads the original knots of the basis into the Knot Sequence field when the Parameterization type is Manual."
                    },
                    "vrange": {
                        "label": "Range",
                        "summary": ""
                    },
                    "vbasis": {
                        "label": "Edit the V Basis",
                        "summary": ""
                    },
                    "vknots": {
                        "label": "Knot Sequence",
                        "summary": ""
                    },
                    "uconcat": {
                        "label": "Concatenate",
                        "summary": "Indicates whether the bases of the input spline primitives should be concatenated such that the last knot of the first primitive coincides with the first knot of the second primitive, and so on. This operation is performed before the ones below it, thus allowing a whole set of bases to be mapped onto a given interval (usually [0,1]) while enforcing basis continuity."
                    },
                    "udoscale": {
                        "label": "Scale",
                        "summary": "The multiplier applied to the basis starting at the basis origin. The Scale must be greater than zero."
                    },
                    "vconcat": {
                        "label": "Concatenate",
                        "summary": ""
                    },
                    "ubias": {
                        "label": "Bias",
                        "summary": "Bias indicates the direction and the amount of translation. A Bias of 0.5 does not displace the knots at all. As the Bias decreases, the knot cluster migrates closer to its left-neighbouring knot. A Bias greater than 0.5 forces a migration to the right. Sometimes a Bias of 0 or 1 does not clamp the knot cluster to the closest neighbouring knot. The reason for this behaviour is that the knot multiplicity cannot be allowed to exceed the degree of the basis. For example, an order 4 (degree 3, or \\\"cubic\\\") spline can have at most 3 identical knots in sequence. When sliding the knot of a NURBS basis, a larger area of that spline is affected. This may create the impression than more knots than those in the cluster are being displaced."
                    }
                },
                "summary": "The Basis SOP provides a set of operations applicable to the parametric space of spline curves and surfaces."
            },
            "sphereSOP": {
                "label": "Sphere",
                "parameters": {
                    "upole": {
                        "label": "Unique Points per Pole",
                        "summary": "Applies to Mesh, NURBS and Bzier surfaces only. This option determines whether points at the poles are shared or are individual to the columns."
                    },
                    "orderv": {
                        "label": "V Order",
                        "summary": "If a spline curve is selected, it is built at this order for V."
                    },
                    "orient": {
                        "label": "Orientation",
                        "summary": "Determines axis for sphere. Poles of sphere align with orientation axis."
                    },
                    "surftype": {
                        "label": "Connectivity",
                        "summary": "This option is used to select the type of surface, when using a Mesh Primitive Type."
                    },
                    "type": {
                        "label": "Primitive Type",
                        "summary": "Select from the following types. For information on the different types, see the Geometry category articles. Depending on the primitive type chosen, some SOP options may not apply."
                    },
                    "modifybounds": {
                        "label": "Modify Bounds",
                        "summary": ""
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": ""
                    },
                    "t": {
                        "label": "Center",
                        "summary": "Offset of sphere center from object center."
                    },
                    "rows": {
                        "label": "Rows",
                        "summary": "Number of rows in a sphere when using the mesh, imperfect NURBS and imperfect Bzier."
                    },
                    "rad": {
                        "label": "Radius",
                        "summary": "The radius of the sphere in X, Y and Z."
                    },
                    "freq": {
                        "label": "Frequency",
                        "summary": "This controls the level of polygons used to create the sphere, when using the Polygon Primitive Type."
                    },
                    "cols": {
                        "label": "Columns",
                        "summary": "Number of columns in a sphere when using the mesh, imperfect NURBS and imperfect Bzier."
                    },
                    "orderu": {
                        "label": "U Order",
                        "summary": "If a spline curve is selected, it is built at this order for U."
                    },
                    "accurate": {
                        "label": "Accurate Bounds",
                        "summary": "If the SOP is being used to generate a bounding sphere for it's input geometry, this parameter tells the SOP to use a more accurate (but slower) bounding sphere calculation."
                    },
                    "texture": {
                        "label": "Texture Coordinates",
                        "summary": "Adds UV texture coordinates to the sphere."
                    },
                    "imperfect": {
                        "label": "Imperfect",
                        "summary": "This option applies only to Bzier and NURBS spheres. If selected, the spheres are approximated nonrational curves, otherwise they are perfect rational curves."
                    }
                },
                "summary": "The Sphere SOP generates spherical objects of different geometry types."
            },
            "revolveSOP": {
                "label": "Revolve",
                "parameters": {
                    "divs": {
                        "label": "Divisions",
                        "summary": "Density of the resulting mesh surface."
                    },
                    "surftype": {
                        "label": "Connectivity",
                        "summary": "This option is used to select the type of surface, when using a Mesh Primitive Type."
                    },
                    "type": {
                        "label": "Revolve Type",
                        "summary": "Determines how the revolve should be generated."
                    },
                    "cap": {
                        "label": "End Caps",
                        "summary": "If selected, it adds faceted end caps."
                    },
                    "dir": {
                        "label": "Direction",
                        "summary": "X, Y, and Z coordinates of the direction vector defining the direction of the revolve."
                    },
                    "polys": {
                        "label": "Convert Mesh to Polygons",
                        "summary": "Changes the output mesh to consist of individual polygons."
                    },
                    "origin": {
                        "label": "Origin",
                        "summary": "Coordinates defining the origin of the revolution."
                    },
                    "group": {
                        "label": "Group",
                        "summary": ""
                    },
                    "angle": {
                        "label": "Start End Angles",
                        "summary": "The start and end angles of the revolve. A revolve will start at the beginning angle, and proceed towards the ending angle. If Beginning = 0 and End = 360 it will be fully revolved. Values greater than 360 are also valid."
                    },
                    "order": {
                        "label": "Order",
                        "summary": "If a spline type is selected, it is built at this order."
                    },
                    "imperfect": {
                        "label": "Imperfect",
                        "summary": "Applies to splines only. If selected, the results are approximated nonrational curves, otherwise they are perfect rational curves."
                    }
                },
                "summary": "The Revolve SOP revolves faces to create a surface of revolution."
            },
            "extrudeSOP": {
                "label": "Extrude",
                "parameters": {
                    "sharefaces": {
                        "label": "Consolidate Faces to Mesh",
                        "summary": "If selected the extrusion will share points between the front face and the first row of the side mesh and between the last face and the last row of the side mesh."
                    },
                    "docusp": {
                        "label": "Cusp Polygonal Sides",
                        "summary": "Determines whether or not sides are to be smooth-shaded or faceted using the angle value in Side Cusp Angle field.  Cusping lets you specify at which angle between adjacent polygons, a sharp edge (faceted edge where vertices are un-shared) should be displayed instead."
                    },
                    "initextrude": {
                        "label": "Initialize Extrusion",
                        "summary": "If the cross-section face that you created doesn't match up nicely to the size of the geometry you are extruding, this command will scale and translate it so that it fits nicely.  The reason it might not be nice to begin with is that the curve wasn't drawn exactly on the world-axis in Model-mode and/or was drawn at a grossly different scale than the object it is extruding."
                    },
                    "fronttype": {
                        "label": "Front Face",
                        "summary": "Control how the front face of the extrusion should be built. You may wish to have a \\\"No Output\\\" because some faces are never actually seen when doing animation and, therefore, would only take up additional overhead if left on."
                    },
                    "sidetype": {
                        "label": "Side Mesh",
                        "summary": "Controls how the cross-section(s) will be extruded. If the input cross-section is a Bzier or NURBS curve, the surface will be constructed with a patch of the same geometry type."
                    },
                    "sourcegrp": {
                        "label": "Source Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified for the source. Accepts patterns, as described in Pattern Matching."
                    },
                    "depthscale": {
                        "label": "Depth Scale",
                        "summary": "The first value moves the entire extrusion forward or backwards in the direction of the extrusion. The second value controls the distance between the cross-section and the source input curves."
                    },
                    "depthxlate": {
                        "label": "Depth Translate",
                        "summary": "The first value moves the entire extrusion forward or backwards in the direction of the extrusion. The second value controls the distance between the cross-section and the source input curves."
                    },
                    "dofuse": {
                        "label": "Fuse Points",
                        "summary": "This should almost always be turned on when cross-sections are used. It consolidates points of polygons that would otherwise cross or overlap when the bevel takes place."
                    },
                    "thickscale": {
                        "label": "Thickness Scale",
                        "summary": "The first value controls the scale of the cross-section profile. There is no effect if a straight (default) cross-section is used. The second value controls the height of the extrusion. Negative scaling values are valid.  Why Two Parameters? Internally, the two Thickness parameters control the individual scale and offsets for the X and Y values of the cross-section. So if the X points = 0 (vertical) then the /thickscale parameter doesn't have any affect."
                    },
                    "xsectiongrp": {
                        "label": "X-Section Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified for the cross-section. Accepts patterns, as described in Pattern Matching."
                    },
                    "backgrp": {
                        "label": "Back Group",
                        "summary": "Output group name to create for back face geometry."
                    },
                    "frontgrp": {
                        "label": "Front Group",
                        "summary": "Output group name to create for front face geometry."
                    },
                    "backtype": {
                        "label": "Back Face",
                        "summary": "This value controls whether or not the back of the extruded object will have a face or not. The options are the same as the Front Face options above."
                    },
                    "removesharedsides": {
                        "label": "Remove Shared Sides",
                        "summary": "Prevents the creation of duplicate sides."
                    },
                    "thickxlate": {
                        "label": "Thickness Translate",
                        "summary": "The first value controls the scale of the cross-section profile. There is no effect if a straight (default) cross-section is used. The second value controls the height of the extrusion. Negative scaling values are valid.  Why Two Parameters? Internally, the two Thickness parameters control the individual scale and offsets for the X and Y values of the cross-section. So if the X points = 0 (vertical) then the /thickscale parameter doesn't have any affect."
                    },
                    "newg": {
                        "label": "Create Output Groups",
                        "summary": "When this option is checked, it causes the Extrude SOP to generate three new groups representing the primitives belonging to the front faces, back faces, and the side bevel/extrusion. The name of the groups are determined by the three option fields below."
                    },
                    "vertex": {
                        "label": "Vertex",
                        "summary": "Translates the cross-section such that the vertex specified is at the cross-section origin."
                    },
                    "cuspangle": {
                        "label": "Side Cusp Angle",
                        "summary": "When checked, this value will control the angle at which faceting of the sides will occur. A value of 20 is default."
                    },
                    "sidegrp": {
                        "label": "Side Group",
                        "summary": "Output group name to create for side bevel/extrude geometry."
                    }
                },
                "summary": "The Extrude SOP can be used for extruding and bevelling Text and other geometry, cusping the bevelled edges to get sharp edges, and making primitives thicker or thinner."
            },
            "deleteSOP": {
                "label": "Delete",
                "parameters": {
                    "boundtype": {
                        "label": "Bounding Type",
                        "summary": "Selects the type of bounding volume to use:"
                    },
                    "filter": {
                        "label": "Filter Expression",
                        "summary": ""
                    },
                    "negate": {
                        "label": "Operation",
                        "summary": "Choose to Delete the Selected Geometry or Delete the Non-Selected Geometry."
                    },
                    "select": {
                        "label": "Select _ of _",
                        "summary": "Activated when Operation is set to Group by Range. Select every nth occurrence of every mth entity in the above Start/End range.  For example; entering 1 and 2 selects 1 out of every 2 entities"
                    },
                    "size": {
                        "label": "Size",
                        "summary": "Dimensions of either the Bounding Box or Bounding Sphere in X, Y and Z."
                    },
                    "usenormal": {
                        "label": "Use Normal",
                        "summary": "When the Enable button is checked under the Normal button, the selection options become active and can be used to select entities. The fields available are listed below.  The primary axis and the spread angle from the defined axis define a range of angles. If any entity normals lie within this range, then the associated entity is selected.  For example; if you want to select the polygons that are very steep in a polygon mountain terrain on the XZ axis. You would set the Direction to be 0, 1, 0 and the spread angle to around 75. This selects all the polygons with normals that lie flat to fairly sloped. You will have grouped all of the polygons that lie flat up to polys that are at a 75 angle from the axis. You are left with all of the polygons that are 76 or greater."
                    },
                    "groupop": {
                        "label": "Operation",
                        "summary": "When the Number Enable button is checked, this option groups entities based on a defined Pattern or by a Range."
                    },
                    "usebounds": {
                        "label": "Use Bounds",
                        "summary": "When the Enable button is checked under the Bounding button, the selection options become active and can be used to select entities. The fields available are listed below. The bounding volume can be seen in the viewport as guide geometry."
                    },
                    "entity": {
                        "label": "Entity",
                        "summary": "Choose to delete primitives or points."
                    },
                    "t": {
                        "label": "Center",
                        "summary": "The X, Y, and Z coordinates of the center of the bounding volume."
                    },
                    "dir": {
                        "label": "Direction",
                        "summary": "The default values of 0, 1, 0 create a normal vector straight up in Y, which is perpendicular to the XZ plane, which becomes the primary axis. The 1, 0, 0 points the normal in positive X, giving a normal axis perpendicular to the YZ. The plane may be positioned at an angle by using values typed in (1, 1, 0 gives a 45 angle plane) or interactively by using the direction vector jack. Values between 0 and 1 should be used."
                    },
                    "range": {
                        "label": "Start / End",
                        "summary": "Activated when Operation is set to Group by Range. Select the start and end of the primitive/point number selection."
                    },
                    "angle": {
                        "label": "Spread Angle",
                        "summary": "The value entered in this field generates an angle of deviation from the primary axis. This can be visualized as a cone where the radius of the base of the cone is defined by the Spread Angle and the axis of the cone is determined by the Direction axis. Viewing the primitive normals in the viewport, you can see that any primitives with normals that have an angle that lies in the range of angles defined by the cone will be selected and grouped."
                    },
                    "pattern": {
                        "label": "Pattern",
                        "summary": "Activated when Operation is set to Group by Pattern. In this field, enter the range of primitives to select. The required syntax is \\\"S.P\\\", where S is the index of the parent surface, and P the profile index on that surface. You can mix primitives with profiles in the list. A mixed group is automatically ordered.  For example;0.4 2 4 2.5 3.7 selects three profiles and two primitives0-100:2 selects every other number from 0 to 1000-10:2,3 selects every two of three0.0-6 selects six profiles on primitive 00.* selects all profiles on primitive 0!4 selects every primitive or point except the fourth9-0 selects first ten (in reverse if ordered flag is on)!0.* selects all profiles except those on primitive 0* selects all primitives or points, and no profiles  See Pattern Matching in the [Scripting Guide]"
                    },
                    "geotype": {
                        "label": "Geometry Type",
                        "summary": "Select the geometry type group. The selection will only pertain to the geometry type specified. e.g. If you only wanted to group polygons."
                    },
                    "removegrp": {
                        "label": "Delete Unused Groups",
                        "summary": "If any group has 0 entries and if this parameter is enabled, then those groups are removed. If you want to keep empty groups, disable this parameter."
                    },
                    "usenumber": {
                        "label": "Use Number",
                        "summary": "When the Enable button is checked under the Number button, the selection options become active and can be used to select entities. The fields available are listed below."
                    },
                    "camera": {
                        "label": "Backface from",
                        "summary": "This menu allows you to select an object. Typically, a camera object would be chosen. The primitives which are backface when viewed from the object specified will be grouped or selected."
                    },
                    "keeppoints": {
                        "label": "Delete Geometry, Keep Points",
                        "summary": "Deletes the geometry but keeps the points."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "The name of the group to be created. The default name is set to match the name of the SOP."
                    }
                },
                "summary": "The Delete SOP deletes input geometry as selected by a group specification or a geometry selection by using either of the three selection options: by entity number, by a bounding volume, and by entity (primitive/point) normals."
            },
            "fontSOP": {
                "label": "Font",
                "parameters": {
                    "text": {
                        "label": "Text",
                        "summary": "Enter the text you want to generate here.  Your text can contain the following special characters:  *  \\\\  - Take the next character literally (so you can use the / and ` characters in your text); *  `string`  - Evaluate the string contained by the backquotes (above the T key) as an expression; *  \\   - Start a new line; *  \\\\xxx  - Specify a character by it's ascii code (e.g. \\\\007).  For Example: If you put something like \\\\\\\\$F3 in the text string, you should see all the possible characters of a font as you play the animation (set the last frame to 256).  Entering Expressions as Text - You can also use expressions for the text.  For Example: me.time.frame - will display the current frame.  op('null1')['chan1'] - will display the current value of channel chan1 in CHOP null1.  'hello world'[int(me.time.frame)%11] - causes the eleven letters of the text to appear in succession during the first eleven frames.  Other Methods of Entering Text - You can use the \\\\xxx decimal notation to specify characters. The available characters will depend on the font type used.  For Example: \\\\065 - will display 'a'.  You can also use the Par Class to set text in the Font SOP. This can be done from the textport, a Logic CHOP or Expression CHOP, or any script. (See Scripting articles)  For Example: op('font1').par.text = 'hello world' - will display the words: hello world"
                    },
                    "hcenter": {
                        "label": "Center Text Horizontally",
                        "summary": "This check box allows you to center the text horizontally about X = 0."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "Translates the geometry in x, y and z."
                    },
                    "vcenter": {
                        "label": "Center Text Vertically",
                        "summary": "This check box allows you to center the text vertically about Y = 0."
                    },
                    "file": {
                        "label": "Font",
                        "summary": "Choose the font to create the text. By clicking on the + button a File Dialog will appear, and clicking menu drop down brings up a menu of the most used fonts."
                    },
                    "type": {
                        "label": "Primitive Type",
                        "summary": "Select from the following types. For information on the different types, see the Geometry Types section. Bzier Curves and Polygons provide the most efficient use of memory, because they use polygons for letters containing straight segments, and Bzier curves for all others.  Note: Due to an Open GL bug, holes in Bzier fonts may shade incorrectly."
                    },
                    "hole": {
                        "label": "Hole Faces",
                        "summary": "Generates holes in polygons and Bzier faces."
                    },
                    "lod": {
                        "label": "Level of Detail",
                        "summary": "Adobe fonts are defined by Bzier curves. If polygons only is selected, the Font SOP converts these to polygons. This value adjusts the number of points in the polygons that it gets converted to."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "Scales the text in the X and Y axis."
                    },
                    "kern": {
                        "label": "Kerning",
                        "summary": "Letter spacing in the X direction. Line spacing in the Y direction if there are multiple lines. If you need manual character-by-character, you can do it in Model mode."
                    },
                    "italic": {
                        "label": "Italic Angle",
                        "summary": "Doesn't actually give an italic version of the font, but rather obliques the text by shearing it the specified number of degrees. A negative number makes the text slant to the left."
                    },
                    "texture": {
                        "label": "Texture Coordinates",
                        "summary": "This adds uv coordinates to the geometry created by the Font SOP."
                    }
                },
                "summary": "The Font SOP allows you to create text in your model from Adobe Type 1 Postscript Fonts."
            },
            "captureregionSOP": {
                "label": "Capture Region",
                "parameters": {
                    "theight": {
                        "label": "Top Height",
                        "summary": "Height of the region from the centre to the top cap."
                    },
                    "orient": {
                        "label": "Orientation",
                        "summary": "Defines the direction axis of the region. Use Z axis when the region is inside a bone object.  Image:TouchGeometry46.gif"
                    },
                    "bheight": {
                        "label": "Bottom Height",
                        "summary": "Height of the region from the centre to the top cap."
                    },
                    "bcap": {
                        "label": "Bottom Cap",
                        "summary": "The X, Y, Z radii of the top/bottom hemisphere."
                    },
                    "t": {
                        "label": "Center",
                        "summary": "Position of the center of the region."
                    },
                    "tcap": {
                        "label": "Top Cap",
                        "summary": "The X, Y, Z radii of the top/bottom hemisphere."
                    },
                    "color": {
                        "label": "Display Color",
                        "summary": "The Capture Region SOP<uses region colors for helpful feedback.  By default the region inherits the color of its containing object (via an expression)."
                    },
                    "weight": {
                        "label": "Max/Min Weight",
                        "summary": "Defines the weight of a point exactly on the centre line and edge of the region respectively. Point weights in-between are blended."
                    }
                },
                "summary": "The Capture Region SOP defines capture region (cregion), which is a type of primitive which can be thought of as a modified tube primitive (a tube with half a sphere on either end)."
            },
            "cacheSOP": {
                "label": "Cache",
                "parameters": {
                    "blendpos": {
                        "label": "Blend Position",
                        "summary": "Interpolate points between geometries."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While set > 0, this node will cache a single snapshot of it's input's geometry each cook."
                    },
                    "prefill": {
                        "label": "Pre-Fill",
                        "summary": "Cooks 'Cache Size' number of times to fill the Cache SOP with geometry. When set > 0, it will fill the cache. If set > 0 during playback, it will fill immediately. If set > 0 and saved out, then next time the file is opened the cache will pre-fill. While this is > 0, the node behaves as if the 'On' parameter is 0. If set to 0, then back > 0, it will clear the previous data, and pre-fill again. For more information refer to the Pre-Filling article."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "When set > 0, clears out all of the cached geometry."
                    },
                    "cachesize": {
                        "label": "Cache Size",
                        "summary": "The size of the cache."
                    },
                    "cachepoints": {
                        "label": "Cache Points Only",
                        "summary": "Store a single topology for the first cached geometry and only point data for the remaining geometries."
                    },
                    "outputindex": {
                        "label": "Output Index",
                        "summary": "Determines which cached geometry to output. 0 is the most recent cached geometry. Valid values are between 0 and cachesize - 1."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "step": {
                        "label": "Step Size",
                        "summary": "The number of frames that the node will cook before it caches another geometry. When set to 1, it will cache every cook, when set to 2, it will cache every two cooks, etc."
                    }
                },
                "summary": "The Cache SOP collects its input geometry in a cache for faster random-access playback of multiple SOPs."
            },
            "surfsectSOP": {
                "label": "Surfsect",
                "parameters": {
                    "insideb": {
                        "label": "Keep Inside B",
                        "summary": "Preserve the inside sections of the B surfaces."
                    },
                    "profilesa": {
                        "label": "",
                        "summary": ""
                    },
                    "profilesb": {
                        "label": "",
                        "summary": ""
                    },
                    "step": {
                        "label": "Marching Steps",
                        "summary": "Number of steps for tracing each profile span."
                    },
                    "creategroupa": {
                        "label": "A Profiles Group",
                        "summary": "Place the A profiles in a user-defined group."
                    },
                    "target": {
                        "label": "Target",
                        "summary": "Which surface to output profiles for: A, B, or both."
                    },
                    "outsideb": {
                        "label": "Keep Outside B",
                        "summary": "Preserve the outside sections of the B surfaces."
                    },
                    "tol2d": {
                        "label": "2D Tolerance",
                        "summary": "Domain precision of the intersection."
                    },
                    "boolop": {
                        "label": "Operation",
                        "summary": "Select from the following operations: Union, Intersect, A-B, B-A, or User-defined.  If the Operation is set to User-defined, the following options become available:"
                    },
                    "insidea": {
                        "label": "Keep Inside A",
                        "summary": "Preserve the inside sections of the A surfaces."
                    },
                    "creategroupb": {
                        "label": "B Profiles Group",
                        "summary": "Place the B profiles in a user-defined group."
                    },
                    "outsidea": {
                        "label": "Keep Outside A",
                        "summary": "Preserve the outside sections of the A surfaces."
                    },
                    "groupb": {
                        "label": "Group B",
                        "summary": "Subset of NURBS and Bezier surfaces to intersect with A. Accepts patterns, as described in Pattern Matching."
                    },
                    "join": {
                        "label": "Join Profiles Created by Multiple Surfaces",
                        "summary": "If a surface has several adjacent profiles caused by its intersection with two or more surfaces, the profiles will be joined into a single curve-on-surface."
                    },
                    "mindholes": {
                        "label": "Avoid Already Trimmed-Out Parts",
                        "summary": "Intersect only the visible surface parts and truncate the intersection profile at the trimmed-in surface boundaries."
                    },
                    "tol3d": {
                        "label": "3D Tolerance",
                        "summary": "World space precision of the intersection."
                    },
                    "groupa": {
                        "label": "Group A",
                        "summary": "Subset of NURBS and Bezier surfaces. Accepts patterns, as described in Pattern Matching."
                    }
                },
                "summary": "The Surfsect SOP performs boolean operations with NURBS and Bezier surfaces, or only generates profiles where the surfaces intersect."
            },
            "claySOP": {
                "label": "Clay",
                "parameters": {
                    "uusebias": {
                        "label": "U Bias",
                        "summary": "Indicates whether the clay algorithm should use the bias it thinks works best for the given U parameter, or take the value explicitly stated beside the toggle. Since clay affects the CVs in the neighbourhood of the given parametric location, the bias can influence the amount of pull applied to the CVs on either side of this location. The effect is a slant of the \\\"wave\\\" the parametric point rides on - towards one side or the other."
                    },
                    "u": {
                        "label": "U",
                        "summary": "This value defines a point in the parametric space of a face, representing the location to be affected by the clay operation. This location is referred to as the \\\"target\\\". For surfaces, U defines a line of constant value in the parametric space of the primitive and requires a second coordinate - V - to specify a unique location (see the V> Page below). Spline faces and surfaces have explicit parametric spaces known as domains; since domains are not restricted to the unit range [0, 1], the Clay SOP maps U to the real domain value of the primitive. For polygons and meshes, U is expressed in terms of the number or vertices and columns respectively and in terms of their relative positions."
                    },
                    "coord": {
                        "label": "Coordinates",
                        "summary": "Specifies the absolute 3D location the (U, V) target must translate to."
                    },
                    "vbias": {
                        "label": "V Bias",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "usharp": {
                        "label": "U Sharpness",
                        "summary": "This parameter affects only NURBS curves and surfaces. The pull generated by clay on these primitives can be smooth or sharp depending on the position of the target relative to the underlying domain (the farther away from a knot, the rounded the bulge) and the knot multiplicity near the target (the higher the multiplicity the sharper the pull). If the pull is too round or affects too big an area in U, the U Sharpness parameter can reduce it by inserting one or more knots at the target U value. When the U Sharpness is zero no knots are inserted. When the U Sharpness is 1, all \\\"degree\\\" knots are inserted and the shape becomes very sharp. The U Sharpness varies in discrete steps; the number of steps equals the U degree of the spline.  Note: The range of the U Sharpness slider varies with the degree of the spline (i.e. the closer it is to 1, the more knots it adds). Since the number of knots added forms a discrete sequence, the slider will automatically jump to the valid positions."
                    },
                    "normal": {
                        "label": "Normal",
                        "summary": ""
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching in the [Scripting Guide]."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "vwarp": {
                        "label": "Deform along V",
                        "summary": "Determines whether the clay operation affects the V parametric direction of the surface. If the inputs are surfaces and V if off, clay will pull the surfaces along the entire U direction (if U is on) or not at all. If both U and V are on, clay will pull the surface at the target (U, V) point specified in the U and V folders below. This option does not affect face types."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "vsharp": {
                        "label": "V Sharpness",
                        "summary": "This parameter affects only NURBS surfaces. The pull generated by clay on these primitives can be smooth or sharp depending on the position of the target relative to the underlying domain (the farther away from a knot, the rounded the bulge) and the knot multiplicity near the target (the higher the multiplicity the sharper the pull). If the pull is too round or affects too big an area in V, the V Sharpness parameter can reduce it by inserting one or more knots at the target V value. When the V Sharpness is zero no knots are inserted. When the V Sharpness is 1, all \\\"degree\\\" knots are inserted and the surface becomes very sharp. The V Sharpness varies in discrete steps; the number of steps equals the V degree of the spline.  Note: The range of the V Sharpness slider varies with the degree of the spline (i.e. the closer it is to 1, the more knots it adds). Since the number of knots added forms a discrete sequence, the slider will automatically jump to the valid positions."
                    },
                    "dist": {
                        "label": "Distance",
                        "summary": "Specifies the translation distance along the given vector. Normal - The translation will be performed along the primitive normal at the target (U, V) point if the Normal button is On. Otherwise an explicit direction is required (see Direction below). If the input contains face primitives, the primitive normal is independent of the target (U) point. Primitive normals can be displayed from the Display Options dialog. Direction /dirx /diry /dirz Normal"
                    },
                    "ubias": {
                        "label": "U Bias",
                        "summary": ""
                    },
                    "uvsnap": {
                        "label": "U and V",
                        "summary": ""
                    },
                    "dir": {
                        "label": "Direction",
                        "summary": ""
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "uwarp": {
                        "label": "Deform along U",
                        "summary": "Determines whether the clay operation affects the U parametric direction. Both faces and surfaces respond to this option. If the primitives are face types and the toggle is off, clay doesn't change the inputs at all. If the inputs are surfaces and U is off, clay will pull the surfaces along the entire V direction (if V is on) or not at all."
                    },
                    "v": {
                        "label": "V",
                        "summary": "This value affects only surface types. V defines a line of constant value in the parametric space of the surface and together with U specifies a unique location in that space. Spline surfaces have explicit parametric spaces known as domains; since domains are not restricted to the unit range [0, 1], the Clay SOP maps V to the real domain value of the surface. For meshes, V is expressed in terms of the number or rows and their relative positions."
                    },
                    "vusebias": {
                        "label": "V Bias",
                        "summary": "Indicates whether the clay algorithm should use the bias it thinks works best for the given V parameter, or take the value explicitly stated beside the toggle. Since clay affects the CVs in the neighbourhood of the given parametric location, the bias can influence the amount of pull applied to the CVs on either side of this location. The effect is a slant of the \\\"wave\\\" the parametric point rides on -- towards one side or the other."
                    }
                },
                "summary": "The Clay SOP deforms faces and surfaces by pulling points that lie directly on them."
            },
            "importselectSOP": {
                "label": "Import Select",
                "parameters": {
                    "comptang": {
                        "label": "Compute Tangents",
                        "summary": "A toggle to compute the tangents for this SOP."
                    },
                    "textendright": {
                        "label": "Extend Right",
                        "summary": "Determines how the parent COMP handles animation positions that lie after the Trim End position. For example, if Trim End is set to 20, and the animation current index is 25, the Extend Right menu determines how the animation position is calculated."
                    },
                    "cue": {
                        "label": "Cue",
                        "summary": "A toggle to jump to Cue Point when it is set to ON and it stays at that position. Only available when Play Mode is Sequential."
                    },
                    "tstart": {
                        "label": "Trim Start",
                        "summary": "Sets an in point from the beginning of the animation, allowing you to trim the starting index of the animation. The units\\u2019 menu on the right let you specify this position by index, frames, seconds, or fraction (percentage)."
                    },
                    "initialize": {
                        "label": "Initialize",
                        "summary": "Resets the animation to its initial state."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "A toggle that makes the animation to play when it sets to ON. This Parameter is only available/enabled if the Sequential mode is selected from the Play Mode."
                    },
                    "geometry": {
                        "label": "Geo Path",
                        "summary": "The geometry path from the imported file."
                    },
                    "textendleft": {
                        "label": "Extend Left",
                        "summary": "Determines how the parent COMP handles animation positions that lie before the Trim Start position. For example, if Trim Start is set to 1, and the animation current index is -10, the Extend Left menu determines how the animation position is calculated."
                    },
                    "speed": {
                        "label": "Speed",
                        "summary": "This is a speed multiplier which only works when Play Mode is Sequential. A value of 1 is the default playback speed. A value of 2 is double speed, 0.5 is half speed and so on."
                    },
                    "index": {
                        "label": "Index",
                        "summary": "This parameter explicitly sets the animation position when Play Mode is set to Specify Index. The units\\u2019 menu on the right lets you specify the index in the following units: Index, Frames, Seconds, and Fraction (percentage)."
                    },
                    "cuepointunit": {
                        "label": "Cue Point Unit",
                        "summary": "Specifies a unit type for Cue Point. Changing this will convert the previous unit to the selected unit."
                    },
                    "shiftanimationstart": {
                        "label": "Shift Animation Start",
                        "summary": "A toggle to specify whether to shift the animation to the start of animation indicated in the importing file."
                    },
                    "cuepoint": {
                        "label": "Cue Point",
                        "summary": "Set any index in the animation as a point to jump to."
                    },
                    "useparentanim": {
                        "label": "Use Parent Animation",
                        "summary": "A toggle to specify whether to use the parent COMP animation controls or have a custom setting for this SOP."
                    },
                    "tendunit": {
                        "label": "Trim End Unit",
                        "summary": "Specifies a unit type for Trim End. Changing this will convert the previous unit to the selected unit."
                    },
                    "playmode": {
                        "label": "Play Mode",
                        "summary": "A menu to specify the method used to play the animation."
                    },
                    "samplerate": {
                        "label": "Sample Rate",
                        "summary": "It is used to specify the sample rate (FPS) for the animation. This parameter is disabled by default and can be enabled once the Custom option is selected from the Sample Rate Menu."
                    },
                    "tstartunit": {
                        "label": "Trim Start Unit",
                        "summary": "Specifies a unit type for Trim Start. Changing this will convert the previous unit to the selected unit."
                    },
                    "cuepulse": {
                        "label": "Cue Pulse",
                        "summary": "When pressed the animation jumps to the Cue Point and continues from that point."
                    },
                    "trim": {
                        "label": "Trim",
                        "summary": "A toggle to enable the Trim Start and Trim End parameters."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "Resets the animation to its initial state and starts playback."
                    },
                    "tend": {
                        "label": "Trim End",
                        "summary": "Sets an end point from the end of the movie, allowing you to trim the ending index of the animation. The units\\u2019 menu on the right let you specify this position by index, frames, seconds, or fraction (percentage)."
                    },
                    "indexunit": {
                        "label": "Index Unit",
                        "summary": "Specifies a unit type for Index. Changing this will convert the previous unit to the selected unit."
                    },
                    "sampleratemode": {
                        "label": "Sample Rate Mode",
                        "summary": "A menu to choose between the FPS or use a custom sample rate."
                    }
                },
                "summary": ""
            },
            "polypatchSOP": {
                "label": "Polypatch",
                "parameters": {
                    "lastvclamp": {
                        "label": "V Clamp (Last)",
                        "summary": ""
                    },
                    "divisions": {
                        "label": "Output Divisions",
                        "summary": "The number of divisions in the output surface. Use more divisions for a smoother surface."
                    },
                    "closev": {
                        "label": "V Wrap",
                        "summary": ""
                    },
                    "firstuclamp": {
                        "label": "U Clamp (First)",
                        "summary": ""
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Subset of input to use. Accepts patterns, as described in Pattern Matching."
                    },
                    "closeu": {
                        "label": "U Wrap",
                        "summary": ""
                    },
                    "polys": {
                        "label": "Output Polygons",
                        "summary": "Force polygonal rather than mesh output."
                    },
                    "connecttype": {
                        "label": "Connectivity",
                        "summary": ""
                    },
                    "lastuclamp": {
                        "label": "U Clamp (Last)",
                        "summary": ""
                    },
                    "firstvclamp": {
                        "label": "V Clamp (First)",
                        "summary": ""
                    },
                    "basis": {
                        "label": "Basis",
                        "summary": "Select spline type: Cardinal or BSpline."
                    }
                },
                "summary": "The Polypatch SOP creates a smooth polygonal patch from a mesh primitive or a set of faces (polygons, NURBS or Bezier curves)."
            },
            "superquadSOP": {
                "label": "Superquad",
                "parameters": {
                    "upole": {
                        "label": "Multiple Points per Pole",
                        "summary": "Determines whether points at the poles are shared or are unique to the columns."
                    },
                    "orient": {
                        "label": "Orientation",
                        "summary": "Determines pole axis for the iso surface."
                    },
                    "expxy": {
                        "label": "XY Exponent",
                        "summary": "The XY Exponent determines inflation / contraction in the X and Y axes."
                    },
                    "surftype": {
                        "label": "Connectivity",
                        "summary": "This option is used to select the type of surface, when using a Mesh primitive type."
                    },
                    "type": {
                        "label": "Primitive Type",
                        "summary": "Select from the following types. For information on the different types, see the Geometry Types Guide. Depending on the primitive type chosen, some SOP options may not apply."
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": ""
                    },
                    "t": {
                        "label": "Center",
                        "summary": "Offset of superquad center from object center."
                    },
                    "angle": {
                        "label": "Cusp Angle",
                        "summary": "Input angle in degrees to determine when vertices are shared or not, creating cusping."
                    },
                    "rows": {
                        "label": "Rows",
                        "summary": "Number of rows used in the superquad."
                    },
                    "expz": {
                        "label": "Z Exponent",
                        "summary": "The Z Exponent determines inflation / contraction in the Z axis. See the Metaball SOP for a description of exponents."
                    },
                    "modifybounds": {
                        "label": "Modify Bounds",
                        "summary": ""
                    },
                    "cusp": {
                        "label": "Cusp Polygons",
                        "summary": "Makes points unique, causing the superquad to be faceted."
                    },
                    "cols": {
                        "label": "Columns",
                        "summary": "Number of columns used in the superquad."
                    },
                    "rad": {
                        "label": "Radius",
                        "summary": "Determines overall radius."
                    },
                    "texture": {
                        "label": "Texture Coordinates",
                        "summary": "Adds UV texture coordinates to the sphere."
                    }
                },
                "summary": "The Superquad SOP generates an isoquadric surface."
            },
            "sweepSOP": {
                "label": "Sweep",
                "parameters": {
                    "skin": {
                        "label": "Skin Output",
                        "summary": ""
                    },
                    "noflip": {
                        "label": "Fix Flipping",
                        "summary": "Attempts to fix buckling twists that may occur when sweeping by fixing flipped normals."
                    },
                    "refgrp": {
                        "label": "Reference Group",
                        "summary": "You can use only a subset of primitives from the Reference inputs by specifying a group here."
                    },
                    "twist": {
                        "label": "Twist",
                        "summary": "Cumulative rotation of the cross sections around the backbone. If a value of five is specified, the cross section at the first point of the backbone is rotated five degrees, the next ten degrees, the next fifteen degrees and so on."
                    },
                    "cycle": {
                        "label": "Cycle Type",
                        "summary": ""
                    },
                    "vertex": {
                        "label": "Connection Vertex",
                        "summary": "Specify a specific vertex to connect to the backbone."
                    },
                    "angle": {
                        "label": "Angle Fix",
                        "summary": "Attempts to fix buckling twists that may occur when sweeping."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Non-cumulative rotation of the cross sections around the backbone. All cross sections get the same rotation.  Note: The Scale, Twist and Roll parameters can now be controlled directly by points' attributes of the same names. Thus, combined with the Channel SOP, those parameters can now be controlled dynamically. You can use scale and other attributes coming in to taper."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Scales the cross sections globally."
                    },
                    "sweepgrp": {
                        "label": "Sweep Groups",
                        "summary": "Specify the name of your output groups in this field."
                    },
                    "pathgrp": {
                        "label": "Path Group",
                        "summary": "You can use only a subset of primitives from the Backbone inputs by specifying a group here."
                    },
                    "fast": {
                        "label": "Fast Sweep",
                        "summary": "Enables an optimized skinning technique which speeds up output from 2 - 4 times in many cases at the expense of accuracy. In order for it to work correctly, the input topologies must remain consistent between cooks and each cross-section must have the same number of vertices."
                    },
                    "aimatref": {
                        "label": "Aim at Reference Points",
                        "summary": "Reference Points are used in conjunction with the backbone to control the orientation of the elements along the sweep. This is done by drawing a line between the reference point and corresponding backbone point in order to determine an angle vector which determines the orientation of the cross-section profiles. Enable this parameter to allow this behaviour.  Note: In order for this to work, you must supply Reference Points via the third input, and there must be exactly the same number of Reference Points as there are points in the Backbone."
                    },
                    "newg": {
                        "label": "Create Groups",
                        "summary": "Selecting this option enables the creation of groups. A group is created for each backbone that is incoming. This allows for easy skinning in the Skin SOP."
                    },
                    "usevtx": {
                        "label": "Use Vertex",
                        "summary": "Use vertex number of the incoming cross-section to place the cross-section on the backbone."
                    },
                    "skipcoin": {
                        "label": "Remove Coincident Points on Path",
                        "summary": "When selected, any points right on top of one another will be ignored."
                    },
                    "xgrp": {
                        "label": "X-Section Group",
                        "summary": "You can use only a subset of primitives from the Cross-section inputs by specifying a group here."
                    }
                },
                "summary": "The Sweep SOP sweeps primitives in the Cross-section input along Backbone Source primitive(s), creating ribbon and tube-like shapes."
            },
            "inSOP": {
                "label": "In",
                "parameters": {
                    "label": {
                        "label": "Label",
                        "summary": "Creates a pop-up label when the cursor rolls over this Component input."
                    }
                },
                "summary": "The In SOP creates a SOP input in a Component. Component inputs are positioned alphanumerically on the left side of the node."
            },
            "convertSOP": {
                "label": "Convert",
                "parameters": {
                    "orderv": {
                        "label": "V Order",
                        "summary": "When converting to a spline type, this specifies the degree + 1 of the U or V basis function.  Paste Coordinates  * From Feature Surfaces - The resulting mesh will have the shape of the paste hierarchy (i.e. the top-most features will determine the shape). * From Base Surface - The resulting mesh will take the shape of the bottom-most surface.  Paste Attributes   * From Feature Surfaces - Each mesh point has the attributes of the top-most feature at that location. * From Base Surface - The resulting mesh will inherit the primitive attributes of the root surface (e.g. the material), and the point attributes will be those of the root surface as well. By using base coordinates and feature attributes you are, in fact, pasting attributes onto the surface."
                    },
                    "totype": {
                        "label": "Convert to",
                        "summary": "Determines what the above From Type geometry will be converted to. Conversion to Polygons is the default:   Notes: Not all geometry can be converted to specific types. For example, a triangulated polygon surface to a single NURBS surface, or a Mesh sphere into a primitive sphere. Also, certain conversions will preserve shapes. For example, converting a Bzier curve to a NURBS curve or a polygonal mesh to a NURBS Surface.  Circle Notes: Converting to primitive circles is available for action users who are used to working with polygon circles so that you can convert them to primitive circles for the TouchDesigner Skeleton, Arm, and Limb SOPs.  Trimmed Surface Notes: If the primitive to be converted is a curve (NURBS or Bezier) and is flat, a trimmed surface will be generated such that the visible piece coincides with the curve. If the curve is not flat, it will be converted to a non-trimmed surface. The advantage of the trimmed solution is that it yields a very clean surface and handles concave curves perfectly."
                    },
                    "surftype": {
                        "label": "Connectivity",
                        "summary": "This option is used to select the type of surface when converting to a NURBS or Bzier surface or a Mesh."
                    },
                    "new": {
                        "label": "Preserve Original",
                        "summary": "When checked, the original geometry will be retained along with the converted geometry."
                    },
                    "divtrim": {
                        "label": "Trim-Curve",
                        "summary": "The trimmed part of a surface will be converted using this Trim lod (level of detail) instead of using an implicit \\\"1\\\" constant."
                    },
                    "interphull": {
                        "label": "Interpolate Through Hulls",
                        "summary": "This option applies to the conversion between polygonal faces and grids to NURBS and Bzier surfaces and curves. When selected, the resulting curves retain the same topology as the original polygon. When not selected, the polygon points are used as a hull to define the new curve or surface."
                    },
                    "lodtrim": {
                        "label": "Trim-Curve",
                        "summary": "The trimmed part of a surface will be converted using this Trim lod (level of detail) instead of using an implicit \\\"1\\\" constant."
                    },
                    "prtype": {
                        "label": "Particle Type",
                        "summary": "Selects how the particles are rendered."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    },
                    "lodu": {
                        "label": "U",
                        "summary": "When set to Level of Detail, controls the number of points or CVs that are used in the newly generated geometry depending on the above setting. Converting a NURBS surface into a polygon mesh with a Level of Detail of 1 results in a fair approximation of the NURBS surface whereas a value of 2 generates a very dense polygonal mesh.  When set to Divisions per Span, specificies the number of divisions per span.  Tip: Animate the Level of Detail based on how close your character or geometry is to the camera by using the primdist() expression. Then the detail will increase/decrease as the camera gets closer/further away."
                    },
                    "orderu": {
                        "label": "U Order",
                        "summary": "When converting to a spline type, this specifies the degree + 1 of the U or V basis function.  Paste Coordinates  * From Feature Surfaces - The resulting mesh will have the shape of the paste hierarchy (i.e. the top-most features will determine the shape). * From Base Surface - The resulting mesh will take the shape of the bottom-most surface.  Paste Attributes   * From Feature Surfaces - Each mesh point has the attributes of the top-most feature at that location. * From Base Surface - The resulting mesh will inherit the primitive attributes of the root surface (e.g. the material), and the point attributes will be those of the root surface as well. By using base coordinates and feature attributes you are, in fact, pasting attributes onto the surface."
                    },
                    "fromtype": {
                        "label": "From Type",
                        "summary": "Determines which geometry by type will be converted. The default is All Types:"
                    },
                    "lodv": {
                        "label": "V",
                        "summary": "When set to Level of Detail, controls the number of points or CVs that are used in the newly generated geometry depending on the above setting. Converting a NURBS surface into a polygon mesh with a Level of Detail of 1 results in a fair approximation of the NURBS surface whereas a value of 2 generates a very dense polygonal mesh.  When set to Divisions per Span, specificies the number of divisions per span.  Tip: Animate the Level of Detail based on how close your character or geometry is to the camera by using the primdist() expression. Then the detail will increase/decrease as the camera gets closer/further away."
                    },
                    "divv": {
                        "label": "V",
                        "summary": "When set to Level of Detail, controls the number of points or CVs that are used in the newly generated geometry depending on the above setting. Converting a NURBS surface into a polygon mesh with a Level of Detail of 1 results in a fair approximation of the NURBS surface whereas a value of 2 generates a very dense polygonal mesh.  When set to Divisions per Span, specificies the number of divisions per span.  Tip: Animate the Level of Detail based on how close your character or geometry is to the camera by using the primdist() expression. Then the detail will increase/decrease as the camera gets closer/further away."
                    },
                    "divu": {
                        "label": "U",
                        "summary": "When set to Level of Detail, controls the number of points or CVs that are used in the newly generated geometry depending on the above setting. Converting a NURBS surface into a polygon mesh with a Level of Detail of 1 results in a fair approximation of the NURBS surface whereas a value of 2 generates a very dense polygonal mesh.  When set to Divisions per Span, specificies the number of divisions per span.  Tip: Animate the Level of Detail based on how close your character or geometry is to the camera by using the primdist() expression. Then the detail will increase/decrease as the camera gets closer/further away."
                    }
                },
                "summary": "The Convert SOP converts geometry from one geometry type to another type."
            },
            "nullSOP": {
                "label": "Null",
                "parameters": {},
                "summary": "The Null SOP has no effect on the geometry. It is an instance of the SOP connected to its input."
            },
            "addSOP": {
                "label": "Add",
                "parameters": {
                    "polydat": {
                        "label": "Polygons Table",
                        "summary": "Path to a Table DAT containing polygon data. Accepts rows of polygons specified by point number in the first column. The second column indicates if the polygons are closed (1) or open (0)."
                    },
                    "weight3": {
                        "label": "W",
                        "summary": ""
                    },
                    "usept2": {
                        "label": "Point 2",
                        "summary": ""
                    },
                    "closed3": {
                        "label": "Closed",
                        "summary": ""
                    },
                    "closed1": {
                        "label": "Closed",
                        "summary": ""
                    },
                    "prim2": {
                        "label": "Polygon",
                        "summary": ""
                    },
                    "pt2": {
                        "label": "Point 2",
                        "summary": ""
                    },
                    "namedattribs": {
                        "label": "Named Attributes",
                        "summary": "Allows extra attributes to be defined in the Point Table DAT above."
                    },
                    "pt4": {
                        "label": "Point 4",
                        "summary": ""
                    },
                    "weight1": {
                        "label": "W",
                        "summary": ""
                    },
                    "prim0": {
                        "label": "Polygon",
                        "summary": "Create a fixed number of polygons by specifying a point pattern for each polygon. Enter connection lists here to add polygons. These consist of a list of point numbers to define the order in which the points are to be connected. The form is: {from}-{to}[:{every}][,{of}].              Examples of Valid Connection Lists:  : 1 2 3 4 - Makes a polygon by connecting point numbers 1,2,3,4. : 1 3-15 16 8 - All points from 3-15 are included. : 1-234 820-410 235-409 - Points from 1-820 are included, in the specified order. : 0-15:2 - Every other point from 0 to 15 is included. : 0-15:2,3 - Every 2 of 3 points are included (i.e. 0, 1, 3, 4, 6, 7, 9, 10, 12, 13, 15). : !4 - Every point except 4 is included. : !100-200 - Every point <100 and >200 is included. : * - Include all points. : 9-0 - The first ten points are included in reverse order. : !9-0 - All but the first ten points are included in reverse order."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Subset of points to be connected."
                    },
                    "usept4": {
                        "label": "Point 4",
                        "summary": ""
                    },
                    "pt3": {
                        "label": "Point 3",
                        "summary": ""
                    },
                    "weight0": {
                        "label": "W",
                        "summary": "The spline weight of the point. If the point is later used to create a spline (nurbs or Bezier) primitive, the weight will influence the shape of the primitive and may cause that primitive to become rational. Polygons and metaballs are not affected by this weight."
                    },
                    "weight2": {
                        "label": "W",
                        "summary": ""
                    },
                    "closed0": {
                        "label": "Closed",
                        "summary": "To create a closed polygon, check the Closed button."
                    },
                    "pointdat": {
                        "label": "Points DAT",
                        "summary": "Path to a Table DAT containing point data. By default, x, y, z, and w can be defined in the first 4 columns of the table using un-named columns.   If the Named Attributes parameter below is turned on, the following attributes can be defined in the Points Table DAT using named columns: * P(0) P(1) P(2) P(3) * N(0) N(1) N(2) * Cd(0) Cd(1) Cd(2) Cd(3) * uv(0) uv(1) uv(2)  Any other columns are added as single-float attributes.  NOTE: Turn off Compute Normals on the Polygon parameter page when supplying N(0) N(1) N(2) in the Points Table DAT."
                    },
                    "usept1": {
                        "label": "Point 1",
                        "summary": ""
                    },
                    "keep": {
                        "label": "Delete Geometry, Keep Points",
                        "summary": "Use this option to remove any unused points. When checked, existing geometry in the input are discarded, but the polygons created by this SOP are kept, as well as any points in the input."
                    },
                    "usept3": {
                        "label": "Point 3",
                        "summary": ""
                    },
                    "pt0": {
                        "label": "Point 0",
                        "summary": "The three input fields represent the X, Y and Z coordinates of the point. These values can be constants (numbers) or variables. Below are three examples:  0.2    0.42    1.3  0.2    op('xform1').par.tx    1.36   # read the sixth point (first point is 0) from the SOP, grid1 op('grid1').points[5].x    op('grid1').points[5].y    op('grid1').points[5].z"
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": "Creates normals on the geometry."
                    },
                    "usept5": {
                        "label": "Point 5",
                        "summary": ""
                    },
                    "weight4": {
                        "label": "W",
                        "summary": ""
                    },
                    "closed2": {
                        "label": "Closed",
                        "summary": ""
                    },
                    "prim1": {
                        "label": "Polygon",
                        "summary": ""
                    },
                    "closed4": {
                        "label": "Closed",
                        "summary": ""
                    },
                    "inc": {
                        "label": "N",
                        "summary": "Increment / skip amount to use for adding points."
                    },
                    "remove": {
                        "label": "Remove Unused Points",
                        "summary": "Keep only the connected points, and discard unused points."
                    },
                    "prim4": {
                        "label": "Polygon",
                        "summary": ""
                    },
                    "prim3": {
                        "label": "Polygon",
                        "summary": ""
                    },
                    "pt1": {
                        "label": "Point 1",
                        "summary": ""
                    },
                    "closedall": {
                        "label": "Closed",
                        "summary": "Closes the generated polygons."
                    },
                    "weight5": {
                        "label": "W",
                        "summary": ""
                    },
                    "prim5": {
                        "label": "Polygon",
                        "summary": ""
                    },
                    "usept0": {
                        "label": "Point 0",
                        "summary": ""
                    },
                    "closed5": {
                        "label": "Closed",
                        "summary": ""
                    },
                    "pt5": {
                        "label": "Point 5",
                        "summary": ""
                    },
                    "add": {
                        "label": "Add",
                        "summary": "Optionally join subgroups of points."
                    }
                },
                "summary": "The Add SOP can both create new Points and Polygons on its own, or it can be used to add Points and Polygons to an existing input."
            },
            "vertexSOP": {
                "label": "Vertex",
                "parameters": {
                    "custom4type": {
                        "label": "Custom Attrib Type",
                        "summary": ""
                    },
                    "custom1val": {
                        "label": "Value",
                        "summary": ""
                    },
                    "alpha": {
                        "label": "Alpha",
                        "summary": "Select from the pop-up menu in order to pass through, create, or remove vertex alpha (transparency) attributes from incoming geometry.  Using the local variables $CA in an expression allows you to alter the existing vertex alpha attribute."
                    },
                    "custom3": {
                        "label": "Custom Attrib",
                        "summary": ""
                    },
                    "docrease": {
                        "label": "Crease",
                        "summary": "Select from the pop-up menu in order to pass through, create, or remove crease attributes from incoming geometry.  The Crease Weight attribute can be used to set individual edge crease weights for sub-division surfaces (see Subdivide SOP ). This vertex attribute defines the weight for the edge which goes from that vertex to the next vertex in the polygon. For example, with a triangle (which has vertices 0, 1, 2), the attribute for vertex 1 defines the crease weight for the edge (1, 2). The attribute for vertex 2 defines the crease weight for edge (2, 0). The crease weight should be greater than 0. The larger the value for crease weights, the sharper the edge will be when sub-divided.  Crease attributes can be visualized by passing them into a Subdivide SOP."
                    },
                    "custom1type": {
                        "label": "Custom Attrib Type",
                        "summary": ""
                    },
                    "douvw": {
                        "label": "Texture",
                        "summary": "Select from the pop-up menu in order to pass through, create, or remove vertex texture attributes from incoming geometry."
                    },
                    "custom3val": {
                        "label": "Value",
                        "summary": ""
                    },
                    "custom1": {
                        "label": "Custom Attrib",
                        "summary": ""
                    },
                    "diff": {
                        "label": "Color",
                        "summary": ""
                    },
                    "custom2val": {
                        "label": "Value",
                        "summary": ""
                    },
                    "crease": {
                        "label": "Crease",
                        "summary": ""
                    },
                    "map": {
                        "label": "Texture",
                        "summary": ""
                    },
                    "custom3type": {
                        "label": "Custom Attrib Type",
                        "summary": ""
                    },
                    "doclr": {
                        "label": "Color",
                        "summary": "Select from the pop-up menu in order to pass through, create, or remove vertex color attributes from incoming geometry."
                    },
                    "custom4": {
                        "label": "Custom Attrib",
                        "summary": ""
                    },
                    "custom2": {
                        "label": "Custom Attrib",
                        "summary": ""
                    },
                    "custom4val": {
                        "label": "Value",
                        "summary": ""
                    },
                    "custom2type": {
                        "label": "Custom Attrib Type",
                        "summary": ""
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    }
                },
                "summary": "The Vertex SOP allows you to edit/create attributes on a per-vertex (rather than per-point) basis."
            },
            "particleSOP": {
                "label": "Particle",
                "parameters": {
                    "jitter": {
                        "label": "Jitter Births",
                        "summary": "This allows you to jitter the location pixels of each particle as they are born."
                    },
                    "split": {
                        "label": "Min/Max Splits",
                        "summary": "When a particle splits, it splits into a number of other particles. The number of particles is randomly set between this range."
                    },
                    "prtype": {
                        "label": "Particle Type",
                        "summary": "Selects how the particles are rendered."
                    },
                    "rmunused": {
                        "label": "Remove Unused Points",
                        "summary": "Removes all unused points from the input geometry. This is provided as an explicit option instead of automatically because it saves the time needed to purge the points from memory during the simulation. This prevents unnecessary slowdowns during the simulation."
                    },
                    "timepreroll": {
                        "label": "Preroll Time",
                        "summary": "How many seconds of the simulation to bypass, after the reset time is reached. For example, if you put the number 33 into this field (and reset is at Tstart), frame one will show the simulation that was at a time of 33 seconds. In other words, the first thirty-two seconds have been bypassed, and the time at thirty-three seconds is shifted to frame one. The first thirty-two seconds must still be calculated in order to compute the status of the points, so you will notice some delay upon reset."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "limitneg": {
                        "label": "- Limit Plane",
                        "summary": "The particles will die or bounce off the limit planes when it reaches them. The six limit plane fields define a bounding cube. The default settings are 1000 units away, which is very large. Reduce the values to about one to see the effect."
                    },
                    "splitvel": {
                        "label": "Split Velocity",
                        "summary": "Each split particle is given this base velocity."
                    },
                    "dodrag": {
                        "label": "Add Drag Attribute",
                        "summary": "When selected, calculates the drag coefficient of the particle, as entered in the Drag field."
                    },
                    "domass": {
                        "label": "Add Mass Attribute",
                        "summary": "When selected, calculates the mass of the particle, as specified in the Mass field."
                    },
                    "drag": {
                        "label": "Drag",
                        "summary": "Drag of each particle."
                    },
                    "accurate": {
                        "label": "Accurate Moves",
                        "summary": "This option makes the particles move more accurately between frames by calculating their trajectories for fractional frame values."
                    },
                    "gaintan": {
                        "label": "Gain Tangent",
                        "summary": "Friction parameters which can be regarded as energy loss upon collision. The first parameter affects the energy loss (gain) perpendicular to the surface. 0 means all energy (velocity) is lost, 1 means no energy is lost perpendicular to surface. The second parameter is the energy gain tangent to the surface."
                    },
                    "gainnorm": {
                        "label": "Gain Normal",
                        "summary": "Friction parameters which can be regarded as energy loss upon collision. The first parameter affects the energy loss (gain) perpendicular to the surface. 0 means all energy (velocity) is lost, 1 means no energy is lost perpendicular to surface. The second parameter is the energy gain tangent to the surface.  * 1 and 1 means nothing is lost or gained. * 0.1 and 1 cause the particles to strike the surface and dribble along it, like rain atop a roof. * 1 and 0 makes them bounce perpendicular to the surface, no matter what angle they came in at. * -1 and 1 makes the particle bounce back from whence it came. * Gains greater than 1 cause energy gain (like a pinball machine bumper)."
                    },
                    "maxsteps": {
                        "label": "Max Steps",
                        "summary": "Limits how far back in time TouchDesigner calculates particle positions for proper interactions.  If frame rates are slow this computation back in time can become high, this parameter limits that effect."
                    },
                    "period": {
                        "label": "Turb Period",
                        "summary": "A small period means that the turbulence varies quickly over a small area, while a larger value will cause points close to each other to be affected similarly."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "Determines how the Reset parameter is interpreted."
                    },
                    "wind": {
                        "label": "Wind",
                        "summary": "Wind forces acting on the particles. Similar to External Force. Using Wind (and no other forces, such as Turbulence), the particles will not exceed the wind velocity.  ===Discussion - Wind vs External Force ===  The application of External Force directly affects a particles' acceleration, the rate of which is determined by the mass (F = Mass  Acceleration). Wind is an additional force, but one that is velocity sensitive. If a particle is already travelling at wind velocity, then it shouldn't receive any extra force from it. This implies a maximum velocity when using Wind on its own.  An increase in mass impedes acceleration for a given constant force. Drag is a force opposing the direction of motion which is velocity sensitive, i.e. the larger the velocity, the greater the effect of drag. Its useful for limiting the velocity of particles."
                    },
                    "alpha": {
                        "label": "Alpha Speed",
                        "summary": "As a particle goes faster, it should become more transparent. The Alpha Speed parameter defaults to 0, which doesn't change alpha as the speed increases. A typical value of 0.5 causes the particle to be 70% opaque when it's going 1 unit/second. Increasing the Alpha Speed parameter makes it more transparent at a given speed. At zero speed, a particle is always 100% opaque."
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": "Creates normals on the geometry.  Only used when Behaviour is set to Modify Source Geometry."
                    },
                    "doid": {
                        "label": "Add Particle ID",
                        "summary": "Adds an ID number to each particle as it is born."
                    },
                    "sourcegrp": {
                        "label": "Source Group",
                        "summary": ""
                    },
                    "attractmode": {
                        "label": "Attractor Use",
                        "summary": ""
                    },
                    "ptreuse": {
                        "label": "Point Reuse",
                        "summary": "Decide how the internal memory for points is reused when a point needs to be created or when a point dies."
                    },
                    "mass": {
                        "label": "Mass",
                        "summary": "The relative mass of each particle. Heavier particles take longer to start moving, and longer to slow down."
                    },
                    "birth": {
                        "label": "Birth",
                        "summary": "The number of particles born each second. Particles are not released in clusters. They are born at random times during the first frame of their existence. Their birth time is set randomly during the first frame."
                    },
                    "hit": {
                        "label": "Hit Behavior",
                        "summary": "Control over what happens when a particle hits either the six collision planes or the collide object. The options are:"
                    },
                    "timeinc": {
                        "label": "Time Inc",
                        "summary": "The Time Inc parameter determines how often to cook the SOP. By default, this parameter is set to 1/$FPS. This means that the SOP will cook once for every frame. When complex dynamics are involved, the SOP may require more frequent cooking for increased mathematical accuracy. To get sub-frame accuracy in the cooking, set the Time Inc to something smaller than 1/$FPS.  For example: Setting the Time Inc to 0.5/$FPS will mean that the SOP gets cooked twice for every frame.  Note: Never set this parameter to be greater than 1/$FPS."
                    },
                    "life": {
                        "label": "Life Expect",
                        "summary": "How long each particle will exist, in seconds. The default is 3 seconds. You may want to adjust this number based on the length of your animation."
                    },
                    "limitpos": {
                        "label": "+ Limit Plane",
                        "summary": "The particles will die or bounce off the limit planes when it reaches them. The six limit plane fields define a bounding cube. The default settings are 1000 units away, which is very large. Reduce the values to about one to see the effect."
                    },
                    "turb": {
                        "label": "Turbulence",
                        "summary": "The amplitude of turbulent (chaotic) forces along each axis. Use positive values, if any."
                    },
                    "lifevar": {
                        "label": "Life Variance",
                        "summary": "Variance of a particle's life expectancy in seconds. If life expectancy is one second, and the variance is zero seconds, each particle will live exactly one second. If variance is set to 0.5, then some particles will live only a half second, while others will live a second and a half. The rest will live some time in-between. This randomness gives a more natural look to the particle births."
                    },
                    "splitvar": {
                        "label": "Velocity Variance",
                        "summary": "This is a random amount that is added to the split velocity. When creating fireworks, the variance is large while the velocity is low. When rendering raindrops splashing, the split velocity is large in Y, and the variance in X and Z causes the particles to bounce up - but randomly - in the XZ plane."
                    },
                    "behave": {
                        "label": "Behavior",
                        "summary": ""
                    },
                    "external": {
                        "label": "External Force",
                        "summary": "Forces of gravity acting on the particles. When drag is zero, the particles can accelerate with no limit on their speed."
                    },
                    "splittype": {
                        "label": "Split",
                        "summary": ""
                    },
                    "seed": {
                        "label": "Seed",
                        "summary": "Random number seed for the particle simulation."
                    }
                },
                "summary": "The Particle SOP is used for creating and controlling motion of \\\"particles\\\" for particle systems simulations."
            },
            "railsSOP": {
                "label": "Rails",
                "parameters": {
                    "xsectgrp": {
                        "label": "X-Section Groups",
                        "summary": "You can use a subset of primitives from the Cross-section input by specifying a group here. Accepts patterns, as described in Pattern Matching."
                    },
                    "noflip": {
                        "label": "Fix Flipping",
                        "summary": "Option to correct the flipping when no direction vector is used and the two rails happen to cross each other causing the normal to flip upside down."
                    },
                    "usedir": {
                        "label": "Use Direction",
                        "summary": "Uses the direction vector specified in the X, Y and Z coordinates. Otherwise it will use the normals of the geometry."
                    },
                    "dir": {
                        "label": "Direction",
                        "summary": "The direction vector to use."
                    },
                    "firstl": {
                        "label": "Sweep along First and Last Rail",
                        "summary": "Connects the cross-section between the first and last rails."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Non-cumulative rotation of the cross sections around the backbone. All cross sections get the same rotation."
                    },
                    "railname": {
                        "label": "Group Name",
                        "summary": "Specify the name of your output groups in this field. Accepts patterns, as described in Pattern Matching."
                    },
                    "railgrp": {
                        "label": "Rail Groups",
                        "summary": "You can use a subset of primitives from the Rails input by specifying a group here. Accepts patterns, as described in Pattern Matching."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Global scaling of the cross-sections."
                    },
                    "stretch": {
                        "label": "Stretch to Rails",
                        "summary": "Stretches the cross-section geometry to the rail geometry."
                    },
                    "cycle": {
                        "label": "Cycle Type",
                        "summary": ""
                    },
                    "newg": {
                        "label": "Create Output Groups",
                        "summary": "Selecting this option enables the creation of groups. A group is created for each backbone that is incoming. This allows for easy skinning in the Skin SOP."
                    },
                    "usevtx": {
                        "label": "Use Vertex",
                        "summary": "Specifies two vertices of the cross section polygon to be placed on rail1 and rail2 respectively. Very useful, for instance, to keep the first vertex on rail1 and the seventh vertex on rail2."
                    },
                    "vertex": {
                        "label": "Connection Vertices",
                        "summary": "The vertices at which the cross-section is connected to the rails."
                    },
                    "pairs": {
                        "label": "Sweep along Pairs of Rails",
                        "summary": "Sweeps along rail 1 & 2, 3 & 4, 5 & 6 etc. instead of 1 & 2, 2 & 3, 3 & 4 etc."
                    }
                },
                "summary": "The Rails SOP generates surfaces by stretching cross-sections between two rails."
            },
            "blendSOP": {
                "label": "Blend",
                "parameters": {
                    "diff": {
                        "label": "Differencing",
                        "summary": "Generates exaggerated blends between objects where values above 1 or less than 0 will result in over-scaled blends.  When this option is checked, the above channel values are not summed and scaled to 1. The first input is considered a reference; Blend computes the difference between the first input and the others for each point; values greater than 1 and less than 0 produce exaggerations of the shapes for inputs 2 and higher. The first input, however, cannot be exaggerated by its blend channel, /blend1, and it is considered to be the \\\"base\\\". When using Differencing, the /blend1 channel has no effect. If the geometry in the first input must be deformed, feed it into another input, where the blend channels have an effect."
                    },
                    "dopos": {
                        "label": "Blend Position",
                        "summary": "When checked, the point positions of the inputs will be blended based on the weights of the blend channels. If not checked, the input geometry will not change, only allowing Blending of Colors, Normals and Textures if selected."
                    },
                    "blend1v": {
                        "label": "Blend Input 0 - 3",
                        "summary": "Channels controlling the contribution of the geometry inputs to the output geometry."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Specifies a point or primitive group in the first input. If, for example, a group is specified containing the first and third points, then the first and third point of every input will be blended whereas the second, fourth, fifth, etc. points will be set to match the first input source. Accepts patterns, as described in: Scripting > Pattern Matching."
                    },
                    "donml": {
                        "label": "Blend Normals",
                        "summary": "When checked, the point normals of the geometry inputs will be blended based on the weights of the blend channels."
                    },
                    "doclr": {
                        "label": "Blend Colors",
                        "summary": "When checked, the point colors of the geometry inputs will be blended based on the weights of the blend channels."
                    },
                    "blend2v": {
                        "label": "Blend Input 4 - 7",
                        "summary": "Channels controlling the contribution of the geometry inputs to the output geometry."
                    },
                    "douvw": {
                        "label": "Blend Texture",
                        "summary": "When checked, the point texture co-ordinates of the geometry inputs will be blended based on the weights of the blend channels."
                    },
                    "blend3v": {
                        "label": "Blend Input 8 - 11",
                        "summary": "Channels controlling the contribution of the geometry inputs to the output geometry."
                    },
                    "doup": {
                        "label": "Blend Up",
                        "summary": "When checked, the Up Vector of the geometry inputs will be blended based on the weights of the blend channels."
                    },
                    "blend4v": {
                        "label": "Blend Input 12 - 15",
                        "summary": "Channels controlling the contribution of the geometry inputs to the output geometry."
                    }
                },
                "summary": "The Blend SOP provides 3D metamorphosis between shapes with the same topology. It can blend"
            },
            "twistSOP": {
                "label": "Twist",
                "parameters": {
                    "strength": {
                        "label": "Strength",
                        "summary": "The Strength of the effect being applied. The Rolloff determines an accentuation of the effect being applied. When you are using different types of transformations this Strength / Roll will have different effects:  * Bend - Strength and Roll are used to control the extremities of the geometry (try a value of 0.5). * Twist - Strength and Roll are used to affect the twist amount based on the distance. * Shear - Strength and Roll are used to affect the shear amount based on distance. * Taper - Strength and Roll are used to affect the direction of the bow (inwards vs. outwards). * Linear Taper - Strength and Roll have no effect for this option. * Squash and Stretch - Strength and Roll are used to maintain the apparent volume of the source geometry.  Typically, Rolloff should equal 1 - which spreads the effect evenly (although not being limited to) across the bounds of the geometry. Values higher than 1 iterate the effect multiple times through the same range. If Rolloff equals 0, then the effect may be localised to a small segment at the centre of the deformed geometry and Strength may not appear to work properly.  Note: To be certain to see the effects of the Twist SOP, make sure you have enough divisions along the edges. By using a centre that is different from that of the object you can improve your control of the object. Try moving the pivot point to the bottom of an object that you are squashing and stretching."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    },
                    "saxis": {
                        "label": "Secondary Axis",
                        "summary": "These menus allows you to select the primary and secondary axes for the deformation. The selected deformation will first occur in the Primary Axis and then the Secondary Axis."
                    },
                    "paxis": {
                        "label": "Primary Axis",
                        "summary": "These menus allows you to select the primary and secondary axes for the deformation. The selected deformation will first occur in the Primary Axis and then the Secondary Axis."
                    },
                    "op": {
                        "label": "Operation",
                        "summary": "This menu allows you to select a type of non-linear deformation. Select from the following options:"
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "This field allows you to choose the origin of the deformation."
                    },
                    "roll": {
                        "label": "Rolloff",
                        "summary": "The Strength of the effect being applied. The Rolloff determines an accentuation of the effect being applied. When you are using different types of transformations this Strength / Roll will have different effects:  * Bend - Strength and Roll are used to control the extremities of the geometry (try a value of 0.5). * Twist - Strength and Roll are used to affect the twist amount based on the distance. * Shear - Strength and Roll are used to affect the shear amount based on distance. * Taper - Strength and Roll are used to affect the direction of the bow (inwards vs. outwards). * Linear Taper - Strength and Roll have no effect for this option. * Squash and Stretch - Strength and Roll are used to maintain the apparent volume of the source geometry.  Typically, Rolloff should equal 1 - which spreads the effect evenly (although not being limited to) across the bounds of the geometry. Values higher than 1 iterate the effect multiple times through the same range. If Rolloff equals 0, then the effect may be localised to a small segment at the centre of the deformed geometry and Strength may not appear to work properly.  Note: To be certain to see the effects of the Twist SOP, make sure you have enough divisions along the edges. By using a centre that is different from that of the object you can improve your control of the object. Try moving the pivot point to the bottom of an object that you are squashing and stretching."
                    }
                },
                "summary": "The Twist SOP performs non-linear deformations such as bend, linear taper, shear, squash and stretch, taper and twist."
            },
            "tubeSOP": {
                "label": "Tube",
                "parameters": {
                    "orderv": {
                        "label": "V Order",
                        "summary": "If a spline surface is selected, it is built at this order for V."
                    },
                    "orient": {
                        "label": "Orientation",
                        "summary": "Primary axis of tube (long axis)."
                    },
                    "rad": {
                        "label": "Radius",
                        "summary": "The first field is the radius of the top of the tube and the second field represents the radius of the bottom of the tube."
                    },
                    "surftype": {
                        "label": "Connectivity",
                        "summary": "This option is used to select the type of surface, when using a Mesh Primitive Type."
                    },
                    "type": {
                        "label": "Primitive Type",
                        "summary": "Select from the following types. For information on the different types, see the Geometry category articles."
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": ""
                    },
                    "t": {
                        "label": "Center",
                        "summary": "Location of the tube center from the object origin."
                    },
                    "rows": {
                        "label": "Rows",
                        "summary": "Number of rows in tube."
                    },
                    "cols": {
                        "label": "Columns",
                        "summary": "Number of columns in tube."
                    },
                    "modifybounds": {
                        "label": "Modify Bounds",
                        "summary": ""
                    },
                    "cap": {
                        "label": "End Caps",
                        "summary": "If selected, it adds faceted end caps to the ends of the tube."
                    },
                    "orderu": {
                        "label": "U Order",
                        "summary": "If a spline surface is selected, it is built at this order for U."
                    },
                    "height": {
                        "label": "Height",
                        "summary": "The height of the tube."
                    },
                    "texture": {
                        "label": "Texture Coordinates",
                        "summary": "Adds UV texture coordinates to the sphere."
                    },
                    "imperfect": {
                        "label": "Imperfect",
                        "summary": "This option applies only to Bzier and NURBS types. If selected, the tube is an approximated nonrational curve, otherwise it is a perfect rational curve."
                    }
                },
                "summary": "The Tube SOP generates open or closed tubes, cones, or pyramids along the X, Y or Z axes."
            },
            "pointSOP": {
                "label": "Point",
                "parameters": {
                    "dopscale": {
                        "label": "Scale",
                        "summary": "Creates, removes, or ignores particle scale attributes defined in the Particle SOP. Particle Scale acts as a multiplier for the size of particles. The value of this attribute is multiplied by the size specified in the Particle SOP's render attributes to scale each particle. This attribute is used by the Point Sprite MAT when rendering point sprites."
                    },
                    "custom3val": {
                        "label": "Value",
                        "summary": ""
                    },
                    "edgef": {
                        "label": "Edge F",
                        "summary": ""
                    },
                    "custom3": {
                        "label": "Custom Attrib",
                        "summary": ""
                    },
                    "alpha": {
                        "label": "Alpha",
                        "summary": ""
                    },
                    "custom1type": {
                        "label": "Custom Attrib Type",
                        "summary": "The type of attribute created can be selected from this menu."
                    },
                    "douvw": {
                        "label": "Texture",
                        "summary": "If you select Add from the pop-up menu, enter formulas here to control the values of the texture coordinates here. The attributes to modify are: me.inputTexture[0], me.inputTexture[1] and me.inputTexture[2]"
                    },
                    "doup": {
                        "label": "Up Vector",
                        "summary": "Creates/Removes the \\\"up\\\" attribute for points. This attribute defines an up vector which is used to fully define the space around a point (for particle instancing or copying geometry).  These are the values for the up vector. The up vector is used in conjunction with the copy template's normals to control the orientation of the copies in the Copy SOP . The variables to modify are: $UPX, $UPY, $UPZ - which are the values of the up vector attribute for the first source; and $UPX2, $UPY2, $UPZ2 - which are the values of the up vector attribute for the second source."
                    },
                    "pscale": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "donml": {
                        "label": "Normal",
                        "summary": "If you select Add from the pop-up menu, enter formulas to change a given point normal here. Point normals are directional vectors used by other SOPs, such as Turbulence, Facet and Copy. See List of Attributes article for detailed information. The attributes to modify are: me.inputNormal[0], me.inputNormal[1] and me.inputNormal[2]."
                    },
                    "group": {
                        "label": "Group",
                        "summary": ""
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "custom2type": {
                        "label": "Custom Attrib Type",
                        "summary": ""
                    },
                    "map": {
                        "label": "Texture",
                        "summary": ""
                    },
                    "dodirf": {
                        "label": "Dir. F",
                        "summary": "An arbitrary directional force, still affected by the distance roll-off function."
                    },
                    "custom4type": {
                        "label": "Custom Attrib Type",
                        "summary": ""
                    },
                    "custom1val": {
                        "label": "Value",
                        "summary": "The value(s) to assign to the attribute."
                    },
                    "dotension": {
                        "label": "Tension",
                        "summary": "Tension affects the elasticity of the edges the point is connected to."
                    },
                    "donormalf": {
                        "label": "Normal F",
                        "summary": "Force directed along the point normal direction."
                    },
                    "normalf": {
                        "label": "Normal F",
                        "summary": ""
                    },
                    "dospringk": {
                        "label": "Spring K",
                        "summary": "The Spring Constant is a well known physical property affecting each point."
                    },
                    "radiusf": {
                        "label": "Radius",
                        "summary": ""
                    },
                    "custom3type": {
                        "label": "Custom Attrib Type",
                        "summary": ""
                    },
                    "doradius": {
                        "label": "Radius",
                        "summary": "Used to modify the distance roll-off effect. The roll-off is: r /(r+d^2) Where r is radius, and d is distance from attractor point. If no radius is set, no attenuation is performed."
                    },
                    "n": {
                        "label": "Normals",
                        "summary": ""
                    },
                    "doedgef": {
                        "label": "Edge F",
                        "summary": "Only works on primitive face types. The force is directed in the direction of the edge leading from that point. If multiple vertices reference the same point, then the direction is the edge direction of the last primitive referencing the point.  If the face open, then the end point has an edge direction equal to that of the preceding point in that primitive.  Note: When edge forces are added using the Point SOP, the force directions are computed in the Point SOP itself. Thus, any following transformations do not effect these. If you wish for the edge directions to be transformed as well, all transformations must be done before the Point SOP. Only the edge forces function like this."
                    },
                    "radialf": {
                        "label": "Radial F",
                        "summary": ""
                    },
                    "springk": {
                        "label": "Spring K",
                        "summary": ""
                    },
                    "up": {
                        "label": "Up Vector",
                        "summary": ""
                    },
                    "t": {
                        "label": "Position",
                        "summary": "Expressions to translate the XYZ coordinates of a given point can be entered here. The attributes to modify here are: me.inputPoint.x, me.inputPoint.y and me.inputPoint.z.  Simply entering me.inputPoint.x into the Position X field means that the X coordinate of each point that comes in is passed straight through with no modification.  Changing this entry to me.inputPoint.x+5 means that the X coordinate of each point that comes in will be displaced by 5 units. This formula can be expanded to produce many useful effects. Transformations can also be effected in the Y and Z fields."
                    },
                    "custom1": {
                        "label": "Custom Attrib",
                        "summary": "Creates a custom attribute with this name."
                    },
                    "drag": {
                        "label": "Drag",
                        "summary": ""
                    },
                    "diff": {
                        "label": "Color",
                        "summary": ""
                    },
                    "custom2val": {
                        "label": "Value",
                        "summary": ""
                    },
                    "dovel": {
                        "label": "Velocity",
                        "summary": "Retains, adds, or removes the velocity of points. Defines the magnitude of the particle's velocity in the X, Y and Z directions."
                    },
                    "doclr": {
                        "label": "Color",
                        "summary": ""
                    },
                    "custom4": {
                        "label": "Custom Attrib",
                        "summary": ""
                    },
                    "custom4val": {
                        "label": "Value",
                        "summary": ""
                    },
                    "scalef": {
                        "label": "F Scale",
                        "summary": ""
                    },
                    "dirf": {
                        "label": "Dir. F",
                        "summary": ""
                    },
                    "doscale": {
                        "label": "F Scale",
                        "summary": "Multiplier for total force associated with this attractor point.  Both Radius and Force Scale will default to 1 if not created as point attributes.  Radial / Normal / Edge / Directional Force - These four parameters introduce a type of force when created and each has a corresponding multiplier associated with it."
                    },
                    "doradialf": {
                        "label": "Radial F",
                        "summary": "Force directed towards the attractor point. Positive multipliers are towards while negative are away."
                    },
                    "v": {
                        "label": "Velocity",
                        "summary": ""
                    },
                    "mass": {
                        "label": "Mass",
                        "summary": ""
                    },
                    "domass": {
                        "label": "Point Mass/Drag",
                        "summary": "Retains, adds, or removes mass and drag attributes for points."
                    },
                    "custom2": {
                        "label": "Custom Attrib",
                        "summary": ""
                    },
                    "doweight": {
                        "label": "Weight",
                        "summary": "If you select Add from the pop-up menu, enter formulas here to control the values of the point weights here. The attribute to modify is: me.inputPoint.w. Values for the weight of the point can range from 0.0001 to infinity."
                    },
                    "weight": {
                        "label": "Weight",
                        "summary": ""
                    },
                    "tension": {
                        "label": "Tension",
                        "summary": ""
                    }
                },
                "summary": "The Point SOP allows you to get right down into the geometry and manipulate the position, color, texture coordinates, and normals of the points in the Source, and other attributes."
            },
            "stitchSOP": {
                "label": "Stitch",
                "parameters": {
                    "stitchop": {
                        "label": "Stitch",
                        "summary": "Stitches sub-groups of n primitives or patterns of primitives."
                    },
                    "rightuv": {
                        "label": "Right UV",
                        "summary": "Point on each left / right primitive at which to begin / end the stitch."
                    },
                    "lrwidth": {
                        "label": "LR Width",
                        "summary": "The first value represents the width of the left stitch. The second value represents the width of the right stitch."
                    },
                    "fixed": {
                        "label": "Fixed Intersection",
                        "summary": "When the tangent option is on, this option allows some flexibility as to which side of each slope is modified."
                    },
                    "inc": {
                        "label": "N",
                        "summary": "The value entered for N determines the pattern of primitives stitched."
                    },
                    "dir": {
                        "label": "Direction",
                        "summary": "Allows stitching along either the U or V parametric direction."
                    },
                    "loop": {
                        "label": "Wrap Last to First",
                        "summary": "If enabled, it connects the beginning of the first primitive in the left input to the end of the last primitive in the same input. If only one primitive exists, its ends will be stitched together."
                    },
                    "tolerance": {
                        "label": "Tolerance",
                        "summary": "This parameter minimizes modification to the input sources. A smaller value creates less modification."
                    },
                    "leftuv": {
                        "label": "Left UV",
                        "summary": "Point on each left / right primitive at which to begin / end the stitch."
                    },
                    "bias": {
                        "label": "Bias",
                        "summary": "Determines which primitive remains unaffected. The values go from 0 - 1, where 0 - first, and 1 - last."
                    },
                    "lrscale": {
                        "label": "LR Scale",
                        "summary": "Use this parameter to control the direction and position of the tangential slopes."
                    },
                    "sharp": {
                        "label": "Sharp Partials",
                        "summary": "If selected, creates sharp corners at the ends of the stitch when the stitch partially spans a primitive."
                    },
                    "dotangent": {
                        "label": "Tangent",
                        "summary": "If selected, modifies neighbouring rows on each primitive to create identical slopes at the given rows."
                    },
                    "dostitch": {
                        "label": "Stitch",
                        "summary": "If selected, move a single row from each primitive to coincide."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Which primitives to stitch. If blank, it stitches the entire input. Accepts patterns, as described in Pattern Matching."
                    }
                },
                "summary": "The Stitch SOP is used to stretch two curves or surfaces to cover a smooth area."
            },
            "captureSOP": {
                "label": "Capture",
                "parameters": {
                    "group": {
                        "label": "Group",
                        "summary": ""
                    },
                    "savefile": {
                        "label": "Save File",
                        "summary": "The file specified here can be used as a \\\"working file\\\" to save the point weighting of all the points or a selected subset of points. The file format for the capture override files is fairly straight-forward (see above), so this is a good place to start if you need to do custom overriding."
                    },
                    "captfile": {
                        "label": "Override File",
                        "summary": "The name of the capture override file (*.ocapt). This file is loaded after TouchDesigner completes its point weighting. Each line of the override file lists a point number, a region (path and primitive number) and a weight. The points on the geometry are modified to use these custom weights.  Override File Format - Each line in the override file must have the following format:  For example:  0 /obj/chain_bone1/cregion 0 0.0   0 /obj/chain_bone2/cregion 0 3.757989   0 /obj/chain_bone3/cregion 0 1.757989   This weights point 0 to three regions (actually only two because the first entry has a weight of zero). Remember that the Override File is read after TouchDesigner does it's own capture weight computation, so in this case, if point 0 was originally assigned to region /obj/chain_bone4/cregion 0, this part of its weighting would be unchanged. There is no upper limit to the number of regions that can be weighted to a point. If a point/region combination is in the file twice, the second one is used.  For example:  0 /obj/chain_bone1/cregion 0 1.0  0 /obj/chain_bone1/cregion 0 2.0  This causes the first entry to be ignored (a weighting of 2.0 is used).  The weight field is used to prescribe the relative amount of influence a region has on a point. It can be any number. The range of the weights computed by TouchDesigner are specified by the Inner/Outer Weight parameter of each Capture Region (please see Capture Region SOP). The easiest way to a capture Override File is to use the Save Override File button (see below) and start from the file produced by TouchDesigner."
                    },
                    "savesel": {
                        "label": "Save Selected Points to File",
                        "summary": "This saves the point weighting only for the points that are selected in the viewport.  Note: you must be editing this particular SOP in the Viewport for this selection to apply to this SOP."
                    },
                    "autoincr": {
                        "label": "Increment Save File",
                        "summary": "This increments the Save File name before saving. Be careful about turning this option off because there is no warning or confirm dialog to prevent you from overwriting an .ocapt file."
                    },
                    "savecaptfile": {
                        "label": "Save All Data to File",
                        "summary": "This saves the point weighting of all points to the Save File."
                    },
                    "captframe": {
                        "label": "Capture Frame",
                        "summary": "Specifies the frame number to do the capture computations. Every time TouchDesigner reaches this frame, the geometry will be re-captured. It is a common practice to set the Capture Frame to an frame outside of your animation range, -1 for example. Specifies the frame number to do the capture computations. Every time TouchDesigner reaches this frame, the geometry will be re-captured. It is a common practice to set the Capture Frame to an frame outside of your animation range, -1 for example.  Note: When a .toe file is loaded, all of the associated capture regions are evaluated at the Capture Frame. Keyframes must be set to position the capture regions properly at the Capture Frame, otherwise the geometry will be weighted incorrectly upon the subsequent file loads."
                    },
                    "rootbone": {
                        "label": "Hierarchy",
                        "summary": "An object hierarchy is traversed to find the Capture Regions with which to do the weighting. This parameter specifies the top of the traversal hierarchy."
                    },
                    "color": {
                        "label": "Point Coloring",
                        "summary": "This option colors each point by capture region (using point attributes) according to its capture weight. The points inherit their colors from the Capture Region(s) in which they lie. For example, if a point falls within a blue capture region and also a yellow capture region, the point will be colored green (more blue near if the blue weighting dominates, and more yellow if the yellow weight dominates). In addition, the points become darker as the weighting gets lighter. For example, near the edge of a blue region, a caught point will appear dark blue. Near the centre, it will appear bright blue. If a point is not caught by any region, it is colored bright red."
                    },
                    "weightfrom": {
                        "label": "Weight from",
                        "summary": ""
                    }
                },
                "summary": "The Capture SOP is used to weight points in a geometry to capture regions."
            },
            "zedSOP": {
                "label": "ZED",
                "parameters": {
                    "generatesurface": {
                        "label": "Generate Surface",
                        "summary": "Extracts geometry from the spatial sample."
                    },
                    "maxmemory": {
                        "label": "Maximum Memory",
                        "summary": "Sets the maximum memory used for spatial mapping."
                    },
                    "sample": {
                        "label": "Sample",
                        "summary": "When enabled, camera samples space to extract geometry."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "filter": {
                        "label": "Filter",
                        "summary": "Set the filtering level of the mesh."
                    },
                    "normals": {
                        "label": "Normals",
                        "summary": "When enabled, the extracted goemetry will have normals."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "Clears the extracted geometry and resets spatial mapping."
                    },
                    "preview": {
                        "label": "Preview",
                        "summary": "Select level of detail of the preview when camera samples."
                    },
                    "generatepulse": {
                        "label": "Generate Pulse",
                        "summary": ""
                    },
                    "resolution": {
                        "label": "Resolution",
                        "summary": "Sets the spatial mapping resolution used by the camera. A smaller resolution creates a detailed geometry and higher resolution keeps only bigger vairiations in geometry."
                    },
                    "range": {
                        "label": "Range",
                        "summary": "Sets distance range of objects that will be extracted after spatial mapping from the camera. A smaller depth range will use objects close to the camera and higher depth range will use objects that are farther from the camera."
                    },
                    "consolidatepts": {
                        "label": "Consolidate Points",
                        "summary": "When enabled, redundant points that are closed together will be merged."
                    },
                    "camera": {
                        "label": "Camera",
                        "summary": "Selects which ZED camera to use."
                    },
                    "texture": {
                        "label": "Texture",
                        "summary": "The spatial mapping texture and texture coordinates of the mesh will be created when enabled. The spatial mapping texture can be retrieved using the ZED TOP."
                    }
                },
                "summary": "The ZED SOP uses the ZED to scan and create geometry."
            },
            "torusSOP": {
                "label": "Torus",
                "parameters": {
                    "angleoffset": {
                        "label": "Angle Offset",
                        "summary": ""
                    },
                    "orient": {
                        "label": "Orientation",
                        "summary": "The axis along which the torus is constructed."
                    },
                    "angleu": {
                        "label": "U Angle",
                        "summary": "The start and end sweep angles of the torus, if U Wrap is not enabled."
                    },
                    "surftype": {
                        "label": "Connectivity",
                        "summary": "This option is used to select the type of surface, when using a Mesh primitive type."
                    },
                    "type": {
                        "label": "Primitive Type",
                        "summary": "Select from the following types. For information on the different types, see the Geometry category articles."
                    },
                    "orderv": {
                        "label": "V Order",
                        "summary": "If a spline curve is selected, it is built at this order for U and V."
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": ""
                    },
                    "t": {
                        "label": "Center",
                        "summary": "Offset of torus center from object origin."
                    },
                    "closev": {
                        "label": "V Wrap",
                        "summary": "Checking V Wrap creates a torus along V by closing the primitive."
                    },
                    "rows": {
                        "label": "Rows",
                        "summary": "The rows define the number of divisions along the torus."
                    },
                    "rad": {
                        "label": "Radius",
                        "summary": "The first value (radx) defines the radius of the torus, the second value (rady) determines the radius of the inner ring.  Image:TouchGeometry256.gif"
                    },
                    "orderu": {
                        "label": "U Order",
                        "summary": "If a spline curve is selected, it is built at this order for U and V."
                    },
                    "modifybounds": {
                        "label": "Modify Bounds",
                        "summary": ""
                    },
                    "capv": {
                        "label": "V End Caps",
                        "summary": "If V End Caps is checked, it applies a face between the top and bottom of the torus - if the torus is open.  For more capping options, turn this parameter off, and append a Cap SOP."
                    },
                    "closeu": {
                        "label": "U Wrap",
                        "summary": "If U Wrap is checked, it creates a 360 cross-section."
                    },
                    "cols": {
                        "label": "Columns",
                        "summary": "The columns determine the number of divisions along the torus' cross-section."
                    },
                    "anglev": {
                        "label": "V Angle",
                        "summary": "These are the start and end angles of the cross-section circle that is swept to make the torus, if V Wrap is not enabled."
                    },
                    "capu": {
                        "label": "U End Caps",
                        "summary": "If U End Caps is checked, it puts faceted end-caps on the ends of the torus if it is less than 360.  For more capping options, turn this parameter off, and append a Cap SOP."
                    },
                    "texture": {
                        "label": "Texture Coordinates",
                        "summary": ""
                    },
                    "imperfect": {
                        "label": "Imperfect",
                        "summary": ""
                    }
                },
                "summary": "The Torus SOP generates complete or specific sections of torus shapes (like a doughnut)."
            },
            "primitiveSOP": {
                "label": "Primitive",
                "parameters": {
                    "prtype": {
                        "label": "Particle Type",
                        "summary": ""
                    },
                    "custom2": {
                        "label": "Custom Attrib",
                        "summary": ""
                    },
                    "docrease": {
                        "label": "Crease",
                        "summary": "If Keep is selected, the crease attribute is left unchanged. If Add is selected, this parameter generates a crease attribute for the primitive. If No is selected, the crease attribute is removed."
                    },
                    "lookat": {
                        "label": "Lookat Object",
                        "summary": "Selects the object the primitive should point towards. This performs the lookat in object space; if you need to a lookat in world space, use the lookat in the object's Transform page instead.  Tip: In order to get multiple sprites to always be perpendicular to the camera, feed them into a Primitive SOP and specify the camera as your Lookat Object. Then the sprites should always be perpendicular to the camera."
                    },
                    "closev": {
                        "label": "Close V",
                        "summary": "Close the primitive in U / V. Select from: Open, Closed Straight, Close Rounded, and Unroll. When you unroll a closed curve you duplicate the wrapped points (you make them unique) and turn the curve into an open curve. The shape of the curve does not change. Same goes for hulls, only there we unique entire rows and cols. This addresses a problem with texturing wrapped surfaces whereby the texture repeats itself in the wrapped portion of the surface."
                    },
                    "custom2size": {
                        "label": "Custom Attrib Size",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "These three fields move the input geometry in the three axes. Profiles use tx and ty only."
                    },
                    "doprender": {
                        "label": "Particle Render Type",
                        "summary": ""
                    },
                    "upvector": {
                        "label": "Up-Vector",
                        "summary": "Defines the orientation of the primitive along the X, Y, or Z axes.  The Up Vector determines how a primitive orients itself with respect to the target object (specified in Lookat Object). The default value is of 1 in the Y direction. This will produce nice behaviour if you want the object to rotate somewhat in the Z axis as the Lookat Object gets very close and/or passes the target. Scaling the Up Vector will cause the Lookat primitives to remain more upright as they get very close and/or pass the target. The stronger the Up Vector, the more the primitives will want to stay vertical and resist the rotation."
                    },
                    "custom1": {
                        "label": "Custom Attrib",
                        "summary": "Creates a custom attribute with this name."
                    },
                    "diff": {
                        "label": "Color",
                        "summary": "The color to add."
                    },
                    "custom2val": {
                        "label": "Value",
                        "summary": ""
                    },
                    "group": {
                        "label": "Source Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. You can specify profile curves within the group by providing a profile pattern (e.g. *.3 specifies the fourth profile in all spline surfaces).  Tip: By specifying both a primitive and a profile here (example: 0 0.* ), you can affect a transformation of both the parent surface and a profile curve."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "Sets the overall transform order for the transformations. The transform order determines the order in which transformations take place. Depending on the order, you can achieve different results using the exact same values. Choose the appropriate order from the menu."
                    },
                    "doclr": {
                        "label": "Color",
                        "summary": "If Keep is selected, the color attribute is left unchanged. If Add is selected, this parameter changes the color of input primitives according to diffuse color field. If No is selected, the color attribute is removed."
                    },
                    "alpha": {
                        "label": "Alpha",
                        "summary": "The alpha value to add."
                    },
                    "metaweight": {
                        "label": "Meta-Surface Weight",
                        "summary": "When selected, allows meta-surface weighting."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "These three fields scale the Source geometry in the three axes. Profiles use sx and sy only."
                    },
                    "pshapev": {
                        "label": "Preserve Shape V",
                        "summary": "These options only become available once a type of clamping or closure has been selected.  Closure - Change the closure and clamping of a face or hull. The options are:"
                    },
                    "custom1val": {
                        "label": "Value",
                        "summary": "The value(s) to assign to the attribute.  Parameters for other custom attributes are the same, but the number is different."
                    },
                    "doxform": {
                        "label": "Do Transformation",
                        "summary": "When checked, allows transformations to occur."
                    },
                    "templategrp": {
                        "label": "Template Group",
                        "summary": "A subset of template points to transform to."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "These three fields rotate the Source geometry in the three axes. Profiles use rz only."
                    },
                    "vtxsort": {
                        "label": "Vertex",
                        "summary": ""
                    },
                    "custom1size": {
                        "label": "Custom Attrib Size",
                        "summary": "The size of the attribute to create. It'll use however many values from the Value parameter as the size is."
                    },
                    "crease": {
                        "label": "Crease",
                        "summary": "Attribute is used to set edge crease weights for subdivision surfaces (see Subdivide SOP). The Crease Weight attribute for a primitive sets all edges of the polygon to the value specified. On shared edges, the maximum of the two crease weights is used to define the sharpness of the subdivided surface. Crease weights should be larger than 0, with larger values defining sharper edges."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The pivot point for the transformations. Profiles use px and py only."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "Sets the order of the rotations within the overall transform order."
                    },
                    "dorot": {
                        "label": "Rotate to Template",
                        "summary": "A template can be specified using the second input of the Primitive SOP. When set to On, this template can be used to transform each primitive to the location and orientation of the template point. This is similar to what the Copy SOP does except that the actual primitives are transformed, not copies made."
                    },
                    "closeu": {
                        "label": "Close U",
                        "summary": "Close the primitive in U / V. Select from: Open, Closed Straight, Close Rounded, and Unroll. When you unroll a closed curve you duplicate the wrapped points (you make them unique) and turn the curve into an open curve. The shape of the curve does not change. Same goes for hulls, only there we unique entire rows and cols. This addresses a problem with texturing wrapped surfaces whereby the texture repeats itself in the wrapped portion of the surface."
                    },
                    "pshapeu": {
                        "label": "Preserve Shape U",
                        "summary": "These options only become available once a type of clamping or closure has been selected.  Closure - Change the closure and clamping of a face or hull."
                    },
                    "clampv": {
                        "label": "Clamp V",
                        "summary": "Clamp the primitive in U / V. Select from: Clamp, Unclamp."
                    },
                    "doweight": {
                        "label": "Weight",
                        "summary": "Enter weight of meta-surface here when Meta-surface Weight is selected."
                    },
                    "vtxuoff": {
                        "label": "U Offset",
                        "summary": "Cycles face or hull columns / rows when the Shift operation is selected."
                    },
                    "vtxvoff": {
                        "label": "V Offset",
                        "summary": "Cycles face or hull columns / rows when the Shift operation is selected."
                    },
                    "clampu": {
                        "label": "Clamp U",
                        "summary": "Clamp the primitive in U / V. Select from: Clamp, Unclamp."
                    }
                },
                "summary": "The Primitive SOP is like the Point SOP but manipulates a primitive's position, size, orientation, color, alpha, in addition to primitive-specific attributes, such as reversing primitive normals."
            },
            "fileinSOP": {
                "label": "File In",
                "parameters": {
                    "normals": {
                        "label": "Compute Normals if None Exist",
                        "summary": "Creates normals if the geometry does not have them."
                    },
                    "refreshpulse": {
                        "label": "Refresh Pulse",
                        "summary": ""
                    },
                    "flipfacing": {
                        "label": "Flip Primitive Faces",
                        "summary": "Flips the primitive faces of the geometry."
                    },
                    "refresh": {
                        "label": "Refresh",
                        "summary": ""
                    },
                    "file": {
                        "label": "Geometry File",
                        "summary": "Contains the full pathname of the geometry file to be read in.  Some of the geometry formats that can be read:  * TouchDesigner : .tog * Houdini : .classic, .bhclassic"
                    }
                },
                "summary": "The File In SOP allows you to read a geometry file that may have been previously created in the Model Editor, output geometry from a SOP, or generated from other software such as Houdini."
            },
            "carveSOP": {
                "label": "Carve",
                "parameters": {
                    "divsv": {
                        "label": "V Divisions",
                        "summary": "Specifies the number of cuts/extracts to be performed between first V and second V."
                    },
                    "domainv2": {
                        "label": "Second V",
                        "summary": ""
                    },
                    "firstv": {
                        "label": "First V",
                        "summary": "This specifies a starting location to begin the cut/extract. Select this and a parametric V location between 0 and 1. Applies only to surfaces."
                    },
                    "secondv": {
                        "label": "Second V",
                        "summary": "This specifies an ending location to complete the cut / extract. Select this and a parametric V location between 0 and 1. Applies only to surfaces."
                    },
                    "domainu1": {
                        "label": "First U",
                        "summary": ""
                    },
                    "extractop": {
                        "label": "Extract Type",
                        "summary": "If enabled, it will extract a cross-section along each location specified above.  Note: if a face is used, only points can be extracted and the V parameters have no effect."
                    },
                    "secondu": {
                        "label": "Second U",
                        "summary": "This specifies an ending location to complete the cut / extract. Select this and a parametric U location between 0 and 1."
                    },
                    "domainv1": {
                        "label": "First V",
                        "summary": ""
                    },
                    "keepout": {
                        "label": "Keep Outside",
                        "summary": "Keep the primitives lying outside the first and second locations."
                    },
                    "divsu": {
                        "label": "U Divisions",
                        "summary": "This specifies the number of cuts / extracts to be performed between first U and the second U."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the Group specified. Accepts patterns, as described in the Scripting Guide under Pattern Matching."
                    },
                    "keepin": {
                        "label": "Keep Inside",
                        "summary": "Keep the primitives specified between the first and second locations."
                    },
                    "firstu": {
                        "label": "First U",
                        "summary": "This specifies a starting location to begin the cut/extract. Select this and a parametric U location between 0 and 1."
                    },
                    "allvbreakpoints": {
                        "label": "Cut at All Internal V Breakpoints",
                        "summary": ""
                    },
                    "allubreakpoints": {
                        "label": "Cut at All Internal U Breakpoints",
                        "summary": ""
                    },
                    "keeporiginal": {
                        "label": "Keep Original",
                        "summary": "If selected, it will not remove the original primitive."
                    },
                    "domainu2": {
                        "label": "Second U",
                        "summary": ""
                    }
                },
                "summary": "The Carve SOP works with any face or surface type, be that polygon, Bzier, or NURBS."
            },
            "limitSOP": {
                "label": "Limit",
                "parameters": {
                    "customattrib0chan0": {
                        "label": "Custom Attrib Chan 0",
                        "summary": ""
                    },
                    "chanradz": {
                        "label": "Radius Channel Z",
                        "summary": "Channels that control the radius on the respective axis. The Radius channels are multiplied with the Radius parameter on the Output Page."
                    },
                    "chanb": {
                        "label": "Blue Channel",
                        "summary": "These channels control the point color, or the color of any geometry created at those points."
                    },
                    "chang": {
                        "label": "Green Channel",
                        "summary": "These channels control the point color, or the color of any geometry created at those points."
                    },
                    "texturew": {
                        "label": "Texture W",
                        "summary": "Controls the w texture-offset for the point(s) This is most often used as a frame-offset or time-offset, expressed in # of frames from the current frame or frame 1 of an image sequence."
                    },
                    "lookat": {
                        "label": "Lookat Object",
                        "summary": "Orient to Path must be checked for Lookat Object to have any effect. This allows you to orient your geometry by naming the object you would like it to Look At, or point to. Once you have designated this object to look at, it will continue to face that object, even if you move it. The Look At parameter points the each piece of geometry at the other object's origin individually."
                    },
                    "output": {
                        "label": "Output Type",
                        "summary": "The type of geometry the Limit SOP produces from its sample data."
                    },
                    "customattrib1": {
                        "label": "Custom Attrib Name",
                        "summary": ""
                    },
                    "orient": {
                        "label": "Orient to Path",
                        "summary": "If this option is selected, the object will be oriented along the path. To see what the path looks like, change the Output Type to \\\"Polygonal Line\\\". When the Output Type is \\\"Polygon/Primitive Circle at Each Point\\\", the positive Z axis of each object will be pointing down the path. When the Output Type is \\\"Tubes/Strips\\\" then the cross-section of the geometry created will be pointing down the path."
                    },
                    "flipsmooth": {
                        "label": "Smooth Flip",
                        "summary": "Dynamically controls the twist of each instance of geometry on a series of points to avoid frame-by-frame flipping, which can sometimes occur when geometry is oriented along a path."
                    },
                    "chanrx": {
                        "label": "Rotate Channel X",
                        "summary": "Channels used to specify the rotational data of the geomtery created at each point. Only used when Output Type is \\\"Polygon at Each Point\\\" or \\\"Primitive Circle at Each Point\\\"."
                    },
                    "customattrib0chan3": {
                        "label": "Custom Attrib Chan 3",
                        "summary": ""
                    },
                    "chanrady": {
                        "label": "Radius Channel Y",
                        "summary": "Channels that control the radius on the respective axis. The Radius channels are multiplied with the Radius parameter on the Output Page."
                    },
                    "chany": {
                        "label": "Y Channel",
                        "summary": "Channels used to specify the point's positions, ty."
                    },
                    "customattrib1chan2": {
                        "label": "Custom Attrib Chan 2",
                        "summary": ""
                    },
                    "chanz": {
                        "label": "Z Channel",
                        "summary": "Channels used to specify the point's positions, tz."
                    },
                    "rad": {
                        "label": "Radius",
                        "summary": "Radius of geometry created. Disabled for \\\"Polygonal Line\\\"."
                    },
                    "chanr": {
                        "label": "Red Channel",
                        "summary": "These channels control the point color, or the color of any geometry created at those points."
                    },
                    "texture": {
                        "label": "Apply Texture",
                        "summary": "Applys u, v, and w texture coordinates to the created geometry."
                    },
                    "xlimit": {
                        "label": "X Limit",
                        "summary": "Parameters to set edges of bounding region when Limit is active."
                    },
                    "chop": {
                        "label": "CHOP",
                        "summary": "Specifies which CHOP Network / CHOP contains the sample data to fetch."
                    },
                    "zlimit": {
                        "label": "Z Limit",
                        "summary": "Parameters to set edges of bounding region when Limit is active."
                    },
                    "chanx": {
                        "label": "X Channel",
                        "summary": "Channels used to specify the point's positions, tx."
                    },
                    "normals": {
                        "label": "Compute Normals",
                        "summary": "Computes normals for the geometry created."
                    },
                    "chanry": {
                        "label": "Rotate Channel Y",
                        "summary": "Channels used to specify the rotational data of the geomtery created at each point. Only used when Output Type is \\\"Polygon at Each Point\\\" or \\\"Primitive Circle at Each Point\\\"."
                    },
                    "dolimit": {
                        "label": "Limit",
                        "summary": "Creates a bounding box for the position of the output geometry. Drop down menu determines behavior when outside bounded region."
                    },
                    "customattrib1chan0": {
                        "label": "Custom Attrib Chan 0",
                        "summary": ""
                    },
                    "customattrib0": {
                        "label": "Custom Attrib Name",
                        "summary": "Allows custom attributes to be added to the geometry created."
                    },
                    "texoffset": {
                        "label": "Offset",
                        "summary": "Offsets the texture coordinates a specific amount."
                    },
                    "rotate": {
                        "label": "Rotate",
                        "summary": "Rotation channels rx, ry, and rz for Rotate Polys parameter."
                    },
                    "chanalpha": {
                        "label": "Alpha Channel",
                        "summary": "Controls the point alpha, giving you alpha control of any geometry created at those points.  Note: If using a Copy SOP, turn on the Use Template Point Attributes option in the Copy SOP's Attributes Page to allow the geometry to inherit the point attributes."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "Specifies the order in which the Rotate Channel X / Y / Z channels are applied."
                    },
                    "customattrib0chan2": {
                        "label": "Custom Attrib Chan 2",
                        "summary": ""
                    },
                    "customattrib0chan1": {
                        "label": "Custom Attrib Chan 1",
                        "summary": ""
                    },
                    "chanrad": {
                        "label": "Radius Channel",
                        "summary": "Uniformly controls the radius of the geometry created at each point. The Radius channels are multiplied with the Radius parameter on the Output Page."
                    },
                    "dorotate": {
                        "label": "Rotate Polys",
                        "summary": "Rotate the geometry at each point using the Rotate parameter (below). Only works for Output Type is \\\"Polygon/Primitive Circle at Each Point\\\"."
                    },
                    "customattrib1chan3": {
                        "label": "Custom Attrib Chan 3",
                        "summary": ""
                    },
                    "chanradx": {
                        "label": "Radius Channel X",
                        "summary": "Channels that control the radius on the respective axis. The Radius channels are multiplied with the Radius parameter on the Output Page."
                    },
                    "divisions": {
                        "label": "Divisions",
                        "summary": "Only works on the following Output Types.  *Polygon at Each Point - Number of points per polygon. *Poly Sphere at Each Point - Frequency of each Polygonal Sphere. *Tubes - Number of points in cross-section of the tube. *Strips - Number of points in cross-section of the strip."
                    },
                    "chanrz": {
                        "label": "Rotate Channel Z",
                        "summary": "Channels used to specify the rotational data of the geomtery created at each point. Only used when Output Type is \\\"Polygon at Each Point\\\" or \\\"Primitive Circle at Each Point\\\"."
                    },
                    "ylimit": {
                        "label": "Y Limit",
                        "summary": "Parameters to set edges of bounding region when Limit is active."
                    },
                    "customattrib1chan1": {
                        "label": "Custom Attrib Chan 1",
                        "summary": ""
                    },
                    "texscale": {
                        "label": "Scale",
                        "summary": "Scales the texture coordinates a specific amount."
                    }
                },
                "summary": "The Limit SOP creates geometry from samples fed to it by CHOPs."
            },
            "openvrSOP": {
                "label": "OpenVR",
                "parameters": {
                    "model": {
                        "label": "Model",
                        "summary": "Select which model this node should output. This list is filled by what models the OpenVR driver provides."
                    }
                },
                "summary": "The OpenVR SOP loads various models that the OpenVR driver for the installed device provides."
            },
            "skinSOP": {
                "label": "Skin",
                "parameters": {
                    "force": {
                        "label": "Use V Order",
                        "summary": "Enables or disables the use of the V Order parameter. If the flag is OFF, the skinned surface is built as a cubic (order 4) in V, unless fewer than four cross-sections for an open V or 3 cross-section for a closed V are given. For example, if the input consists of two faces and the V Wrap flag is OFF, the surface will be linear in V (order 2). The status of the V Order flag is irrelevant when the faces or surfaces are all polygons or meshes respectively, and when doing a bilinear skin.  Here, cross-section refers either to a face or a surface boundary, depending on the types being skinned."
                    },
                    "vprims": {
                        "label": "V Cross Sections",
                        "summary": "Empty by default, this field provides a way to specify a subset of V faces. If a second input exists, the primitive groups available for selection are taken from the second input. If only the first input is present, the groups listed in the pop-up menu belong to the first input. This means that two inputs are not always needed for a bilinear skin as long as the first input has both U and V groups in it."
                    },
                    "closev": {
                        "label": "V Wrap",
                        "summary": "This menu (menu: Off, On, If primitive does) setting determines whether the surface should be wrapped in the V parametric direction. The options are to open (Off), close (On), or inherit the closure type from the cross-sections. V Wrap is ignored when doing bilinear skinning."
                    },
                    "surftype": {
                        "label": "Connectivity",
                        "summary": "(Results only viewable for polygons and meshes)."
                    },
                    "orderv": {
                        "label": "V Order",
                        "summary": "Specifies the order of the skinned surface when the V Order flag is enabled. A NURB surface of order \\\"n\\\" can be constructed with at least n or n-1 cross-sections, depending on whether the surface is open or closed in V respectively. A Bzier surface of the same order can be constructed with at least M*(n-1) + 1 cross-sections if open, or M*(n-1) cross-sections if closed. M is a non-negative, integer multiplier. The V order is ignored when the faces or surfaces are all polygons or meshes respectively, and when building a bilinear skin."
                    },
                    "inc": {
                        "label": "N",
                        "summary": "Determines the number of primitives to be either grouped or skipped. N2."
                    },
                    "polys": {
                        "label": "Output Polygons",
                        "summary": "If set, this flag instructs the program to convert the skinned surface(s) to polygons if the surface type is Mesh."
                    },
                    "prim": {
                        "label": "Keep Primitives",
                        "summary": "Determines whether the input primitives will be preserved (On) or deleted from the output (Off)."
                    },
                    "uprims": {
                        "label": "U Cross Sections",
                        "summary": "Empty by default, this field provides a way to specify a subset of the first input's faces and surfaces. Do so by selecting one or more primitive groups from this field's pop-up menu."
                    },
                    "keepshape": {
                        "label": "Preserve Shape",
                        "summary": "This parameter determines the precision of a linear skin (case c in the diagram). If enabled, it ensures that the generated surface goes through each cross-section. Here, a cross-section can be a face or a surface boundary, depending on the types being skinned. If disabled, Preserve Shape produces a surface whose CVs coincide with the CVs of the cross-sections (after they have being converted to a common type and an identical number of CVs). The skinning algorithm is faster with shape preservation OFF, but it lacks precision.  Skinning with shape preservation ON may produce unintuitive shapes when the cross-sections have many coincident CVs or are very close to each other. In this case try to jitter the CVs, vary the V Order (see below), or simply disable shape preservation.  Preserve shape is deactivated when doing bi-linear skinning."
                    },
                    "skinops": {
                        "label": "Skin",
                        "summary": "Can optionally skin subgroups of n primitives or every nth primitive in a cyclical manner.  For example; assume there are six primitives numbered for 0 - 5, and N = 2. Then,  * Groups will generate 0-1 2-3 4-5 * Skipping will generate 0-2-6 and 1-3-5."
                    }
                },
                "summary": "The Skin SOP takes any number of faces and builds a skin surface over them."
            },
            "inversecurveSOP": {
                "label": "Inverse Curve",
                "parameters": {
                    "chop": {
                        "label": "CHOP",
                        "summary": "The path to the Inverse Curve CHOP supplying the data."
                    }
                },
                "summary": "The Inverse Curve SOP takes data from an Inverse Curve CHOP and builds a curve from it."
            },
            "spriteSOP": {
                "label": "Sprite",
                "parameters": {
                    "camera": {
                        "label": "Camera",
                        "summary": "The geometry will always face the Camera COMP specified here."
                    },
                    "constantwidthnear": {
                        "label": "Constant Width Near",
                        "summary": "The width used for quads located at a position Constant Width Falloff Start or closer."
                    },
                    "constantwitdhfar": {
                        "label": "Constant Width Far",
                        "summary": "The width used for quads located at a position Constant Width Falloff End or farther."
                    },
                    "alphachop": {
                        "label": "Alpha CHOP",
                        "summary": "A 1 channel CHOP can be specified to set the alpha of the quad at that sample."
                    },
                    "xyzchop": {
                        "label": "XYZ CHOP",
                        "summary": "A CHOP with 3 channels is required to specify the X, Y, and Z position of the quad to be generated. Each sample creates 1 quad. The created quads are centered at the points defined by each sample."
                    },
                    "widthchop": {
                        "label": "Width CHOP",
                        "summary": "A 1 channel CHOP can be specified to set the width of the quad at that sample."
                    },
                    "falloffstart": {
                        "label": "Constant Width Falloff Start",
                        "summary": "At this position the or closer the geometry uses the Constant Width Near parameter for its width."
                    },
                    "colorchop": {
                        "label": "Color CHOP",
                        "summary": "A 3 channel CHOP can be specified to set the R, G, and B color values of the quad at that sample."
                    },
                    "perspectivewidth": {
                        "label": "Perspective Width",
                        "summary": "The width of the geometry created. This parameter only has an effect when the Use Constant Width is less that 1.0."
                    },
                    "constantwidth": {
                        "label": "Use Constant Width",
                        "summary": "This blends between using Perspective Width and Constant Width. When Use Constant Width = 0, width is determined only by Perspective Width, when Use Constant Width = 1, width is determined only by Constant Width parameters below."
                    },
                    "falloffend": {
                        "label": "Constant Width Falloff End",
                        "summary": "At this position the or farther the geometry uses the Constant Width Far parameter for its width.  NOTE: Inbetween Falloff Start and Falloff End the width is determined using a half-cosine falloff between the two values."
                    }
                },
                "summary": "The Sprite SOP creates geometry (quad sprites) at point positions defined by the CHOP referenced in the XYZ CHOP parameter."
            },
            "wireframeSOP": {
                "label": "Wireframe",
                "parameters": {
                    "remove": {
                        "label": "Remove Polygons",
                        "summary": "Removes the polygons from the output geometry, leaving only the converted line structures."
                    },
                    "radius": {
                        "label": "Wire Radius",
                        "summary": "Radius of the individual wires used in the construction of the geometry."
                    },
                    "fast": {
                        "label": "Fast Wire",
                        "summary": "Faster wire calculation at the expense of accuracy."
                    },
                    "caps": {
                        "label": "End Caps",
                        "summary": "When selected, places end-caps on all wire geometry."
                    },
                    "corners": {
                        "label": "Round Corners",
                        "summary": "When selected, rounds the corners by placing spheres at the point locations with the same radius as the wires."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    }
                },
                "summary": "The Wireframe SOP converts edges to tubes and points to spheres, creating the look of a wire frame structure in renderings."
            },
            "trimSOP": {
                "label": "Trim",
                "parameters": {
                    "optype": {
                        "label": "",
                        "summary": "The types of trimming operations available."
                    },
                    "trimtol": {
                        "label": "Trimming Tolerance",
                        "summary": "How close two trim curves must be to each other or to the edge of the patch in order to be considered an intersection."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "This field allows you to specify the group that you would like to trim. You can select the group from the pop-up menu, or specify a points and primitives range.  You can specify profile curves within the group by providing a profile pattern (e.g. *.3 specifies the fourth profile in all spline surfaces)."
                    },
                    "altitude": {
                        "label": "Altitude",
                        "summary": "You can specify the altitude of the trim. The $ALTITUDE variable is the surface's current altitude. This marks the transition for the surface from trimmed in to trimmed out."
                    },
                    "individual": {
                        "label": "Process Profiles Individually",
                        "summary": "When this option is off, the trim loops in the group (or all the loops on the surfaces if no group has been specified) will be considered together to form a region. It will report the first region that is found. That is, if more than one closed loop could be formed by joining the lines, there is no guarantee that the region is trimmed. Also, if there is a closed loop in the group of loops, then just that loop is used.  If the loops on the surface don't form a closed loop, then the SOP will attempt to form a region by using the boundary of the region. If all the loops make a total of two intersections with the boundary, then it will attempt to form the loop by forming it around the boundary.  For example: Use the Carve SOP to extract four profiles: two in U, and two in V. Pipe that into a Trim SOP and turn this option off. The four profiles will define a region to be trimmed. Notice that the profile end-points do not coincide, and the profiles are not parametrically continuous, nor are they created in the proper order. Despite all this, the Trim SOP is able to figure out the hole."
                    },
                    "bigloop": {
                        "label": "Build outer Trim-Loop Explicitly",
                        "summary": "This option allows you to specify that an outer trim loop be built. It is useful where you have more than one profile curve on the surface and are performing several successive trim operations involving both the Keep Inside and Keep Outside options (see example, below).  Tip: An outer trim loop must be generated the first time you punch a hole in the surface, but not if you just keep the contents of that hole and throw away the rest. By default, the outer loop (which goes all around the domain boundary) is built for you automatically. Sometimes, however, you first do a Keep Inside, then a Keep Outside with an area that's not inside the preserved regions, so you may want the outer curve at that point. That is when this parameter is useful."
                    }
                },
                "summary": "The Trim SOP cuts out parts of a spline surface, or uncuts previously cut pieces."
            },
            "polyloftSOP": {
                "label": "Polyloft",
                "parameters": {
                    "dist": {
                        "label": "Distance",
                        "summary": "Threshold distance for consolidation."
                    },
                    "pointgroup4": {
                        "label": "Group 4",
                        "summary": "Point groups."
                    },
                    "polygroup": {
                        "label": "Name",
                        "summary": ""
                    },
                    "consolidate": {
                        "label": "Consolidate Points",
                        "summary": "Fuse neighbouring points before stitching."
                    },
                    "pointgroup2": {
                        "label": "Group 2",
                        "summary": "Point groups."
                    },
                    "closev": {
                        "label": "V Wrap",
                        "summary": "Connect first and last cross-sections."
                    },
                    "pointgroup1": {
                        "label": "Group 1",
                        "summary": "Point groups."
                    },
                    "proximity": {
                        "label": "Connect Closest Ends",
                        "summary": "Start stitching at the two closest points, and handle arbitrary face orientation and start vertices."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Subset of faces to loft."
                    },
                    "closeu": {
                        "label": "U Wrap",
                        "summary": "Close the stitch in U (close each cross-section)."
                    },
                    "creategroup": {
                        "label": "Create Polygon Group",
                        "summary": "Place the generated triangles into a group."
                    },
                    "pointgroup3": {
                        "label": "Group 3",
                        "summary": "Point groups."
                    },
                    "pointgroup5": {
                        "label": "Group 5",
                        "summary": "Point groups."
                    },
                    "pointgroup0": {
                        "label": "Group 0",
                        "summary": "Point groups."
                    },
                    "prim": {
                        "label": "Keep Primitives",
                        "summary": "Preserve the cross-sections after stitching."
                    },
                    "minimize": {
                        "label": "Minimize",
                        "summary": "Distance minimization goal:"
                    }
                },
                "summary": "The Polyloft SOP generates meshes of triangles by connecting (i.e. lofting/stitching) the points of open or closed faces without adding any new points."
            },
            "springSOP": {
                "label": "Spring",
                "parameters": {
                    "gaintan": {
                        "label": "Gain Tangent",
                        "summary": "Friction parameters which can be regarded as energy-loss upon collision. The first parameter affects the energy loss (gain) perpendicular to the surface. 0 means all energy (velocity) is lost, 1 means no energy is lost perpendicular to surface. The second parameter is the energy gain tangent to the surface."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "fixed": {
                        "label": "Fixed Points",
                        "summary": "This is a point group. All points in the point group will remain unaffected by the forces. Also see the Group SOP for notes on how to specify point ranges."
                    },
                    "springbehavior": {
                        "label": "Spring Behavior",
                        "summary": "How the springs will behave:"
                    },
                    "turb": {
                        "label": "Turbulence",
                        "summary": "The amplitude of turbulent (chaotic) forces along each axis. Use positive values, if any."
                    },
                    "copygroups": {
                        "label": "Copy Groups from Source",
                        "summary": "Determines if the Spring SOP should copy groups from the Source geometry at each frame. This lets you specify the name of an animating group in the Fixed Points field, and the contents of this group will be kept up to date."
                    },
                    "dodrag": {
                        "label": "Add Drag Attribute",
                        "summary": "When selected, the geometry is deformed by the Drag attribute."
                    },
                    "domass": {
                        "label": "Add Mass Attribute",
                        "summary": "When selected, the Mass is computed for the deforming geometry."
                    },
                    "drag": {
                        "label": "Drag",
                        "summary": "Drag of each point."
                    },
                    "accurate": {
                        "label": "Accurate Moves",
                        "summary": "This option makes the nodes move more accurately between frames by calculating their trajectories for fractional frame values."
                    },
                    "tension": {
                        "label": "Initial Tension",
                        "summary": "The Initial k constant of the geometry before being deformed by the spring operation."
                    },
                    "revertfixed": {
                        "label": "Fixed Points go to Source Positions",
                        "summary": "Determines whether or not points in the Fixed Points group should be moved to the positions of the corresponding points in the Source geometry."
                    },
                    "attractmode": {
                        "label": "Attractor Use",
                        "summary": ""
                    },
                    "springk": {
                        "label": "Spring Constant",
                        "summary": "The spring constant. How tight the springs are. Increase this value to make the springs tighter and thus make the object more rigid. As this number becomes higher, the springs can oscillate out of control. Decrease the Time Inc if this happens."
                    },
                    "wind": {
                        "label": "Wind",
                        "summary": "Wind forces acting on the points. Similar to external force. Using wind (and no other forces, such as turbulence), the points will not exceed the wind velocity."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": ""
                    },
                    "gainnorm": {
                        "label": "Gain Normal",
                        "summary": "Friction parameters which can be regarded as energy-loss upon collision. The first parameter affects the energy loss (gain) perpendicular to the surface. 0 means all energy (velocity) is lost, 1 means no energy is lost perpendicular to surface. The second parameter is the energy gain tangent to the surface."
                    },
                    "timeinc": {
                        "label": "Time Inc",
                        "summary": "The Time Inc parameter determines how often to cook the SOP. By default, this parameter is set to 1/$FPS. This means that the SOP will cook once for every frame. When complex dynamics are involved, the SOP may require more frequent cooking for increased mathematical accuracy. To get sub-frame accuracy in the cooking, set the Time Inc to something smaller than 1/$FPS . For example, setting the Time Inc to 0.5/$FPS will mean that the SOP gets cooked twice for every frame.  Note: Never set this parameter greater than 1/$FPS."
                    },
                    "limitneg": {
                        "label": "- Limit Plane",
                        "summary": "The points will bounce off the limit planes when it reaches them. The six limit plane fields define a bounding cube. The default settings are one thousand units away, which is very large. Reduce the values to about one to see the effect."
                    },
                    "mass": {
                        "label": "Mass",
                        "summary": "Mass of each point. Heavier points take longer to get into motion, and longer to stop."
                    },
                    "limitpos": {
                        "label": "+ Limit Plane",
                        "summary": "The points will bounce off the limit planes when it reaches them. The six limit plane fields define a bounding cube. The default settings are one thousand units away, which is very large. Reduce the values to about one to see the effect."
                    },
                    "seed": {
                        "label": "Seed",
                        "summary": "Random number seed for the simulation."
                    },
                    "period": {
                        "label": "Turb Period",
                        "summary": "A small period means that the turbulence varies quickly over a small area, while a larger value will cause points close to each other to be affected similarly."
                    },
                    "external": {
                        "label": "External Force",
                        "summary": "Forces of gravity acting on the points. When drag is zero, the points can accelerate with no limit on their speed."
                    },
                    "hit": {
                        "label": "Hit Behavior",
                        "summary": "Control over what happens when the geometry hits either the six collision planes or the collision object. The options are:"
                    },
                    "timepreroll": {
                        "label": "Preroll Time",
                        "summary": "How many seconds of the simulation to bypass, after the reset time is reached. For example, if you put the number 33 into this field (and reset is at $TSTART), frame one will show the simulation that was at a time of 33 seconds. In other words, the first thirty-two seconds have been bypassed, and the time at thirty-three seconds is shifted to frame one. The first thirty-two seconds must still be calculated in order to compute the status of the points, so you will notice some delay upon reset."
                    }
                },
                "summary": "The Spring SOP deforms and moves the input geometry using spring \\\"forces\\\" on the edges of polygons and on masses attached to each point."
            },
            "jointSOP": {
                "label": "Joint",
                "parameters": {
                    "smoothpath": {
                        "label": "Smooth Path",
                        "summary": "If not on, the joint circles are blended linearly. Otherwise, they are placed along a cubic piece-wise Bzier curve between the circle centres. This is useful when the input contains more than two circles and the joints must be continuous to each other. If this option isn't enabled, the interpolation may be sharper than desired."
                    },
                    "divs": {
                        "label": "Divisions",
                        "summary": "Allows you to specify the number of circles between each pair of input circles."
                    },
                    "orient": {
                        "label": "Orient Circles",
                        "summary": "This helps to create a joint that blends between the input circles without flattening or curving outwards. In order to do this, there may be a reversal of the normal of each input circle. For example, if the normals of the two input circles are facing away from each other, the joint created (if this option was not enabled) would appear to connect the circles the long way around. This option would reorient the joint such that the shorter distance is used to create the joint."
                    },
                    "preserve2": {
                        "label": "Preserve Last Input",
                        "summary": "Preserves the last input circle."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field causes the SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    },
                    "lrscale": {
                        "label": "LR Scale",
                        "summary": "These parameters control the shape of the smooth path, varying the shape of the implied curve from the left or right. If the Orient Circles option is on, the sign of the scale has no effect. For a discussion of the relative terms right and left, see Align SOP."
                    },
                    "preserve1": {
                        "label": "Preserve First Input",
                        "summary": "Preserves the first input circle being fed into the SOP."
                    },
                    "lroffset": {
                        "label": "LR Offset",
                        "summary": "These parameters allow you to override the distance between circles, thereby affecting the shape of the joint."
                    },
                    "majoraxes": {
                        "label": "Align Major Axes",
                        "summary": "If enabled, this option aligns the first circle's largest axis to the last circle's largest axis. If disabled, the first and last circles' x axes are aligned. This option can help minimize the twist in the joint ellipses between bones."
                    },
                    "smoothtwist": {
                        "label": "Smooth Twist",
                        "summary": "Each joint circle is rotated slightly such that its X and Y axis align as it approaches an input circle. This toggle causes the adjustments to be an incremental, or piece-wise, Bzier function. Again this is useful for multi-circle inputs."
                    },
                    "mintwist": {
                        "label": "Minimum Twist",
                        "summary": "If on, the rotations of the added circles are calculated such that they never rotate further than one half turn in either direction. This leads to a visually continuous layout suitable for creating a skeleton, but will cause problems if the circles are later skinned since the beginnings of each circle may no longer be continuously aligned."
                    }
                },
                "summary": "The Joint SOP will aid in the creation of circle-based skeletons by creating a series of circles between each pair of input circles."
            },
            "textSOP": {
                "label": "Text",
                "parameters": {
                    "legacyparsing": {
                        "label": "Legacy Parsing",
                        "summary": "When enabled and if the Text parameter is in Constant Mode, \\ and \\  character sequences will be turned into tab and newline characters respectively. Otherwise the \\ and \\  sequences will be left as literal \\\\ and t and \\\\ and n."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "These three fields move the geometry in the three axes."
                    },
                    "readingdirection": {
                        "label": "Reading Direction",
                        "summary": "Use to set whether the language reads Left to Right or Right to Left."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Language type hint to help format the glyphs correctly. This should be a abbreviation from the Text TOP/SOP Unicode Language Abbreviations table."
                    },
                    "fontsizex": {
                        "label": "Font Size X",
                        "summary": "Sets the font size in X (horizontal)."
                    },
                    "keepfontratio": {
                        "label": "Keep Font Ratio",
                        "summary": "Ignores Y value in Font Size. Sets both X and Y size to Font Size X."
                    },
                    "bold": {
                        "label": "Bold",
                        "summary": "Displays the text in bold."
                    },
                    "italic": {
                        "label": "Italic",
                        "summary": "Displays the text in Italic."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "Sets the overall transform order for the transformations. The transform order determines the order in which transformations take place. Depending on the order, you can achieve different results using the exact same values. Choose the appropriate order from the menu."
                    },
                    "fontfile": {
                        "label": "Font File",
                        "summary": "Specify any TrueType font file (.ttf file) to use for the text.  When using a font file, the Font menu above is disabled."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The pivot point for the transformations (not the same as the pivot point in the pivot channels). The pivot point parameters allow you to define the point about which geometry scales and rotates. Altering the pivot point produces different results depending on the transformation performed on the object.  For example, during a scaling operation, if the pivot point of an object is located at: -1, -1, 0 and you wanted to scale the object by 0.5 (reduce its size by 50%) the object would scale toward the pivot point and appear to slide down and to the left."
                    },
                    "text": {
                        "label": "Text",
                        "summary": "The string of text to create as geometry.  You can use \\  and \\, but see Legacy Parsing parameter."
                    },
                    "alignx": {
                        "label": "Horizontal Align",
                        "summary": "Sets the horizontal alignment."
                    },
                    "levelofdetail": {
                        "label": "Level of Detail",
                        "summary": "Controls the quality of the text's shape by adding/removing subdivisions to the geometry."
                    },
                    "kerning": {
                        "label": "Kerning",
                        "summary": "The amount of space to add between letters in X and Y. Kerning is way of adding an arbitrary offset between letters. There already is a default offset associated with each font so the letters are flush against each other. The Kerning parameter this adds to that and allows for a Y offset."
                    },
                    "wordwrapsize": {
                        "label": "Word Wrap Size",
                        "summary": "Determines the amount of 3D space used before the line wraps."
                    },
                    "fontsizey": {
                        "label": "Font Size Y",
                        "summary": "Sets the font size in Y (vertical)."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "These three fields scale the geometry in the three axes."
                    },
                    "linespacing": {
                        "label": "Line Spacing",
                        "summary": "Determines the amount of space between lines of text."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "Sets the order of the rotations within the overall transform order."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "When checked text is automatically line wrapped once it takes up the space set in Word Wrap Size parameter below."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "These three fields rotate the geometry in the three axes."
                    },
                    "font": {
                        "label": "Font",
                        "summary": "Select the font for the text from this drop down menu. All fonts are provided by Windows, any TrueType font that is loaded into Windows can be used."
                    }
                },
                "summary": "The Text SOP creates text geometry from any TrueType or OpenType font that is installed on the system, or any TrueType/OpenType font file on disk."
            },
            "polysplineSOP": {
                "label": "Polyspline",
                "parameters": {
                    "segsize": {
                        "label": "Segment Length",
                        "summary": "The length of the segments in the resampled curve.  Division Method Standard If Even Length Segments are selected, Segment Length sets the length of output segments. The number of output segments is determined by Output Divisions. If Output Divisions is zero, the number of output segments is calculated using the Segment Length parameter, and is determined by how many segments of this size will fit into the overall shape. If Even Length Segments is selected, along with zero Output Divisions and Segment Length of zero, an error message is generated, saying \\\"Invalid number of divisions or segment size\\\"."
                    },
                    "last": {
                        "label": "Last CV Count",
                        "summary": "This determines the number of times to repeat the last control vertex, determining its multiplicity. This determines the number of times to replicate the last vertex of the Source polygon(s). This is most useful when the Source consists of open polygons; extra vertices at the end of the line will force the curve to extend to the end of the line."
                    },
                    "first": {
                        "label": "First CV Count",
                        "summary": "Number of times to repeat the first control vertex, determining its multiplicity. This determines the number of times to replicate the first vertex of the Source polygon(s). This is most useful when the Source consists of open polygons; extra vertices at the beginning of the line will force the curve to extend to the beginning of the line. For example a value of two will force a Cardinal curve to extend to its first vertex and a value of three will force a Bspline to start at is first vertex."
                    },
                    "tension": {
                        "label": "CV Tension",
                        "summary": "The tension exerted by the points from the Source polygons. The greater the tension, the closer the resulting shape will be to the original shape."
                    },
                    "basis": {
                        "label": "Spline Type",
                        "summary": "Spline type to use. There are seven choices:"
                    },
                    "divide": {
                        "label": "Division Method",
                        "summary": ""
                    },
                    "polydivs": {
                        "label": "Output Divisions",
                        "summary": "Number of segments in the resampled curve.  If Division Method = Standard is selected, this has no effect. If Even Length Segments is selected, this parameter sets the number of edges that is created. The length of the segments is determined by Segment Length. If Segment Length is 0, the length of the output segments is determined by dividing the over all shape into this number of segments.  If the Output Divisions parameter is set to zero, the value of the Segment Length parameter is used to calculate the number of Output Divisions."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Subset of faces to use. Accepts patterns, as described in Pattern Matching."
                    },
                    "edgedivs": {
                        "label": "Sample Divisions",
                        "summary": "Number of spline divisions before resampling.  If Division Method = Standard is selected, this is the number of subdivisions for every edge. If Even Length Segments is chosen, it has the subtle effect of determining the accuracy with which the segment lengths can be calculated."
                    },
                    "closure": {
                        "label": "Close",
                        "summary": ""
                    }
                },
                "summary": "The Polyspline SOP fits a spline curve to a polygon or hull and outputs a polygonal approximation of that spline."
            },
            "divideSOP": {
                "label": "Divide",
                "parameters": {
                    "numsides": {
                        "label": "Maximum Edges",
                        "summary": "Input value determines the maximum number of edges that all of the input polygons will be reduced to if they exceed this number. Sets the maximum number of sides for convexed polygons. There must be at least three sides. Using small numbers in the range of 3-6 gives the best results; the resulting polygons are not so long and thin. If input polygons have fewer edges than specified, no change will be executed on those polygons."
                    },
                    "divs": {
                        "label": "Divisions",
                        "summary": "Determine the level of sub-divisions for the Smooth Polygons option. A value of 1 doubles the number of polygons at the corners, a value of 2 will add twice as much sub-division. Values of 3 and greater may add a substantial number of polygons and should be used with care - you can exponentially increase the complexity."
                    },
                    "size": {
                        "label": "Size",
                        "summary": "Sets the size of the bricker grid divisions in each of the three axes."
                    },
                    "dual": {
                        "label": "Compute Dual",
                        "summary": "Convert the polyhedron into its point/face dual.Convert the polyhedron into its point/face dual."
                    },
                    "brick": {
                        "label": "Bricker Polygons",
                        "summary": "Selecting this option divides the input polygon geometry into grid-like squares, though the output is not a mesh. Brickering creates new polygons. It can be used to divide a surface so that it deforms more naturally when wrapped on another surface using a Creep SOP, or twisted with a Lattice SOP.  It can also be used to divide a planar surface into smaller pieces to apply point colors using a Point SOP. The size and location of the square divisions created by brickering is determined by the following three options."
                    },
                    "angle": {
                        "label": "Angle",
                        "summary": "Determines the angle relative to XYZ axes, at which Bricker Polygons are created."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "If there are input groups, specifying a group name in this field will cause this SOP to act only upon the group specified. Accepts patterns, as described in Pattern Matching."
                    },
                    "convex": {
                        "label": "Convex Polygons",
                        "summary": "When checked, this option will convex all incoming polygons to the maximum number of sides as specified in the field below. This is useful for reducing the number of sides of polygons that are concave and not shading properly, e.g. to generate triangles from all incoming geometry, check this option and change the Maximum Edges field below to 3. You will see that all of the polygons are reduced to three sides maximum (triangles)."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Sets the XYZ offset of the grid divisions to the Source geometry (the Brickering Grid is moved)."
                    },
                    "smooth": {
                        "label": "Smooth Polygons",
                        "summary": "If checked, this feature will divide the polygons which are adjacent to each other and are not flat, as in the corners of a box. The threshold of the smoothing and the amount of polygon divisions that are added are controlled by the fields below.  All incoming geometry must have shared points for Smooth Polygons to work. You may have to pass the geometry through a Facet SOP > Consolidate Points to achieve this. For example, to create a dice from a box, add a Box SOP followed by a Facet SOP> Consolidate Points then through the Divide SOP with Smooth Polygons enabled; set the Weight fields set to: 4,0.5 and the Divisions set to: 2."
                    },
                    "planar": {
                        "label": "Triangulate Non-Planar",
                        "summary": "Triangulates any non-planar polygons."
                    },
                    "removesh": {
                        "label": "Remove Shared Edges",
                        "summary": "Eliminates any common edges."
                    },
                    "weight": {
                        "label": "Weight",
                        "summary": "Determines the localization effect of the added polygons. You can isolate the divisions to where there are edges in the geometry with values greater than 1 enhancing the edges by smoothing out the angle transitions. Values less than 1 tend to put the divisions in the flatter areas of the source geometry and alter the shape of the geometry considerably by pulling in the edges."
                    }
                },
                "summary": "The Divide SOP divides incoming polygonal geometry."
            },
            "tristripSOP": {
                "label": "Tristrip",
                "parameters": {
                    "constrainstriplength": {
                        "label": "Constrain Strip Length",
                        "summary": "When checked on, the length (number of triangles) of the tristrips can be constrained to a maximum using the Maximum Strip Length parameter below."
                    },
                    "maxstriplength": {
                        "label": "Maximum Strip Length",
                        "summary": "Set the maximum number of triangles in each tristrip."
                    },
                    "group": {
                        "label": "Source Group",
                        "summary": "Specify a group of primitive to convert to tristrips. If no group is specified, then the entire geometry will be converted."
                    }
                },
                "summary": "The Tristrip SOP convert geometry into triangle strips."
            },
            "sortSOP": {
                "label": "Sort",
                "parameters": {
                    "partoffset": {
                        "label": "Offset",
                        "summary": "Shift particle order by the amount specified on the offset line."
                    },
                    "pointprox": {
                        "label": "Point",
                        "summary": "The X, Y and Z coordinates to reference when sorting by Proximity to Point."
                    },
                    "primoffset": {
                        "label": "Offset",
                        "summary": "Shift primitive order by the amount specified on the offset line."
                    },
                    "partsort": {
                        "label": "Particle Sort",
                        "summary": "Sort the primitives according to the following criteria:"
                    },
                    "primobj": {
                        "label": "Vector Object",
                        "summary": "Sort primitives along a vector defined by the object's translation."
                    },
                    "primseed": {
                        "label": "Seed",
                        "summary": "Random seed when sorting by Random."
                    },
                    "primsort": {
                        "label": "Primitive Sort",
                        "summary": "Sort the primitives according to the following criteria:"
                    },
                    "pointdir": {
                        "label": "Vector",
                        "summary": "Allows you to specify a unique vector along which points can be sorted."
                    },
                    "partdir": {
                        "label": "Vector",
                        "summary": "Allows you to specify a unique vector along which particles can be sorted."
                    },
                    "pointseed": {
                        "label": "Seed",
                        "summary": "The random seed when Point Sort is set to Random."
                    },
                    "pointoffset": {
                        "label": "Offset",
                        "summary": "Shift point order by the amount specified on the offset line."
                    },
                    "primdir": {
                        "label": "Vector",
                        "summary": "Allows you to specify a unique vector along which primitives can be sorted."
                    },
                    "primprox": {
                        "label": "Point",
                        "summary": "The X, Y and Z coordinates to reference when sorting by Proximity to Point."
                    },
                    "partreverse": {
                        "label": "Reverse Results",
                        "summary": "Reverses the result from the Particle Sort as defined above."
                    },
                    "pointobj": {
                        "label": "Vector Object",
                        "summary": "Sort points along a vector defined by the object's transformation values."
                    },
                    "ptsort": {
                        "label": "Point Sort",
                        "summary": "Sort the points in the input geometry, according to the following criteria:"
                    },
                    "partprox": {
                        "label": "Point",
                        "summary": "The X, Y and Z coordinates to reference when sorting by Proximity to Point."
                    },
                    "partobj": {
                        "label": "Vector Object",
                        "summary": "Sort particles along a vector defined by the object's translation."
                    }
                },
                "summary": "The Sort SOP allows you to sort points and primitives in different ways."
            },
            "fitSOP": {
                "label": "Fit",
                "parameters": {
                    "orderv": {
                        "label": "V Order",
                        "summary": "If the input is a surface, this is the order of the fitted Spline surface in the V parametric direction. The V order is irrelevant if the input is a face."
                    },
                    "corners": {
                        "label": "Fit Corners",
                        "summary": "Specifies whether corners in the data should be preserved when doing local curve interpolation."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "Scope establishes the interpolation method."
                    },
                    "type": {
                        "label": "Primitive Type",
                        "summary": "The output of the Fit SOP is a NURBS or Bzier primitive. All input faces are fitted to Spline curves, and all input surfaces are fitted to spline surfaces. The resulting shapes are identical whether created as NURBS or as Bzier primitives."
                    },
                    "tol": {
                        "label": "Tolerance",
                        "summary": "This is the primary precision factor in approximation fitting. The smaller the tolerance, the closer the fit and the higher the number of generated vertices. If a small tolerance causes unwanted twists or contortions in the fitted primitive, it may help to vary the Spline order and/or enable the Multiple Knots flag."
                    },
                    "closev": {
                        "label": "V Wrap",
                        "summary": "This menu determines whether the fitted surface should be wrapped in the V parametric direction. The options are to open (Off), close (On), or inherit the closure type from the input primitive. V Wrap is ignored when the input is a face."
                    },
                    "multipleu": {
                        "label": "U Multiple Knots",
                        "summary": "Sometimes the data set has sharp bends that must be preserved in the fitted shape. In this case, inserting multiple knots in the areas of sharp curvature will usually produce the right effect. Sometimes, however, the simulated sharpness induces unwanted twists immediately before or after the corner. Lowering the Spline order and/or reducing the tolerance may help diminish this side-effect."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "Specifies one of two fitting styles: approximation or interpolation. Each style has a number of parameters that are accessible from the respective folder. For more information see the Approximation and Interpolation pages below."
                    },
                    "dataparmv": {
                        "label": "V Data Parameter",
                        "summary": "V data parameterization is identical to U data parameterization, but it affects the V direction when the input is a surface. It is not used when the input is a face."
                    },
                    "dataparmu": {
                        "label": "U Data Parameter",
                        "summary": "Specifies the parameterization of the data in the U direction (the only direction if the input is a curve). The data parameterization can be uniform, chord length, or centripetal.  : Uniform Uniform parameterization uses equally spaced parameter values. It works best when the geometry is very regular. When the data is unevenly spaced, this approach can produce very unintuitive shapes, and is not recommended. : Chord Length Chord length computes the parameterization of the data based on the relative distances between successive data points. It is the most commonly used approach because is tends to produce the most accurate results. : Centripetal Centripetal parameterization is similar to chord length, but yields better results when the data has very sharp corners."
                    },
                    "group": {
                        "label": "Group",
                        "summary": ""
                    },
                    "closeu": {
                        "label": "U Wrap",
                        "summary": "This menu determines whether the fitted curve should be closed, or whether the fitted surface should be wrapped in the U parametric direction. The options are to open (Off), close (On), or inherit the closure type from the input primitive."
                    },
                    "smooth": {
                        "label": "Smoothness",
                        "summary": "For a set tolerance, the smoothness factor allows for more or less roundness in the generated shape. If this parameter is zero, it does not mean that the fit will be sharp. It simply indicates that no additional smoothing is required past the level of smoothness already achieved with the given tolerance."
                    },
                    "orderu": {
                        "label": "U Order",
                        "summary": "If the input is a face, this is the order of the Spline curve to be generated. If the input is a surface, this is the order of the fitted spline surface in the U parametric direction."
                    },
                    "multiplev": {
                        "label": "V Multiple Knots",
                        "summary": "Sometimes the data set has sharp bends that must be preserved in the fitted shape. In this case, inserting multiple knots in the areas of sharp curvature will usually produce the right effect. Sometimes, however, the simulated sharpness induces unwanted twists immediately before or after the corner. Lowering the Spline order and/or reducing the tolerance may help diminish this side-effect."
                    },
                    "surftype": {
                        "label": "Connectivity",
                        "summary": "This option is used to select the type of surface, when using a Mesh Primitive Type."
                    }
                },
                "summary": "The Fit SOP fits a Spline curve to a sequence of points or a Spline surface to an m X n mesh of points."
            },
            "polystitchSOP": {
                "label": "Polystitch",
                "parameters": {
                    "stitch": {
                        "label": "Polygons to Stitch",
                        "summary": "The polygons to consider for stitching."
                    },
                    "corners": {
                        "label": "Corner Points",
                        "summary": "A list of point numbers that are to be considered breaks in the boundary edges."
                    },
                    "consolidate": {
                        "label": "Consolidate Points",
                        "summary": "When several points along one edge are snapped to the same position, consolidate them into a single point. This only consolidates along the boundary, not across the boundary."
                    },
                    "tol3d": {
                        "label": "Max Dist to Stitch",
                        "summary": "The maximum distance two edges can be from each other and still be stitched."
                    },
                    "findcorner": {
                        "label": "Automatically Find Corners",
                        "summary": "Whenever an edge changes direction at a point more than the specified angle, it will mark that point as a corner."
                    },
                    "angle": {
                        "label": "Corner Angle",
                        "summary": "The maximum angle a boundary point can change before it is considered a corner."
                    }
                },
                "summary": "The Polystitch SOP attempts to stitch polygonal surfaces together, thereby eliminating cracks that result from evaluating the surfaces at differing levels of detail."
            }
        },
        "CHOPs": {
            "": {
                "label": "",
                "parameters": {},
                "summary": ""
            },
            "replaceCHOP": {
                "label": "Replace",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "notify": {
                        "label": "Notify on Change",
                        "summary": "A performance diagnostic that notifies the user when the input names change."
                    },
                    "length": {
                        "label": "Length",
                        "summary": "Determines the start/end range of the output."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Replace CHOP can be used to replace channels very quickly."
            },
            "audiospectrumCHOP": {
                "label": "Audio Spectrum",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "fftsize": {
                        "label": "FFT Size",
                        "summary": "Converting to frequency needs a power-of-2 number of samples, like 512, 1024, 2048. (FFT means Fast Fourier Transform.) The more samples, the more accurate the spectrum but the more it doesn't represent the most recent sound. Whatever the size, the CHOP uses the most recent samples. Knowing that audio at 44100 samples per second with a timeline frame rate of 60 frames per second gives 735 samples per frame, if the CHOP cooks 1 frame later and the FFT size is 1024, then it will re-use 1024-735 = 289 samples, which is good as there's a little overlap. However if it cooks 2 frames later, it will miss using 446 frames since it will have advanced 735*2=1470 samples and it will only use 1024 of them."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "outputmenu": {
                        "label": "Output Length",
                        "summary": "The method how output length will be determined."
                    },
                    "outlength": {
                        "label": "Set Output Length",
                        "summary": "Number of Samples desired in output. The fewer the samples, the less the frequency resolution."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "highfreqboost": {
                        "label": "High Frequency Boost",
                        "summary": "When 0, the levels are not changed. When greater than 1, the levels are boosted, mostly at the high frequencies. High Frequency Boost can be over-driven past 1."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "mode": {
                        "label": "Mode",
                        "summary": ""
                    },
                    "frequencylog": {
                        "label": "Frequency <-> Logarithmic Scaling",
                        "summary": "Logarithmic (=1) is more tangible for human hearing. Each octave is represented with the same number of samples, so low frequencies are more readable. Frequency (=0) shows one sample for a fixed number of Hz, which is what the raw FFT gives, but most of the upper samples are uninteresting. Your ears hear ranges of octaves better.  IMPORTANT NOTE: If Mode is set to Visualization and this parameter is set to 0, the output data is interpreted more simply: 1 sample per Hz. Set the CHOP viewer Units to Samples (via RMB on CHOP graph) and the level you see at sample 5000 is the level at 5 KHz."
                    }
                },
                "summary": "The Audio Spectrum CHOP calculates and displays the frequency spectrum of the input channels."
            },
            "soptoCHOP": {
                "label": "SOP to",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "organize": {
                        "label": "Organize by Attribute",
                        "summary": "You can type 'pid' here - then all the channels get sorted properly."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "Choose whether to get the geometry for the current frame or for all frames:"
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "sop": {
                        "label": "SOP",
                        "summary": "Specifies which Object / SOP contains the geometry you want to fetch."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Only points within the specified group are Fetched. If blank, all points are fetched."
                    },
                    "attribscope": {
                        "label": "Attribute Scope",
                        "summary": "This selects the attributes of the SOP to acquire. By default, there are three channels for the XYZ position. The \\\"P\\\" attribute is the point position.  You can use any attribute. If you look at the SOP's info and there are other attributes, you can specify them. For example \\\"uv\\\" will get the three texture coordinates. The most common attributes are  * P - Point position (X, Y, Z) - 3 values * Pw - Point weight - 1 value * Cd - Point color (red, green, blue) - 3 values * Alpha - Point alpha - 1 value * N - Point normal (X, Y, Z) - 3 values * uv - Point texture coordinates (U, V, W) - 3 values  See Attributes for a complete list of attributes."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "renamescope": {
                        "label": "Rename Scope",
                        "summary": "This parameter matches each channel acquired in the Attribute Scope. There must be one name per attribute value. By default, it translates the P attribute (position of the point) to tx, ty and tz channels. You can use Pattern Matching to specify multiple channels."
                    },
                    "transobj": {
                        "label": "Transform Object",
                        "summary": "If a transform object is specified, the point values will be represented relative to that object's origin and rotation."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": ""
                    }
                },
                "summary": "The SOP to CHOP uses a geometry object to choose a SOP from which the channels will be created."
            },
            "envelopeCHOP": {
                "label": "Envelope",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "samplerate": {
                        "label": "Sample Rate",
                        "summary": ""
                    },
                    "bounds": {
                        "label": "Envelope Bounds",
                        "summary": ""
                    },
                    "method": {
                        "label": "Type",
                        "summary": "The two methods of calculating the envelope:"
                    },
                    "width": {
                        "label": "Envelope Width",
                        "summary": "The width of the window to use in the envelope calculation. Adjust this width to capture as many features of the input as needed. It is expressed in Units."
                    },
                    "widthunit": {
                        "label": "Envelope Width Unit",
                        "summary": ""
                    },
                    "interp": {
                        "label": "Interpolate",
                        "summary": ""
                    },
                    "norm": {
                        "label": "Normalize Power Envelope",
                        "summary": "Keeps the total power in the signal constant when adjusting the Envelope Width."
                    },
                    "resample": {
                        "label": "Resample Envelope",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Envelope CHOP outputs the maximum amplitude in the vicinity of each sample of the input."
            },
            "etherdreamCHOP": {
                "label": "EtherDream",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "netaddress": {
                        "label": "Network Address",
                        "summary": "Set this parameter to the network address that both the EtherDream and the user's computer are connected to. It should have the following format: xxx.xxx.xx.xxx  To determine the required network address and to identify if the EtherDream is properly connected to the network, install and run the EtherDream Diagnostic Tool."
                    },
                    "port": {
                        "label": "Network Port",
                        "summary": "By default, the EtherDream uses TCP Port 7765. Firewall settings may need to be adjusted to allow for the EtherDream CHOP to properly communicate with the EtherDream."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "If turned off, the EtherDream CHOP will stop sending data to the EtherDream and will immediately clear its point buffer. Consider it equivalent to powering off the EtherDream."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "queueunits": {
                        "label": "Queue Units",
                        "summary": ""
                    },
                    "xscale": {
                        "label": "X Scale",
                        "summary": "Allows the input x values to be scaled by the specified factor."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "bluescale": {
                        "label": "Blue Scale",
                        "summary": "Allows the input b values to be scaled by the specified factor."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "yscale": {
                        "label": "Y Scale",
                        "summary": "Allows the input y values to be scaled by the specified factor."
                    },
                    "queuetime": {
                        "label": "Queue Time",
                        "summary": "Determines the queue size of the EtherDream point buffer and the corresponding time required to drain it. It is often useful to reduce this value when sending fewer points."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "redscale": {
                        "label": "Red Scale",
                        "summary": "Allows the input r values to be scaled by the specified factor."
                    },
                    "greenscale": {
                        "label": "Green Scale",
                        "summary": "Allows the input g values to be scaled by the specified factor."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "EtherDream is a laser controller."
            },
            "audiorenderCHOP": {
                "label": "Audio Render",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "attenuation": {
                        "label": "Attenuation",
                        "summary": "Attenuate the sound based on relative distance."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Turns the Audio Render on or off."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "outputformat": {
                        "label": "Output Format",
                        "summary": "The output format of the audio: Binaural, Stereo, Quadraphonic Surround, 5.1 Surround, 7.1 Surround, Custom Setup, or Ambisonics (AmbiX). Ambisonics is a format for encoding three-dimensional 360 degree audio. The Ambisonics format used in the Audio Render CHOP is the 3rd order SN3D format consisting of 16 encoded channels (WXYZ, RSTUV, KLMNOPQ) that define the sphere of sound. Custom Setup requires use of the Mapping Table."
                    },
                    "mappingtable": {
                        "label": "Mapping Table",
                        "summary": "A DAT Table that specifies the various speakers in the setup and their position. The Table must have 3 columns named x, y, z. Each row specifies an individual speaker, and the 3 columns specify its position. Used with the Custom Setup Output Format. The mapping table will create one channel per row."
                    },
                    "listenerobject": {
                        "label": "Listener Object COMP",
                        "summary": "A COMP that represents the listener. Must be a COMP that contains transform data, such as a Geometry or Camera COMP."
                    },
                    "sourceobject": {
                        "label": "Source Object COMP",
                        "summary": "A COMP that represents the source of the sound. Must be a COMP that contains transform data, such as a Geometry or Camera COMP."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Audio Render CHOP uses the Steam Audio SDK to spatially render audio based on the full transforms of a listener and an audio source."
            },
            "renderpickCHOP": {
                "label": "Render Pick",
                "parameters": {
                    "customattrib3": {
                        "label": "Custom Attrib 3",
                        "summary": "Specify which custom attributes to return from the object."
                    },
                    "panelvalue": {
                        "label": "Panel Value",
                        "summary": "Specifies with panel value to use to trigger the pick when picking by panel."
                    },
                    "referenceobj": {
                        "label": "Reference Object",
                        "summary": "Object used when fetching position or normals Relative to Object."
                    },
                    "pickcirstep": {
                        "label": "Pick Circular Step",
                        "summary": "Used to reduce the searching within the search area. The search area is sampled at locations that correspond to 'rings' outwards from the center pick point."
                    },
                    "responsetime": {
                        "label": "Response Time",
                        "summary": "Determines when the values are updated."
                    },
                    "customattrib3type": {
                        "label": "Custom Attrib 3 Type",
                        "summary": "The type of attribute is selected from this menu."
                    },
                    "picku": {
                        "label": "U",
                        "summary": "Sets the u coordinate when picking by parameters."
                    },
                    "pickingby": {
                        "label": "Picking by",
                        "summary": "Determines how the pick location is set."
                    },
                    "customattrib2type": {
                        "label": "Custom Attrib 2 Type",
                        "summary": "The type of attribute is selected from this menu."
                    },
                    "panel": {
                        "label": "Panel",
                        "summary": "Specifies which panel component to use when picking by panel."
                    },
                    "color": {
                        "label": "Fetch Point Color",
                        "summary": "Returns the point color of the point picked on the geometry. Channels cr, cg, cb, ca."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Path to a DAT containing callbacks for pick event received."
                    },
                    "customattrib2": {
                        "label": "Custom Attrib 2",
                        "summary": "Specify which custom attributes to return from the object."
                    },
                    "normal": {
                        "label": "Fetch Normal",
                        "summary": "Returns the normals of the point picked on the geometry. Channels nx, ny, nz."
                    },
                    "instanceid": {
                        "label": "Fetch Instance ID",
                        "summary": "Returns the Instance ID of the object. This will always be 0 if instancing is off. Channel is instance."
                    },
                    "pickv": {
                        "label": "V",
                        "summary": "Sets the v coordinate when picking by parameters."
                    },
                    "pickradius": {
                        "label": "Pick Radius",
                        "summary": "Controls the radius of the search area for the pick. If nothing is found at the pick's center it will keep searching for geometry in the search area defined by the Pick Radius."
                    },
                    "customattrib1": {
                        "label": "Custom Attrib 1",
                        "summary": "Specify which custom attributes to return from the object."
                    },
                    "position": {
                        "label": "Fetch Position",
                        "summary": "Returns the position of the point picked on the geometry. Channels tx, ty, tz."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "pickradstep": {
                        "label": "Pick Radial Step",
                        "summary": "Used to reduce the searching within the search area. The search area is sampled at locations that correspond to 'spokes' outwards from the center pick point."
                    },
                    "strategy": {
                        "label": "Strategy",
                        "summary": "Decides when to update values based on pick interactions."
                    },
                    "clearprev": {
                        "label": "Clear Previous Pick on New Pick",
                        "summary": "This parameter is only enabled when the Strategy is set to Hold Last Picked. When this is on, starting a new pick on empty space will clear the values. When off, the last values will be held if the pick starts on empty space."
                    },
                    "select": {
                        "label": "Select",
                        "summary": "When picking by parameters, picking is active when this parameter = 1."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "uv": {
                        "label": "Fetch Texture UV",
                        "summary": "Returns the texture coordinates of the point picked on the geometry. Channels mapu, mapv, mapw."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "customattrib4type": {
                        "label": "Custom Attrib 4 Type",
                        "summary": "The type of attribute is selected from this menu."
                    },
                    "activatecallbacks": {
                        "label": "Activate Callbacks",
                        "summary": "Enables Callback DAT for each pick event."
                    },
                    "includenonpickable": {
                        "label": "Include Non-Pickable Objects",
                        "summary": "Includes the non-pickable objects in the picking algorithm such that non-pickable objects may occlude pickable objects.  For example, if there is only one pickable object in the scene with lots of additional non-pickable geometry is present, turning this parameter on will prevent the pickable object from being selected if it is behind a non-pickage object (occluded by the non-pickage object)."
                    },
                    "customattrib4": {
                        "label": "Custom Attrib 4",
                        "summary": "Specify which custom attributes to return from the object."
                    },
                    "path": {
                        "label": "Fetch Object Path",
                        "summary": "Return the path to the object that is picked. This result requires and Info DAT with its Node Path parameter referecning the Render Pick CHOP."
                    },
                    "customattrib1type": {
                        "label": "Custom Attrib 1 Type",
                        "summary": "The type of attribute is selected from this menu."
                    },
                    "rendertop": {
                        "label": "Render/RenderPass TOP",
                        "summary": "Specifies which render to sample."
                    },
                    "depth": {
                        "label": "Fetch Depth",
                        "summary": "Returns the depth of the point picked on the geometry. This value a non-linear ratio of the point's position between the near and far planes of the Depth Buffer. Channel is depth."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "usepickableflags": {
                        "label": "Use Pickable Flags",
                        "summary": "When turned on only geometry whose Pickable Flag is on can be selected by the Render Pick CHOP. The Pickable Flag is found on all Object components."
                    }
                },
                "summary": "The Render Pick CHOP samples a rendering (from a Render TOP or a Render Pass TOP) and returns 3D information from the geometry at that particular pick location."
            },
            "sortCHOP": {
                "label": "Sort",
                "parameters": {
                    "indexchannel": {
                        "label": "Index Channel",
                        "summary": "Enable to output an index channel which holds the former samples location before sorting."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "indices": {
                        "label": "Channel Indices",
                        "summary": "Specify the index of the channel to be sorted. All not specified channels will reorder their samples according to the specified channels new sample order. If left empty, all channels will be sorted."
                    },
                    "names": {
                        "label": "Channel Names",
                        "summary": "Specify the name of the channel to be sorted. All not specified channels will reorder their samples according to the specified channels new sample order. If left empty, all channels will be sorted."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "seed": {
                        "label": "Seed",
                        "summary": "Any number, integer or non-integer, which starts the random number generator. Each number gives completely different noise patterns, but with similar characteristics."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "method": {
                        "label": "Sorting Method",
                        "summary": "There are three different sorting methods. CHOP samples can be reordered by increasing values, decreasing values or in random order."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "select": {
                        "label": "Select Type",
                        "summary": "Specify if the channels to be sorted will be specified by index or name."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Sort CHOP re-orders the inputs channels samples by value or by random."
            },
            "abletonlinkCHOP": {
                "label": "Ableton Link",
                "parameters": {
                    "ramp": {
                        "label": "Ramp",
                        "summary": "Outputs a 0-1 ramp each bar."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "pulse": {
                        "label": "Pulse",
                        "summary": "Outputs a pulse each bar."
                    },
                    "count": {
                        "label": "Count",
                        "summary": "Increases the count each bar."
                    },
                    "status": {
                        "label": "Status Channels",
                        "summary": ""
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Path to a DAT containing callbacks for each event received."
                    },
                    "bar": {
                        "label": "Bar",
                        "summary": "Output the current bar."
                    },
                    "sixteenths": {
                        "label": "Sixteenths",
                        "summary": "Output the current sixteenths."
                    },
                    "enable": {
                        "label": "Enable",
                        "summary": "Initializes the connection to the Ableton Link session."
                    },
                    "beat": {
                        "label": "Beat",
                        "summary": "Output the current beat."
                    },
                    "countramp": {
                        "label": "Count+Ramp",
                        "summary": "A ramp that counts up until the bar is reset."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "tempo": {
                        "label": "Tempo",
                        "summary": "Outputs the current tempo (also known as BPM)."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "rampbar": {
                        "label": "Ramp Bar",
                        "summary": "Outputs a 0-1 ramp each bar."
                    },
                    "sine": {
                        "label": "Sine",
                        "summary": "Outputs a sine wave each bar."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Turns the CHOP's output on or off."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "rampbeat": {
                        "label": "Ramp Beat",
                        "summary": "Outputs a 0-1 ramp each beat."
                    },
                    "beats": {
                        "label": "Beats",
                        "summary": "Outputs the total number of beats."
                    },
                    "phase": {
                        "label": "Phase",
                        "summary": "Outputs the current phase in the bar."
                    },
                    "signature": {
                        "label": "Signature",
                        "summary": "Specifies the time signature. The first number is the number of beats per measure and the second number indicates the type of note that constitutes one beat. See Time Signature - Wikipedia for additional information."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Ableton CHOP retrieves timing information from an Ableton Link supported network. For more information see:  http://www.ableton.com/en/link/"
            },
            "syncinCHOP": {
                "label": "Sync In",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "multicastaddress": {
                        "label": "Multicast Address",
                        "summary": "An IP address to communicate on (224.0.0.1)."
                    },
                    "port": {
                        "label": "Network Port",
                        "summary": "The network port associated with the address."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Whether or not the CHOP is currently attempting to synchronize itself to a Sync Out CHOP."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "timeout": {
                        "label": "Timeout (msec)",
                        "summary": "The maximum amount of time the CHOP will wait for synchronization signals from the other Sync CHOPs. This value is expressed in milliseconds."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Sync In CHOP and Sync Out CHOP are used to keep timelines in two or more TouchDesigner processes within a single frame of each other."
            },
            "touchoutCHOP": {
                "label": "Touch Out",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "Selects which network protocol to use to transfer data. Different protocol's have methods of connecting and using the address parameter. For more information refer to the Network Protocols article."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "port": {
                        "label": "Network Port",
                        "summary": "The network port to use."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "When Off, data is not sent."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "maxsize": {
                        "label": "Max Queue Size",
                        "summary": "Limits the number of events waiting to be sent. This prevents overflows if the connection is too slow."
                    },
                    "resendnames": {
                        "label": "Resend Names",
                        "summary": "Resends all the channel names. Generally you don't need to use this parameter, but it is provided just in-case."
                    },
                    "maxsizeunit": {
                        "label": "Max Queue Size Unit",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "syncports": {
                        "label": "Use Synced Ports",
                        "summary": "This parameter lets you send the the data in a single global pipe if required. This can be important if various data streams must be sent in frame sync."
                    },
                    "cookalways": {
                        "label": "Cook Every Frame",
                        "summary": "Specifies that this CHOP should be cooked every frame regardless of CHOPs below it are cooking."
                    },
                    "address": {
                        "label": "Address",
                        "summary": "The address to use, not all protocls require an address to be specified on the sending side."
                    }
                },
                "summary": "The Touch Out CHOP can be used to create high speed connection between two TouchDesigner processes."
            },
            "toptoCHOP": {
                "label": "TOP to",
                "parameters": {
                    "imagetop": {
                        "label": "Image Top",
                        "summary": "The image extend conditions for V greater than 1.  The extend conditions are:"
                    },
                    "rgbaunit": {
                        "label": "RGBA Units",
                        "summary": "Scales the output to lie in the range 0-1, 0-255 or 0-65535."
                    },
                    "top": {
                        "label": "TOP",
                        "summary": "Specify the TOP operator whose image will be sampled."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "g": {
                        "label": "Green",
                        "summary": "Creates a CHOP channel per scanline with the prefix specified here, starting at 0. For example, the default is \\\"r\\\" in the Red field. If the specified TOP is a horizontal ramp that is 5 lines high, it creates five CHOP channels (r0 - r4) using the values of the red pixels in those scanlines."
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": "The right extend conditions (before/after range)."
                    },
                    "vend": {
                        "label": "V End",
                        "summary": "Ending point for sampling in V."
                    },
                    "crop": {
                        "label": "Crop",
                        "summary": "Specifies what to extract from the image."
                    },
                    "imageright": {
                        "label": "Image Right",
                        "summary": "The image extend conditions for U greater than 1."
                    },
                    "startunit": {
                        "label": "Start Unit",
                        "summary": ""
                    },
                    "interp": {
                        "label": "Interpolate",
                        "summary": "Determines the interpolation method when UV sampling with an input CHOP."
                    },
                    "defcolor": {
                        "label": "Default Color",
                        "summary": "The color to use when outside the bounds of the image, and the Default Color extend condition is set."
                    },
                    "vstart": {
                        "label": "V Start",
                        "summary": "Starting point for sampling in V."
                    },
                    "uvunits": {
                        "label": "UV Units",
                        "summary": "Specifies the units for the following 4 parameters. The parameters can use the local variables $NR and $NC for the number of rows and columns."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "The sample rate of the channels, in samples per second."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": "The left extend conditions (before/after range)."
                    },
                    "ustart": {
                        "label": "U Start",
                        "summary": "Starting point for sampling in U. Values outside the range of the image are determined by the image's extend conditions, in the extend page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": "The default value for extend conditions."
                    },
                    "uend": {
                        "label": "U End",
                        "summary": "Ending point for sampling in U."
                    },
                    "downloadtype": {
                        "label": "Download Type",
                        "summary": "Gives the option for a delayed data download from the GPU, which is much faster and does not stall the render."
                    },
                    "imagebottom": {
                        "label": "Image Bottom",
                        "summary": "The image extend conditions for V less than 0."
                    },
                    "imageleft": {
                        "label": "Image Left",
                        "summary": "The image extend conditions when sampling the image with U less than 0."
                    },
                    "b": {
                        "label": "Blue",
                        "summary": "Creates a CHOP channel per scanline with the prefix specified here, starting at 0. For example, the default is \\\"r\\\" in the Red field. If the specified TOP is a horizontal ramp that is 5 lines high, it creates five CHOP channels (r0 - r4) using the values of the red pixels in those scanlines."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "The start position of the channel, expressed in units set by the units menu to the right (samples, frames or seconds). The channel length is determined by the number of pixels in each scanline that is converted into a channel."
                    },
                    "r": {
                        "label": "Red",
                        "summary": "Creates a CHOP channel per scanline with the prefix specified here, starting at 0. For example, the default is \\\"r\\\" in the Red field. If the specified TOP is a horizontal ramp that is 5 lines high, it creates five CHOP channels (r0 - r4) using the values of the red pixels in those scanlines."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "a": {
                        "label": "Alpha",
                        "summary": "Creates a CHOP channel per scanline with the prefix specified here, starting at 0. For example, the default is \\\"r\\\" in the Red field. If the specified TOP is a horizontal ramp that is 5 lines high, it creates five CHOP channels (r0 - r4) using the values of the red pixels in those scanlines."
                    }
                },
                "summary": "The TOP to CHOP converts pixels in a TOP image to CHOP channels."
            },
            "springCHOP": {
                "label": "Spring",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "initspeed": {
                        "label": "Initial Speed",
                        "summary": "The initial velocity of the mass attached to the spring."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "springk": {
                        "label": "Spring Constant",
                        "summary": "The strength of the spring. Larger spring constants produce higher frequency oscillations."
                    },
                    "dampingk": {
                        "label": "Damping Constant",
                        "summary": "The amount of damping (resistance) applied to the spring action. Higher damping causes oscillations to die off more quickly."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "mass": {
                        "label": "Mass",
                        "summary": "The mass of the object on the end of the spring. Higher masses will produce lower frequency oscillations, have higher amplitudes, and be more resistant to damping."
                    },
                    "method": {
                        "label": "Input Effect",
                        "summary": "Determines whether the input channel(s) represents a position or a force."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "initpos": {
                        "label": "Initial Position",
                        "summary": "The initial position of the mass attached to the spring."
                    },
                    "condfromchan": {
                        "label": "Intial Conditions from Channel",
                        "summary": "If on, the initial position and velocity are calculated from the values at the beginning of the channel."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Spring CHOP creates vibrations influenced by the input channels, as if a mass was attached to a spring."
            },
            "parameterCHOP": {
                "label": "Parameter",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "custom": {
                        "label": "Custom",
                        "summary": "Output the operators' custom parameters."
                    },
                    "ops": {
                        "label": "Operators",
                        "summary": "The operators determine where to obtain the channels. Specify or more operator names or paths. Examples: wave1, slider*, constant[1-9] constant[10-19:2], ../base1. Or select the operators using the menu."
                    },
                    "renamefrom": {
                        "label": "Rename from",
                        "summary": "See Pattern Matching."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "renameto": {
                        "label": "Rename to",
                        "summary": "See Pattern Replacement."
                    },
                    "parameter": {
                        "label": "Parameter",
                        "summary": "The list of parameters names (which can include wildcards) you want to get from the OP(s). One or more parameter, or * for all parameters. You can also specify a \\\"NOT\\\" selection with an ^. Or select the parameter using the menu. See Pattern Matching."
                    },
                    "nameformat": {
                        "label": "Name Format",
                        "summary": "Channels can be named suitably for multi-exporting. See CHOP_Export."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "builtin": {
                        "label": "Built-In",
                        "summary": "Output the operators' built-in parameters."
                    }
                },
                "summary": "The Parameter CHOP gets parameter values, including custom parameters, from all OP types."
            },
            "heliosdacCHOP": {
                "label": "Helios DAC",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "intensityscale": {
                        "label": "Intensity Scale",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "If turned off, the Helios DAC CHOP will stop sending data to the Helios DAC and will immediately clear its point buffer. Consider it equivalent to powering off the Helios DAC."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "xscale": {
                        "label": "X Scale",
                        "summary": "Allows the input x values to be scaled by the specified factor."
                    },
                    "bluescale": {
                        "label": "Blue Scale",
                        "summary": "Allows the input b values to be scaled by the specified factor."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "yscale": {
                        "label": "Y Scale",
                        "summary": "Allows the input y values to be scaled by the specified factor."
                    },
                    "queuetime": {
                        "label": "Queue Time (Seconds)",
                        "summary": "Determines the queue size of the Helios DAC CHOP point buffer and the corresponding time required to drain it. It is often useful to reduce this value when sending fewer points."
                    },
                    "device": {
                        "label": "Device",
                        "summary": "Select the Helios DAC you want to control from this menu."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "redscale": {
                        "label": "Red Scale",
                        "summary": "Allows the input r values to be scaled by the specified factor."
                    },
                    "greenscale": {
                        "label": "Green Scale",
                        "summary": "Allows the input g values to be scaled by the specified factor."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "Helios DAC is a laser controller."
            },
            "renameCHOP": {
                "label": "Rename",
                "parameters": {
                    "renameto": {
                        "label": "To",
                        "summary": "The replacement pattern for the channel names. See Pattern Replacement."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "renamefrom": {
                        "label": "From",
                        "summary": "The channel pattern to rename. See Pattern Matching."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Rename CHOP renames channels. Channels names from the input CHOP are matched using the From pattern, and are renamed to the corresponding name in the To pattern."
            },
            "inversecurveCHOP": {
                "label": "Inverse Curve",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "boneend": {
                        "label": "Bone End",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "order": {
                        "label": "Order",
                        "summary": ""
                    },
                    "guide": {
                        "label": "Guide Components",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "mapexports": {
                        "label": "Map Exports",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "interpolation": {
                        "label": "Interpolation",
                        "summary": ""
                    },
                    "bonestart": {
                        "label": "Bone Start",
                        "summary": ""
                    },
                    "upvector": {
                        "label": "Up Vector",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "span": {
                        "label": "Span",
                        "summary": ""
                    }
                },
                "summary": "The Inverse Curve CHOP calculates an inverse kinematics simulation for bone objects using a curve object."
            },
            "beatCHOP": {
                "label": "Beat",
                "parameters": {
                    "shiftstep": {
                        "label": "Shift Step",
                        "summary": "When set to 1, and Multiples is 5, each ramp channel is 1/5 cycle later than the previous channel. When set to .1, the delay is 1/50 cycle. This is a way to stagger the channels."
                    },
                    "ramp": {
                        "label": "Ramp",
                        "summary": "Outputs a 0-1 ramp each bar."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "This button restarts the ramps from zero. The ramp is also zero when the Beat CHOP's input is above 0."
                    },
                    "multiples": {
                        "label": "Multiples",
                        "summary": "The number of channels to create."
                    },
                    "pulse": {
                        "label": "Pulse",
                        "summary": "Outputs a pulse each bar."
                    },
                    "bpm": {
                        "label": "BPM",
                        "summary": "Outputs the current BPM."
                    },
                    "bar": {
                        "label": "Bar",
                        "summary": "Output the current bar."
                    },
                    "sixteenths": {
                        "label": "Sixteenths",
                        "summary": "Output the current sixteenths."
                    },
                    "beat": {
                        "label": "Beat",
                        "summary": "Output the current beat."
                    },
                    "countramp": {
                        "label": "Count+Ramp",
                        "summary": "A ramp that counts up until the bar is reset."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "setperiod": {
                        "label": "Set Period",
                        "summary": ""
                    },
                    "playmode": {
                        "label": "Play Mode",
                        "summary": "Specifies the method used to playback the output."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "randseed": {
                        "label": "Random Seed",
                        "summary": "Changing this generates a different set of random offsets."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "rampbar": {
                        "label": "Ramp Bar",
                        "summary": "Outputs a 0-1 ramp each bar."
                    },
                    "sine": {
                        "label": "Sine",
                        "summary": "Outputs a sine wave each bar."
                    },
                    "shiftoffset": {
                        "label": "Shift Offset",
                        "summary": "Delays all channels by this amount. 0 = no change, .5 means 50% of one period later."
                    },
                    "updateglobal": {
                        "label": "Update Global",
                        "summary": "Any Beat CHOP can now be made a \\\"global beat source\\\" by turning Update Global. A reference Beat CHOP is created at /local/master_beat (if it doesn't already exist) and all Beat CHOPs can synchronize to this by turning on Update Global. This means you require exactly one master Beat CHOP per toe. You can turn off its 'Update Global' flag when desired.  $MASTER_BEAT is set to whatever Beat CHOP has this option turned on."
                    },
                    "op": {
                        "label": "Reference Operator",
                        "summary": "This node is used to specify the time settings referenced by the Beat CHOP. The time is defined by the Time COMP found at timepath(\\\"reference_node\\\")"
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "rampbeat": {
                        "label": "Ramp Beat",
                        "summary": "Outputs a 0-1 ramp each beat."
                    },
                    "resetwait": {
                        "label": "Wait after Reset",
                        "summary": "When using the While On Reset Condition, Wait After Reset will hold the channels at zero until the next bar is started, after which the output will continue. When Wait After Reset is off, the channels will restart output as soon as the reset condition is done."
                    },
                    "resetbarvalue": {
                        "label": "Reset Bar Value",
                        "summary": "Specifies which Bar the Beat CHOP will jump to when the Reset Condition is met. Beat values are derived from the fractional part of this value."
                    },
                    "randoffset": {
                        "label": "Random Offset",
                        "summary": "The amount that each ramp is randomly time-shifted relative to a perfect ramp."
                    },
                    "period": {
                        "label": "Period",
                        "summary": "Number of beats it takes to generate one cycle of ramp."
                    },
                    "reftimeslice": {
                        "label": "Use Reference Time Slice",
                        "summary": "Turn on this checkbox to use the Time Slice used by the Reference Node."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "count": {
                        "label": "Count",
                        "summary": "Increases the count each bar."
                    },
                    "resetcondition": {
                        "label": "Reset Condition",
                        "summary": "This menu determines how the Reset input triggers a reset of the channel(s)."
                    }
                },
                "summary": "The Beat CHOP generates a variety of ramps, pulses and counters that are timed to the beats per minute and the sync produced by the Beat Dialog or the beat Command."
            },
            "handleCHOP": {
                "label": "Handle",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "preroll": {
                        "label": "Preroll",
                        "summary": "Specifies the number of iterations to solve at the initialization frame."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "init": {
                        "label": "Init Frame",
                        "summary": "Specifies a frame in which the bones are reset to their default rest angles."
                    },
                    "fixed": {
                        "label": "Fixed",
                        "summary": "If you have entered bones which form a branch or should act as a unit, enter them here. An example may be two bones splitting at the shoulders. You want them to rotate, but only as a unit."
                    },
                    "source": {
                        "label": "Source",
                        "summary": "Creates rx/ry/rz channels for each bone listed."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "iterations": {
                        "label": "Iterations",
                        "summary": "Increasing this parameters gives a more accurate solution at the cost of cooking time. Preroll (only when precalculating a range of frames, SingleFrame turned off): This will cook the solution a given number of frames before the requested frame range. Max Angle Change: This will limit the delta angle degrees the bones can move in any given frame. Use this to tame erratic behavior."
                    },
                    "delta": {
                        "label": "Max Angle Change",
                        "summary": "Specifies the maximum change in degrees the solver is allowed to move each bone per frame. Use this parameter if the solution is too drastic."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "he Handle CHOP is the \\\"engine\\\" which drives Inverse Kinematic solutions using the Handle COMP."
            },
            "filterCHOP": {
                "label": "Filter",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "ramprate": {
                        "label": "Ramp Rate",
                        "summary": "When using a Ramp Preserve filter, this is the rate that the CHOP's output channel will increase. Only if the input channel value deviates from the desired output value by 'Ramp Tolerance' amount will the CHOP instead output the input channel value."
                    },
                    "type": {
                        "label": "Type",
                        "summary": "There are seven types of filters:"
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "Resets the filter."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "passes": {
                        "label": "Number of Passes",
                        "summary": "The number of times the filter is applied to the channel."
                    },
                    "width": {
                        "label": "Filter Width",
                        "summary": "The amount of surrounding samples used in the calculation of the current sample. It is expressed in the Units."
                    },
                    "ramptolerance": {
                        "label": "Ramp Tolerance",
                        "summary": "When using a Ramp Preserve filter, if the input value deviates from the current output ramp value by this much, then the ramp will reset to the new input value. Otherwise the Ramp Preserve will continue climping at the specified 'Ramp Rate'."
                    },
                    "widthunit": {
                        "label": "Filter Width Unit",
                        "summary": ""
                    },
                    "filterpersample": {
                        "label": "Filter per Sample",
                        "summary": "Applies the filter to each sample of the channel instead of across the whole channel. Useful for working with multi-sample channels."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "spike": {
                        "label": "Spike Tolerance",
                        "summary": "For the De-spike filter type, this is the amount that a sample can differ from its neighbours without being considered a spike."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "effect": {
                        "label": "Effect",
                        "summary": "The extent to which the filter affects the channel (0 - not at all, 1 - maximum effect)."
                    }
                },
                "summary": "The Filter CHOP smooths or sharpens the input channels."
            },
            "kinectCHOP": {
                "label": "Kinect",
                "parameters": {
                    "sensor": {
                        "label": "Sensor",
                        "summary": "Selects which Kinect sensor to use. Only available when using Kinect v1."
                    },
                    "smoothing": {
                        "label": "Smoothing",
                        "summary": "Increasing the smoothing parameter value leads to more highly-smoothed skeleton position values being returned. It is the nature of smoothing that, as the smoothing value is increased, responsiveness to the raw data decreases. Thus, increased smoothing leads to increased latency in the returned skeleton values. Values must be in the range 0 through 1.0. Passing 0 causes the raw data to be returned."
                    },
                    "worldspace": {
                        "label": "World Space Positions",
                        "summary": "Returns the tracked positions in world space coordinates. For each tracked point, a tx, ty, tz triplet of channels will be output."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "facetracking": {
                        "label": "Face Tracking",
                        "summary": "Returns face tracking channels for detected faces."
                    },
                    "rotationsmoothing": {
                        "label": "Rotation Smoothing",
                        "summary": ""
                    },
                    "absbonerotations": {
                        "label": "Absolute Bone Rotations",
                        "summary": "Returns rx, ry, and rz absolute rotation channels for each bone."
                    },
                    "maxplayers": {
                        "label": "Max Players",
                        "summary": "Limits how many players to track."
                    },
                    "statuschans": {
                        "label": "Status Channels",
                        "summary": "A number of additional status channels are reported when this is turned on. A group of channels will report if a joint is currently being tracked, and another group of channels reports if part of the player is clipped outside the bounds of the Kinect sensor. The additional channels output are suffixed with tracked or clipped."
                    },
                    "relbonerotations": {
                        "label": "Relative Bone Rotations",
                        "summary": "Returns rx, ry, and rz relative rotation channels for each bone. The rotation is relative to the previous joint."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "correction": {
                        "label": "Correction",
                        "summary": "Lower values are slower to correct towards the raw data and appear smoother, while higher values will correct toward the raw data more quickly. Values must be in the range 0 through 1.0."
                    },
                    "jitterrad": {
                        "label": "Jitter Radius",
                        "summary": "The radius in meters for jitter reduction. Any jitter beyond this radius is clamped to the radius."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "colorspace": {
                        "label": "Color Space Positions",
                        "summary": "Returns the tracked positions in image space coordinates. On the Kinect 2 this is relative to the color image, on the Kinect 1 it is relative to the depth image. For each tracked point, a u, v, tz triplet of channels will be output."
                    },
                    "active": {
                        "label": "Active",
                        "summary": ""
                    },
                    "skeleton": {
                        "label": "Skeleton",
                        "summary": "Selects options for skeletal tracking."
                    },
                    "neardepthmode": {
                        "label": "Near Depth Mode",
                        "summary": "Enables near mode for skeleton tracking, which allows the depth camera to see objects as close as 40cm to the camera (instead of the default 80cm)."
                    },
                    "prediction": {
                        "label": "Prediction",
                        "summary": "The number of frames to predict into the future. Values must be greater than or equal to zero. Values greater than 0.5 will likely lead to overshooting when moving quickly. This effect can be damped by using small values of Max Deviation Radius."
                    },
                    "bonelengths": {
                        "label": "Bone Lengths",
                        "summary": "Returns the length for each bone."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "hwversion": {
                        "label": "Hardware Version",
                        "summary": "Choose between Kinect v1 or Kinect v2 sensors."
                    },
                    "unrollbones": {
                        "label": "Unroll Bone Values",
                        "summary": "Return the rx, ry, and rz values in a form that includes no discontinuities (or wrap arounds), so that they can be safely blended, filtered, lagged etc. For example, a rotation value running from 0 to 360 continuously, unrolled would start at 0 and increase in value indefinitely."
                    },
                    "maxdevrad": {
                        "label": "Max Deviation Radius",
                        "summary": "The maximum radius in meters that filtered positions are allowed to deviate from raw data. Filtered values that would be more than this radius from the raw data are clamped at this distance, in the direction of the filtered value."
                    },
                    "jointsmoothing": {
                        "label": "Joint Smoothing",
                        "summary": ""
                    },
                    "flipfaceu": {
                        "label": "Flip Face U Direction",
                        "summary": ""
                    },
                    "flipskelu": {
                        "label": "Flip Skeleton U Direction",
                        "summary": ""
                    },
                    "depthspace": {
                        "label": "Depth Space Positions",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "interactions": {
                        "label": "Interactions",
                        "summary": "Enables interactions, which returns interaction data such as \\\"grip\\\" and \\\"press\\\".  The additional channels output are prefixed with  p[1-2]/hand_l_* and p[1-2]/hand_r_*.< * For the x and y values of the interaction hand, 0.0 corresponds to left edge of interaction region and 1.0 corresponds to right edge of interaction region, but values could be outside of this range. * For the z value of the interaction hand, 0.0 means that hand is close to shoulder and 1.0 represents a fully extended arm, but values could be outside of this range. NOTE: Interaction mode requires a depth resolution of 640x480. As such, a Kinect TOP displaying a depth image for the same sensor will output an image with a resolution of 640x480 and the Near Depth Mode setting will be set in the Kinect CHOP.  For guidelines in creating applications with Kinect Interaction, download the Kinect for Windows Human Interface Guidelines."
                    }
                },
                "summary": "The Kinect CHOP reads positional and skeletal tracking data from the Kinect and Linect2 sensors."
            },
            "dmxoutCHOP": {
                "label": "DMX Out",
                "parameters": {
                    "localport": {
                        "label": "Local Port",
                        "summary": "In rare cases it can be necessary to supply a custom port from which the data should be sent. The default of -1 means the O/S assigned port is being used."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "sendartsync": {
                        "label": "Send ArtSync",
                        "summary": ""
                    },
                    "source": {
                        "label": "Source",
                        "summary": "User assigned name of source (for informative purposes)."
                    },
                    "netaddress": {
                        "label": "Network Address",
                        "summary": "Specify the IP address to use when Interface is set to Art-Net. This address corresponds to the receiving device address.  When the address is set to its default 255.255.255.255, the messages are instead broadcast to all devices on the  network. The Art-Net Net, Subnet and Universe of the receiving devices must still match those specified in the DMX Out CHOP in all cases."
                    },
                    "universe": {
                        "label": "Universe (0-15)",
                        "summary": "When the Interface parameter is set to Art-Net, this sets the universe address. A single DMX512 frame of 512 channels is referred to as a universe. The range for this parameter is 0-15."
                    },
                    "routingtable": {
                        "label": "Routing Table",
                        "summary": "Available when using Packet Per Channel Format for Art-Net or sACN. Use the docked Table DAT to route channels to the appropriate universes. Addresses can be specified by adding rows for each channel and specifying net, subnet and universe. The net, subnet and universe columns are optional. If for example the net column is missing from the Routing Table, the Net parameter is used instead.  When removing the Routing Table from the parameter, the specified address will be used for the first channel while all other channels are assigned to consecutive addresses.  Note: For sACN the first available universe has the index 1 as universe 0 is reserved by the system for future use."
                    },
                    "interface": {
                        "label": "Interface",
                        "summary": "Select the type of interface to connect to the device with."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "priority": {
                        "label": "Priority",
                        "summary": "The priority of the data being sent, if there are multiple sources."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "serialport": {
                        "label": "Serial Port",
                        "summary": "When the Interface parameter is set to Generic Serial this parameter lets you select which Serial (COM) port to use."
                    },
                    "net": {
                        "label": "Net (0-127)",
                        "summary": "When the Interface parameter is set to Art-Net, this sets the net address. A net is a groups of 16 consecutive subnets or 256 consecutive universes. The range for this parameter is 0-127. This is not a network IP address."
                    },
                    "netport": {
                        "label": "Network Port",
                        "summary": "Let's you specify the port of the receiving hardware. By default and the spec of ArtNet this is set to 6454 and should only be changed in rare cases."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Connects to the device while On."
                    },
                    "format": {
                        "label": "Format",
                        "summary": "Select between sending Packet Per Sample or Packet Per Channel."
                    },
                    "customport": {
                        "label": "Use Custom Port",
                        "summary": "Enable the Network Port parameter to specify the port of the receiving hardware."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "localaddress": {
                        "label": "Local Address",
                        "summary": "When the sending machine is equipped with multiple network adapters, this parameter can be used to choose which adapter to send the data from."
                    },
                    "subnet": {
                        "label": "Subnet (0-15)",
                        "summary": "When the Interface parameter is set to Art-Net, this sets the subnet address. A subnet is a group of 16 consecutive universes. The range for this parameter is 0-15. This is not a network subnet mask."
                    },
                    "device": {
                        "label": "Device",
                        "summary": "Select a DMX device from the menu."
                    },
                    "multicast": {
                        "label": "Multicast",
                        "summary": "Enable multicast for sACN. Multicast automatically builds the IP based on Net, Subnet, and Universe of the device. This allows for sending to multiple devices at once by specifying multiple universes."
                    },
                    "rate": {
                        "label": "Rate",
                        "summary": "How often data is sent to the device (per second).                  WARNING: DMX512 devices have a maximum refresh rate of 44Hz. It is recommended that Rate <= 44 for reliable performance."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "cid": {
                        "label": "CID",
                        "summary": "The unique ID of the sender."
                    }
                },
                "summary": "The DMX Out CHOP sends channels to DMX, Art-Net, or sACN devices."
            },
            "expressionCHOP": {
                "label": "Expression",
                "parameters": {
                    "expr2": {
                        "label": "Expression 3",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "numexpr": {
                        "label": "Num Expressions",
                        "summary": "The total number of expressions that are defined."
                    },
                    "expr0": {
                        "label": "Expression 1",
                        "summary": ""
                    },
                    "expr5": {
                        "label": "Expression 6",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "limitnum": {
                        "label": "Number of Channels",
                        "summary": ""
                    },
                    "expr1": {
                        "label": "Expression 2",
                        "summary": ""
                    },
                    "chanperexpr": {
                        "label": "Channels per Expr",
                        "summary": "The number of channels that use the current expression before the next expression is selected."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "expr3": {
                        "label": "Expression 4",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "expr4": {
                        "label": "Expression 5",
                        "summary": ""
                    },
                    "limitexpr": {
                        "label": "Limit Output Channels",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Expression CHOP allows you to modify input channels by using math expressions."
            },
            "attributeCHOP": {
                "label": "Attribute",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "Sets the rotation order of the rotation triplet."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "slerp": {
                        "label": "Function",
                        "summary": "The function to perform on the attributes:"
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Attribute CHOP adds, removes or updates attributes of the input CHOP. Currently there is only one attribute type, a \\\"quaternion\\\"."
            },
            "bulletsolverCHOP": {
                "label": "Bullet Solver",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "trans": {
                        "label": "Translation",
                        "summary": "Adds translation channels to the CHOP."
                    },
                    "xformspace": {
                        "label": "Transform Space",
                        "summary": "The space in which to output the transformation values. That is, the transform values (translation/rotation) will be outputted relative to the selected space."
                    },
                    "angvel": {
                        "label": "Angular Velocity",
                        "summary": "Adds angular velocity channels to the CHOP."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "rot": {
                        "label": "Rotation",
                        "summary": "Adds rotation channels to the CHOP."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Adds scale channels to the CHOP."
                    },
                    "comp": {
                        "label": "Solver or Actor COMP",
                        "summary": "A reference to either a Bullet Solver COMP or Actor COMP. If a Bullet Solver COMP is referenced then the CHOP will output the simulation results for all of its actors. If an Actor COMP is referenced then the CHOP will output the simulation results for only that actor."
                    },
                    "linvel": {
                        "label": "Linear Velocity",
                        "summary": "Adds linear velocity channels to the CHOP."
                    },
                    "collisioninfo": {
                        "label": "Collision Info",
                        "summary": "Adds colliding, colliding_actor_id, colliding_body_id, and total_collisions channels to the CHOP. In order to track these values for a body, \\\"Perform Contact Test\\\" must be enabled on the Bullet Solver COMP."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "The sample rate of the CHOP."
                    }
                },
                "summary": ""
            },
            "audiondiCHOP": {
                "label": "Audio NDI",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "ndiintop": {
                        "label": "NDI In TOP",
                        "summary": "Specify which NDI In TOP's NDI stream to get the audio from."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "When 'On' the audio will playback, when 'Off' the channels will not output an audio signal."
                    }
                },
                "summary": "Gets audio from an NDI stream."
            },
            "cplusplusCHOP": {
                "label": "CPlusPlus",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "reinit": {
                        "label": "Re-Init Class",
                        "summary": "When this parameter goes above 1, it will delete the instance of the class created by the plugin, and create a new one."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "reinitpulse": {
                        "label": "Re-Init Class",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "unloadplugin": {
                        "label": "Unload Plugin",
                        "summary": "When this parameter goes above 1, it will delete the instance of the class created by the plugin and unload the plugin. If multiple CHOPs have loaded the same plugin, they will all need to unload it to release the file."
                    },
                    "plugin": {
                        "label": "Plugin Path",
                        "summary": "The path to the plugin you want to load."
                    }
                },
                "summary": "The CPlusPlus CHOP allows you to make custom CHOP operators by writing your own plugin using C++."
            },
            "timerCHOP": {
                "label": "Timer",
                "parameters": {
                    "exitendcycle": {
                        "label": "Exit Segment at End of Cycle",
                        "summary": "When pulsed, it will exit the cycle (and segment) at the end of the currently-playing cycle."
                    },
                    "ondone": {
                        "label": "On Done",
                        "summary": ""
                    },
                    "outrunning": {
                        "label": "Running",
                        "summary": "Outputs channel running which is 1 after a Start and before the Done."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "channelcolumns": {
                        "label": "Columns to Custom Channels",
                        "summary": "Optional extra columns (any name) in the segments DAT can be output as extra channels (the columns must contain numbers). Specify their names in the Columns to Channels parameter. The channel name will be the column name. You can also output the length, delay, etc columns as channels."
                    },
                    "initialize": {
                        "label": "Initialize",
                        "summary": "(pulse parameter) Initialize is the signal to get the timer ready: sets the counters to zero (delay, timer, cycle, segment), set the output channels in the proper state, done to be off, the onInitialize() callback is run, and when initialize is complete, it indicates it\\u2019s ready by turning on the ready channel, awaiting a Start pulse."
                    },
                    "outcycle": {
                        "label": "Cycles",
                        "summary": "Outputs channel cycles, which is the number of cycles completed (In a segment), starting with 0 during the entire first cycle. If you jump to Done, cycle is incremented as if it played normally to the done state."
                    },
                    "datoutput": {
                        "label": "Info DAT Output During Delay",
                        "summary": "During the Delay periods and the Initialize/Ready states, the custom rows in the Info DAT will be blank by default. This option will put the custom strings in the Info DAT all the time, incuding when the CHOP is Initialized."
                    },
                    "outcycleplusfraction": {
                        "label": "Cycles + Fraction",
                        "summary": "Outputs channel cycle_plus_fraction, starting with 0 for entire first cycle."
                    },
                    "cuepulse": {
                        "label": "Cue Pulse",
                        "summary": ""
                    },
                    "delayunits": {
                        "label": "Delay Units",
                        "summary": ""
                    },
                    "cueunits": {
                        "label": "Cue Units",
                        "summary": ""
                    },
                    "maxcycles": {
                        "label": "Maximum Cycles",
                        "summary": "When Cycle is on and Cycle Limit is on, this sets the maximum number of cycles."
                    },
                    "delay": {
                        "label": "Delay",
                        "summary": "(float) after Start, the delay before the timer begins counting."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "gotonextseg": {
                        "label": "Go to Next Segment",
                        "summary": "(pulse) Jump to Next Segment.  Lingo * Segment \\u2013 each segment acts as one timer, with delay time, length, number of cycles to repeat and other conditions. * Begin \\u2013 in Parallel Timers, the number of seconds after a Start (frames or samples) after which each timer starts counting up from zero. * Done \\u2013 The state it goes into when all the timers has finished counting, whether they are in Parallel or Serial, Segments or not. * End \\u2013 Cycle End is the end of each cycle, Segment End is the end of the segment. * Cumulative Time \\u2013 Zero at Start, a count that is affected by speed and rises while timers are active (not during delays). * Running Time \\u2013 Zero at Start, the wall-clock time since Start was called no matter what are the delays, speeds, cycles or premature clicking of Go To Segment End. It stops counting when Done has been reached."
                    },
                    "outreadypulse": {
                        "label": "Ready Pulse",
                        "summary": "Outputs a pulse when initialization has finished and the timer is ready to start. It pulses even when the timer starts rights away after an initialization."
                    },
                    "playmode": {
                        "label": "Play Mode",
                        "summary": "Sequential (timeline-independent) or Locked to Timeline. In Locked to Timeline, non-deterministic features are disabled."
                    },
                    "cuepoint": {
                        "label": "Cue Point",
                        "summary": "Time (Seconds, Frames or Fraction) which the cue point is frozen to."
                    },
                    "gotoprevseg": {
                        "label": "Go to Previous Segment",
                        "summary": "(pulse) Jump to Previous Segment."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "cyclelimit": {
                        "label": "Cycle Limit",
                        "summary": "When the Cycle parameter is On, this determines if it will cycle indefinitely or cycle some maximum number of cycles."
                    },
                    "outdone": {
                        "label": "Done",
                        "summary": "Outputs channel done when done or complete."
                    },
                    "infocolumns": {
                        "label": "Columns to Info DAT",
                        "summary": "Optional extra columns (any name) in the segments DAT can be output to the Info DAT (attach an Info DAT to the Timer CHOP) if you specify their names in this parameter."
                    },
                    "active": {
                        "label": "Active",
                        "summary": ""
                    },
                    "outseg": {
                        "label": "Segment",
                        "summary": "Outputs channel segment, starting with 0 for first segment."
                    },
                    "gotoendcycle": {
                        "label": "Go to End of Cycle",
                        "summary": "When pulsed, it will exit the cycle (and segment) immediately."
                    },
                    "outtimeractive": {
                        "label": "Timer Active",
                        "summary": "Outputs channel timer_active which is on only while the timer fraction is counting (is non-zero)."
                    },
                    "gotodone": {
                        "label": "Go to Done",
                        "summary": "Will immediately go to the Done state."
                    },
                    "outtimerpulse": {
                        "label": "Timer Pulse",
                        "summary": "Outputs channel timer_pulse when the timer reaches its length."
                    },
                    "notifyunits": {
                        "label": "Notify Units",
                        "summary": ""
                    },
                    "segmethod": {
                        "label": "Segment Method",
                        "summary": "If the Segment Method is Serial Timers, the timers will be played back-to-back. If the Segment Method is Parallel Timers, the timers can be played at the same time, and a set of channels will be output for each timer."
                    },
                    "outdonepulse": {
                        "label": "Done Pulse",
                        "summary": "Outputs channel done when the all timers have reached their completion."
                    },
                    "outtimercount": {
                        "label": "Timer Count",
                        "summary": "Outputs the elapsed Seconds channel as timer_seconds, Frames outputs channel as timer_frames, or Samples outputs channel as timer_samples. Because this is elapsed time, timer_frames starts at 0, as do the others."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "cue": {
                        "label": "Cue",
                        "summary": "Freezes playing at the Cue Point."
                    },
                    "speed": {
                        "label": "Speed",
                        "summary": "(default 1) Slows down or speeds up the timer."
                    },
                    "segdat": {
                        "label": "Segments DAT",
                        "summary": "A table DAT that contains one row per timer (segment). The column headings can be delay or begin, length, cycle, cyclelimit, maxcycles and cycleendalert, which override the equivalent parameters. (These are the internal names for the corresponding parameters.) begin is unique as it replaces delay, and it represents the time from Start that the timer will begin counting, whether the CHOP is set to Serial Timers or Parallel Timers (see Segment Method).   The Segments DAT also can include any number of custom columns. See Columns to Custom Channels and Columns to Info DAT below."
                    },
                    "lengthunits": {
                        "label": "Length Units",
                        "summary": ""
                    },
                    "outfraction": {
                        "label": "Timer Fraction",
                        "summary": "Outputs channel timer_fraction for each segment."
                    },
                    "length": {
                        "label": "Length",
                        "summary": "(float) the time-length of the timer. Set the Units menu to Seconds, Frames or Samples."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "(onoff) Pauses the timer. It is basically a 0 or 1 multiplier on the Speed."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": ""
                    },
                    "outready": {
                        "label": "Ready",
                        "summary": "Outputs channel ready which is 1 after an Initialize and before a Start."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "cycle": {
                        "label": "Cycle",
                        "summary": "(default Off) causes the timer to loop back to 0 when it reaches the end of the cycle."
                    },
                    "outsegpulse": {
                        "label": "Segment Pulse",
                        "summary": "Outputs channel segment_pulse which is a pulse at the end of each segment."
                    },
                    "outcumulativecount": {
                        "label": "Cumulative Timer Count",
                        "summary": "Outputs cumulative_seconds, cumulative_frames or cumulative_samples. It is a time count that adds up all the Timer Active times for all segments since Start: it is affected by \\\"Speed\\\", and counts up only while timer_active is on."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "The sample rate that the CHOP outputs at, which is also used when the units of Length, Delay and Cycle End Alert time are set to Samples. The default sample rate is 60 samples per second."
                    },
                    "interpolation": {
                        "label": "Custom Channel Interpolation",
                        "summary": "By default, custom channels step to their new value at the begin of the segment. This menu lets you interpolate to the new value linearly, or any combination of ease-in and ease-out."
                    },
                    "outrunningcount": {
                        "label": "Running Time Count",
                        "summary": "Outputs the \\\"wall-clock\\\" time since Start occurred, no matter what are the delays, speeds, cycles or pre-mature clicking of Go To Segment End, etc. It stops counting when Done has been reached. running_seconds, running_frames, or running_samples. When CHOP is set to Parallel Timers, this will output a channel per segment plus one global running time channel."
                    },
                    "outinit": {
                        "label": "Initializing",
                        "summary": "Outputs channel initializing = 1 while the timer is initalizing (i.e. while the callback onInitialize() returns non-zero)."
                    },
                    "outsegplusfraction": {
                        "label": "Segment + Fraction",
                        "summary": "Outputs channel segment_plus_fraction, starting with 0 for first segment ending at #segments at end."
                    },
                    "cycleendalert": {
                        "label": "Cycle End Alert",
                        "summary": "The number of seconds, frames or samples before a cycle, segment or done state is reached that the onCycleEndAlert() callback is called. This allows you to prepare for the next cycle, segment or timer."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "(pulse) Start is the signal to commence the timers counting. It will count through the delay first, then the timer length. It does an Initialize if it is not already initialized, and then starts counting."
                    },
                    "outcyclepulse": {
                        "label": "Cycle Pulse",
                        "summary": "Outputs a pulse at the end of every cycle, even on the first and only cycle."
                    },
                    "segunits": {
                        "label": "Segment Units",
                        "summary": "For the columns delay, begin, length and cycleendalert, you specify whether it\\u2019s seconds, frames or samples with this menu."
                    },
                    "outdelaycount": {
                        "label": "Delay Count",
                        "summary": "Outputs the delay count in seconds, frames or samples."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "outdelayfraction": {
                        "label": "Delay Fraction",
                        "summary": "Outputs a 0-1 fraction in delay_fraction while the delay occurs."
                    }
                },
                "summary": "The Timer CHOP is an engine for running timed processes. It outputs channels such as timing fractions, counters, pulses and timer states, and it calls python functions (callbacks) when various timing events occur."
            },
            "eventCHOP": {
                "label": "Event",
                "parameters": {
                    "attacklevel": {
                        "label": "Attack Level",
                        "summary": "Affects adsr channel. Peak attack level."
                    },
                    "sustaintime": {
                        "label": "Sustain Time",
                        "summary": "Affects adsr channel."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "speed": {
                        "label": "Speed",
                        "summary": "Affects the speed of the event, letting you stretch out or shorten the life of an event."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "Resets the CHOP clearing all events."
                    },
                    "sustainmin": {
                        "label": "Sustain Min",
                        "summary": "Affects adsr channel. Level at start of sustain time."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "decaytunit": {
                        "label": "Decay Time Unit",
                        "summary": ""
                    },
                    "releaselevel": {
                        "label": "Release Level",
                        "summary": "Affects adsr channel. Level at end of life cycle."
                    },
                    "releasetunit": {
                        "label": "Release Time Unit",
                        "summary": ""
                    },
                    "index": {
                        "label": "Index",
                        "summary": "The channel index of the incoming CHOP that caused the event."
                    },
                    "attacktime": {
                        "label": "Attack Time",
                        "summary": "Affects adsr and state channel. Time to rise to max attack level."
                    },
                    "input": {
                        "label": "Input",
                        "summary": "The value of the input channel when the input went on (at the birth of the event). It is often the note velocity value. If you pass the Midi In CHOP into the Event CHOP, and set the Midi In option to output the velocity, velocity will end up in this channel and preserved until the event ends."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": ""
                    },
                    "id": {
                        "label": "ID",
                        "summary": "The sequence # of the event, starting from 0 and incrementing by 1 for each event."
                    },
                    "attacktunit": {
                        "label": "Attack Time Unit",
                        "summary": ""
                    },
                    "sustaintunit": {
                        "label": "Sustain Time Unit",
                        "summary": ""
                    },
                    "decaytime": {
                        "label": "Decay Time",
                        "summary": "Affects adsr channel and state channel. Time after peak to sustain level."
                    },
                    "globalspeed": {
                        "label": "Global Speed",
                        "summary": ""
                    },
                    "sustainmax": {
                        "label": "Sustain Max",
                        "summary": "Affects adsr channel. Level at end of sustain time."
                    },
                    "adsr": {
                        "label": "ADSR",
                        "summary": "The value according to the Attack, Decay, Sustain, Release. It uses the parameters on the ADSR page, regulating the speed and values, with extended parameters: Attack Time, Attack Level, Decay Time, Sustain Time, Sustain Min, Sustain Max, Release Time, Release Level."
                    },
                    "time": {
                        "label": "Time",
                        "summary": "Time in seconds from the start of the event."
                    },
                    "releasetime": {
                        "label": "Release Time",
                        "summary": "Affects adsr and state channels."
                    },
                    "state": {
                        "label": "State",
                        "summary": "This is good for playing back movies. You divide your movie into 4 parts that correspond to the (0=attack, 1=decay, 2=sustain, 3=release) phases. The state channel outputs fractional values, so you can watch it climb through all the transitions, including multiple sustain-sections. e.g., 0...1...2...2...2...2...3...4. If your movie is 8 seconds long, take the state channel and multiply by 2, passing it as the time-index of the movie. Goes from 0 to 1 during the attack phase, 1 to 2 as it repeats in the sustain phase, and 2 to 3 in the release phase. It is suitable for indexing movies."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "resetcondition": {
                        "label": "Reset Condition",
                        "summary": "Determines the reset behavior of using the 2nd Input Reset Trigger. This parameter is only active if there is an input connected to the CHOP's 2nd input."
                    }
                },
                "summary": "The Event CHOP manages the birth and life of overlapping events triggered by devices like a MIDI keyboard."
            },
            "trailCHOP": {
                "label": "Trail",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "wlength": {
                        "label": "Window Length",
                        "summary": "The amount of history recorded is set by Window Length. The Units menu on the right determine which units to use in the parameter (Samples, Frames, Seconds). A setting of 4 seconds will show the value of the input channel for the previous 4 seconds."
                    },
                    "active": {
                        "label": "Active",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": ""
                    },
                    "growlength": {
                        "label": "Grow Length",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "samples": {
                        "label": "Resample",
                        "summary": ""
                    },
                    "setrate": {
                        "label": "Rate",
                        "summary": ""
                    },
                    "capture": {
                        "label": "Capture",
                        "summary": "Determines when to capture values."
                    },
                    "resample": {
                        "label": "Resample",
                        "summary": "Resample the output to this specified length."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "wlengthunit": {
                        "label": "Window Length Unit",
                        "summary": ""
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "Resample using this sample rate instead of the global frame rate ($FPS)."
                    }
                },
                "summary": "The Trail CHOP displays a history of its input channels back in time."
            },
            "clipCHOP": {
                "label": "Clip",
                "parameters": {
                    "loopactive": {
                        "label": "Loop While Active",
                        "summary": ""
                    },
                    "indexchannel": {
                        "label": "Index Channel",
                        "summary": ""
                    },
                    "abspos": {
                        "label": "Position Type",
                        "summary": ""
                    },
                    "pauseend": {
                        "label": "Pause at End",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": ""
                    },
                    "nblendtimeunit": {
                        "label": "Next Blend Time Unit",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "next": {
                        "label": "Next Clip",
                        "summary": ""
                    },
                    "rdat": {
                        "label": "Rule DAT",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "reload": {
                        "label": "Reload DATs",
                        "summary": ""
                    },
                    "nblendtime": {
                        "label": "Next Blend Time",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "blendtimeunit": {
                        "label": "Blend Time Unit",
                        "summary": ""
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "rottype": {
                        "label": "Rotation Type",
                        "summary": ""
                    },
                    "transtion": {
                        "label": "Transition",
                        "summary": ""
                    },
                    "blendtime": {
                        "label": "Blend Time",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "looprelease": {
                        "label": "Loop Release Rule",
                        "summary": ""
                    }
                },
                "summary": "See Clip Blender CHOP."
            },
            "inCHOP": {
                "label": "In",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "channames": {
                        "label": "Names",
                        "summary": "When used with Num Channels the input is scanned for channels matching these names. All other channels are ignored and not passed through. This is a way of filtering out unnecessary channels without requiring a Select CHOP or Delete CHOP.  When used without Num Channels the input channels are simply renamed according to this pattern."
                    },
                    "label": {
                        "label": "Label",
                        "summary": "The label for this input on the COMP that will show up in a popup if the mouse is held over it."
                    },
                    "numchannels": {
                        "label": "Num Channels",
                        "summary": "If On, and the number of incoming channels does not match this value, an error is generated."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The In CHOP gets channels that are connected to one of the inputs of the component."
            },
            "resampleCHOP": {
                "label": "Resample",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "endunit": {
                        "label": "End Unit",
                        "summary": ""
                    },
                    "interp": {
                        "label": "Interpolation",
                        "summary": "The interpolation method to use when resampling:"
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "cyclelen": {
                        "label": "Cycle Length",
                        "summary": "The length of the cycle. 360 is typical for angles."
                    },
                    "quatrot": {
                        "label": "Quaternion Blend",
                        "summary": "Uses quaternions to blend between samples."
                    },
                    "relative": {
                        "label": "Unit Values",
                        "summary": "Determines how the Start/End parameters are interpreted."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "The resample method to apply to the channels:"
                    },
                    "end": {
                        "label": "End",
                        "summary": "The CHOP's new end position."
                    },
                    "startunit": {
                        "label": "Start Unit",
                        "summary": ""
                    },
                    "start": {
                        "label": "Start",
                        "summary": "The CHOP's new start position."
                    },
                    "constarea": {
                        "label": "Constant Area",
                        "summary": "If enabled, keeps the area under the channel constant by scaling the values of the channel."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "correct": {
                        "label": "Correct for Cycles",
                        "summary": "If enabled, compensates for cyclic channels (such as angles) by always choosing the shortest step between samples, like 360 to 0 for angles."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "The new sample rate."
                    }
                },
                "summary": "The Resample CHOP resamples an input's channels to a new sample rate and/or start/end interval."
            },
            "noiseCHOP": {
                "label": "Noise",
                "parameters": {
                    "constraint": {
                        "label": "Constraint",
                        "summary": "Constraint and its parameters allows the noise curve to start and/or end at selected values. The mean value may also be enforced. Note: This only works when Time Slice is Off because time slicing has no pre-determined start/end."
                    },
                    "periodunit": {
                        "label": "Period Unit",
                        "summary": ""
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": ""
                    },
                    "constrstart": {
                        "label": "Starting Value",
                        "summary": ""
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": ""
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "spread": {
                        "label": "Harmonic Spread",
                        "summary": "The factor by which the frequency of the harmonics are increased. It is normally 2. A spread of 3 and a base frequency of 0.1Hz will produce harmonics at 0.3Hz, 0.9Hz, 2.7Hz, etc. This parameter is only valid for the Harmonic Summation type."
                    },
                    "normal": {
                        "label": "Normalize",
                        "summary": "Ensures that all noise curves fall between -1 and 1. Applied before the Amplitude parameter. Only valid for Random and Harmonic Summation noise types, since Hermite and Sparse noise are always normalized. Normalizing random noise occurs between integrations, producing a more controlled curve. Note: This only works when Time Slice is Off because time slicing has no pre-determined start/end."
                    },
                    "numint": {
                        "label": "Num of Integrals",
                        "summary": "Defines the number of times to integrate (see the Area CHOP p. 114) the Brownian noise. Higher values produce smoother curves with fewer features. Values beyond 4 produce somewhat identical curves. This parameter is only valid for the Random noise type."
                    },
                    "startunit": {
                        "label": "Start Unit",
                        "summary": ""
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "exp": {
                        "label": "Exponent",
                        "summary": "Pushes the noise values toward 0, or +1 and -1. (It raises the value to the power of the exponent.) Exponents greater than one will pull the channel toward zero, and powers less than one will pull peaks towards +1 and -1. It is used to reshape the channels."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "constrmean": {
                        "label": "Mean Value",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "endunit": {
                        "label": "End Unit",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "constrend": {
                        "label": "Ending Value",
                        "summary": ""
                    },
                    "end": {
                        "label": "End",
                        "summary": ""
                    },
                    "channelname": {
                        "label": "Channel Names",
                        "summary": ""
                    },
                    "seed": {
                        "label": "Seed",
                        "summary": "Any number, integer or non-integer, which starts the random number generator. Each number gives completely different noise patterns, but with similar characteristics."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "harmon": {
                        "label": "Harmonics",
                        "summary": "The number of higher frequency components to layer on top of the base frequency. The higher this number, the bumpier the noise will be (as long as roughness is not set to zero). 0 harmonics give the base shape.  : Harmonics with a base frequency of 0.1Hz will by default produce harmonics at 0.2Hz, 0.4Hz, 0.8Hz, etc. (up to the number of harmonics specified by the Harmonics parameter)."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": ""
                    },
                    "amp": {
                        "label": "Amplitude",
                        "summary": "Defines the noise value's amplitude (a scale on the values output)."
                    },
                    "type": {
                        "label": "Type",
                        "summary": "The noise function used to generate noise. The functions available are:"
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "start": {
                        "label": "Start",
                        "summary": ""
                    },
                    "period": {
                        "label": "Period",
                        "summary": "The approximate separation between peaks of a noise cycle. It is expressed in Units. Increasing the period stretches the noise pattern out.  : Period is the opposite of frequency. If the period is 2 seconds, the base frequency is 0.5 cycles per second, or 0.5Hz for short. Hz refers to Hertz, the electrical and audio engineer of the 19th century, not the car guy.  : If the Type is set to Random, setting this to zero will produce completely random noise. Otherwise, the period should be greater than zero."
                    },
                    "rough": {
                        "label": "Roughness",
                        "summary": "Controls the effect of the higher frequency noise. When roughness is zero, all harmonics above the base frequency have no effect. At one, all harmonics are equal in amplitude to the base frequency. When roughness is between one and zero, the amplitude of higher harmonics drops off exponentially from the base frequency.  : The default roughness is 0.5. This means the amplitude of the first harmonic is 0.5 of the base frequency, the second is 0.25, the third is 0.125. The harmonics are added to the base to give the final shape. The Harmonics parameter and the Roughness parameter must both be non-zero to see the harmonic effects."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Noise CHOP makes an irregular wave that never repeats, with values approximately in the range -1 to +1."
            },
            "hogCHOP": {
                "label": "Hog",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Turns the Hog CHOP on and off."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "delayunit": {
                        "label": "Delay Unit",
                        "summary": ""
                    },
                    "delay": {
                        "label": "Delay",
                        "summary": "Minimum amount of time CHOP wastes."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "cookalways": {
                        "label": "Cook Every Frame",
                        "summary": "Forces the CHOP to cook every frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Hog CHOP eats up CPU cycles (ie it's a CPU hog - oink!)."
            },
            "audiobandeqCHOP": {
                "label": "Audio Band EQ",
                "parameters": {
                    "band2": {
                        "label": "40 Hz",
                        "summary": "Controls boost/cut at the 40 Hz band."
                    },
                    "band7": {
                        "label": "370 Hz",
                        "summary": "Controls boost/cut at the 370 Hz band."
                    },
                    "band12": {
                        "label": "3.6 KHz",
                        "summary": "Controls boost/cut at the 3.6 Hz band."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "band8": {
                        "label": "590 Hz",
                        "summary": "Controls boost/cut at the 590 Hz band."
                    },
                    "drywet": {
                        "label": "Dry / Wet Mix",
                        "summary": ""
                    },
                    "band15": {
                        "label": "14 KHz",
                        "summary": "Controls boost/cut at the 14 Hz band."
                    },
                    "band1": {
                        "label": "25 Hz",
                        "summary": "Controls boost/cut centered at 25 Hz."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "band11": {
                        "label": "2.3 KHz",
                        "summary": "Controls boost/cut at the 2.3 Hz band."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "band3": {
                        "label": "60 Hz",
                        "summary": "Controls boost/cut at the 60 Hz band."
                    },
                    "band13": {
                        "label": "5.6 KHz",
                        "summary": "Controls boost/cut at the 5.6 Hz band."
                    },
                    "band10": {
                        "label": "1.5 KHz",
                        "summary": "Controls boost/cut at the 1.5 Hz band."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "band9": {
                        "label": "930 Hz",
                        "summary": "Controls boost/cut at the 930 Hz band."
                    },
                    "band16": {
                        "label": "22 KHz",
                        "summary": "Controls boost/cut at the 22 Hz band."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "band5": {
                        "label": "150 Hz",
                        "summary": "Controls boost/cut at the 150 Hz band."
                    },
                    "band14": {
                        "label": "8.9 KHz",
                        "summary": "Controls boost/cut at the 8.9 Hz band."
                    },
                    "band6": {
                        "label": "240 Hz",
                        "summary": "Controls boost/cut at the 240 Hz band."
                    },
                    "band4": {
                        "label": "90 Hz",
                        "summary": "Controls boost/cut at the 90 Hz band."
                    }
                },
                "summary": "The Audio Band EQ CHOP is a 16-band equalizer which filters audio input channels in the same way that a conventional band (graphic) equalizer uses a bank of sliders to filter fixed-frequency bands of sound."
            },
            "ltcinCHOP": {
                "label": "LTC In",
                "parameters": {
                    "inputrate": {
                        "label": "Input Frame Rate",
                        "summary": "This specifies the number of complete frame messages per second the signal encodes. It is usually between 24 and 30."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "userfields": {
                        "label": "User Fields",
                        "summary": "This enables channels for custom user fields which may be encoded in the audio signal."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "debugchans": {
                        "label": "Debug Channels",
                        "summary": "This enables the following debug channels. * quantized - Outputs the raw signal quantized to on and off levels. * bits - Outputs the above quantized signal into decoded bits. (Note:  Bits are decoded from specific edge sequences, not the raw levels themselves). * ones_count - Outputs the total number of consecutive decoded one bits.  (Note, 12 consecutive ones denotes an end of message). * decode_count -  Outputs the total number of successful decoded frame messages."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The LTC In CHOP reads SMPTE timecode data encoded into an audio signal."
            },
            "mouseoutCHOP": {
                "label": "Mouse Out",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "posv": {
                        "label": "Position V",
                        "summary": "Channel name to look for that will drive the mouse V position."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "rbuttonname": {
                        "label": "Right Button",
                        "summary": "Channel name to look for that will drive the mouse's right button state."
                    },
                    "lbuttonname": {
                        "label": "Left Button",
                        "summary": "Channel name to look for that will drive the mouse's left button state."
                    },
                    "posu": {
                        "label": "Position U",
                        "summary": "Channel name to look for that will drive the mouse U position."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "cookalways": {
                        "label": "Cook Every Frame",
                        "summary": "Forces CHOP to cook every frame."
                    },
                    "mbuttonname": {
                        "label": "Middle Button",
                        "summary": "Channel name to look for that will drive the mouse's middle button state."
                    }
                },
                "summary": "The Mouse Out CHOP forces the mouse position and button status to be driven from TouchDesigner using the incoming CHOP channels."
            },
            "audiodeviceoutCHOP": {
                "label": "Audio Device Out",
                "parameters": {
                    "clampoutput": {
                        "label": "Clamp Output",
                        "summary": "Clamps the output between -1 and 1 to avoid clipping and overdriving of the audio system."
                    },
                    "topfrontright": {
                        "label": "Top Front Right",
                        "summary": ""
                    },
                    "topbackright": {
                        "label": "Top Back Right",
                        "summary": ""
                    },
                    "bufferlength": {
                        "label": "Buffer Length",
                        "summary": "The length of the audio buffer in seconds. Audio output is delayed by this amount. For example, if the Buffer Length is 0.25 then the sound will occur 250ms = 0.25 seconds later than this CHOP received it (to keep the buffer full). If you hear crackling or popping in the audio output, try increasing this value."
                    },
                    "sideright": {
                        "label": "Side Right",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "topfrontleft": {
                        "label": "Top Front Left",
                        "summary": ""
                    },
                    "device": {
                        "label": "Device",
                        "summary": "A menu of available audio devices to output to. Selecting default sets the audio device to that which is selected in Windows Control Panel>Sounds and Audio Devices>Audio>Sound Playback."
                    },
                    "frontcenter": {
                        "label": "Front Center",
                        "summary": ""
                    },
                    "topbackleft": {
                        "label": "Top Back Left",
                        "summary": ""
                    },
                    "volume": {
                        "label": "Volume",
                        "summary": "0 = mute, 1 = full volume."
                    },
                    "frontright": {
                        "label": "Front Right",
                        "summary": ""
                    },
                    "frontleftcenter": {
                        "label": "Front Left of Center",
                        "summary": ""
                    },
                    "backright": {
                        "label": "Back Right",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "frontrightcenter": {
                        "label": "Front Right of Center",
                        "summary": ""
                    },
                    "pan": {
                        "label": "Pan",
                        "summary": "0 = left, 0.5 = centered, 1 = right."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "backleft": {
                        "label": "Back Left",
                        "summary": ""
                    },
                    "driver": {
                        "label": "Driver",
                        "summary": "Select between DirectSound and ASIO drivers."
                    },
                    "topbackcenter": {
                        "label": "Top Back Center",
                        "summary": ""
                    },
                    "lowfrequency": {
                        "label": "Low Frequency",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Turns the audio output on or off."
                    },
                    "frontleft": {
                        "label": "Front Left",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "outputs": {
                        "label": "Outputs",
                        "summary": "When Driver is set to ASIO, this parameter lets you pick which output channels to use."
                    },
                    "topcenter": {
                        "label": "Top Center",
                        "summary": ""
                    },
                    "backcenter": {
                        "label": "Back Center",
                        "summary": ""
                    },
                    "topfrontcenter": {
                        "label": "Top Front Center",
                        "summary": ""
                    },
                    "sideleft": {
                        "label": "Side Left",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "cookalways": {
                        "label": "Cook Every Frame",
                        "summary": "Forces the CHOP to cook every frame. This should be checked on at all times when outputing audio. It can be turned off when the CHOP is not in use."
                    }
                },
                "summary": "The Audio Device Out CHOP sends audio to any of the attached audio output devices using DirectSound or ASIO."
            },
            "reorderCHOP": {
                "label": "Reorder",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "remorder": {
                        "label": "Remaining Order",
                        "summary": "The channels that did not match can have the Same as Input order, or can be sorted AlphaNumerically."
                    },
                    "nvalue": {
                        "label": "N Value",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "numpattern": {
                        "label": "Numeric Pattern",
                        "summary": "This reorders the channels by channel number. Normally the index order is 0,1,2,3... etc.. The first channel is at index 0. Standard numeric patterns are allowed such as \\\"0-6:1,2\\\" or \\\"!*:1,3\\\"."
                    },
                    "seed": {
                        "label": "Seed",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "There are three different reordering methods. You can enter a Numeric Pattern, a Character Pattern, or use an optional second input CHOP as an order reference."
                    },
                    "rempos": {
                        "label": "Remaining Position",
                        "summary": "Channels that do not match are called \\\"remaining\\\" and can also be ordered: they can be placed at the At Beginning or At Ending (in reference to the position of the matched channels)."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "charpattern": {
                        "label": "Character Pattern",
                        "summary": "This reorders the channels by channel name. Standard character patterns are allowed such as \\\"ch[XYZ]\\\" or \\\"chan[1-15:2,5]\\\" or \\\"chan? ch*\\\". See Scope and Channel Name Matching Options p. 102 in the section, Standard Options of CHOPs."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "orderref": {
                        "label": "Order Reference",
                        "summary": ""
                    }
                },
                "summary": "The Reorder CHOP re-orders the first input CHOP's channels by numeric or alphabetic patterns."
            },
            "compositeCHOP": {
                "label": "Composite",
                "parameters": {
                    "base": {
                        "label": "Base Hold",
                        "summary": "Determines how much of the base to blend into the output at points where the layer has an effect."
                    },
                    "peak": {
                        "label": "Peak",
                        "summary": "Where the composite operation reaches maximum effect. This value is held until the release point."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "The beginning of the composite interval. Effect is zero at the start."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "cyclelen": {
                        "label": "Cycle Length",
                        "summary": "Blend 0 degrees to this angle, generally 360."
                    },
                    "effect": {
                        "label": "Effect",
                        "summary": "Note: If the third input is supplied, the Effect page will be overridden by the third input's first channel, which should contain the effect values over the range of the layer."
                    },
                    "relative": {
                        "label": "Unit Values",
                        "summary": "Sets the meaning of the next four parameters - either Absolute values, Relative to the Start/End of the channel, or Relative to the Current Frame. The layer and base are never shifted."
                    },
                    "endunit": {
                        "label": "End Unit",
                        "summary": ""
                    },
                    "startunit": {
                        "label": "Start Unit",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "shortrot": {
                        "label": "Shortest Path Rotation Blending",
                        "summary": "It better-handles the blending from one set of angles to another, taking into account 0 degrees is 360 degrees."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "peakunit": {
                        "label": "Peak Unit",
                        "summary": ""
                    },
                    "quatrot": {
                        "label": "Quaternion Blend",
                        "summary": "Allows rotations with the quaternion attribute set to use spherical interpolation to produce smooth rotation blending (set in the Attribute CHOP)."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "risefunc": {
                        "label": "Rise Shape",
                        "summary": "How to interpolate from one CHOP to another. It is the shape of the segment between the Start and Peak indices."
                    },
                    "end": {
                        "label": "End",
                        "summary": "The end of the composite operation's effect. The effect reduces to zero again."
                    },
                    "releaseunit": {
                        "label": "Release Unit",
                        "summary": ""
                    },
                    "fallfunc": {
                        "label": "Fall Shape",
                        "summary": "How to interpolate from one CHOP to another. It is the shape of the segment between the Release and End."
                    },
                    "match": {
                        "label": "Match by",
                        "summary": "Matches channels in the base input with ones in the layer input by either index or name."
                    },
                    "release": {
                        "label": "Release",
                        "summary": "The point at which the effect begins to fall back towards zero."
                    },
                    "rotscope": {
                        "label": "Rotation Scope",
                        "summary": "Pattern (like *rx *ry *rz) that identifies which channels are rotations that should be handled specially as per the above option."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Composite CHOP layers (blends) the channels of one CHOP on the channels of another CHOP."
            },
            "ltcoutCHOP": {
                "label": "LTC Out",
                "parameters": {
                    "framerate": {
                        "label": "Frame Rate",
                        "summary": "The number of complete frame messages per second the signal encodes. It is usually between 24 and 30."
                    },
                    "user7": {
                        "label": "User Data 7",
                        "summary": ""
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": "When pulsed, the output is held at the specified initial values above."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "user6": {
                        "label": "User Data 6",
                        "summary": ""
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "While set to on, the output is held at the specified initial values above."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "Specifies whether the count should increment or hold steady."
                    },
                    "frame": {
                        "label": "Frame",
                        "summary": "The initial frame to count from."
                    },
                    "user2": {
                        "label": "User Data 2",
                        "summary": ""
                    },
                    "user4": {
                        "label": "User Data 4",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "dropframe": {
                        "label": "Drop Frame Numbering",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "user1": {
                        "label": "User Data 1",
                        "summary": ""
                    },
                    "second": {
                        "label": "Second",
                        "summary": "The initial second to count from."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "user3": {
                        "label": "User Data 3",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "user8": {
                        "label": "User Data 8",
                        "summary": ""
                    },
                    "minute": {
                        "label": "Minute",
                        "summary": "The initial minute to count from."
                    },
                    "audiorate": {
                        "label": "Audio Rate",
                        "summary": "This audio sampling rate of the output signal."
                    },
                    "user5": {
                        "label": "User Data 5",
                        "summary": ""
                    },
                    "hour": {
                        "label": "Hour",
                        "summary": "The initial hour to count from."
                    }
                },
                "summary": "The LTC Out CHOP outputs \\\"linear timecode\\\" which is a SMPTE timecode data encoded into an audio signal. See also Linear Timecode."
            },
            "copyCHOP": {
                "label": "Copy",
                "parameters": {
                    "val2": {
                        "label": "Value 2",
                        "summary": ""
                    },
                    "val7": {
                        "label": "Value 7",
                        "summary": ""
                    },
                    "param9": {
                        "label": "Param 9",
                        "summary": "The parameters are re-calculated for each copy. The first field is the parameter name, the second is its value. You can use CHOP Members and Methods. The parameters you set here are available to any CHOP in the network attached to the second input through the function: fetchStamp(key, default) Where default is any initial value for the parameter, and is usually set to 0."
                    },
                    "cook": {
                        "label": "Cook Each Copy",
                        "summary": "Recook the second input for each triggered copy."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "val6": {
                        "label": "Value 6",
                        "summary": ""
                    },
                    "param7": {
                        "label": "Param 7",
                        "summary": "The parameters are re-calculated for each copy. The first field is the parameter name, the second is its value. You can use CHOP Members and Methods. The parameters you set here are available to any CHOP in the network attached to the second input through the function: fetchStamp(key, default) Where default is any initial value for the parameter, and is usually set to 0."
                    },
                    "output": {
                        "label": "Output Method",
                        "summary": ""
                    },
                    "remainder": {
                        "label": "Remainder",
                        "summary": "See Common Parameters > Remainder Options."
                    },
                    "val9": {
                        "label": "Value 9",
                        "summary": ""
                    },
                    "val10": {
                        "label": "Value 10",
                        "summary": ""
                    },
                    "param5": {
                        "label": "Param 5",
                        "summary": "The parameters are re-calculated for each copy. The first field is the parameter name, the second is its value. You can use CHOP Members and Methods. The parameters you set here are available to any CHOP in the network attached to the second input through the function: fetchStamp(key, default) Where default is any initial value for the parameter, and is usually set to 0."
                    },
                    "param2": {
                        "label": "Param 2",
                        "summary": "The parameters are re-calculated for each copy. The first field is the parameter name, the second is its value. You can use CHOP Members and Methods. The parameters you set here are available to any CHOP in the network attached to the second input through the function: fetchStamp(key, default) Where default is any initial value for the parameter, and is usually set to 0."
                    },
                    "param1": {
                        "label": "Param 1",
                        "summary": "The parameters are re-calculated for each copy. The first field is the parameter name, the second is its value. You can use CHOP Members and Methods. The parameters you set here are available to any CHOP in the network attached to the second input through the function: fetchStamp(key, default) Where default is any initial value for the parameter, and is usually set to 0."
                    },
                    "val5": {
                        "label": "Value 5",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "param4": {
                        "label": "Param 4",
                        "summary": "The parameters are re-calculated for each copy. The first field is the parameter name, the second is its value. You can use CHOP Members and Methods. The parameters you set here are available to any CHOP in the network attached to the second input through the function: fetchStamp(key, default) Where default is any initial value for the parameter, and is usually set to 0."
                    },
                    "param10": {
                        "label": "Param10",
                        "summary": "The parameters are re-calculated for each copy. The first field is the parameter name, the second is its value. You can use CHOP Members and Methods. The parameters you set here are available to any CHOP in the network attached to the second input through the function: fetchStamp(key, default) Where default is any initial value for the parameter, and is usually set to 0."
                    },
                    "val1": {
                        "label": "Value 1",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "val8": {
                        "label": "Value 8",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "method": {
                        "label": "Copy Method",
                        "summary": ""
                    },
                    "val4": {
                        "label": "Value 4",
                        "summary": ""
                    },
                    "threshold": {
                        "label": "Trigger Threshold",
                        "summary": "The threshold value for triggering copies."
                    },
                    "param6": {
                        "label": "Param 6",
                        "summary": "The parameters are re-calculated for each copy. The first field is the parameter name, the second is its value. You can use CHOP Members and Methods. The parameters you set here are available to any CHOP in the network attached to the second input through the function: fetchStamp(key, default) Where default is any initial value for the parameter, and is usually set to 0."
                    },
                    "val3": {
                        "label": "Value 3",
                        "summary": ""
                    },
                    "param8": {
                        "label": "Param 8",
                        "summary": "The parameters are re-calculated for each copy. The first field is the parameter name, the second is its value. You can use CHOP Members and Methods. The parameters you set here are available to any CHOP in the network attached to the second input through the function: fetchStamp(key, default) Where default is any initial value for the parameter, and is usually set to 0."
                    },
                    "param3": {
                        "label": "Param 3",
                        "summary": "The parameters are re-calculated for each copy. The first field is the parameter name, the second is its value. You can use CHOP Members and Methods. The parameters you set here are available to any CHOP in the network attached to the second input through the function: fetchStamp(key, default) Where default is any initial value for the parameter, and is usually set to 0."
                    },
                    "keep": {
                        "label": "Keep Non-Scoped Channels",
                        "summary": "If enabled, non-scoped channels are copied to the output, otherwise they are deleted."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Copy CHOP produces multiple copies of the second input along the timeline of the first input."
            },
            "oscinCHOP": {
                "label": "OSC In",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "The network protocol to use. Refer to the Network Protocols article for more information."
                    },
                    "mintarget": {
                        "label": "Minimum Target",
                        "summary": "The smallest amount of queue data (represented in seconds) allowed without adjusting sampling speed."
                    },
                    "adjusttimeunit": {
                        "label": "Queue Adjust Time Unit",
                        "summary": ""
                    },
                    "port": {
                        "label": "Network Port",
                        "summary": "The port which OSC-In will accept packets on."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "fullname": {
                        "label": "Keep Full Name",
                        "summary": ""
                    },
                    "samplerate": {
                        "label": "Default Sample Rate",
                        "summary": "When Use Global Rate is off, this parameter is used to determine the sample rate of this CHOP."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "Deletes all known channels and clears the queue."
                    },
                    "adjusttime": {
                        "label": "Queue Adjust Time",
                        "summary": "The maximum amount of time allowed for a queue to be above or below the maximum or minimum target without adjusting the sampling speed."
                    },
                    "netaddress": {
                        "label": "Network Address",
                        "summary": "When using Multicast, this is the address that OSC In will listen for packets on."
                    },
                    "useglobalrate": {
                        "label": "Use Global Rate",
                        "summary": "When on, the CHOP will sample at the global sample rate specified by TouchDesigner."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "maxqueueunit": {
                        "label": "Maximum Queue Unit",
                        "summary": ""
                    },
                    "maxtarget": {
                        "label": "Maximum Target",
                        "summary": "The largest amount of queue data (represented in seconds) allowed without adjusting sampling speed."
                    },
                    "maxtargetunit": {
                        "label": "Maximum Target Unit",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the CHOP receives information sent to the network port. While Off, no updating occurs. Data sent to the port is lost."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "segments": {
                        "label": "Segments",
                        "summary": ""
                    },
                    "mintargetunit": {
                        "label": "Minimum Target Unit",
                        "summary": ""
                    },
                    "stripsegments": {
                        "label": "Strip Prefix Segments",
                        "summary": ""
                    },
                    "maxqueue": {
                        "label": "Maximum Queue",
                        "summary": "The maximum allowed size of the queue (represented in seconds). If the maximum queue size is exceeded, data will be removed from the front of the queue."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "oscaddressscope": {
                        "label": "OSC Address Scope",
                        "summary": "To reduce which channels are generated, you can use channel name patterns to include or exclude channels. For example, ^*accel* will exclude accelerometer channels coming in from an iPhone or iOS app like mrmr. See Pattern Matching for the syntax of the possible channel name patterns."
                    }
                },
                "summary": "The OSC In CHOP is used to accept Open Sound Control Messages."
            },
            "mouseinCHOP": {
                "label": "Mouse In",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While On, the mouse movement will be output from and the CHOP will cook every frame. When set to Off it will not cook and the current mouse X or Y values will not be output. While Playing will capture mouse events only when the Timeline is playing forward."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": ""
                    },
                    "output": {
                        "label": "Output Coordinates",
                        "summary": "Controls the range of the mouse Position X and Position Y."
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "rbuttonname": {
                        "label": "Right Button",
                        "summary": "The name of the channel that returns the state of the right button."
                    },
                    "posyname": {
                        "label": "Position Y",
                        "summary": "The name of the channel that returns the vertical movement of the mouse."
                    },
                    "wheel": {
                        "label": "Wheel",
                        "summary": "This channel goes up when the wheel is rolled away from the user and goes down when it is rolled the other way."
                    },
                    "monitor": {
                        "label": "Monitor",
                        "summary": "This channel returns which monitor the mouse cursor is currently on."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": ""
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": ""
                    },
                    "lbuttonname": {
                        "label": "Left Button",
                        "summary": "The name of the channel that returns the state of the left button."
                    },
                    "wheelinc": {
                        "label": "Wheel Increment",
                        "summary": "The amount that is added or subtracted to the current value of the Wheel channel when the wheel is moved."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "mbuttonname": {
                        "label": "Middle Button",
                        "summary": "The name of the channel that returns the state of the middle button."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "posxname": {
                        "label": "Position X",
                        "summary": "The name of the channel that returns the horizontal movement of the mouse."
                    }
                },
                "summary": "The Mouse In CHOP outputs X and Y screen values for the mouse device and monitors the up/down state of the three mouse buttons."
            },
            "stretchCHOP": {
                "label": "Stretch",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "endunit": {
                        "label": "End Unit",
                        "summary": ""
                    },
                    "interp": {
                        "label": "Interpolation",
                        "summary": "The interpolation method to use when resampling."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "reverse": {
                        "label": "Reverse Interval",
                        "summary": "Reverses the channel so that it plays backwards."
                    },
                    "relative": {
                        "label": "Unit Values",
                        "summary": "Determines how Start/End parameters are interpreted:"
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "end": {
                        "label": "End",
                        "summary": "The CHOP's new end position."
                    },
                    "scale": {
                        "label": "Length Scale",
                        "summary": "Scales the length of the channel after determining the start/end interval. Good for doubling or halving the length."
                    },
                    "startunit": {
                        "label": "Start Unit",
                        "summary": ""
                    },
                    "start": {
                        "label": "Start",
                        "summary": "The CHOP's new start position."
                    },
                    "constarea": {
                        "label": "Constant Area",
                        "summary": "If enabled, keeps the area under the channel constant by scaling the values of the channel."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Stretch CHOP preserves the shape of channels and the sampling rate, but resamples the channels into a new interval."
            },
            "importselectCHOP": {
                "label": "Import Select",
                "parameters": {
                    "textendright": {
                        "label": "Extend Right",
                        "summary": "Determines how the parent COMP handles animation positions that lie after the Trim End position. For example, if Trim End is set to 20, and the animation current index is 25, the Extend Right menu determines how the animation position is calculated."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "cue": {
                        "label": "Cue",
                        "summary": "A toggle to jump to Cue Point when it is set to ON and it stays at that position. Only available when Play Mode is Sequential."
                    },
                    "speed": {
                        "label": "Speed",
                        "summary": "This is a speed multiplier which only works when Play Mode is Sequential. A value of 1 is the default playback speed. A value of 2 is double speed, 0.5 is half speed and so on."
                    },
                    "taketype": {
                        "label": "Take Type",
                        "summary": "Select between playback of an animation or a blend shape."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "A toggle that makes the animation to play when it sets to ON. This Parameter is only available/enabled if the Sequential mode is selected from the Play Mode."
                    },
                    "animation": {
                        "label": "Animation",
                        "summary": "Specifices the animation name (if any is specified) from the importing file that this CHOP will playback."
                    },
                    "cuepulse": {
                        "label": "Cue Pulse",
                        "summary": "When pressed the animation jumps to the Cue Point and continues from that point."
                    },
                    "index": {
                        "label": "Index",
                        "summary": "This parameter explicitly sets the animation position when Play Mode is set to Specify Index. The units\\u2019 menu on the right lets you specify the index in the following units: Index, Frames, Seconds, and Fraction (percentage)."
                    },
                    "blendshape": {
                        "label": "Blend Shape",
                        "summary": "Specifices the blend shape name (if any is specified) from the importing file that this CHOP will playback."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "cuepointunit": {
                        "label": "Cue Point Unit",
                        "summary": "Specifies a unit type for Cue Point. Changing this will convert the previous unit to the selected unit."
                    },
                    "shiftanimationstart": {
                        "label": "Shift Animation Start",
                        "summary": "A toggle to specify whether to shift the animation to the start of animation indicated in the importing file."
                    },
                    "cuepoint": {
                        "label": "Cue Point",
                        "summary": "Set any index in the animation as a point to jump to."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "useparentanim": {
                        "label": "Use Parent Animation",
                        "summary": "A toggle to specify whether to use the parent COMP animation controls or have a custom setting for this SOP."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "tendunit": {
                        "label": "Trim End Unit",
                        "summary": "Specifies a unit type for Trim End. Changing this will convert the previous unit to the selected unit."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "playmode": {
                        "label": "Play Mode",
                        "summary": "A menu to specify the method used to play the animation."
                    },
                    "samplerate": {
                        "label": "Sample Rate",
                        "summary": "Set the sample rate when the \\\"Sample Rate Mode\\\" parameter above is set to 'Custom'."
                    },
                    "tstartunit": {
                        "label": "Trim Start Unit",
                        "summary": "Specifies a unit type for Trim Start. Changing this will convert the previous unit to the selected unit."
                    },
                    "textendleft": {
                        "label": "Extend Left",
                        "summary": "Determines how the parent COMP handles animation positions that lie before the Trim Start position. For example, if Trim Start is set to 1, and the animation current index is -10, the Extend Left menu determines how the animation position is calculated."
                    },
                    "trim": {
                        "label": "Trim",
                        "summary": "A toggle to enable the Trim Start and Trim End parameters."
                    },
                    "tstart": {
                        "label": "Trim Start",
                        "summary": "Sets an in point from the beginning of the animation, allowing you to trim the starting index of the animation. The units\\u2019 menu on the right let you specify this position by index, frames, seconds, or fraction (percentage)."
                    },
                    "tend": {
                        "label": "Trim End",
                        "summary": "Sets an end point from the end of the movie, allowing you to trim the ending index of the animation. The units\\u2019 menu on the right let you specify this position by index, frames, seconds, or fraction (percentage)."
                    },
                    "indexunit": {
                        "label": "Index Unit",
                        "summary": "Specifies a unit type for Index. Changing this will convert the previous unit to the selected unit."
                    },
                    "sampleratemode": {
                        "label": "Sample Rate Mode",
                        "summary": "Select between using the 'File FPS' embedded in the FBX file or setting a 'Custom' sample rate."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": ""
            },
            "natnetinCHOP": {
                "label": "NatNet In",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "resetpulse": {
                        "label": "Reset",
                        "summary": "Reset the data in this node."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the CHOP receives information, while off no updating occurs."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "localaddress": {
                        "label": "Local Address",
                        "summary": "In cases where your computer has multiple network cards and IP address, this tells the node which local IP address to bind to for it's communication. For example say you have a WIFI connection whose IP address is 192.168.0.100 and a ethernet connection whose IP address is 24.100.200.50. If you want the node to communicate over the WIFI you can put 192.168.0.100 or 192.168.0.* into this parameter. If you want the node to communicate via the ethernet you'd set this to 24.100.200.50 or 24.100.200.* (or even 24.100.*.* etc.). Systems with a single network connection can leave this parameter blank."
                    },
                    "netaddress": {
                        "label": "Network Address",
                        "summary": "The computer name or IP address of the server computer. You can use an IP address (e.g. 100.123.45.78) or the computer's network name can be used directly. If you put \\\"localhost\\\", it means the other end of the pipe is on the same computer. When using Multicast mode this should still be set to the server's address, not the multicast address. The server will negotiate the multicast address with the client and make it connect to it automatically."
                    },
                    "connectiontype": {
                        "label": "Connection Type",
                        "summary": "Set this to the connection mode the server is set to."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "rate": {
                        "label": "Rate",
                        "summary": "The rate at which the data should be queried."
                    },
                    "commandport": {
                        "label": "Command Port",
                        "summary": "The command network port of the server."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "dataport": {
                        "label": "Data Port",
                        "summary": "The data port of the server."
                    }
                },
                "summary": "The NatNet In CHOP is used to receive tracking data over the network data from OptiTrack systems."
            },
            "functionCHOP": {
                "label": "Function",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "baseval": {
                        "label": "Base Value",
                        "summary": "The value of the base for 'Log base N' and 'Base ^ Input1'. parameter name /baseval"
                    },
                    "angunit": {
                        "label": "Angle Units",
                        "summary": "For trigonometric functions, the angles can be measured in Degrees, Radians, or Cycles (0 to 1)."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "error": {
                        "label": "Error Handling",
                        "summary": "How to correct samples with math errors:"
                    },
                    "expval": {
                        "label": "Exponent Value",
                        "summary": "The value of the exponent for 'Input1 ^ Exponent'. channel name /expval"
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "match": {
                        "label": "Match by",
                        "summary": "How to pair channels together from the two inputs for the binary functions, by name or by channel index."
                    },
                    "divval": {
                        "label": "Divide Error Value",
                        "summary": "Value to use when a divide by zero error occurs. Caused by pow(x,y)."
                    },
                    "pinfval": {
                        "label": "+ Infinity Value",
                        "summary": "Value to use when an infinity error occurs. Caused by sinh(), cosh() and tan()."
                    },
                    "func": {
                        "label": "Function",
                        "summary": "Which math function to apply to the channels. All of the functions are unary functions except for the binary functions 'arctan (Input1/Input2)' and 'Input1 ^ Input2'. In the cases of power functions, a negative base is inverted first to avoid imaginary numbers, and the result is negated."
                    },
                    "domval": {
                        "label": "Domain Error Value",
                        "summary": "Value to use when a domain error occurs. Caused by asin(), acos(), log10(), logN(), ln() and sqrt()."
                    },
                    "ninfval": {
                        "label": "- Infinity Value",
                        "summary": "Value to use when a negative infinity error occurs. Caused by sinh() and tan()."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    }
                },
                "summary": "The Function CHOP provides more complicated math functions than found in the Math CHOP : trigonometic functions, logarithmic functions and exponential functions, and also audio decibels (dB)-power-amplitude conversions."
            },
            "blacktraxCHOP": {
                "label": "BlackTrax",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "The network protocol to use. Refer to the Network Protocols article for more information."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "The port that will accept packets."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the CHOP receives information sent to the network port. While Off, no updating occurs."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "samplerate": {
                        "label": "Sample Rate",
                        "summary": "Sets the sample rate of this CHOP."
                    },
                    "reset": {
                        "label": "Reset Channels",
                        "summary": "Clears any stored beacons and removes any stale data."
                    },
                    "outputformat": {
                        "label": "Output Format",
                        "summary": "Specifies the format for the CHOP channels (ie. how many beacons to add). \\\"From Mapping Table\\\" adds one beacon to the CHOP for every row in the mapping table. \\\"From Max Beacons\\\" adds the number specified in the \\\"Max Beacons\\\" parameter."
                    },
                    "leds": {
                        "label": "LEDs",
                        "summary": "When enabled, adds position channels for each LED in the beacon."
                    },
                    "mappingtable": {
                        "label": "Mapping Table",
                        "summary": "A DAT table that maps beacon IDs to CHOP channels (beacon0, beacon1, etc.). The first row will map to beacon0, second row to beacon1, etc. Beacon ID is a unique non-negative integer and is specified within BlackTrax applications.  Below is an example of a mapping table that is tracking 3 beacons with IDs 10, 11, and 12. In this example 10 is mapped to beacon0, 11 is mapped to beacon1, and 12 is mapped to beacon2.  image:beacon_setup_example.jpg"
                    },
                    "velocity": {
                        "label": "Velocity",
                        "summary": "When enabled, adds beacon velocity channels."
                    },
                    "netaddress": {
                        "label": "Network Address",
                        "summary": "When using Multicast, this is the address that will listen for packets."
                    },
                    "maxbeacons": {
                        "label": "Max Beacons",
                        "summary": "Specifies how many beacons to add to the CHOP. Used with the \\\"From Max Beacons\\\" output format."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "centroid": {
                        "label": "Centroid",
                        "summary": "When enabled, adds beacon translation and rotation channels."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "acceleration": {
                        "label": "Acceleration",
                        "summary": "When enabled, adds beacon acceleration channels."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The BlackTrax CHOP will provide motion tracking data from http://blacktrax.cast-soft.com."
            },
            "recordCHOP": {
                "label": "Record",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "sample": {
                        "label": "Record Input",
                        "summary": "Determines whether record should sample the time slice or the current frame. You would generally want to use Current Time Slice, for audio, as all frames will be evaluated.  If the interval is set to be the Current Frame, it will always cook (only look at) the current frame (things downstream still cook regardless of this setting however). Thus, it should generally not be used for audio, but rather fro things like device input, because it interpolates the values between the captured frames."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "output": {
                        "label": "Record Output",
                        "summary": "Determines the frame range that gets output from the CHOP."
                    },
                    "segmentunit": {
                        "label": "Record Segment Unit",
                        "summary": ""
                    },
                    "record": {
                        "label": "Record",
                        "summary": "When and how much to record:"
                    },
                    "segment": {
                        "label": "Record Segment",
                        "summary": "The data gets recorded in a fixed-range interval and the most recent data gets recorded at the end of the interval and the remaining samples get shifted toward the start of the interval. This is useful for making snakes."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "interp": {
                        "label": "Interpolation",
                        "summary": "Determines how to compute missed input samples using interpolation. Using Hold Previous Value does just that; Linear and Cubic interpolation will create a mathematical blend of values in a linear (straight line between values in time), or cubic (smooth round-off curve between beginning and ending values)."
                    },
                    "reset": {
                        "label": "Reset Channels",
                        "summary": "The current output is cleared and all subsequent channels will commence single sample lengths."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "resetcondition": {
                        "label": "Reset Condition",
                        "summary": ""
                    }
                },
                "summary": "The Record CHOP takes the channels coming in the first (Position) input, converts and records them internally, and outputs the stored channels as the CHOP output."
            },
            "blendCHOP": {
                "label": "Blend",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "firstweight": {
                        "label": "Omit First Weight Channel",
                        "summary": "When using the Differencing method, the weight channel for the base input has no effect, so the channel is omitted if this option is On."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "underflow": {
                        "label": "Fix Underflows",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "The blend method:"
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Blend CHOP combines two or more CHOPs in input 2, 3 and so on, by using a set of blending channels in input 1."
            },
            "patternCHOP": {
                "label": "Pattern",
                "parameters": {
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": "The right extend conditions (before/after range)."
                    },
                    "length": {
                        "label": "Length",
                        "summary": "Set the number of samples for this CHOP."
                    },
                    "taper": {
                        "label": "Taper",
                        "summary": "Two parameters to multiply by a line from taper1 at the start to taper2 at the end. The default of (1 1) has no effect."
                    },
                    "integer": {
                        "label": "Integer",
                        "summary": "A round-off menu to convert all numbers to integers."
                    },
                    "phasestep": {
                        "label": "Phase Step",
                        "summary": "Increases the phase for each channel. A Phase Step of .25 when there are 2 channels will shift the second channel to be 1/4 cycle later phase than the first phase, where if the 2 channels are used for x and y, will draw a circle when passed to a CHOP to SOP."
                    },
                    "channelname": {
                        "label": "Channel Names",
                        "summary": "You can creates many channels with simple patterns like chan[1-20], which generates 20 channels from chan1 to chan20, or t[xyz] which generates tx, ty and tz. See the section, Common CHOP Parameters for a description of this and all Options. See Scope and Channel Name Matching Options."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "numcycles": {
                        "label": "Number of Cycles",
                        "summary": "Set the number of repeating cycles of the Type shapes over the Length, except for Random."
                    },
                    "amp": {
                        "label": "Amplitude",
                        "summary": "See also the Range."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "The sample rate of the channels, in samples per second."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": "The left right extend conditions (before/after range)."
                    },
                    "taperdecay": {
                        "label": "Taper Decay Rate",
                        "summary": "An exponent that is applied to the result of the taper."
                    },
                    "seed": {
                        "label": "Seed",
                        "summary": "The seed for the random Types."
                    },
                    "reverse": {
                        "label": "Reverse",
                        "summary": "Reverses the final order of the samples as in the Stretch CHOP."
                    },
                    "fromrange": {
                        "label": "From Range",
                        "summary": "A value at each From Range will become its corresponding To Range value."
                    },
                    "wavetype": {
                        "label": "Type",
                        "summary": "The shape of one cycle of the pattern."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": "The default value for extend conditions."
                    },
                    "combine": {
                        "label": "Combine Channels",
                        "summary": "If an input CHOP is attached, it adopts the length and sample rate of the input CHOP, and"
                    },
                    "torange": {
                        "label": "To Range",
                        "summary": "A value at each From Range will become its corresponding To Range value."
                    },
                    "bias": {
                        "label": "Bias",
                        "summary": "Makes Triangle type into a sawtooth wave, and sets the Square type variable-width."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "See also the Range."
                    },
                    "phase": {
                        "label": "Phase",
                        "summary": "Shifts the cycle."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Pattern CHOP generates a sequence of samples in a channel."
            },
            "zedCHOP": {
                "label": "ZED",
                "parameters": {
                    "u": {
                        "label": "U",
                        "summary": "Sets the U coordinate of the point in the image to extract plane position."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "active": {
                        "label": "Active",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "planeatpoint": {
                        "label": "Camera Position",
                        "summary": "Enables plane at point, which returns the position of the plane corresponding the UV coordinate."
                    },
                    "center": {
                        "label": "Center",
                        "summary": "Returns tx, ty, and tz position channels of the center of the plane."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "extents": {
                        "label": "Extents",
                        "summary": "Returns width and height of the bounding rectangle of the plane."
                    },
                    "cameraposition": {
                        "label": "Camera Position",
                        "summary": "Returns the camera position relative to the intial position of the camera. A tx, ty, tz triplet of channels will be output for the position of the camera in meters. An rx, ry, rz triplet will be output for the orientation."
                    },
                    "normal": {
                        "label": "Normal",
                        "summary": "Returns nx, ny, and nz normal channels of the plane."
                    },
                    "referenceframe": {
                        "label": "Reference Frame",
                        "summary": "Selects the reference frame for plane position."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "v": {
                        "label": "V",
                        "summary": "Sets the V coordinate of the point in the image to extract plane position."
                    },
                    "camera": {
                        "label": "Camera",
                        "summary": "Selects which ZED camera to use."
                    },
                    "resetcameraposition": {
                        "label": "Reset",
                        "summary": ""
                    }
                },
                "summary": "The ZED CHOP reads positional tracking data from the ZED camera."
            },
            "scanCHOP": {
                "label": "Scan",
                "parameters": {
                    "limitstep": {
                        "label": "Limit Step Size",
                        "summary": "Breakup long x,y jumps into several smaller incremental jumps."
                    },
                    "top": {
                        "label": "TOP",
                        "summary": "Path to the TOP node."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "trimval": {
                        "label": "Trim Value",
                        "summary": ""
                    },
                    "triggerval": {
                        "label": "Trigger Value",
                        "summary": ""
                    },
                    "bluescale": {
                        "label": "Blue Scale",
                        "summary": "Scale the output b channel."
                    },
                    "color": {
                        "label": "Output Color",
                        "summary": "If on, r,g,b channels are created.If on, r,g,b channels are created."
                    },
                    "width": {
                        "label": "Width",
                        "summary": "The number of columns to resample the image at."
                    },
                    "sop": {
                        "label": "SOP",
                        "summary": "Path to the SOP node."
                    },
                    "interleave": {
                        "label": "Interleave",
                        "summary": "Controls the order in which rows are output to minimize flicker."
                    },
                    "layered": {
                        "label": "Layered",
                        "summary": "Output the pixels in order of brightness, else they are output left to right for each row."
                    },
                    "trigger": {
                        "label": "Trigger",
                        "summary": "The output graph will begin where its value exceeds this value. This allows for steady 'frozen' waveforms, analagous to an oscilloscope triggered sweep."
                    },
                    "vertexrepeat": {
                        "label": "Vertex Repeat",
                        "summary": "Repeat each vertex of the each primitive multiple times."
                    },
                    "swap": {
                        "label": "Swap Output",
                        "summary": "Reverse the X and Y channel outputs."
                    },
                    "height": {
                        "label": "Height",
                        "summary": "The number of rows to resample the image at."
                    },
                    "stepsize": {
                        "label": "Step Size",
                        "summary": "The distance each x,y can change when above option enabled."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "Samples per second, the output sample rate."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "vertexorder": {
                        "label": "Vertex Order",
                        "summary": "Output the points in the same order as the vertices of each polygon, instead of the order in which the points are defined in the geometry."
                    },
                    "rotate": {
                        "label": "Rotate",
                        "summary": "Specified in degrees, rotates the output x,y values."
                    },
                    "chop": {
                        "label": "CHOP",
                        "summary": "Path to the CHOP node."
                    },
                    "xscale": {
                        "label": "X Scale",
                        "summary": "Scale the x amplitude."
                    },
                    "greenscale": {
                        "label": "Green Scale",
                        "summary": "Scale the output g channel."
                    },
                    "source": {
                        "label": "Source OP",
                        "summary": "Choose the source node family."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "yscale": {
                        "label": "Y Scale",
                        "summary": "Scale the y amplitude."
                    },
                    "randomize": {
                        "label": "Randomize Samples",
                        "summary": "Output all samples in a random order. Creates a fuzzy chaotic image on an oscilloscope."
                    },
                    "trim": {
                        "label": "Trim",
                        "summary": ""
                    },
                    "limit": {
                        "label": "Auto Reduce",
                        "summary": "Automatically reduce the number of rows and columns dynamically to keep the output frame rate  at a constant level."
                    },
                    "blankingcount": {
                        "label": "Blanking Count",
                        "summary": "In the case of SOP input, the number of black/off positions to insert between geometry primitives.  In the case of TOP input, the number of black/off positions to insert between full raster scans. Color output must be enabled.In the case of SOP input, the number of black/off positions to insert between geometry primitives.  In the case of TOP input, the number of black/off positions to insert between full raster scans. Color output must be enabled."
                    },
                    "level": {
                        "label": "Level",
                        "summary": "The number of brightness levels each pixel can have."
                    },
                    "camera": {
                        "label": "Camera",
                        "summary": "Project the geometry onto a 2D plane from this camera, otherwise, only the original x,y components of the geometry are used."
                    },
                    "redscale": {
                        "label": "Red Scale",
                        "summary": "Scale the output r channel."
                    },
                    "trimunits": {
                        "label": "Trim Units",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    }
                },
                "summary": "The Scan CHOP converts a SOP or TOP to oscilloscope or laser friendly control waves."
            },
            "deleteCHOP": {
                "label": "Delete",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "selnumbers": {
                        "label": "Channel Numbers",
                        "summary": "The indices of the channels to delete or extract. - See possible number patterns below."
                    },
                    "condition": {
                        "label": "Delete Condition",
                        "summary": "Choose the criteria for the samples to be compare against:"
                    },
                    "delchannels": {
                        "label": "Delete Channels",
                        "summary": "Toggle to enable channel deleting."
                    },
                    "value2": {
                        "label": "Value 2",
                        "summary": "Set a value for Value 2."
                    },
                    "delsamples": {
                        "label": "Delete Samples",
                        "summary": "Toggle to enable sample deleting."
                    },
                    "compmulti": {
                        "label": "Multi-Compare Channels",
                        "summary": "If there is more that one compare channel, this determines how to treat the values in the compare channels before checking against the criteria:"
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "chanvalue": {
                        "label": "Channel Value",
                        "summary": "Chooses the type of value range selection:"
                    },
                    "value1": {
                        "label": "Value 1",
                        "summary": "Set a value for Value 1."
                    },
                    "selrange": {
                        "label": "Value Range",
                        "summary": "The lower and upper values of the range used for Range Selection."
                    },
                    "onesample": {
                        "label": "One Sample if All Deleted",
                        "summary": "Leaves one sample even when all samples are deleted."
                    },
                    "compnames": {
                        "label": "Channel Names",
                        "summary": "Enter a scope pattern here to specify the names of channels to be used as compare channels. You do this by specifying a scope pattern, as detailed in Pattern Matching."
                    },
                    "compnums": {
                        "label": "Channel Numbers",
                        "summary": "The indices of the channels to be used as compare channels, the default being 0, the first channel. - See possible number patterns above."
                    },
                    "selconst": {
                        "label": "Select Constant Valued Channels",
                        "summary": "Select channels which have the same value for all samples. These kinds of channel name patterns are used to select existing channels in an input CHOP, see Pattern Matching for details.  Also these kinds of channel number patterns can be used to select existing channels in an input CHOP:  *  0 1 4 - Matches the first, second and fifth channel. *  [0-4] - Matches the first five channels. * [3-9:2] - Matches channels at indices 3,5, 7 and 9."
                    },
                    "delscope": {
                        "label": "Channel Names",
                        "summary": "Enter a scope pattern here to specify the names of channels to delete or extract. You do this by specifying a scope pattern, as detailed in Pattern Matching.  : The default scope pattern t* will scope the translation channels: tx, ty, and tz , or any other channel whose name starts with t."
                    },
                    "discard": {
                        "label": "Delete",
                        "summary": "Determines whether the scoped channels should be deleted or retained:"
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "inclvalue1": {
                        "label": "Include Value 1",
                        "summary": "Toggle the inclusivity of Value 1."
                    },
                    "deletecomp": {
                        "label": "Delete Compare Channels",
                        "summary": "Determines whether the compare channels should be deleted or retained."
                    },
                    "inclvalue2": {
                        "label": "Include Value 2",
                        "summary": "Toggle the inclusivity of Value 2."
                    },
                    "select": {
                        "label": "Select Channels",
                        "summary": "How to select channels - By Name, or By Numeric index."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "compchans": {
                        "label": "Channels to Compare",
                        "summary": "How to select channels used to compare against criteria - By Name, by Numeric index, by using the First Channel, or by using the Last Channel."
                    }
                },
                "summary": "The Delete CHOP removes entire channels and/or individual samples of its input."
            },
            "fileinCHOP": {
                "label": "File In",
                "parameters": {
                    "refreshpulse": {
                        "label": "Refresh Pulse",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "overridevalue": {
                        "label": "Override Value",
                        "summary": "The value given to channels scope by the Value Override Pattern parameter above."
                    },
                    "renamefrom": {
                        "label": "Rename from",
                        "summary": "The channel pattern to rename. See Pattern Matching."
                    },
                    "file": {
                        "label": "Channel File",
                        "summary": "The name of the file to load. Use http:// when specifying a URL."
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": "The left extend conditions (before/after range)."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": "The right extend conditions (before/after range)."
                    },
                    "nameoption": {
                        "label": "Name Options",
                        "summary": "Use this menu to control the names of the loaded channels."
                    },
                    "refresh": {
                        "label": "Refresh",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": "The default value for extend conditions."
                    },
                    "renameto": {
                        "label": "Rename to",
                        "summary": "The replacement pattern for the names. The default parameters do not rename the channels. See Pattern Replacement."
                    },
                    "name": {
                        "label": "Name",
                        "summary": "Used to name the channels when the Name Options parameter is set to Use New Names."
                    },
                    "overridpattern": {
                        "label": "Value Override Pattern",
                        "summary": "Scopes channels to apply the Override Value to."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "rateoption": {
                        "label": "Rate Options",
                        "summary": "Use this menu to adjust the sample rate of the loaded channels."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "Samples per second, as utilized by the Rate Options parameter."
                    }
                },
                "summary": "The File In CHOP reads in channel and audio files for use by CHOPs."
            },
            "joystickCHOP": {
                "label": "Joystick",
                "parameters": {
                    "xrot": {
                        "label": "X Rotation",
                        "summary": "The names of the channels that record the X-rotation axis position of the game controller."
                    },
                    "axisrange": {
                        "label": "Axis Range",
                        "summary": ""
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": ""
                    },
                    "axisdeadzone": {
                        "label": "Axis Dead Zone",
                        "summary": "This value defines how much of the area in the center of the joystick is considered 'dead zone'. When a joystick axis is in this dead zone it is considered to be centered. This value applies to all normal axes and rotation axes. This value is a percentage that defaults to 7%."
                    },
                    "connected": {
                        "label": "Connected",
                        "summary": ""
                    },
                    "source": {
                        "label": "Joystick Source",
                        "summary": "This menu will list all the game controllers currently attached to the computer. The selected game controller is the one the CHOP reads data from. If the synth is saved with one joystick name, and the synth is moved to a machine with another joystick type, the CHOP will adopt the first game controller it find to replace the missing device."
                    },
                    "yaxis": {
                        "label": "Y Axis",
                        "summary": "The name of the channel that records the Y-axis position of the game controller."
                    },
                    "yrot": {
                        "label": "Y Rotation",
                        "summary": "The names of the channels that record the Y-rotation axis position of the game controller."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "yaxisinvert": {
                        "label": "Invert Y Axis",
                        "summary": ""
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "yrotinvert": {
                        "label": "Invert Y Rotation",
                        "summary": ""
                    },
                    "buttonarray": {
                        "label": "Button Array",
                        "summary": "The names of the channels for the buttons on the game controller. This CHOP can handle up to 32 buttons."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "slider0": {
                        "label": "Slider 1",
                        "summary": "The name of the channel that records the position of the first slider on the game controller."
                    },
                    "zaxis": {
                        "label": "Z Axis",
                        "summary": "The name of the channel that records the Z-axis position of the game controller."
                    },
                    "povstatearray": {
                        "label": "POV Hat State Array",
                        "summary": ""
                    },
                    "xaxis": {
                        "label": "X Axis",
                        "summary": "The name of the channel that records the X-axis position of the game controller."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": ""
                    },
                    "zrot": {
                        "label": "Z Rotation",
                        "summary": "The names of the channels that record the Z-rotation axis position of the game controller."
                    },
                    "slider1": {
                        "label": "Slider 2",
                        "summary": "The name of the channel that records the position of the second slider on the game controller."
                    },
                    "povarrray": {
                        "label": "POV Hat Array",
                        "summary": "The names of the channels for the POV Hats. This CHOP can handle up to 4 POV Hats. The channels a POV hat is split up into are POVHatName_X and POVHatName_Y."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Joystick CHOP outputs values for all 6 possible axes on any game controller (joysticks, game controllers, driving wheels, etc.), as well as up to 32 button, 2 sliders and 4 POV Hats."
            },
            "feedbackCHOP": {
                "label": "Feedback",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "output": {
                        "label": "Output",
                        "summary": ""
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "delta": {
                        "label": "Delta Time",
                        "summary": "Time differential during feedback. If on, it adds a 'dt' channel whose value is the elapsed time since the last cook."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Feedback CHOP stores channels from the current frame to be used in a later frame, without forcing recooking back one frame."
            },
            "midiinmapCHOP": {
                "label": "MIDI In Map",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "sliders": {
                        "label": "Sliders",
                        "summary": "The slider controllers to import from the MIDI Mapper. For example to import the first 16 sliders, slider 20 and sliders 32 to 40, type:   s[1-16] s20 s[32-40]"
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "id": {
                        "label": "Device ID",
                        "summary": "Specify the id of which device to use."
                    },
                    "device": {
                        "label": "Device Table",
                        "summary": "Path to the MIDI device Table DAT."
                    },
                    "squeue": {
                        "label": "Queue Slider Events",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "buttons": {
                        "label": "Buttons",
                        "summary": "The buttons to import from the MIDI Mapper. For example to import the first 16 buttons, button 20 and buttons 32 to 40, type:    b[1-16] b20 b[32-40]"
                    },
                    "bvelocity": {
                        "label": "Include Velocity in Buttons",
                        "summary": ""
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": ""
                    }
                },
                "summary": "See first the MIDI In DAT. The MIDI In Map CHOP reads in specified channels from the MIDI Device Mapper which prepares slider channels starting from s1, s2, etc."
            },
            "sequencerCHOP": {
                "label": "Sequencer",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "datlist": {
                        "label": "DAT List",
                        "summary": "The table of CHOPs to sequence, the table contains the paths to the CHOPs to be sequenced."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "Reset the sequence to the default CHOP."
                    },
                    "blendscope": {
                        "label": "Blend Scope",
                        "summary": ""
                    },
                    "addscope": {
                        "label": "Add Scope",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "queue": {
                        "label": "Queue",
                        "summary": ""
                    },
                    "trigger": {
                        "label": "Trigger",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "NOTE: The Timer CHOP replaces the Sequencer CHOP."
            },
            "hokuyoCHOP": {
                "label": "Hokuyo",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "port": {
                        "label": "Serial Port",
                        "summary": "Selects the COM port that the serial connection will use.  Default port names 1 through 8 are available in the popup menu, though any name can be manually entered in this field."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "This check box enables the connection."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "output": {
                        "label": "Output",
                        "summary": "Outputs the scan data in either Polar or Cartesian coordinates."
                    },
                    "startstep": {
                        "label": "Start Step",
                        "summary": "Specifies the first data point of the laser scan. Start step must be a number between first and last measurement point, and must be less than or equal to the end step parameter. Refer to the above table to get device specific first/last measurement points. This parameter defaults to 0, the start step of the UST-10LX and other ethernet lasers. For the URG-04LX-UG01 and other similar devices the start step must be 44 or greater."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "motorspeed": {
                        "label": "Motor Speed",
                        "summary": "Modifies the motor speed of the laser scanner. This should be used when running multiple laser scanners in the same environment. Different motor speeds across multiple laser scanners will avoid light interference between them. Only available on serial devices."
                    },
                    "netaddress": {
                        "label": "Network Address",
                        "summary": "The network address of the laser scanner to connect to. The default address of a UST-10LX device is 192.168.0.10."
                    },
                    "interface": {
                        "label": "Interface",
                        "summary": "Select the device interface."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "endstep": {
                        "label": "End Step",
                        "summary": "Specifies the last data point of the laser scan. End step must be a number between first and last measurement point, and must be greater than or equal to the start step parameter. Refer to the above table to get device specific first/last measurement points. This parameter defaults to 1080, the end step of the UST-10LX and other ethernet lasers. For the URG-04LX-UG01 and other similar devices the end step must be 725 or fewer."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "highsensitivity": {
                        "label": "High Sensitivity",
                        "summary": "This check box enables the high sensitivity mode on the sensor. High Sensitivity mode increases the detection ability of the laser scanner, but with a higher chance of measurement error. Only available on serial devices."
                    }
                },
                "summary": "The Hokuyo CHOP is used for communication with Hokuyo laser scanners (serial or ethernet interface): Hokuyo Products"
            },
            "tabletCHOP": {
                "label": "Tablet",
                "parameters": {
                    "ytilt2": {
                        "label": "Y Tilt",
                        "summary": ""
                    },
                    "tanpressure": {
                        "label": "Finger Wheel",
                        "summary": ""
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": ""
                    },
                    "button2": {
                        "label": "Button 2",
                        "summary": ""
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": ""
                    },
                    "zcoord2": {
                        "label": "Thumb Wheel",
                        "summary": ""
                    },
                    "pressure": {
                        "label": "Pressure",
                        "summary": ""
                    },
                    "button24": {
                        "label": "Button 4",
                        "summary": ""
                    },
                    "button21": {
                        "label": "Button 1",
                        "summary": ""
                    },
                    "button3": {
                        "label": "Button 3",
                        "summary": ""
                    },
                    "ycoord": {
                        "label": "Y Coordinate",
                        "summary": ""
                    },
                    "ycoord2": {
                        "label": "Y Coordinate",
                        "summary": ""
                    },
                    "button4": {
                        "label": "Button 4",
                        "summary": ""
                    },
                    "button25": {
                        "label": "Button 5",
                        "summary": ""
                    },
                    "xcoord": {
                        "label": "X Coordinate",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "rotation": {
                        "label": "Rotation",
                        "summary": ""
                    },
                    "button23": {
                        "label": "Button 3",
                        "summary": ""
                    },
                    "rotation2": {
                        "label": "Rotation",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": ""
                    },
                    "button1": {
                        "label": "Button 1",
                        "summary": ""
                    },
                    "tanpressure2": {
                        "label": "Finger Wheel",
                        "summary": ""
                    },
                    "ytilt": {
                        "label": "Y Tilt",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "xtilt2": {
                        "label": "X Tilt",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": ""
                    },
                    "button22": {
                        "label": "Button 2",
                        "summary": ""
                    },
                    "pressure2": {
                        "label": "Pressure",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "button5": {
                        "label": "Button 5",
                        "summary": ""
                    },
                    "xtilt": {
                        "label": "X Tilt",
                        "summary": ""
                    },
                    "xcoord2": {
                        "label": "X Coordinate",
                        "summary": ""
                    },
                    "zcoord": {
                        "label": "Thumb Wheel",
                        "summary": ""
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    }
                },
                "summary": "The Tablet CHOP gets the Wacom tablet X and Y values, and also gets pen tip pressure, X tilt and Y tilt, and the various pen buttons."
            },
            "sharedmemoutCHOP": {
                "label": "Shared Mem Out",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "name": {
                        "label": "Shared Mem Name",
                        "summary": "Name of the memory block that it writes to."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "When active, the CHOP cooks its inputs and writes to the memory block."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "memtype": {
                        "label": "Shared Mem Type",
                        "summary": "Writes to a Local or a Global memory location."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Shared Mem Out CHOP sends CHOPs to a shared memory segment that is attached to a Shared Mem In CHOP in another process or the same process."
            },
            "audioplayCHOP": {
                "label": "Audio Play",
                "parameters": {
                    "cookalways": {
                        "label": "Cook Every Frame",
                        "summary": "Forces CHOP to cook every frame."
                    },
                    "topfrontright": {
                        "label": "Top Front Right",
                        "summary": ""
                    },
                    "topbackright": {
                        "label": "Top Back Right",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "stereo": {
                        "label": "Stereo Mode",
                        "summary": "Sets output to just 2 channels, front left and front right.   Outputs - The outputs on this page and the following Output 2 page are for routing to an audio device's different speaker outputs. Not all devices will support all outputs. For each speaker output, you can route any of the file's channels to play through it. For example, you can easily output the front left channel of the file to the all the front left speaker outputs, or you could output the front left channel to both front and rear speaker outputs. The value of each output parameter determines which channel from the file it plays, see below.  * -1 - no audio plays through this output * 0 - front left channel will play * 1 - front right channel will play * 2 - rear left channel will play * 3 - rear right channel will play * 4 - center channel will play * 5 - sub or low frequency channel will play  The following speaker outputs are found on this parameter page."
                    },
                    "device": {
                        "label": "Device",
                        "summary": "A menu of available audio devices to output to. Selecting default sets the audio device to that which is selected in Windows Control Panel>Sound>Playback."
                    },
                    "frontcenter": {
                        "label": "Front Center",
                        "summary": ""
                    },
                    "topbackleft": {
                        "label": "Top Back Left",
                        "summary": ""
                    },
                    "frontleftcenter": {
                        "label": "Front Left of Center",
                        "summary": ""
                    },
                    "frontright": {
                        "label": "Front Right",
                        "summary": ""
                    },
                    "trigger": {
                        "label": "Trigger",
                        "summary": "Triggers the audio to play."
                    },
                    "volume": {
                        "label": "Volume",
                        "summary": "0 = mute, 1 = full volume. Using the second input (Input 1: Volume) or the python .play(volume=val) method, will override the value of this parameter."
                    },
                    "lowfrequency": {
                        "label": "Low Frequency",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "frontrightcenter": {
                        "label": "Front Right of Center",
                        "summary": ""
                    },
                    "mode": {
                        "label": "Mode",
                        "summary": "Determines how the audio is triggered when using the first input to trigger."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "backleft": {
                        "label": "Back Left",
                        "summary": ""
                    },
                    "topbackcenter": {
                        "label": "Top Back Center",
                        "summary": ""
                    },
                    "datlist": {
                        "label": "DAT List",
                        "summary": "Links to a Table DAT which can be used as list of audio files to choose from. When using the DAT List, the first input (Input 0: Triggers) on the CHOP can contain mulitiple channels to fire the files in the list individually. Using the audioplay command the index can be specified directly."
                    },
                    "sideright": {
                        "label": "Side Right",
                        "summary": ""
                    },
                    "file": {
                        "label": "Sound File",
                        "summary": ".aif, .mp3, .mid, .wav or .m4a audio file. The file can be mono or stereo."
                    },
                    "topcenter": {
                        "label": "Top Center",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "outputs": {
                        "label": "Outputs",
                        "summary": ""
                    },
                    "backcenter": {
                        "label": "Back Center",
                        "summary": ""
                    },
                    "frontleft": {
                        "label": "Front Left",
                        "summary": ""
                    },
                    "topfrontcenter": {
                        "label": "Top Front Center",
                        "summary": ""
                    },
                    "backright": {
                        "label": "Back Right",
                        "summary": ""
                    },
                    "sideleft": {
                        "label": "Side Left",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "topfrontleft": {
                        "label": "Top Front Left",
                        "summary": ""
                    }
                },
                "summary": "The Audio Play CHOP plays back a sound file through any attached audio output device using DirectSound."
            },
            "openvrCHOP": {
                "label": "OpenVR",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Control if this node is querying data from the OpenVR driver."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "firstcontroller": {
                        "label": "First Controller",
                        "summary": "The first controller number to be output. For example if this is set to 2 and Max Controllers is 2, then data for controllers 2 and 3 will be output."
                    },
                    "near": {
                        "label": "Near",
                        "summary": "When outputting 'Projection Matrices', controls the near plane the projection matrix will be built with."
                    },
                    "orientation": {
                        "label": "Orientation",
                        "summary": "When doing 'Sensor' output, controls of the orientation channels will be output. By default the units for orientation are 1 unit = 1 meter."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "far": {
                        "label": "Far",
                        "summary": "When outputting 'Projection Matrices', controls the far plane the projection matrix will be built with."
                    },
                    "unitscale": {
                        "label": "Unit Scale",
                        "summary": "OpenVR by default works in a scale where 1 unit = 1 meter. This parameter allows the scale to be changed incase a scene is imported with a different scale."
                    },
                    "maxbuttons": {
                        "label": "Max Buttons",
                        "summary": "The maximum number of buttons whose channels should be output for each controller."
                    },
                    "output": {
                        "label": "Output",
                        "summary": "Controls what kind of category of data will be output from this node."
                    },
                    "maxanalogs": {
                        "label": "Max Analogs",
                        "summary": "The maximum number of analog inputs (sliders, trackpads, joysticks) whose channels should be output for each controller."
                    },
                    "maxcontrollers": {
                        "label": "Max Controllers",
                        "summary": "The maximum number of controller whose data should be output from this node."
                    },
                    "generalinfo": {
                        "label": "General Info",
                        "summary": "When doing 'Sensor' output, controls of general information channels will be output, such as render resolution and play area size."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    }
                },
                "summary": "The OpenVR CHOP receives positional data from the OpenVR SDK."
            },
            "warpCHOP": {
                "label": "Warp",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "scaleindex": {
                        "label": "Stretch Indices to Channel Length",
                        "summary": "If on, the minimum and maximum values in the Warp Curve are mapped to the beginning and end of the channels to be warped. Otherwise, the Warp Curve is applied as-is to the Pre-Warp Channels.  The Warp CHOP does linear interpolation of the Pre-Warped Channels when they are both stretched and compressed."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "The warping method to use: Rate or Index Control."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Warp CHOP time-warps the channels of the first input (the Pre-Warp Channels) using one warping channel in the second input (the Warp Curve)."
            },
            "clockCHOP": {
                "label": "Clock",
                "parameters": {
                    "day": {
                        "label": "Day of Month",
                        "summary": "If Output is Units, it is the actual day of the month, so on March 20, it is 20. If Output is Fraction, it is fraction of a day of the current moment, so at 6:30 PM, it is .77, taking into account the hour, minute and second."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "hourformat": {
                        "label": "Hour Format",
                        "summary": "12 hour or 24 hour - Causes the hour channel to cycle through 12 or 24 hours. Also affects the AM/PM channel."
                    },
                    "output": {
                        "label": "Output",
                        "summary": "Fractions or Units affects the channel data that is output from the Clock CHOP. Fraction gives convenient 0-1 ramps and Units give integers, like 0-23 for the hours of a day. For example, use Fractions and the day, hour and minute channels to drive a wall clock."
                    },
                    "startref": {
                        "label": "Start Reference",
                        "summary": "The date/time that corresponds to year 0, day 1, hour 0, minute 0. It can be relative to Jan 1, 2000 or to the time that the TouchDesigner process started."
                    },
                    "latitude": {
                        "label": "Latitude",
                        "summary": "Enter a latitude (hours/min north/south) of your location. (defaults to Toronto, Canada). Fractional hours are permitted. For example:  43.6532 hours and 0 minutes, is identical to 43 hours and 39 minutes. The parameter latitude1 is hours, latitude2 is minutes."
                    },
                    "year": {
                        "label": "Year",
                        "summary": "If Output is Units, it is the integer year number relative to the Start Reference, starting at 0, so year 2009 is 9 by default. If Output is Fraction, it is the current fraction of a year, taking into account today's month, day, hour, minute and second."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "month": {
                        "label": "Month",
                        "summary": "Month of the year, starting with 1 for January and 12 for December."
                    },
                    "declination": {
                        "label": "Declination",
                        "summary": "(-180 to 180, degrees north/south that the sun is off the equator)."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "houradjust": {
                        "label": "Hour Adjust",
                        "summary": "After the Clock CHOP reads the current time, it adds Hour Adjust to pretend the current time is different than the actual current time."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "week": {
                        "label": "Week",
                        "summary": "Week of the year, starting with 0 for the first week and 51 for the last week of the year."
                    },
                    "longitude": {
                        "label": "Longitude",
                        "summary": "Enter a longitude (hours/min east/west) of your location. Fractional hours are permitted. The parameter longitude1 is hours, longitude2 is minutes."
                    },
                    "min": {
                        "label": "Minute",
                        "summary": "If Output is Units, it is the current minute, starting at 0 for on-the-hour, going up to 59. If Output is Fraction, it is the current fraction of a minute (45 seconds past the minute gives .75)."
                    },
                    "sunset": {
                        "label": "Sunset",
                        "summary": "Outputs the sunset time (0 to 1, midnight=0, twent.y-four hours later = 1)."
                    },
                    "yday": {
                        "label": "Day of Year",
                        "summary": "If Output is Units, it is the Day of year, starting with 1 for January 1. If it is Fraction, it is the same as Day of Month."
                    },
                    "sec": {
                        "label": "Second",
                        "summary": "If Output is Units, it is the current second, starting at 0 for on-the-hour, going up to 59. If Output is Fraction, it is the current fraction of a second (45 seconds past the minute gives .75)."
                    },
                    "msec": {
                        "label": "Millisecond",
                        "summary": "If Output is Units, it is the current millisecond, starting at 0 at the start of a second, going up to 999 at the end of a second. If Output is Fraction, it is the current fraction of a millisecond."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "moonphase": {
                        "label": "Moon Phase",
                        "summary": "Outputs the moon phase (0 to 1. .5 is a full moon, 0 and 1 are at the time of the new moon)."
                    },
                    "sunrise": {
                        "label": "Sunrise",
                        "summary": "Outputs the sunrise time (0 to 1, midnight=0, twenty-four hours later = 1)."
                    },
                    "ampm": {
                        "label": "AM/PM",
                        "summary": "0 if before noon, 1 if after noon."
                    },
                    "sunphase": {
                        "label": "Sun Phase",
                        "summary": "(0 to 1, where sunrise=0, sunset = 1, and it reverses down to 0 in time for the sunrise."
                    },
                    "wday": {
                        "label": "Day of Week",
                        "summary": "If Output is Units, it is the actual day of the week, starting with 0 for Monday and 6 for Sunday."
                    },
                    "eastwest": {
                        "label": "EW",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "northsouth": {
                        "label": "NS",
                        "summary": ""
                    },
                    "hour": {
                        "label": "Hour",
                        "summary": "If Output is Units, it is the current hour, starting at 0 for midnight and affected by AM/PM. If Output is Fraction, it is the current fraction of an hour (15 minutes past the hour gives .25), taking into account the current minute and second."
                    }
                },
                "summary": "The Clock CHOP generates channels that reflect the time of year, month, week, day, hour, minute, second and millisecond."
            },
            "audiostreamoutCHOP": {
                "label": "Audio Stream Out",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "Port number used to transmit the audio stream. This number is needed in the URL supplied to the client receiving the stream. See example in Summary at top."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Toggle's the rtsp server on or off."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "streamname": {
                        "label": "Stream Name",
                        "summary": "Name assigned to the stream. This stream name is needed in the URL supplied to the client receiving the stream. See example in Summary at top."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Audio Stream Out CHOP can stream audio out to any rtsp client such as VideoLAN's VLC media player and Apple's Quicktime."
            },
            "limitCHOP": {
                "label": "Limit",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "istepunit": {
                        "label": "Step Unit",
                        "summary": ""
                    },
                    "norm": {
                        "label": "Normalize",
                        "summary": "Scale and offset the channel so that it lies between -1 and +1. The Normalize function does not work with Time Slicing on."
                    },
                    "min": {
                        "label": "Minimum",
                        "summary": "The minimum value the output channel can have."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "vstep": {
                        "label": "Value Step",
                        "summary": "The increment between quantized values."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "positive": {
                        "label": "Positive Only",
                        "summary": "Takes the absolute value of the channel, making all negative values positive."
                    },
                    "ioffset": {
                        "label": "Offset",
                        "summary": "The offset for quantized indices."
                    },
                    "istep": {
                        "label": "Step",
                        "summary": "The increment between quantized indices, in seconds, frames or samples."
                    },
                    "max": {
                        "label": "Maximum",
                        "summary": "The maximum value the output channel can have."
                    },
                    "voffset": {
                        "label": "Value Offset",
                        "summary": "The offset for quantized values, to allow steps to not lie at zero, the default."
                    },
                    "quantvalue": {
                        "label": "Quantize Value",
                        "summary": "Selects the quantization method to use:"
                    },
                    "quantindex": {
                        "label": "Quantize Index",
                        "summary": "Selects whether to quantize the index relative to the sample 0, or the start index of the CHOP."
                    },
                    "ioffsetunit": {
                        "label": "Offset Unit",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "type": {
                        "label": "Type",
                        "summary": "The type of limit function to use:"
                    },
                    "underflow": {
                        "label": "Fix Underflows",
                        "summary": "This will cause extremely tiny numbers to be rounded to 0."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Limit CHOP can limit the values of the input channels to be between a minimum and maximum, and can quantize the input channels in time and/or value such that the value steps over time."
            },
            "audiofilterCHOP": {
                "label": "Audio Filter",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "filter": {
                        "label": "Filter",
                        "summary": "The filter type:"
                    },
                    "cutofflog": {
                        "label": "Filter Cutoff (Hz=10**val)",
                        "summary": "The filter cutoff frequency expressed in power-of-10, where value 0 translates to 1 Hz (10**0), value 1 is 10 Hz (10**1), value 2 is 100 Hz (10**2), value 3 is 1000 Hz, value 4 is 10,000 Hz, value 4.5 is 31,623 Hz. The parameter in this form gives more meaningful range in relation to human hearing, as increasing the parameter by 1 raises the frequency by about 3 octaves."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "drywet": {
                        "label": "Dry / Wet Mix",
                        "summary": "As this parameter is reduced from 1 (Wet) toward 0 (Dry), it removes the effect of the filter."
                    },
                    "rolloff": {
                        "label": "Roll-Off (dB per Octave)",
                        "summary": "Rolloff determines how much the levels decrease near the cutoff frequency. This parameter will make it decrease by 12 decibels (dB) per octave, to, more extremely, 24 decibels per octave. 12 and 24 decibels correspond to levels of about 1/4 and 1/16."
                    },
                    "cutofffrequency": {
                        "label": "Filter Cutoff (Hz)",
                        "summary": "The filter cutoff frequency expressed in Hz (cycles per second). This parameter set to 1000 has exactly the same effect as the above parameter set to 3."
                    },
                    "units": {
                        "label": "Cutoff Units",
                        "summary": "The filter cutoff frequency can be expressed in Hz (menu set to Frequency) or power-of-10 (menu set to Logarithmic). It enables one of the next 2 Filter Cutoff parameters."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "resonance": {
                        "label": "Filter Resonance",
                        "summary": "Increasing the resonance will boost the loudness of the passed frequencies near the cutoff frequency."
                    }
                },
                "summary": "The Audio Filter CHOP removes low frequencies, high frequencies, both low and high, or removes a mid-frequency range."
            },
            "waveCHOP": {
                "label": "Wave",
                "parameters": {
                    "amp": {
                        "label": "Amplitude",
                        "summary": "The wave's value can be scaled."
                    },
                    "ramp": {
                        "label": "Ramp Slope",
                        "summary": "Then a ramp is added to the result with a slope of Ramp. The channel increases by the Ramp Slope value every Unit of time. For example, if Ramp is 1.2, the channel increases by 1.2 every second, in addition to the shape of the wave."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": "The right extend conditions (before/after range)."
                    },
                    "exprs": {
                        "label": "Expression",
                        "summary": "If the waveform type is Expression, the Expression parameter is used to input a math expression. Some local variables are available: $I (Index), $L (the loop variable over the period 0 to 1), $C (the cycle variable, the integer number of cycles the waveform has passed at the current index)."
                    },
                    "decayunit": {
                        "label": "Decay Rate Unit",
                        "summary": ""
                    },
                    "channelname": {
                        "label": "Channel Names",
                        "summary": "You can creates many channels with simple patterns like \\\"chan[1-20]\\\", which generates 20 channels from chan1 to chan20. See the section, Common CHOP Parameters for a description of this and all Options.  See Scope and Channel Name Matching Options."
                    },
                    "startunit": {
                        "label": "Start Unit",
                        "summary": ""
                    },
                    "period": {
                        "label": "Period",
                        "summary": "The period is the number of seconds, frames or samples that the waveform repeats in. It is expressed in the chop's Units (default is Seconds), found on the Common page."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "bias": {
                        "label": "Bias",
                        "summary": "You can vary the shape of some of the waveform types by changing the bias within the range -1 to +1."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "The sample rate of the channels, in samples per second."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "endunit": {
                        "label": "End Unit",
                        "summary": ""
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": "The left extend conditions (before/after range)."
                    },
                    "wavetype": {
                        "label": "Type",
                        "summary": "There is a choice of waveforms shapes:"
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": "The default value for extend conditions."
                    },
                    "decay": {
                        "label": "Decay Rate",
                        "summary": "The wave's amplitude can be reduced over time with an \\\"exponential decay\\\". For example, if the Decay is 0.2 and the Units are seconds, then the amplitude will decay to 0.8 after 1 second, and 0.8 of 0.8 (or 0.64) after 2 seconds."
                    },
                    "end": {
                        "label": "End",
                        "summary": "End of the interval, expressed in Units (seconds, frames or samples)."
                    },
                    "periodunit": {
                        "label": "Period Unit",
                        "summary": ""
                    },
                    "rampunit": {
                        "label": "Ramp Slope Unit",
                        "summary": ""
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "The waveform's value can be offset. A sine wave can remain always positive by setting Offset to 1."
                    },
                    "phase": {
                        "label": "Phase",
                        "summary": "The phase shifts the waveform in time, and is expressed as a fraction of a period, usually between 0 and 1."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "Start of the interval, expressed in Units (seconds, frames or samples)."
                    }
                },
                "summary": "The Wave CHOP makes repeating waves with a variety of shapes."
            },
            "dattoCHOP": {
                "label": "DAT to",
                "parameters": {
                    "rownameend": {
                        "label": "End Row  Name",
                        "summary": ""
                    },
                    "dat": {
                        "label": "DAT",
                        "summary": "The DAT to be used to retrieve values. This DAT should be in table format. For table format, use either a Table DAT or a Convert DAT set to To Table."
                    },
                    "colnameend": {
                        "label": "End Col Name",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "extractcols": {
                        "label": "Select Cols",
                        "summary": ""
                    },
                    "output": {
                        "label": "Output",
                        "summary": "Specify the form of the channels output."
                    },
                    "colnames": {
                        "label": "Col Select Values",
                        "summary": ""
                    },
                    "rowexpr": {
                        "label": "Row Select Condition",
                        "summary": "File:SelectDAT_rowselectexpr.png"
                    },
                    "rowindexstart": {
                        "label": "Start Row Index",
                        "summary": ""
                    },
                    "firstrow": {
                        "label": "First Row is",
                        "summary": "Specifies whether the first row is ignored, names, or values."
                    },
                    "colindexstart": {
                        "label": "Start Col Index",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "fromrow": {
                        "label": "From Row",
                        "summary": ""
                    },
                    "rownames": {
                        "label": "Row Select Values",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "fromcol": {
                        "label": "From Column",
                        "summary": ""
                    },
                    "colnamestart": {
                        "label": "Start Col Name",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "colexpr": {
                        "label": "Col Select Condition",
                        "summary": ""
                    },
                    "rowindexend": {
                        "label": "End Row Index",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "rownamestart": {
                        "label": "Start Row Name",
                        "summary": ""
                    },
                    "firstcolumn": {
                        "label": "First Column is",
                        "summary": "Specifies whether the first columnn is ignored, names, or values."
                    },
                    "extractrows": {
                        "label": "Select Rows",
                        "summary": ""
                    },
                    "colindexend": {
                        "label": "End Col Index",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The DAT to CHOP will create a set of CHOP channels with values derived from a DAT."
            },
            "joinCHOP": {
                "label": "Join",
                "parameters": {
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "cyclelen": {
                        "label": "Cycle Length",
                        "summary": "Enabled when Shortest Path Rotation Blending is turned on."
                    },
                    "match": {
                        "label": "Match by",
                        "summary": "Match channels between inputs by index or by name."
                    },
                    "blendbias": {
                        "label": "Bias",
                        "summary": "Which segment to favour when blending: the previous (-1), the next (+1) or neither (0)."
                    },
                    "blendmethod": {
                        "label": "Method",
                        "summary": "The blend method to produce a seamless sequence:"
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "blendregion": {
                        "label": "Region",
                        "summary": "The size of the blend region."
                    },
                    "shortrot": {
                        "label": "Shortest Path Rotation Blending",
                        "summary": "If enabled, compensates."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "stepscope": {
                        "label": "Step Scope",
                        "summary": "The names of channels that use Step."
                    },
                    "blendregionunit": {
                        "label": "Blend Region Unit",
                        "summary": ""
                    },
                    "step": {
                        "label": "Step",
                        "summary": "If set to 1, the next segment will be shifted up or down so that it begins where the last segment ended."
                    },
                    "transscopey": {
                        "label": "Translate Y Blend",
                        "summary": "The names of channels that will be translation-blended. Each string field contains a list of its component channels, such as *tx, *ty and *tz."
                    },
                    "blendfunc": {
                        "label": "Shape",
                        "summary": "The blend interpolation shape to use. See Shape in the Cycle CHOP."
                    },
                    "quatrot": {
                        "label": "Quaternion Blend",
                        "summary": "Use quaternion blending on rotation channels."
                    },
                    "blendscope": {
                        "label": "Blend Scope",
                        "summary": "The names of the channels that should be blended. Other channels will not be blended."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "transscopex": {
                        "label": "Translate X Blend",
                        "summary": "The names of channels that will be translation-blended. Each string field contains a list of its component channels, such as *tx, *ty and *tz."
                    },
                    "transscopez": {
                        "label": "Translate Z Blend",
                        "summary": "The names of channels that will be translation-blended. Each string field contains a list of its component channels, such as *tx, *ty and *tz."
                    },
                    "blendbyinput": {
                        "label": "First Input Specifies Blend Regions",
                        "summary": "When this is checked on, the first input can be a multi-channel input which specifies blend regions for the remaining inputs into the Join CHOP. Channel 1 of input0 is used to blend between input1 & input2, channel 2 between input2 & input3, and so on. If not enough channels are specified, the last channel is repeated."
                    },
                    "rotscope": {
                        "label": "Rotation Scope",
                        "summary": "Enabled when Shortest Path Rotation Blending is turned on."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Join CHOP takes all its inputs and appends one CHOP after another."
            },
            "oscoutCHOP": {
                "label": "OSC Out",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "Selects the network protocol to use. Refer to the Network Protocols article for more information."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "port": {
                        "label": "Network Port",
                        "summary": "The port which OSC Out will send packets to."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While On, the CHOP sends information to the network port. When Off, data is not sent."
                    },
                    "maxbytes": {
                        "label": "Max Message Bytes",
                        "summary": "Limits the size of the outgoing message packets and splits up the message accordingly."
                    },
                    "format": {
                        "label": "Data Format",
                        "summary": "Specify how to format the outgoing messages."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "maxsize": {
                        "label": "Max Queue Size",
                        "summary": "Specifies the maximum number of messages OSC Out will try to send at a single time."
                    },
                    "netaddress": {
                        "label": "Network Address",
                        "summary": "The network address of the server computer. This address is a standard WWW address, such as 'foo' or 'foo.bar.com'. You can put an IP address (e.g. 100.123.45.78). If you put \\\"localhost\\\", it means the other end of the pipe is on the same computer."
                    },
                    "maxsizeunit": {
                        "label": "Max Queue Size Unit",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "sendevents": {
                        "label": "Send Events Every Cook",
                        "summary": "When on, OSC Out will send all channels every cook regardless if the value has changed. When off, OSC Out only sends data which has changed."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "cookalways": {
                        "label": "Cook Every Frame",
                        "summary": "Specifies that this CHOP should be cooked every frame regardless of CHOPs below it are cooking."
                    },
                    "numericformat": {
                        "label": "Numeric Format",
                        "summary": ""
                    }
                },
                "summary": "The OSC Out CHOP sends all input channels to a specified network address and port."
            },
            "timelineCHOP": {
                "label": "Timeline",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "signature2": {
                        "label": "Signature 2",
                        "summary": "Output a channel for the second number in the timing signature, which kind of note constitutes one beat."
                    },
                    "rangestart": {
                        "label": "Range Start",
                        "summary": "Output a channel with the Range Start frame value."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "op": {
                        "label": "Reference Operator",
                        "summary": "This node is used to specify the time referenced by the Timeline CHOP. The time is defined by the Time COMP found at me.time"
                    },
                    "play": {
                        "label": "Play",
                        "summary": "Output a channel with the current play state."
                    },
                    "frame": {
                        "label": "Frame",
                        "summary": "Output a channel for frame number."
                    },
                    "bpm": {
                        "label": "BPM",
                        "summary": "Output a channel with the BPM value."
                    },
                    "end": {
                        "label": "End",
                        "summary": "Output a channel with the End frame value."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "Output a channel with the Start frame value."
                    },
                    "rangeend": {
                        "label": "Range End",
                        "summary": "Output a channel with the Range End frame value."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "rate": {
                        "label": "Rate",
                        "summary": "Output a channel for the rate (frames per second)."
                    },
                    "signature1": {
                        "label": "Signature 1",
                        "summary": "Output a channel for the first number in the timing signature, how many beats are in a measure."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Timeline CHOP outputs time-based CHOP channels for a specific component."
            },
            "fileoutCHOP": {
                "label": "File Out",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "write": {
                        "label": "Write",
                        "summary": "Click this button to write out a single frame."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "file": {
                        "label": "File",
                        "summary": "Sets the path and filename of the file that is saved out."
                    },
                    "interval": {
                        "label": "Interval",
                        "summary": "Sets the number of frames between each write of data into the file."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "When this parameter is set to 1, the file will be written to at the interval specified above."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The File Out CHOP writes CHOP channel data out to .chan files."
            },
            "pipeinCHOP": {
                "label": "Pipe In",
                "parameters": {
                    "mintarget": {
                        "label": "Minimum Target",
                        "summary": "The lower end of the queue target range. The Pipe In CHOP will try to maintain a queue length greater than or equal to this value."
                    },
                    "port": {
                        "label": "Server Port",
                        "summary": "The network port of the server."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "queued": {
                        "label": "Queued",
                        "summary": "When checked on, the network queuing is enabled. See the following parameters."
                    },
                    "echo": {
                        "label": "Echo Messages to Console",
                        "summary": "Print all incoming commands (not channel data) to the Console which can be opened from the Dialogs menu. A good way to test a connection is to put \\\"echo X\\\" commands in the incoming stream."
                    },
                    "reset": {
                        "label": "Reset Channels",
                        "summary": "Discards and clears all channels and incoming data."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Path to a DAT containing callbacks for each event received. See pipeinCHOP_Class for usage."
                    },
                    "adjusttime": {
                        "label": "Queue Adjust Time",
                        "summary": "Specifies how often to repeat/drop a samples in order to get closer to the queue target range. If the value = 1 and the units = seconds, then it will try to repeat/drop a sample once per second to maintain the queue target set in the Minimum Target and Maximum Target parameters above."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "mode": {
                        "label": "Connection Mode",
                        "summary": ""
                    },
                    "maxqueueunit": {
                        "label": "Max Queue Unit",
                        "summary": ""
                    },
                    "maxtarget": {
                        "label": "Maximum Target",
                        "summary": "The upper end of the queue target range. The Pipe In CHOP will try to maintain a queue length less than or equal to this value."
                    },
                    "maxtargetunit": {
                        "label": "Max Unit",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While On, the CHOP receives information from the pipe or server. While Off, no updating occurs. Data sent by a server is lost, but a pipe will store the data until Active is turned on again. If in Network mode, turning this parameter on initiates a connection, and turning it off breaks the connection."
                    },
                    "allowscripts": {
                        "label": "Allow Incoming Scripts",
                        "summary": "Incoming script commands will be ignored unless this parameter is turned On. Turning it Off is more secure."
                    },
                    "adjusttimeunit": {
                        "label": "Adjust Unit",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "mintargetunit": {
                        "label": "Min Unit",
                        "summary": ""
                    },
                    "maxqueue": {
                        "label": "Maximum Queue",
                        "summary": "The maximum size of the queue when full. Incoming samples will be dropped if the maximum queue is reached. This also affects the maximum number of script commands that can be queued up before they start gettting dropped."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "address": {
                        "label": "Server Address",
                        "summary": "The network address of the server computer. This address is a standard WWW address, such as 'foo' or 'foo.bar.com'. You can use an IP address (e.g. 100.123.45.78) or the computer's network name can be entered. If you put \\\"localhost\\\", it means the other end of the pipe is on the same computer."
                    }
                },
                "summary": "The Pipe In CHOP allows users to input from custom devices into CHOPs. It is implemented as a TCP/IP network connection."
            },
            "performCHOP": {
                "label": "Perform",
                "parameters": {
                    "mvreadahead": {
                        "label": "Movie Read Ahead Misses",
                        "summary": "How many times the movie read ahead failed to maintain the number of specified Read Ahead frames."
                    },
                    "cookstate": {
                        "label": "Cook State",
                        "summary": "Monitors which frames actually cooked. Pass the Perform CHOP to a Trail CHOP to properly see the trail of frames that did and did not cook. (It appears as always 1 because the viewer is displaying only the current frame and not frames it missed.)"
                    },
                    "batterytime": {
                        "label": "Battery Time",
                        "summary": "Estimated time remaining in battery charge. Only works if AC Line is disconnected and battery is not being charged."
                    },
                    "performfocus": {
                        "label": "Perform Window Focus",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "gpumemused": {
                        "label": "GPU Mem Used (MB)",
                        "summary": "Amount of GPU memory used (in megabytes)."
                    },
                    "msec": {
                        "label": "Frame Time",
                        "summary": "Amount of time each frame takes to cook in msec."
                    },
                    "cpumemused": {
                        "label": "CPU Mem Used (MB)",
                        "summary": "Amount of CPU memory used (in megabytes)."
                    },
                    "aclinestatus": {
                        "label": "AC Line Status",
                        "summary": "Indicates if the laptop's AC Charger is plugged in and active. 1 if AC line is detected, 0 otherwise."
                    },
                    "activeexpressions": {
                        "label": "Active Expressions",
                        "summary": ""
                    },
                    "totalops": {
                        "label": "Total OPs",
                        "summary": "Total number of OPs in the .toe file."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "performmode": {
                        "label": "Perform Mode",
                        "summary": "Monitors the state of Perform Mode."
                    },
                    "optimizedexpression": {
                        "label": "Optimized Expressions",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "cookrealtime": {
                        "label": "Cook Realtime",
                        "summary": "Monitors the state of the realtime flag, determining if TouchDesigner is running in realtime mode or not."
                    },
                    "timeslicestep": {
                        "label": "Time Slice Step",
                        "summary": "The number of frames that TouchDesigner stepped forward for the current cook. It's the length of the Time Slice in frames. It will be equal to 1 when the system is taking 1000/root.time.rate msec or less to complete one frame (16.666 msec for a rate of 60)."
                    },
                    "cookrate": {
                        "label": "Cookrate",
                        "summary": "The global target cook rate (frames per second) of the project. This is the frames per second of the root component, root.time.rate, typically 60, though due to frames taking too long to cook, the the actual frames per second may be lower."
                    },
                    "batterycharging": {
                        "label": "Battery Charging",
                        "summary": "Indicates if the battery is being charged. 1 if charging, 0 otherwise."
                    },
                    "batterylife": {
                        "label": "Battery Life",
                        "summary": "Indicated charge remaining in battery, 1 is battery full, 0 is battery empty."
                    },
                    "timeslicemsec": {
                        "label": "Time Slice Milliseconds",
                        "summary": "The length of the current Time Slice in milliseconds."
                    },
                    "fps": {
                        "label": "Frames per Second",
                        "summary": "The number of frames rendered in the last second."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "cachedexpressions": {
                        "label": "Expressions Using Cache",
                        "summary": ""
                    },
                    "activeops": {
                        "label": "Total Active OPs",
                        "summary": "How many OPs are actively cooking."
                    },
                    "totalgpumem": {
                        "label": "Total GPU Mem (MB)",
                        "summary": "Total amount of GPU memory available on the system (in megabytes)."
                    },
                    "deactivatedops": {
                        "label": "Total Deactivated OP Calls",
                        "summary": "Number of calls to cook a component that has its Cooking Flag turned off."
                    },
                    "cook": {
                        "label": "Cook",
                        "summary": "Is equal to 1 when a frame is cooked and equal to 0 when a frame is skipped.  It is often useful to view this channel in a Trail CHOP to see when frames are skipped (dropped)."
                    },
                    "droppedframes": {
                        "label": "Dropped Frames",
                        "summary": ""
                    },
                    "gputemp": {
                        "label": "GPU Temperature (Slow)",
                        "summary": "Monitors the temperature of the system's GPUs."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Perform CHOP outputs many channels like frames-per-second, describing the current state of the TouchDesigner process."
            },
            "audiofileinCHOP": {
                "label": "Audio File In",
                "parameters": {
                    "trimend": {
                        "label": "Trim End",
                        "summary": "Sets an Out point from the end of the audio, allowing you to trim the ending position of the audio stream. The units menu on the right let you specify this position by index, frames, or seconds."
                    },
                    "reloadpulse": {
                        "label": "Reload",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "cue": {
                        "label": "Cue",
                        "summary": "Jumps to Cue Point when set to 1. Only available when Play Mode is Sequential."
                    },
                    "speed": {
                        "label": "Speed",
                        "summary": "This is a speed multiplier which only works when Play Mode is Sequential. A value of 1 is the default playback speed. A value of 2 is double speed, 0.5 is half speed and so on. This node can not play audio backwards so negative values will not work well."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "Audio will playback when this is set to 1 and stop when set to 0."
                    },
                    "trimstart": {
                        "label": "Trim Start",
                        "summary": "Sets an In point from the beginning of the audio, allowing you to trim the starting position of the audio stream. The units menu on the right let you specify this position by index, frames, or seconds."
                    },
                    "prereadlengthunit": {
                        "label": "Pre-Read Length Unit",
                        "summary": ""
                    },
                    "playmode": {
                        "label": "Play Mode",
                        "summary": "Specifies the method used to playback the audio, there are 3 options."
                    },
                    "index": {
                        "label": "Index",
                        "summary": "This parameter explicitly sets the song position when Play Mode is set to Specify Index. The units menu on the right lets you specify the index in the following units: Index, Frames, or Seconds."
                    },
                    "volume": {
                        "label": "Volume",
                        "summary": "Set the level the file is read in at. A setting of 1 is full signal while 0 is muted."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "cuepointunit": {
                        "label": "Cue Point Unit",
                        "summary": ""
                    },
                    "mono": {
                        "label": "Mono",
                        "summary": "Output mono channel only even if file has multiple channels."
                    },
                    "cuepoint": {
                        "label": "Cue Point",
                        "summary": "Set any index in the song as a point to jump to."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "repeat": {
                        "label": "Repeat",
                        "summary": "Repeats the audio stream when the end is reached."
                    },
                    "file": {
                        "label": "File",
                        "summary": "Path of source."
                    },
                    "opentimeout": {
                        "label": "Open Timeout",
                        "summary": "The time (in milliseconds) TouchDesigner will wait for the audio file to open. If the Open Timeout time is reached, the Audio File In CHOP will stop waiting, and play silence. If the file still isn't opened the next time the CHOP cooks, it'll wait again, and do the same. It'll keep doing this until the file is opened, or the open fails."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "prereadlength": {
                        "label": "Pre-Read Length",
                        "summary": "The amount of audio to buffer to maintain smooth playback."
                    },
                    "trimstartunit": {
                        "label": "Trim Start Unit",
                        "summary": ""
                    },
                    "cuepulse": {
                        "label": "Cue Pulse",
                        "summary": ""
                    },
                    "trim": {
                        "label": "Trim",
                        "summary": "Enables the Trim parameters below."
                    },
                    "indexunit": {
                        "label": "Index Unit",
                        "summary": ""
                    },
                    "trimendunit": {
                        "label": "Trim End Unit",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Audio File In CHOP reads audio from files on disk or at http:// addresses."
            },
            "realsenseCHOP": {
                "label": "RealSense",
                "parameters": {
                    "sensor": {
                        "label": "Sensor",
                        "summary": "Select the device to use."
                    },
                    "smoothrad": {
                        "label": "Stabilize Radius",
                        "summary": ""
                    },
                    "smoothing": {
                        "label": "Smoothing",
                        "summary": "Enable smoothing the channel data."
                    },
                    "personscolorcenterpos": {
                        "label": "Persons Center-Mass Color Position",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "facebounds": {
                        "label": "Face Bounds",
                        "summary": ""
                    },
                    "faceexpressions": {
                        "label": "Face Expressions",
                        "summary": ""
                    },
                    "personscolorbounds": {
                        "label": "Persons Color Bounds",
                        "summary": ""
                    },
                    "handsrotation": {
                        "label": "Hands Rotation",
                        "summary": "Output the rotation values for the hand joints."
                    },
                    "fist": {
                        "label": "Fist",
                        "summary": "All fingers folded into a fist. The fist can be in different orientations as long as the palm is in the general direction of the camera."
                    },
                    "personsworldcenterpos": {
                        "label": "Persons Center-Mass World Position",
                        "summary": ""
                    },
                    "facelandmarkscolor": {
                        "label": "Face Landmarks Color Position",
                        "summary": "Output positions of the tracked facial landmarks in normalized image space."
                    },
                    "facerotation": {
                        "label": "Face Rotation",
                        "summary": ""
                    },
                    "fullpinch": {
                        "label": "Full Pinch",
                        "summary": "All fingers extended and touching the thumb. The pinched fingers can be anywhere between pointing directly to the screen or in profile."
                    },
                    "maxperson": {
                        "label": "Max Persons",
                        "summary": ""
                    },
                    "personsskelworldpos": {
                        "label": "Persons Skeleton World Position",
                        "summary": ""
                    },
                    "wave": {
                        "label": "Wave",
                        "summary": "An open hand facing the screen. The wave can include any number of repetitions."
                    },
                    "separatehands": {
                        "label": "Separate Hands",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "mode": {
                        "label": "Mode",
                        "summary": "Choose from Finger/Face or Marker Tracking."
                    },
                    "personsskelcolorpos": {
                        "label": "Persons Skeleton Color Position",
                        "summary": ""
                    },
                    "handsworldpos": {
                        "label": "Hands World Position",
                        "summary": "Output positions of the tracked hand joints in world space. Values given in meters relative to the camera."
                    },
                    "thumbs": {
                        "label": "Thumb Up/Down",
                        "summary": "Tnumbs up and thumbs down gestures."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "active": {
                        "label": "Active",
                        "summary": ""
                    },
                    "spreadfingers": {
                        "label": "Spread Fingers",
                        "summary": "Hand open, facing the camera."
                    },
                    "smoothtype": {
                        "label": "Smoothing Type",
                        "summary": "The type of smoothing to apple."
                    },
                    "vsign": {
                        "label": "V Sign",
                        "summary": "Hand closed with index finger and middle finger pointing up."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "weights": {
                        "label": "Number of Weights",
                        "summary": "The number of weighted samples to use for weighted smoothing."
                    },
                    "swipe": {
                        "label": "Swipe",
                        "summary": "The down/up/left/right swipes as described in the SDK documentation."
                    },
                    "facelandmarksworld": {
                        "label": "Face Landmarks World Position",
                        "summary": "Output positions of tracked facial landmarks in world space. Values given in meters relative to the camera."
                    },
                    "handscolorpos": {
                        "label": "Hands Color Position",
                        "summary": "Output positions of the tracked hand joints in normalized color image space."
                    },
                    "click": {
                        "label": "Click",
                        "summary": "Open hand facing the camera, moves the index finger quickly toward the palm center."
                    },
                    "model": {
                        "label": "Model",
                        "summary": "Select the model of device to use, F200, R200, or SR300."
                    },
                    "smoothstrength": {
                        "label": "Smoothing Strength",
                        "summary": "Controls the amount of smoothing to apply."
                    },
                    "tap": {
                        "label": "Tap",
                        "summary": "A hand in a natural relaxed pose is moved forward as if pressing a button."
                    },
                    "faceworldpos": {
                        "label": "Face World Position",
                        "summary": ""
                    },
                    "markertop": {
                        "label": "Marker Image TOP",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "twofingerpinch": {
                        "label": "Two Finger Pinch",
                        "summary": "Hand open with thumb and index finger touching each other."
                    }
                },
                "summary": "The RealSense CHOP outputs position and rotation data from Intel's RealSense camera."
            },
            "audiodynamicsCHOP": {
                "label": "Audio Dynamics",
                "parameters": {
                    "releasecompressor": {
                        "label": "Release (msec=10**val)",
                        "summary": "The release will control how quickly the compressor responds when a signal drops to a lower level, or goes below the threshold altogether. Just like the attack, higher value will slow down the response, but too high of a value will be too slow."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "ratiocompressor": {
                        "label": "Ratio",
                        "summary": "The ratio is the amount of compression that will be applied to the signal, with respect to how far the signal has gone past the threshold value. A ratio of '0' will apply no compression. A value of '1' will cause a signals amplitude to be held down to the threshold value. With values over '1', the signal will become quieter as it passes the threshold."
                    },
                    "drywet": {
                        "label": "Dry / Wet Mix",
                        "summary": "As this parameter is reduced from 1 (Wet) toward 0 (Dry), it removes the effect of the filter."
                    },
                    "chanlinkinglim": {
                        "label": "Channel Linking",
                        "summary": "Same as compressor."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "compressiontype": {
                        "label": "Compression Type",
                        "summary": "Determines which compression method to use."
                    },
                    "kneelimiter": {
                        "label": "Knee",
                        "summary": "Similar to the compressor, this parameter controls how the CHOP will transition into limiting, when a signal becomes louder. A larger knee will mean a smoother transition. See the Knee diagram above. If set to '0', no limiting will be applied until a signal goes over the threshold value. When increasing the knee parameter, some limiting will be applied before a signal goes beyond the threshold value, in an attempt to smooth out the effects of limiting overall."
                    },
                    "chanlinkingcomp": {
                        "label": "Channel Linking",
                        "summary": "As various channels come into the CHOP, they can either be compressed by an equal amount, or individually.  If they are compressed equally, all of the channels will be evaluated for the highest peak value, and this value will be used to determine the compression amount. If they are compressed separately, each channel will be evaluated and compressed by different amounts."
                    },
                    "attackcompressor": {
                        "label": "Attack (msec=10**val)",
                        "summary": "The attack will control how quickly the compressor responds when a signal crosses the threshold.  Increasing the attack parameter will cause the compressor to apply compression at a slower and smoother rate. Increasing the parameter too much, will cause compression to be applied too slowly."
                    },
                    "releaselimiter": {
                        "label": "Release (msec=10**val)",
                        "summary": "Although the attack of a limiter is always quick, the release can still be set by the user. This will determine how long the limiter takes to transition out of a limiting situation. Increasing the release will help smooth out the effect of the limiter. Too high of a value may cause the limiter to release too slowly.  For example, after an excessively loud tone burst, the limiter's gain may have been pushed up to an extreme value. This extreme value will take a long time to be fully released.  Each channel can be different by putting expressions with the channel index, me.channelIndex in parameters like the frequency channel."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "thresholdcompressor": {
                        "label": "Threshold (dB)",
                        "summary": "This parameter sets the threshold value which a signal must cross before compression is applied. It uses a decibel scale, where '0 decibels' would be considered the loudest possible signal*, and '-60 decibels' would be nearly inaudible. This is assuming that input signals are normalized to a \\\"-1 to +1\\\" range."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "kneecompressor": {
                        "label": "Knee",
                        "summary": "The knee defines how the CHOP will transition into compression as signals approach or cross the threshold. With a knee of '0' (a hard knee), think of the compressor as applying a flat compression response, where: compression_gain(db) = amount_that_signal_has_crossed_threshold(dB) * compression_ratio This type of compression is not always desirable, as it can have a strong effect upon the dynamics of a sound. Increasing the knee parameter will cause there to be a smoothed transition into the compression. See the Knee diagram below.  300px"
                    },
                    "enablelimiter": {
                        "label": "Enable Limiter",
                        "summary": "Turns the limiter on or off."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "inputgain": {
                        "label": "Input Gain (dB)",
                        "summary": "This parameter controls the volume of the channel before it reaches the compressor.  If the signal to be compressed is not in a useful dynamic range, this parameter can be used to repair it."
                    },
                    "enablecompressor": {
                        "label": "Enable Compressor",
                        "summary": "Turns the compressor on or off."
                    },
                    "thresholdlimiter": {
                        "label": "Threshold (dB)",
                        "summary": "This is the threshold value which a signal must cross before limiting is applied. Usually, this value should be left at '0' decibels. Just like the compressor, a value of '0' decibels is considered to be the loudest possible signal.   From the perspective of digital audio, a signal level which varies between \\\"+1 <-> -1\\\" is at a volume level of \\\"0\\\" decibels, because it is not possible for a digital system to respresent any values larger than \\\"+1 <-> -1\\\".  Instead, they will simply be clipped as they proceed to the output device. The limiter allows you to stop your audio from being clipped if you exceed this range, and applies a much smoother form of fast compression, which is barely audible. Lowering the threshold value will cause the output to be clamped to a lower level."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "gaincompressor": {
                        "label": "Output Gain (dB)",
                        "summary": "After applying compression, the signal can be reduced with Gain to a lower volume level. To make up the lost volume, this parameter can be increased."
                    }
                },
                "summary": "The Audio Dynamics CHOP is designed to control the dynamic range of an audio signal."
            },
            "oculusaudioCHOP": {
                "label": "Oculus Audio",
                "parameters": {
                    "roomsize": {
                        "label": "Room Size",
                        "summary": ""
                    },
                    "roomleftrelfect": {
                        "label": "Room Left Reflect",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "reflectrevert": {
                        "label": "Reflections and Reverb",
                        "summary": ""
                    },
                    "roomtoprelfect": {
                        "label": "Room Top Reflect",
                        "summary": ""
                    },
                    "sourceobject": {
                        "label": "Source Object COMP",
                        "summary": ""
                    },
                    "diameter": {
                        "label": "Diameter",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "roombackrelfect": {
                        "label": "Room Back Reflect",
                        "summary": ""
                    },
                    "attenuationscale": {
                        "label": "Attenuation Scale",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": ""
                    },
                    "attenuation": {
                        "label": "Attenuation",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "boxroommode": {
                        "label": "Box Room Mode",
                        "summary": ""
                    },
                    "roomrightrelfect": {
                        "label": "Room Right Reflect",
                        "summary": ""
                    },
                    "headobject": {
                        "label": "Head Object COMP",
                        "summary": ""
                    },
                    "roomfrontrelfect": {
                        "label": "Room Front Reflect",
                        "summary": ""
                    },
                    "bandhint": {
                        "label": "Band Hint",
                        "summary": ""
                    },
                    "roombottomrelfect": {
                        "label": "Room Bottom Reflect",
                        "summary": ""
                    },
                    "maxrange": {
                        "label": "Maximum Range",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "minrange": {
                        "label": "Minimum Range",
                        "summary": ""
                    }
                },
                "summary": "The Oculus Audio CHOP uses the Oculus Audio SDK to take a mono sound channel and create a spatialized stereo pair or channels for that sound."
            },
            "interpolateCHOP": {
                "label": "Interpolate",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "overlap": {
                        "label": "Overlap Priority",
                        "summary": "If an input is not a single frame, and if there are overlaps in the input CHOPs, an option is used to resolve the conflict."
                    },
                    "blendfunc": {
                        "label": "Shape",
                        "summary": "The shape of the interpolation curve:"
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "match": {
                        "label": "Match by",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Interpolate CHOP treats its multiple-inputs as keyframes and interpolates between them."
            },
            "audiomovieCHOP": {
                "label": "Audio Movie",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "syncoffsetunit": {
                        "label": "Audio Sync Offset Unit",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "syncoffset": {
                        "label": "Audio Sync Offset",
                        "summary": "Offsets the audio playback of the movie. This can be used to get better sync between the audio and images in the movie when there is audio latency in the system (For example, audio latency from the Audio Device Out CHOP queue)."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "Audio playback is enabled when this is set to On. No audio output when Off."
                    },
                    "moviefileintop": {
                        "label": "Movie File In TOP",
                        "summary": "Put the path of a Movie File In TOP in this parameter. The file named in the Movie File In TOP will be the source for the audio."
                    },
                    "prereadlength": {
                        "label": "Pre-Read Length",
                        "summary": "Use to read-ahead the audio into cache. You can specify in samples, frames and in seconds using the Units menu."
                    },
                    "prereadlengthunit": {
                        "label": "Pre-Read Length Unit",
                        "summary": ""
                    },
                    "index": {
                        "label": "Index Channel",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "opentimeout": {
                        "label": "Open Timeout",
                        "summary": "The amount of time TouchDesigner will wait for the audio samples to be read from the movie file. On file opening, if this timeout period is reached and the read-ahead has not finished, the audio will be output as zeros until all the pre-read samples have been read from the file."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Audio Movie CHOP plays the audio of a movie file that is played back with a Movie File In TOP."
            },
            "audiooscillatorCHOP": {
                "label": "Audio Oscillator",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "This button resets the channel(s) to 0."
                    },
                    "wavetype": {
                        "label": "Type",
                        "summary": "The shape of the waveform to repeat, unless overridden by the Playback Source:"
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "resetcondition": {
                        "label": "Reset Condition",
                        "summary": "This menu determines how the Reset input triggers a reset of the channel(s)."
                    },
                    "bias": {
                        "label": "Bias",
                        "summary": "Shape control for Triangle, Gaussian and Square waves. For triangle waves, it moves the peak. For square waves, it alters the width of the peak. Zero means no bias."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Values output from the CHOP can have an offset added to them."
                    },
                    "smooth": {
                        "label": "Smooth Pitch Changes",
                        "summary": "If the Pitch Control channel input to the Audio Oscillator CHOP is rising and is running at the Touch default of 60 frames per second, then the pitch will hold for 1/60 second before stepping up for another 1/60 second. This is an audible step. With this option On, the pitch rises for every audio sample, giving perfectly smooth glissando at extra compute cost."
                    },
                    "octave": {
                        "label": "Units per Octave",
                        "summary": "Amount that the Pitch Control needs to increase by to raise the pitch by one octave. The default of 1 means that Pitch Control of 1 raises the pitch by 1 octave. Units per Octave of .08333 means that a Pitch Control of 3 raises the pitch by a factor of 3 x .08333 (three semitones). This is suitable for using MIDI note numbers as pitch control."
                    },
                    "phase": {
                        "label": "Phase",
                        "summary": "A value of .5 is a phase shift of 180 degrees, or one half cycle."
                    },
                    "frequency": {
                        "label": "Base Frequency",
                        "summary": "The cycles per second when the Pitch Control is zero."
                    },
                    "amp": {
                        "label": "Amplitude",
                        "summary": "Values output from the CHOP can be scaled."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": ""
                    }
                },
                "summary": "The Audio Oscillator CHOP generates sounds in three ways."
            },
            "outCHOP": {
                "label": "Out",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "label": {
                        "label": "Label",
                        "summary": "Creates a pop-up label when the cursor rolls over this Component output."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Out CHOP sends CHOP data from inside a components to other components or CHOPs."
            },
            "lfoCHOP": {
                "label": "LFO",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "This button resets the channel(s) to 0."
                    },
                    "play": {
                        "label": "Play",
                        "summary": ""
                    },
                    "wavetype": {
                        "label": "Type",
                        "summary": "The shape of the waveform to repeat, unless overridden by the Source Wave:"
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "channelname": {
                        "label": "Channel Name",
                        "summary": "A list of the names of the channels. You can put patterns like chan[1-10] to generate 10 channels. See Pattern Expansion.  Each channel can be different by putting the channel index variable, $C in parameters like the frequency channel."
                    },
                    "bias": {
                        "label": "Bias",
                        "summary": "Shape control for Triangle, Gaussian and Square waves. For triangle waves, it moves the peak. For square waves, it alters the width of the peak. Zero means no bias."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Values output from the CHOP can have an offset added to them."
                    },
                    "phase": {
                        "label": "Phase",
                        "summary": "A value of .5 is a phase shift of 180 degrees, or one half cycle."
                    },
                    "resetcondition": {
                        "label": "Reset Condition",
                        "summary": "This menu determines how the Reset input triggers resetting the channel(s)."
                    },
                    "frequency": {
                        "label": "Frequency",
                        "summary": "The cycles per second of the oscillation. When the Octave Control input is connected, it alters the frequency exponentially."
                    },
                    "amp": {
                        "label": "Amplitude",
                        "summary": "Values output from the CHOP can be scaled."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "The sample rate of the CHOP. The default sample rate is 60 samples per second."
                    }
                },
                "summary": "The LFO CHOP (low frequency oscillator) generates waves in real-time in two ways."
            },
            "keyframeCHOP": {
                "label": "Keyframe",
                "parameters": {
                    "animation": {
                        "label": "Animation Component",
                        "summary": "The path to the Animation Component holding the channel and key data."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": "The left extend conditions (before range)."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": "The right extend conditions (after range)."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "The sample rate of the channels, in samples per second."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": "The default value for extend conditions."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Keyframe CHOP uses channel and keys data in an Animation COMP and creates channels of samples at a selectable sample rate (frames per second)."
            },
            "shiftCHOP": {
                "label": "Shift",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "endunit": {
                        "label": "End Unit",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "relative": {
                        "label": "Unit Values",
                        "summary": "Determines how the Start and End parameters are to be interpreted:"
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "end": {
                        "label": "End",
                        "summary": "The end of the interval, absolute or relative to the input CHOP."
                    },
                    "startunit": {
                        "label": "Start Unit",
                        "summary": ""
                    },
                    "start": {
                        "label": "Start",
                        "summary": "The start of the interval, absolute or relative to the input CHOP."
                    },
                    "scroll": {
                        "label": "Scroll Offset",
                        "summary": "Without changing the length of the CHOP, you can scroll the channels within its range, and scroll each channel a different amount. By using $C in the parameter, you can make the scroll amount dependent on the channel index."
                    },
                    "reference": {
                        "label": "Reference",
                        "summary": "The start or the end of the channels can be used as the reference position. The channels are shifted by altering the reference position."
                    },
                    "scrollunit": {
                        "label": "Scroll Offset Unit",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    }
                },
                "summary": "The Shift CHOP time-shifts a CHOP, changing the start and end of the CHOP's interval. However, the contents of the channels remain the same."
            },
            "midioutCHOP": {
                "label": "MIDI Out",
                "parameters": {
                    "barname": {
                        "label": "Bar Ramp Name",
                        "summary": "Clock ticks frequency is determined by the period of the ramp. The ramp must be 0 to 1. An incoming channel name for a 0 to 1 ramp over each 4-beat bar."
                    },
                    "device": {
                        "label": "Device Table",
                        "summary": ""
                    },
                    "prefix": {
                        "label": "Channel Prefix",
                        "summary": "The prefix string that all input channels must have in order to extract the channel number from their name (i.e. \\\"ch1note44\\\", with a channel prefix of \\\"ch\\\")."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "reset": {
                        "label": "All Notes Off",
                        "summary": "Sends an All Notes Off message to all MIDI channels."
                    },
                    "pitchname": {
                        "label": "Pitch Wheel Name",
                        "summary": "The name of the pitch wheel channel."
                    },
                    "notenorm": {
                        "label": "Normalize",
                        "summary": "Values in the range 0-1 are mapped to MIDI value 0-127."
                    },
                    "aftername": {
                        "label": "Aftertouch Name",
                        "summary": "The name of the aftertouch channel."
                    },
                    "id": {
                        "label": "Device ID",
                        "summary": ""
                    },
                    "volumeoff": {
                        "label": "All Volume Off",
                        "summary": "Sends an All Notes Off message to all MIDI channels."
                    },
                    "progname": {
                        "label": "Program Change",
                        "summary": "The name of the program change channel."
                    },
                    "controlname": {
                        "label": "Controller Name",
                        "summary": "The base name of the controller channels."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "barticks": {
                        "label": "Ticks per Bar",
                        "summary": "Default is 96 = 4 beats * 24 ticks per beat."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "onebased": {
                        "label": "One Based Index",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": ""
                    },
                    "file": {
                        "label": "MIDI File",
                        "summary": "The filename of the output MIDI file."
                    },
                    "notename": {
                        "label": "Note Name",
                        "summary": "The base name of the note channels. If input channels have a number after the name, it is assumed to be the note number. If not, the channel value is assumed to contain the note number."
                    },
                    "controlnorm": {
                        "label": "Normalize",
                        "summary": "Maps channel values from different ranges to 0-127."
                    },
                    "pressname": {
                        "label": "Pressure Name",
                        "summary": "The name of the channel pressure channel."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "startstop": {
                        "label": "Send Start/Stop/Continue Events",
                        "summary": "Sends the appropriate events when the framebar starts or stops.  ---- not implemented: ----"
                    },
                    "controlformat": {
                        "label": "Controller Format",
                        "summary": "Sends 7 or 14 bit controller events."
                    },
                    "volumeon": {
                        "label": "All Volume On",
                        "summary": "Sends an All Notes On message to all MIDI channels."
                    },
                    "destination": {
                        "label": "MIDI Destination",
                        "summary": "Where the MIDI events are sent to. MIDI Mapper is the default destination."
                    },
                    "autonoteoff": {
                        "label": "Automatic Note Off",
                        "summary": "A MIDI 'All Note Off' event can be sent upon the start and/or end of the output."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "cookalways": {
                        "label": "Cook Every Frame",
                        "summary": "Forces a cook of the CHOP every frame. It should be On because the MIDI Out CHOP will otherwise only cook if the CHOP leads to a graphics display viewer. You want it to cooks whether you are displaying anything or not."
                    },
                    "writefile": {
                        "label": "Write MIDI File",
                        "summary": "Writes all the data to a MIDI file."
                    }
                },
                "summary": "The MIDI Out CHOP sends MIDI events to any available MIDI devices when its input channels change."
            },
            "panelCHOP": {
                "label": "Panel",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "queuesize": {
                        "label": "Queue Size",
                        "summary": "Size of queue. If the number of events is larger than the queue size, earlier events will be discarded."
                    },
                    "select": {
                        "label": "Select",
                        "summary": "Specify which panel values to create channels for. Use * to select all panel values. Add individual values using the drop down menu on the right."
                    },
                    "rename": {
                        "label": "Rename",
                        "summary": "Rename the panel value channels selected with the Select parameter here. For example, if \\\"u v\\\" are selected in the Select parameter, you can rename these channels to horizonal and vertical by entering \\\"horizontal vertical\\\"."
                    },
                    "queue": {
                        "label": "Queue Overlapping Events",
                        "summary": "Queue all events that occur in a time slice. Some panel values, such as wheel or key, switches between a value and 0 in the same time slice and are considered instantaneous. When this parameter is off, only the last value in the time slice will be used, and changes could be missed. Turning this on will keep as many events as possible based on queue size. Each queued item will be released in the next time slice until the queue is empty, and value changes within the same time slice are synchronized."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "component": {
                        "label": "Component",
                        "summary": "The path of the Component being referenced."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Panel CHOP reads Panel Values from Panel Components into CHOP channels."
            },
            "lagCHOP": {
                "label": "Lag",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "lagunit": {
                        "label": "Lag Unit",
                        "summary": ""
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "overshootunit": {
                        "label": "Overshoot Unit",
                        "summary": ""
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "Resets the lag."
                    },
                    "aclamp": {
                        "label": "Clamp Acceleration",
                        "summary": "Clamps the acceleration to lie between the values listed in Max Acceleration below. Acceleration is expressed as value/(Units*2) ."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "clamp": {
                        "label": "Clamp Slope",
                        "summary": "Clamps the slope (or velocity) to lie between the values listed in Max Slope below. Slope is expressed as value/Units."
                    },
                    "lagmethod": {
                        "label": "Method",
                        "summary": "The method by which lag is applied to the channels."
                    },
                    "overshoot": {
                        "label": "Overshoot",
                        "summary": "Applies overshoot to a channel. The first value is for overshoot while moving up, and the second is for overshoot while moving down."
                    },
                    "lagsamples": {
                        "label": "Lag per Sample",
                        "summary": "Applies the lag to each sample of the channel instead of across the whole channel. Useful for working with multi-sample channels."
                    },
                    "lag": {
                        "label": "Lag",
                        "summary": "Applies a lag to a channel. The first value is for lagging up, and the second is for lagging down. It is approximately the time that the output follows 90% of a change to the input."
                    },
                    "slope": {
                        "label": "Max Slope",
                        "summary": "The first value limits the slope when it is rising, and the second value limits the slope when it is decreasing."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "accel": {
                        "label": "Max Acceleration",
                        "summary": "The first value limits the acceleration when it is rising, and the second value limits the acceleration when it is decreasing."
                    }
                },
                "summary": "The Lag CHOP adds lag and overshoot to channels."
            },
            "lookupCHOP": {
                "label": "Lookup",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "cyclic": {
                        "label": "Cyclic Range",
                        "summary": "Adapts the range of the Lookup Table (2nd input) for cyclic or non-cyclic input indices. When using a cyclic input index (1st input), the lookup value for index 0.0 and 1.0 result in the same value. To avoid this, set Cyclic Range to Yes and the lookup will cycle smoothly."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "index": {
                        "label": "Index Range",
                        "summary": "The Index Range maps the index channel's values to the lookup table's start and end and defaults to 0 and 1. The first parameter represents the start of the lookup table. When the index channel has this value, it will index the start of the lookup table. The second parameter represents the end of the lookup table and behaves in the same way."
                    },
                    "match": {
                        "label": "Match by",
                        "summary": "Determines how index channels are matched with a lookup channel in 'One Lookup Table Channel' mode."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "chanmatch": {
                        "label": "Per Index Channel",
                        "summary": "Determines how index channels are mapped to lookup Channel tables."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "interp": {
                        "label": "Interpolate",
                        "summary": "When on, the input can be interpolated between samples. When off, the nearest sample is used."
                    }
                },
                "summary": "The Lookup CHOP outputs values from a lookup table."
            },
            "crossCHOP": {
                "label": "Cross",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "cross": {
                        "label": "Cross",
                        "summary": "This parameter controls the blending of the inputs. A value of 0 will select the first input, 1 will select the second input, 2 will select the third and so on. Using inbetween values will blend the 2 closest inputs. For example; 1.5 will add 50% of input2 and 50% of input3 to the result; 0.75 will add 25% of input1 and 75% of input2 to the result."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Cross CHOP is a multi input OP that blends between 2 inputs at a time."
            },
            "shuffleCHOP": {
                "label": "Shuffle",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "nval": {
                        "label": "N Value",
                        "summary": "The value of N for Sequence: Every Nth Channel, Sequence N Channels, Split N Samples and Split Every Nth Sample."
                    },
                    "firstsample": {
                        "label": "Use First Sample Only",
                        "summary": "Just use the first sample of each channel."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "Chooses the operation \\\"shuffle\\\" performs:"
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Shuffle CHOP reorganizes the samples in a set of channels."
            },
            "cycleCHOP": {
                "label": "Cycle",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "before": {
                        "label": "Cycles Before",
                        "summary": "The number of cycles to loop before the input CHOP. This parameter can be fractional."
                    },
                    "blendregionunit": {
                        "label": "Blend Region Units",
                        "summary": ""
                    },
                    "step": {
                        "label": "Step",
                        "summary": "If set to 1, the next cycle will be shifted up or down in value, so that it begins where the last cycle ended. Suitable for the root object of walk cycles."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "mirror": {
                        "label": "Mirror Cycles",
                        "summary": "If enabled, consecutive cycles are mirror images (reversed) of each another. The first cycle is never mirrored."
                    },
                    "blendfunc": {
                        "label": "Shape",
                        "summary": "The shape of the blending function:"
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "blendbias": {
                        "label": "Bias",
                        "summary": "The bias of the blend. A -1 biases the blend toward the beginning of the blend region, 0 is no bias and +1 biases towards the end of the blend region."
                    },
                    "after": {
                        "label": "Cycles After",
                        "summary": "The number of cycles to loop after the input CHOP. This parameter can be fractional."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "blendmethod": {
                        "label": "Method",
                        "summary": "How to blend between cycles:"
                    },
                    "extremes": {
                        "label": "Blend Start to End",
                        "summary": "If on, the end of the CHOP is blended into the start of the CHOP to produce a smooth loop. If Cycles Before and Cycles After are 0, Region is non-zero, and Extend Conditions are \\\"Cycle\\\", it loops smoothly forever."
                    },
                    "stepscope": {
                        "label": "Step Scope",
                        "summary": "The names of those channels that will be affected by the Step parameter."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "blendregion": {
                        "label": "Region",
                        "summary": "The size of the blend region, in either seconds, samples or frames (set with Units in the Common page)."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Cycle CHOP creates cycles. It can repeat the channels any number of times before and after the original."
            },
            "mathCHOP": {
                "label": "Math",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "preop": {
                        "label": "Channel Pre OP",
                        "summary": "Unary operations can be performed on individual channels. A menu of unary operations (as described above) that are performed on each channel as it comes in to the Math CHOP include:"
                    },
                    "align": {
                        "label": "Align",
                        "summary": "How to align channels from different inputs. See Align Option."
                    },
                    "gain": {
                        "label": "Multiply",
                        "summary": "Then multiply by this value."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "postop": {
                        "label": "Channel Post OP",
                        "summary": "A menu (same as Channel Pre OP) is performed as the finale stage upon the channels resulting from the above operations."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "torange": {
                        "label": "To Range",
                        "summary": "Another way to multiply/add. Converts from one low-high range to another range."
                    },
                    "fromrange": {
                        "label": "From Range",
                        "summary": "Another way to multiply/add. Converts from one low-high range to another range."
                    },
                    "integer": {
                        "label": "Integer",
                        "summary": "The resulting values can be converted to integer. The Tscript ceil(), floor() and round() expressions do the same."
                    },
                    "postoff": {
                        "label": "Post-Add",
                        "summary": "Then add this value."
                    },
                    "chanop": {
                        "label": "Combine Channels",
                        "summary": "A choice of operations is performed between the channels of an input CHOP, for each input. The Nth sample of one channel is combined with the Nth sample of other channels:"
                    },
                    "preoff": {
                        "label": "Pre-Add",
                        "summary": "First, add the value to each sample of each channel."
                    },
                    "match": {
                        "label": "Match by",
                        "summary": "Match channels between inputs by name or number."
                    },
                    "chopop": {
                        "label": "Combine CHOPs",
                        "summary": "A menu of operations that is performed between the input CHOPs, combining several CHOPs into one."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Math CHOP performs arithmetic operations on channels. The channels of a CHOP can be combined into one channel, and several CHOPs can be combined into one CHOP."
            },
            "scriptCHOP": {
                "label": "Script",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "setuppars": {
                        "label": "Setup Parameters",
                        "summary": "Clicking the button runs the setupParameters() callback function."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Specifies the DAT which holds the callbacks."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Script CHOP runs a script each time the Script CHOP cooks."
            },
            "overrideCHOP": {
                "label": "Override",
                "parameters": {
                    "indexname": {
                        "label": "Channel Name",
                        "summary": "Specifies the name of the index channel. Only used if the Create Input Index checkbox is selected."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "makeindex": {
                        "label": "Create Input Index",
                        "summary": "Creates a channel (specified by the Channel Name parameter below) that is an index indicating which input has the most recently changed channel."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "match": {
                        "label": "Match by",
                        "summary": "Monitors the channels in each input and matches them according to this menu."
                    },
                    "cookmonitor": {
                        "label": "Monitor on Input Cooks",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Override CHOP lets you take inputs from several CHOP sources, and uses the most-recently changed input channels to determine the output."
            },
            "logicCHOP": {
                "label": "Logic",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "preop": {
                        "label": "Channel Pre OP",
                        "summary": "Once converted by the Convert Input stage, Channel Pre OP defines a unary operation on each input sample:"
                    },
                    "align": {
                        "label": "Align",
                        "summary": "Inputs that don't start at the same frame can be aligned. Se the section, Align Options."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "convert": {
                        "label": "Convert Input",
                        "summary": "This menu determines the method to convert inputs to binary:"
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "bound": {
                        "label": "Bounds",
                        "summary": "Set lower and upper bounds for when Convert Input is set to Off When Outside Bounds."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "chanop": {
                        "label": "Combine Channels",
                        "summary": "Takes the first input and combines its channels, then the second input and combines its channels, and so on."
                    },
                    "match": {
                        "label": "Match by",
                        "summary": "Channels are matched between inputs by Channel Name or Channel Number."
                    },
                    "chopop": {
                        "label": "Combine CHOPs",
                        "summary": "Combine CHOPs combines the first channels of each CHOP, the second channels of each CHOP, etc.. Channels between inputs can be combined by number or name. Combining (Logic) Operations are:"
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    }
                },
                "summary": "The Logic CHOP first converts channels of all its input CHOPs into binary (0 = off, 1 = on) channels and then combines the channels using a variety of logic operations."
            },
            "constantCHOP": {
                "label": "Constant",
                "parameters": {
                    "name35": {
                        "label": "",
                        "summary": ""
                    },
                    "name10": {
                        "label": "",
                        "summary": ""
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": "The left extend conditions (before range)."
                    },
                    "name30": {
                        "label": "",
                        "summary": ""
                    },
                    "value20": {
                        "label": "",
                        "summary": ""
                    },
                    "name38": {
                        "label": "",
                        "summary": ""
                    },
                    "name26": {
                        "label": "",
                        "summary": ""
                    },
                    "name1": {
                        "label": "",
                        "summary": ""
                    },
                    "startunit": {
                        "label": "Start Unit",
                        "summary": ""
                    },
                    "value27": {
                        "label": "",
                        "summary": ""
                    },
                    "value6": {
                        "label": "",
                        "summary": ""
                    },
                    "value13": {
                        "label": "",
                        "summary": ""
                    },
                    "value18": {
                        "label": "",
                        "summary": ""
                    },
                    "name4": {
                        "label": "",
                        "summary": ""
                    },
                    "name34": {
                        "label": "",
                        "summary": ""
                    },
                    "name17": {
                        "label": "",
                        "summary": ""
                    },
                    "name27": {
                        "label": "",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "value32": {
                        "label": "",
                        "summary": ""
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": "The default value used when one of the Extend parameters is set to Default Value."
                    },
                    "name20": {
                        "label": "",
                        "summary": ""
                    },
                    "name15": {
                        "label": "",
                        "summary": ""
                    },
                    "value30": {
                        "label": "",
                        "summary": ""
                    },
                    "name9": {
                        "label": "",
                        "summary": ""
                    },
                    "name16": {
                        "label": "",
                        "summary": ""
                    },
                    "name5": {
                        "label": "",
                        "summary": ""
                    },
                    "current": {
                        "label": "Active Needs Current",
                        "summary": "This is used with the second input as described above, when you want to add a displacement to channels by using external devices or sources. : When Active Needs Current is On, the second CHOP input (the Active input) has an effect only if the Constant CHOP is the current CHOP.  : When Active Needs Current is Off, the Constant CHOP is affected any time the Active input is on (greater than 0).  : This is used by the Channel Editor when editing keyframes using CHOPs. An input device like a button in the Keyboard In CHOP or a MIDI keyboard can be fed to the Active input of many Constant CHOPs. Only the current CHOP will be affected if this option is On."
                    },
                    "name25": {
                        "label": "",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "name12": {
                        "label": "",
                        "summary": ""
                    },
                    "name23": {
                        "label": "",
                        "summary": ""
                    },
                    "name14": {
                        "label": "",
                        "summary": ""
                    },
                    "value17": {
                        "label": "",
                        "summary": ""
                    },
                    "value36": {
                        "label": "",
                        "summary": ""
                    },
                    "value34": {
                        "label": "",
                        "summary": ""
                    },
                    "name18": {
                        "label": "",
                        "summary": ""
                    },
                    "value39": {
                        "label": "",
                        "summary": ""
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "The sample rate of the channels, in samples per second."
                    },
                    "name29": {
                        "label": "",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "name13": {
                        "label": "",
                        "summary": ""
                    },
                    "name7": {
                        "label": "",
                        "summary": ""
                    },
                    "name6": {
                        "label": "",
                        "summary": ""
                    },
                    "value38": {
                        "label": "",
                        "summary": ""
                    },
                    "value23": {
                        "label": "",
                        "summary": ""
                    },
                    "value9": {
                        "label": "",
                        "summary": ""
                    },
                    "value31": {
                        "label": "",
                        "summary": ""
                    },
                    "name24": {
                        "label": "",
                        "summary": ""
                    },
                    "value19": {
                        "label": "",
                        "summary": ""
                    },
                    "name37": {
                        "label": "",
                        "summary": ""
                    },
                    "name11": {
                        "label": "",
                        "summary": ""
                    },
                    "value15": {
                        "label": "",
                        "summary": ""
                    },
                    "name2": {
                        "label": "",
                        "summary": ""
                    },
                    "value35": {
                        "label": "",
                        "summary": ""
                    },
                    "value5": {
                        "label": "",
                        "summary": ""
                    },
                    "name0": {
                        "label": "",
                        "summary": ""
                    },
                    "value24": {
                        "label": "",
                        "summary": ""
                    },
                    "value0": {
                        "label": "",
                        "summary": ""
                    },
                    "value21": {
                        "label": "",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "value1": {
                        "label": "",
                        "summary": ""
                    },
                    "snap": {
                        "label": "Snapshot Input",
                        "summary": "The optional first CHOP input on Constant is used when the Snapshot Input button is pressed. At this time, the channel names and values at the CHOP input at the current frame are used to initialize the channel names and values of the constant sliders.  To snap channels from other OPs, connect a Parameter CHOP to the Constant CHOP and hit Snapshot Input.  You can simulate the pressing of the Snapshot Input button from a script. To simulate the clicking of a CHOP dialog box button from a script use the Par Class pulse() Method:  Example: op('constant1').par.snap.pulse()"
                    },
                    "name39": {
                        "label": "",
                        "summary": ""
                    },
                    "value16": {
                        "label": "",
                        "summary": ""
                    },
                    "value4": {
                        "label": "",
                        "summary": ""
                    },
                    "value26": {
                        "label": "",
                        "summary": ""
                    },
                    "value25": {
                        "label": "",
                        "summary": ""
                    },
                    "name3": {
                        "label": "",
                        "summary": ""
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": "The right extend conditions (after range)."
                    },
                    "value7": {
                        "label": "",
                        "summary": ""
                    },
                    "name19": {
                        "label": "",
                        "summary": ""
                    },
                    "value29": {
                        "label": "",
                        "summary": ""
                    },
                    "name31": {
                        "label": "",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "value33": {
                        "label": "",
                        "summary": ""
                    },
                    "name32": {
                        "label": "",
                        "summary": ""
                    },
                    "value28": {
                        "label": "",
                        "summary": ""
                    },
                    "value8": {
                        "label": "",
                        "summary": ""
                    },
                    "name21": {
                        "label": "",
                        "summary": ""
                    },
                    "value22": {
                        "label": "",
                        "summary": ""
                    },
                    "name28": {
                        "label": "",
                        "summary": ""
                    },
                    "name8": {
                        "label": "",
                        "summary": ""
                    },
                    "name36": {
                        "label": "",
                        "summary": ""
                    },
                    "name22": {
                        "label": "",
                        "summary": ""
                    },
                    "value14": {
                        "label": "",
                        "summary": ""
                    },
                    "value3": {
                        "label": "",
                        "summary": ""
                    },
                    "value11": {
                        "label": "",
                        "summary": ""
                    },
                    "endunit": {
                        "label": "End Unit",
                        "summary": ""
                    },
                    "value37": {
                        "label": "",
                        "summary": ""
                    },
                    "value12": {
                        "label": "",
                        "summary": ""
                    },
                    "value2": {
                        "label": "",
                        "summary": ""
                    },
                    "single": {
                        "label": "Single Sample",
                        "summary": "Turn this Off to make constant channels that are longer than one Sample."
                    },
                    "end": {
                        "label": "End",
                        "summary": "Start and end of the interval, expressed in Units (seconds, frames or samples). The parameters are expressed in the Units found on the Common page. To set the CHOP to be 100 samples long, Set Units to Samples, Single Frame Off and Start / End to 0 and 99."
                    },
                    "first": {
                        "label": "First Channel",
                        "summary": "The First Channel parameter is used to select a smaller set of the incoming channels. This is useful if the number of incoming channels is greater than the 40 channels the Constant CHOP can hold, and you must break it into several CHOPs."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "Start and end of the interval, expressed in Units (seconds, frames or samples). The parameters are expressed in the Units found on the Common page. To set the CHOP to be 100 samples long, Set Units to Samples, Single Frame Off and Start / End to 0 and 99."
                    },
                    "value10": {
                        "label": "",
                        "summary": ""
                    },
                    "name33": {
                        "label": "",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Constant CHOP creates up to forty new constant-value channels."
            },
            "stypeCHOP": {
                "label": "Stype",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "The network protocol to use. Refer to the Network Protocols article for more information."
                    },
                    "netaddress": {
                        "label": "Network Address",
                        "summary": "When using Multicast, this is the address that Stype will listen for packets on."
                    },
                    "port": {
                        "label": "Network Port",
                        "summary": "The port which the Stype CHOP will accept packets on. The default for the protocol is 6301, but this should be set to match the current hardware output settings."
                    },
                    "padding": {
                        "label": "Padding",
                        "summary": "A value from 0 to 1 indicating the percentage to increase the field of view in case the given lens distortion requires samples outside of the normal render area. It is used to calculate the padded field of view and can be used to calculate the resolution of the render node."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the CHOP receives information sent to the network port. While Off, no updating occurs. Data sent to the port is lost."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Stype CHOP reads camera tracking information sent from a Stype device."
            },
            "nullCHOP": {
                "label": "Null",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "checkvalues": {
                        "label": "Check Values",
                        "summary": "Recook when the Null CHOP values change."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "cooktype": {
                        "label": "Cook Type",
                        "summary": "This controls how nodes downstream from the Null CHOP are triggered for recooking when the Null CHOP output changes. See also: Cook"
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "checkrange": {
                        "label": "Check Range",
                        "summary": "Recook when the Null CHOP channel range changes.  Please note that downstream cooks may also cook for a variety of reasons including viewing the contents of the data while editing nodes, etc."
                    },
                    "checknames": {
                        "label": "Check Names",
                        "summary": "Recook when the Null CHOP channel names change."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Null CHOP is used as a place-holder and does not alter the data coming in."
            },
            "angleCHOP": {
                "label": "Angle",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "inunit": {
                        "label": "Input Units",
                        "summary": "Units of incoming channels:"
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "outorder": {
                        "label": "Output Order",
                        "summary": "The order that rotation angles are assumed to be applied in (Euler angles as they are called). Applicable when converting to and from Quaternions or Vectors."
                    },
                    "outunit": {
                        "label": "Output Units",
                        "summary": "Units of outgoing channels:"
                    },
                    "inorder": {
                        "label": "Input Order",
                        "summary": "The order that rotation angles are assumed to be applied in (Euler angles as they are called). Applicable when converting to and from Quaternions or Vectors."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Angle CHOP is a general purpose converter between degrees, radians, quaternions and vectors."
            },
            "sharedmeminCHOP": {
                "label": "Shared Mem In",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "name": {
                        "label": "Shared Mem Name",
                        "summary": "The name of the memory block it reads from."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "When active, the CHOP cooks and reads from the memory block."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "memtype": {
                        "label": "Shared Mem Type",
                        "summary": "Reads from a Local or a Global memory location."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Shared Mem In CHOP receives CHOPs from a shared memory segment that is attached to a Shared Mem Out CHOP in another process or the same process."
            },
            "analyzeCHOP": {
                "label": "Analyze",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "allowstart": {
                        "label": "Allow Start Peaks",
                        "summary": "If the values of the first 2 samples are v0 and v1, if v0 > v1, count it as a peak. The default is to never count the first sample as a peak."
                    },
                    "valleys": {
                        "label": "Analyze Valleys vs Peaks",
                        "summary": "Analyze instead for the First Valley, Highest Valley, and Lowest Valley, when the corresponding Function menu options are chosen."
                    },
                    "allowend": {
                        "label": "Allow End Peaks",
                        "summary": "If the values of the last 2 samples are vn and vm, if vm > vn, count it as a peak. The default is to never count the last sample as a peak."
                    },
                    "function": {
                        "label": "Function",
                        "summary": "This menu determines the function applied to the channel."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "nopeakvalue": {
                        "label": "No Peak Value",
                        "summary": "When no peaks are found, make this number (default is -1) the result that is output. When the Function is set to Peak Index or Peak Value, it is a way to detect that no peaks were found."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Analyze CHOP looks at the values of all the values of a channel, and outputs a single-number result into the output."
            },
            "gestureCHOP": {
                "label": "Gesture",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "speedunit": {
                        "label": "Speed Unit",
                        "summary": ""
                    },
                    "step": {
                        "label": "Step Output",
                        "summary": "If on, the cycled animation will increase in value each cycle length. Useful if you want to cycle animation but at the same time have the cycle drifting off of it original values."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "stepreset": {
                        "label": "Step Reset",
                        "summary": "When On and you re-record a gesture, the step will be zeroed."
                    },
                    "speed": {
                        "label": "Speed",
                        "summary": "Scales the rate of playback for the segment."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "Resets the gesture in Sequential Play Mode."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "numbeats": {
                        "label": "Beats per Cycle",
                        "summary": "Specifies the number of beats to cycle the recorded animation around. If the recorded animation is longer than a multiple of the Beats Per Cycle, it will loop at that multiplied length."
                    },
                    "playmode": {
                        "label": "Play Mode",
                        "summary": "Controls the gesture playback."
                    },
                    "blendunit": {
                        "label": "Blend Time Unit",
                        "summary": ""
                    },
                    "blend": {
                        "label": "Blend Time",
                        "summary": "How much of the recorded segment to use as a blend region. The blend region is used to blend the beginning of the segment to the end so that a seemless loop is produced."
                    },
                    "interp": {
                        "label": "Interpolate Samples",
                        "summary": "If on, recorded samples are interpolated when scaling occurs, otherwise the nearest sample is selected."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "fitmethod": {
                        "label": "Fit to Nearest Cycle",
                        "summary": "When on the captured gesture will be extended or trimmed to be a multiple of the Beats Per Cycle."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "resetcondition": {
                        "label": "Reset Condition",
                        "summary": "This menu determines how the Reset input (the third input) triggers a reset of the channel(s)."
                    }
                },
                "summary": "The Gesture CHOP records a short segment of the first input and loops this segment in time with options as specified in the Gesture Page."
            },
            "scurveCHOP": {
                "label": "S Curve",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "type": {
                        "label": "Curve Type",
                        "summary": "What Curve Type to Generate."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "torange": {
                        "label": "To Range",
                        "summary": "Specify the low and high range of the curve."
                    },
                    "steepness": {
                        "label": "Steepness",
                        "summary": "Controls the steepness of the S Curve."
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": "The left extend condition (before range)."
                    },
                    "fromrange": {
                        "label": "From Range",
                        "summary": "Specify the low and high range of the input index."
                    },
                    "length": {
                        "label": "Length",
                        "summary": "Set the number of samples for this CHOP."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "prepend": {
                        "label": "Prepend",
                        "summary": "Add this number of samples to the beginning of the curve."
                    },
                    "linearize": {
                        "label": "Linearize",
                        "summary": "Control the amount of cruvature in the curve."
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": "The right extend conditions (after range)."
                    },
                    "channelname": {
                        "label": "Channel Names",
                        "summary": "You can creates many channels with simple patterns like chan[1-20], which generates 20 channels from chan1 to chan20, or t[xyz] which generates tx, ty and tz. See the section, Common CHOP Parameters for a description of this and all Options. See Scope and Channel Name Matching Options."
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": "The default value for extend conditions."
                    },
                    "bias": {
                        "label": "Bias",
                        "summary": "Move the curve's bias backward or forward."
                    },
                    "append": {
                        "label": "Append",
                        "summary": "Add this number of samples to the end of the curve."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "The sample rate of the channels, in samples per second."
                    }
                },
                "summary": "This CHOP generates S curves."
            },
            "infoCHOP": {
                "label": "Info",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "values": {
                        "label": "Values",
                        "summary": "Select channel with values inside or outside the range specified in Range."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "passive": {
                        "label": "Passive",
                        "summary": "When Passive is Off the Info CHOP will cook the Operator it is pointing to before querying its values. When Passive is On it will not force a cook. A side effect: If the Info CHOP and the target are both cooking that frame, the Info may cook before the target, so it\\u2019s data will be a frame late."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "iscope": {
                        "label": "Scope",
                        "summary": "The names of the attributes to keep. Name patterns may be used as detailed in Pattern Matching."
                    },
                    "op": {
                        "label": "Operator",
                        "summary": "The path of the node that the Info CHOP is getting information from. You can drag and drop any node onto this path, or type the path directly into the field."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "range": {
                        "label": "Range",
                        "summary": "Set the bounds for selecting channels by value."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Info CHOP gives you extra information about a node."
            },
            "switchCHOP": {
                "label": "Switch",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "index": {
                        "label": "Index",
                        "summary": "The input index to use if First Input Is Index is off."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "indexfirst": {
                        "label": "First Input is Index",
                        "summary": "If enabled, it will use the first input CHOP's first channel to determine which input to select."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Switch CHOP allows you to control the flow of channels through a CHOPnet."
            },
            "midiinCHOP": {
                "label": "MIDI In",
                "parameters": {
                    "controlind": {
                        "label": "Controller Index",
                        "summary": "Used to select controllers by number, or multiple controllers by ranges. When in By Index Only Controller Type mode, you can select up to the full 128 controllers or sub-ranges thereof (i.e. \\\"1-10\\\", \\\"2 34 70\\\", \\\"1-32 70-80:2\\\")."
                    },
                    "barname": {
                        "label": "Bar Ramp Name",
                        "summary": ""
                    },
                    "prefix": {
                        "label": "Channel Prefix",
                        "summary": "When recording from multiple MIDI channels, putting a string like \\\"ch\\\" in this parameter causes the MIDI channel to be split into separate CHOP channels per MIDI channel. Otherwise the MIDI channels are all merged into one set of CHOP channels."
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "pitchname": {
                        "label": "Pitch Wheel Name",
                        "summary": "The name of the Pitch Wheel CHOP channel. Pitch wheel values range from -1 to +1. If blank, this channel will not be created. Put \\\"p\\\" in here to generate a channel."
                    },
                    "exname4": {
                        "label": "Channel Name 4",
                        "summary": ""
                    },
                    "controltype": {
                        "label": "Controller Type",
                        "summary": "There are 128 different controllers available. By choosing By Index Only, you can specify any number of controllers in the Control Index parameter. Otherwise, you can select a controller from the list from this menu. Some controllers have multiple instances, such as Sound Controllers 1-10. Selecting a controller with multiple instances allows you to use the Control Index parameter to select which instances you want. Any invalid control indices will be ignored."
                    },
                    "exname8": {
                        "label": "Channel Name 8",
                        "summary": ""
                    },
                    "id": {
                        "label": "Device ID",
                        "summary": "Specify the id of which device to use."
                    },
                    "exname6": {
                        "label": "Channel Name 6",
                        "summary": ""
                    },
                    "exmsg7": {
                        "label": "Message 7",
                        "summary": ""
                    },
                    "startunit": {
                        "label": "Start Unit",
                        "summary": ""
                    },
                    "timerstart": {
                        "label": "Timer Start",
                        "summary": ""
                    },
                    "record": {
                        "label": "Record",
                        "summary": "This parameter is used as a button to start and stop recording into the CHOP channels."
                    },
                    "progname": {
                        "label": "Program Change",
                        "summary": "The name of the Program Change CHOP channel. All program change messages will be recorded onto this channel. If blank, this channel will not be created."
                    },
                    "controlname": {
                        "label": "Controller Name",
                        "summary": "The base name of the Control Change CHOP channels. The channel names are appended with the controller index (0-127). If blank, control changes will not be recorded. It typically contains \\\"c\\\"."
                    },
                    "exmsg6": {
                        "label": "Message 6",
                        "summary": ""
                    },
                    "pulsename": {
                        "label": "Timer Pulse Name",
                        "summary": ""
                    },
                    "barperiod": {
                        "label": "Bar Period",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "exmsg4": {
                        "label": "Message 4",
                        "summary": ""
                    },
                    "notescope": {
                        "label": "Note Scope",
                        "summary": "The scope of notes to record. Multiple ranges and notes can be recorded (i.e., \\\"50-60\\\", \\\"64 65 66 70-80\\\")."
                    },
                    "notemeth": {
                        "label": "Note Output",
                        "summary": ""
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": ""
                    },
                    "format": {
                        "label": "Controller Format",
                        "summary": "Some controllers can be paired together to form 14 bit controllers, rather than the normal 7 bit controllers (controller indices 0-31, 98 and 100). Selecting 14 bit Controllers interprets a pair as one 14 bit controller. Otherwise, they are interpreted as separate 7 bit Controllers."
                    },
                    "exname1": {
                        "label": "Channel Name 1",
                        "summary": ""
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": ""
                    },
                    "channel": {
                        "label": "MIDI Channels",
                        "summary": "The CHOP may read from any number of MIDI channels, numbered 1-16. Ranges and multiple entries are supported (i.e. \\\"1 4 6\\\", \\\"1-7 12\\\", \\\"1-5:2\\\").  : If Channel Prefix is left blank, then the input streams from multiple MIDI channels will be combined into one set of CHOP channels (i.e., a \\\"note 64 on\\\" event on channel 12 followed by a \\\"note 64 off\\\" event on channel 8 appears in the note 64 CHOP channel as a single note)."
                    },
                    "entire": {
                        "label": "Read Entire MIDI File",
                        "summary": "If enabled, the entire MIDI file is read. Otherwise, the Start and End parameters on the Channel page determine the segment of the file to read."
                    },
                    "exname2": {
                        "label": "Channel Name 2",
                        "summary": ""
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "Sets the CHOP length to one sample, erasing the data in the channels."
                    },
                    "norm": {
                        "label": "Normalize",
                        "summary": "Controller values can be normalized for convenience:"
                    },
                    "notenorm": {
                        "label": "Normalize",
                        "summary": "Note values can be normalized for convenience:"
                    },
                    "exmsg11": {
                        "label": "Message 11",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "unwrap": {
                        "label": "Unwrap",
                        "summary": ""
                    },
                    "recordtype": {
                        "label": "Record Method",
                        "summary": "Determine what to record."
                    },
                    "barmsg": {
                        "label": "Bar Message",
                        "summary": ""
                    },
                    "velname": {
                        "label": "Velocity Name",
                        "summary": "When Velocity is set to Separate Channels, this parameter is the base name of the Velocity CHOP channel (try \\\"v\\\"). If blank, no velocity channels will be recorded."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": ""
                    },
                    "exmsg2": {
                        "label": "Message 2",
                        "summary": ""
                    },
                    "exmsg1": {
                        "label": "Message 1",
                        "summary": ""
                    },
                    "source": {
                        "label": "MIDI Source",
                        "summary": "Get MIDI input from a device or a file."
                    },
                    "ticks": {
                        "label": "Ticks per Beat",
                        "summary": ""
                    },
                    "exmsg8": {
                        "label": "Message 8",
                        "summary": ""
                    },
                    "songpos": {
                        "label": "Song Pos Name",
                        "summary": ""
                    },
                    "barstart": {
                        "label": "Bar Start",
                        "summary": ""
                    },
                    "exname5": {
                        "label": "Channel Name 5",
                        "summary": ""
                    },
                    "onebased": {
                        "label": "1 Based Index",
                        "summary": "Make the index 1 based instead of the default 0 based."
                    },
                    "aftername": {
                        "label": "Aftertouch Name",
                        "summary": "The base name of the polyphonic Aftertouch CHOP channels. One aftertouch channel is created for each note in the Note Scope. If blank, no aftertouch channels will be created."
                    },
                    "exname7": {
                        "label": "Channel Name 7",
                        "summary": ""
                    },
                    "rampname": {
                        "label": "Timer Ramp Name",
                        "summary": ""
                    },
                    "exmsg9": {
                        "label": "Message 9",
                        "summary": ""
                    },
                    "exname3": {
                        "label": "Channel Name 3",
                        "summary": ""
                    },
                    "endunit": {
                        "label": "End Unit",
                        "summary": ""
                    },
                    "file": {
                        "label": "MIDI File",
                        "summary": "If MIDI file is selected as the MIDI source use this field to specify the name of the MIDI file to read. The file can be read in from disk or from the web. Use http:// when specifying a URL."
                    },
                    "exname9": {
                        "label": "Channel Name 9",
                        "summary": ""
                    },
                    "notename": {
                        "label": "Note Name",
                        "summary": "Put an \\\"n\\\" in here to generate channels for note events. It is the base name of the CHOP channel used to record notes. If blank, notes are ignored. If the Note Output parameter is set to Separate Channels, then CHOP channels will be created for each note in the Note Scope, of the form: notename"
                    },
                    "simplified": {
                        "label": "Simplified Output",
                        "summary": "When this is on channels are automatically created when MIDI signal is detected from the selected MIDI device."
                    },
                    "exname11": {
                        "label": "Channel Name 11",
                        "summary": ""
                    },
                    "pressname": {
                        "label": "Pressure Name",
                        "summary": "The name of the Channel Pressure channel. If multiple channels are being recorded, all channel pressure changes of interest will be recording on this CHOP channel. If blank, this channel will not be created."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "velocity": {
                        "label": "Velocity",
                        "summary": ""
                    },
                    "exmsg3": {
                        "label": "Message 3",
                        "summary": ""
                    },
                    "end": {
                        "label": "End",
                        "summary": "Defines the end of the segment to read for MIDI Files."
                    },
                    "exname10": {
                        "label": "Channel Name 10",
                        "summary": ""
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "Defines the sample rate of this CHOP. If the sample rate is too low, a rapidly changing input may be misrepresented.  Note: If the sample rate is too low, you may miss MIDI events. A note event may set a sample value to 1, and then the next note event less than 1/30 second later can set it to 0 on the same sample in the CHOP channel. So the event will be missed. Make the sample rate higher, like 600, to catch these events, or make sure that your on-off events coming in are a minimum time separation, as can be achieved through Opcode's MAX."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "Defines where recording begins. In \\\"Tie to Time Line\\\" mode, any events received before the start time will be ignored. In \\\"Time Line Independent\\\" mode, recording will start at this point and continue on (not looping back). If reading from a MIDI File, Start/End will determine the start of the segment to read."
                    },
                    "device": {
                        "label": "Device Table",
                        "summary": "Path to the MIDI device Table DAT"
                    },
                    "timerperiod": {
                        "label": "Timer Period",
                        "summary": ""
                    },
                    "exmsg10": {
                        "label": "Message 10",
                        "summary": ""
                    },
                    "exmsg5": {
                        "label": "Message 5",
                        "summary": ""
                    },
                    "exname12": {
                        "label": "Channel Name 12",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exmsg12": {
                        "label": "Message 12",
                        "summary": ""
                    }
                },
                "summary": "The MIDI In CHOP reads Note events, Controller events, Program Change events, System Exclusive messages and Timing events from both MIDI devices and files."
            },
            "syncoutCHOP": {
                "label": "Sync Out",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "port": {
                        "label": "Network Port",
                        "summary": "The network port associated with the address."
                    },
                    "clienttimeouts": {
                        "label": "Client Timeouts (Consecutive)",
                        "summary": "The maximum number of consecutive timeouts a client must generate until it is ignored, causing no further timeouts. It will remain ignored until it replies on time again or this CHOP is reset."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Whether or not the CHOP is currently attempting to synchronize itself."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "timeout": {
                        "label": "Timeout (msec)",
                        "summary": "The maximum amount of time the CHOP will wait for synchronization signals from the other Sync CHOPs. This value is expressed in milliseconds."
                    },
                    "multicastaddress": {
                        "label": "Multicast Address",
                        "summary": "An IP address to communicate on (224.0.0.1)."
                    },
                    "banclienttimeouts": {
                        "label": "Total Timeouts",
                        "summary": "The maximum number of timeouts a client must generate until it is permanently ignored. Only a reset will allow it to be included again."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "clearstats": {
                        "label": "Clear Stats",
                        "summary": "Pressing this button will clear all banned lists, as well as totals reported in an Info CHOP."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "banclients": {
                        "label": "Ban Clients",
                        "summary": "Enables permanent banning of clients."
                    }
                },
                "summary": ""
            },
            "audiodeviceinCHOP": {
                "label": "Audio Device In",
                "parameters": {
                    "topfrontright": {
                        "label": "Top Front Right",
                        "summary": ""
                    },
                    "topbackright": {
                        "label": "Top Back Right",
                        "summary": ""
                    },
                    "bufferlength": {
                        "label": "Buffer Length",
                        "summary": "The size of the input buffer, will effect latency.  The larger the buffer the more latency is introduced."
                    },
                    "sideright": {
                        "label": "Side Right",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "topfrontleft": {
                        "label": "Top Front Left",
                        "summary": ""
                    },
                    "frontcenter": {
                        "label": "Front Center",
                        "summary": ""
                    },
                    "topbackleft": {
                        "label": "Top Back Left",
                        "summary": ""
                    },
                    "frontleftcenter": {
                        "label": "Front Left of Center",
                        "summary": ""
                    },
                    "inputs": {
                        "label": "Inputs",
                        "summary": "When Driver is set to ASIO, this parameter lets you pick which input channels to use."
                    },
                    "frontright": {
                        "label": "Front Right",
                        "summary": ""
                    },
                    "topfrontcenter": {
                        "label": "Top Front Center",
                        "summary": ""
                    },
                    "backright": {
                        "label": "Back Right",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "frontrightcenter": {
                        "label": "Front Right of Center",
                        "summary": ""
                    },
                    "rate": {
                        "label": "Rate",
                        "summary": "Audio input sample rate expressed in samples per second."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "backleft": {
                        "label": "Back Left",
                        "summary": ""
                    },
                    "driver": {
                        "label": "Driver",
                        "summary": "Select between DirectSound and ASIO drivers."
                    },
                    "topbackcenter": {
                        "label": "Top Back Center",
                        "summary": ""
                    },
                    "lowfrequency": {
                        "label": "Low Frequency",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Turns the audio input on or off."
                    },
                    "format": {
                        "label": "Format",
                        "summary": "Selects mono, stereo, or multi-channel. Also determines how many channels are created 1(mono) or 2(stereo left and stereo right) etc."
                    },
                    "frontleft": {
                        "label": "Front Left",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "topcenter": {
                        "label": "Top Center",
                        "summary": ""
                    },
                    "backcenter": {
                        "label": "Back Center",
                        "summary": ""
                    },
                    "device": {
                        "label": "Device",
                        "summary": "A menu of available audio devices to receive input from. Selecting default sets the audio device to that which is selected in Windows Control Panel>Sounds and Audio Devices>Audio>Sound Recording."
                    },
                    "sideleft": {
                        "label": "Side Left",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Audio Device In CHOP receives audio from any of the attached audio input devices using DirectSound or ASIO."
            },
            "serialCHOP": {
                "label": "Serial",
                "parameters": {
                    "port": {
                        "label": "Port",
                        "summary": "Selects the COM port that the serial connection will use."
                    },
                    "script13": {
                        "label": "Script 13",
                        "summary": ""
                    },
                    "script10": {
                        "label": "Script 10",
                        "summary": ""
                    },
                    "script9": {
                        "label": "Script 9",
                        "summary": ""
                    },
                    "baudrate": {
                        "label": "Baud Rate",
                        "summary": "The maximum number of bits of information, including \\\"control\\\" bits, that are transmitted per second. Check your input device's default baud rate and set accordingly."
                    },
                    "script1": {
                        "label": "Script 1",
                        "summary": ""
                    },
                    "databits": {
                        "label": "Data Bits",
                        "summary": "This parameter sets the number of data bits sent in each. Data bits are transmitted \\\"backwards\\\". Backwards refers to the order of transmission, which is from least significant bit (LSB) to most significant bit (MSB). To interpret the data bits, you must read from right to left."
                    },
                    "script3": {
                        "label": "Script 3",
                        "summary": ""
                    },
                    "script15": {
                        "label": "Script 15",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "parity": {
                        "label": "Parity",
                        "summary": "This parameter can be set to none, even, or odd. The optional parity bit follows the data bits and is included as a simple means of error checking. Parity bits work by specifying ahead of time whether the parity of the transmission is to be even or odd. If the parity is set to be odd, the transmitter will then set the parity bit in such a way as to make an odd number of 1's among the data bits and the parity bit."
                    },
                    "script12": {
                        "label": "Script 12",
                        "summary": ""
                    },
                    "script14": {
                        "label": "Script 14",
                        "summary": ""
                    },
                    "stopbits": {
                        "label": "Stop Bits",
                        "summary": "The last part of transmission packet consists of 1 or 2 Stop bits. The connection will now wait for the next Start bit."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "script0": {
                        "label": "Script 0",
                        "summary": ""
                    },
                    "script7": {
                        "label": "Script 7",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "script2": {
                        "label": "Script 2",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": "This check box enables the serial connection."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "script6": {
                        "label": "Script 6",
                        "summary": ""
                    },
                    "script8": {
                        "label": "Script 8",
                        "summary": ""
                    },
                    "script11": {
                        "label": "Script 11",
                        "summary": ""
                    },
                    "script4": {
                        "label": "Script 4",
                        "summary": ""
                    },
                    "state": {
                        "label": "State",
                        "summary": "The type of input transition to monitor."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "script5": {
                        "label": "Script 5",
                        "summary": ""
                    }
                },
                "summary": "The Serial CHOP is used for serial communication through an external port, using the RS-232 protocol."
            },
            "leuzerod4CHOP": {
                "label": "Leuze ROD4",
                "parameters": {
                    "maxpointdistance": {
                        "label": "Max Point Distance in Blob",
                        "summary": "Two measured points from the scanner are considered to be part of the same blob if they are this distance or closer to each other. Distance is specified in meters."
                    },
                    "port": {
                        "label": "Network Port",
                        "summary": "The network port of the scanner."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "maxdistance": {
                        "label": "Max Distance",
                        "summary": "Maximum distance in which blobs are tracked when Area of Interest parameter is set to Distance Based."
                    },
                    "upperright": {
                        "label": "Upper Right Corner",
                        "summary": "Specifies the upper right corner of the bounding box used when Area of Interest parameter is set to Bounding Box."
                    },
                    "areaofinterest": {
                        "label": "Area of Interest",
                        "summary": "Limits the area in which blobs are tracked."
                    },
                    "netaddress": {
                        "label": "Network Address",
                        "summary": "The IP address of the ROD4 scanner."
                    },
                    "rod4porotocol": {
                        "label": "ROD4 Protocol",
                        "summary": "Selects which protocol to use. This must match the protocol the scanner was set to use in the RODplussoft setup utility for the device. You may still get some sort of data if the wrong protocol is selected, but the data will be random and incorrect."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "boundingboxmask": {
                        "label": "Bounding Box Mask TOP",
                        "summary": "Specify a TOP to use as a mask for the bounding box when Area of Interest parameter is set to Bounding Box. Any pixel with a non-zero value will be treated as part of the area of interest, any pixel that is (0,0,0) will be treated as not in the area of interest. Regardless of resolution/aspect ratio of the TOP, the TOP will be stretched to fix the bounding box specified. This TOP should not be cooking every frame as that will make the ROD4 CHOP very slow."
                    },
                    "inputcoordinate": {
                        "label": "Input Coordinate",
                        "summary": "Available when using ROD4plus ASCII-Remote protocol, specifies whether to use Polar or Cartesian input coordinates. This must match the coordinate the scanner was set to use in the RODplussoft setup utility for the device."
                    },
                    "maxblobmovement": {
                        "label": "Max Blob Movement",
                        "summary": "Specified in meters. This controls the maximum distance a blob can move between successive frames and still be considered the same 'blob'."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the CHOP receives information from the scanner. While off, the network connection is disconnected and no updating occurs."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "outputmode": {
                        "label": "Output Mode",
                        "summary": "Select Raw Data or Blob Tracking mode for output channels. The parameters below are only available in Blob Tracking mode."
                    },
                    "rotate": {
                        "label": "Rotate Incoming Coordinates",
                        "summary": ""
                    },
                    "lowerleft": {
                        "label": "Lower Left Corner",
                        "summary": "Specifies the lower left corner of the bounding box used when Area of Interest parameter is set to Bounding Box."
                    },
                    "maxblobs": {
                        "label": "Max Blobs",
                        "summary": "The maximum number of blobs that can be tracked."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "allowmovementoutside": {
                        "label": "Allow Movement Outside Area",
                        "summary": "When this is on, blobs detected within the Area of Interest can move outside of that area and still be tracked. When this is off blobs that move outside the area of interest will stop being tracked."
                    }
                },
                "summary": "The Leuze ROD4 CHOP connects to the Leuze ROD4 laser scanner via TCP/IP."
            },
            "touchinCHOP": {
                "label": "Touch In",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "Selects which network protocol to use to transfer data. Different protocol's have methods of connecting and using the address parameter. For more information refer to the Network Protocols article."
                    },
                    "queuetarget": {
                        "label": "Queue Target",
                        "summary": "The target queue length the CHOP will attempt to maintain."
                    },
                    "queuetargetunit": {
                        "label": "Queue Target Unit",
                        "summary": ""
                    },
                    "port": {
                        "label": "Network Port",
                        "summary": "The network port of the server."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the CHOP receives information from the pipe or server. While off, no updating occurs. Data sent by a server is lost, but a pipe will store the data until Active is turned on again. If in Network mode, turning this parameter on initiates a connection, and turning it off breaks the connection."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "queuevarianceunit": {
                        "label": "Queue Variance Unit",
                        "summary": ""
                    },
                    "adjusttimeunit": {
                        "label": "Adjust Unit",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "adjusttime": {
                        "label": "Queue Adjust Time",
                        "summary": "Specifies how often to repeat/drop a samples in order to get closer to the queue target range. If the value = 1 and the units = seconds, then it will try to repeat/drop a sample once per second to maintain the queue target set in the Minimum Target and Maximum Target parameters above."
                    },
                    "syncports": {
                        "label": "Use Synced Ports",
                        "summary": "This parameter lets you send the the data in a single global pipe if required. This can be important if various data streams must be sent in frame sync."
                    },
                    "queuevariance": {
                        "label": "Queue Variance",
                        "summary": "The range around the Queue Target that's acceptable. If the queue's length is within the target and variance range, the CHOP will not bother to adjust the queue length."
                    },
                    "maxqueue": {
                        "label": "Maximum Queue",
                        "summary": "The maximum size of the queue when full. Incoming samples will be dropped if the maximum queue is reached."
                    },
                    "recover": {
                        "label": "Recover Outside Range",
                        "summary": "If the queue size goes outside of the target size range for more than the 'adjust time', then if this option is on it will stop delivering new data or throw away a lot of data, until queue size is back in the middle of the min/max target. If this option is of the queue size will be slowly inched towards the target size instead (by dropping or repeating single frames every once in a while)."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "maxqueueunit": {
                        "label": "Max Queue Unit",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "address": {
                        "label": "Address",
                        "summary": "The computer name or IP address of the server computer. You can use an IP address (e.g. 100.123.45.78) or the computer's network name can be used directly. If you put \\\"localhost\\\", it means the other end of the pipe is on the same computer."
                    }
                },
                "summary": "The Touch In CHOP can be used to create a high speed connection between two TouchDesigner processes via CHOPs."
            },
            "objectCHOP": {
                "label": "Object",
                "parameters": {
                    "target": {
                        "label": "Target Object",
                        "summary": "The object that is being compared to the position of the reference object. The Target Object can be expressed as a text string. This can be useful when the object name needs to be a variable - it allows you to type in a name which may include expressions or variables."
                    },
                    "dat": {
                        "label": "DAT Table",
                        "summary": ""
                    },
                    "bearing": {
                        "label": "Bearing Vector",
                        "summary": "An arbitrary base direction for the bearing calculation."
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": "The extend condition before the CHOP interval. They are:"
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": "Extend condition after the interval. Same options as Extend Left."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The transform order to use for Rotation, Scale, Transform, Bearing, or Single Bearing Angle Compute modes."
                    },
                    "bearingref": {
                        "label": "Bearing Reference",
                        "summary": "Bearing requires a direction to use as a reference base."
                    },
                    "startunit": {
                        "label": "Start Unit",
                        "summary": ""
                    },
                    "nameformat": {
                        "label": "Channel Names",
                        "summary": "Sets how the created channels are named."
                    },
                    "appendattribs": {
                        "label": "Append Attributes",
                        "summary": "Adds a rotate attribute to any rotation channels the Object CHOP creates."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "outputrange": {
                        "label": "Output Range",
                        "summary": "The start and end time of the desired interval of the object path."
                    },
                    "compute": {
                        "label": "Compute",
                        "summary": "The information to output from the objects, as described below:"
                    },
                    "cookpast": {
                        "label": "Cook Past Values (slow)",
                        "summary": ""
                    },
                    "endunit": {
                        "label": "End Unit",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": "The value used for the Default Value extend condition.  Note: When creating rotation channels, the Transform CHOP and Object CHOP will select values which minimize frame-to-frame discontinuity. The graphs will appear continuous and free of 180 degree shifts."
                    },
                    "end": {
                        "label": "End",
                        "summary": "The end time of the desired interval of the object path."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotation order to use for Rotation, Scale, Transform, Bearing, or Single Bearing Angle Compute modes."
                    },
                    "tscopey": {
                        "label": "Point Scope Y",
                        "summary": "When one of the optional point inputs is connected, this determines which channels represent X, Y and Z."
                    },
                    "tscopez": {
                        "label": "Point Scope Z",
                        "summary": "When one of the optional point inputs is connected, this determines which channels represent X, Y and Z."
                    },
                    "tscopex": {
                        "label": "Point Scope X",
                        "summary": "When one of the optional point inputs is connected, this determines which channels represent X, Y and Z."
                    },
                    "reference": {
                        "label": "Reference Object",
                        "summary": "The object that acts as the origin of the comparison. The Reference Object can be expressed as a text string."
                    },
                    "smoothrotate": {
                        "label": "Smooth Rotation",
                        "summary": "When on outputs a smooth rotation curve without graphical jumps at 0, 90, etc."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "The start time of the desired interval of the object path."
                    }
                },
                "summary": "The Object CHOP compares two objects and outputs channels containing their raw or relative positions and orientations."
            },
            "clipblenderCHOP": {
                "label": "Clip Blender",
                "parameters": {
                    "default": {
                        "label": "Default Clip CHOP",
                        "summary": ""
                    },
                    "logpulse": {
                        "label": "Log",
                        "summary": ""
                    },
                    "ytrans": {
                        "label": "Y Root Trans",
                        "summary": ""
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "target": {
                        "label": "Target",
                        "summary": ""
                    },
                    "jumpmin": {
                        "label": "Jump Min",
                        "summary": ""
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": ""
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "stepforward": {
                        "label": "Step Forward",
                        "summary": ""
                    },
                    "datlist": {
                        "label": "DAT List",
                        "summary": ""
                    },
                    "prerotate": {
                        "label": "Pre-Rotate Adds",
                        "summary": ""
                    },
                    "playspeed": {
                        "label": "Play Speed",
                        "summary": ""
                    },
                    "timeremaining": {
                        "label": "Output Time Remaining",
                        "summary": ""
                    },
                    "yrot": {
                        "label": "Y Root Rot",
                        "summary": ""
                    },
                    "delay": {
                        "label": "Delay Samples",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "zrot": {
                        "label": "Z Root Rot",
                        "summary": ""
                    },
                    "ztrans": {
                        "label": "Z Root Trans",
                        "summary": ""
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "stepbackward": {
                        "label": "Step Backward",
                        "summary": ""
                    },
                    "jumpmax": {
                        "label": "Jump Max",
                        "summary": ""
                    },
                    "fixjump": {
                        "label": "Fix Jump",
                        "summary": ""
                    },
                    "doxform": {
                        "label": "Transform Next Clip",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "jumpxy": {
                        "label": "Jump Area XY",
                        "summary": ""
                    },
                    "xtrans": {
                        "label": "X Root Trans",
                        "summary": ""
                    },
                    "aend": {
                        "label": "A End Script",
                        "summary": ""
                    },
                    "xrot": {
                        "label": "X Root Rot",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "qtrigger": {
                        "label": "Queue Trigger",
                        "summary": ""
                    },
                    "qenable": {
                        "label": "Queue Enable",
                        "summary": ""
                    },
                    "timechannel": {
                        "label": "Time Channel",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "printstate": {
                        "label": "Print State",
                        "summary": ""
                    },
                    "logjumps": {
                        "label": "Log Jumps",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Clip Blender CHOP can be used as an animation system that blends between different animation clips, preserving rotation, changing target positions etc."
            },
            "laserCHOP": {
                "label": "Laser",
                "parameters": {
                    "rotate": {
                        "label": "Rotate",
                        "summary": "Control the rotation of the output."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "vertexhold": {
                        "label": "Vertex Hold",
                        "summary": "Set the time in ms the laser should remain at each vertex or sample."
                    },
                    "preblankoff": {
                        "label": "Pre Blanking Off Delay",
                        "summary": "Set the time in ms the Laser should wait at a position before turning the color output on."
                    },
                    "source": {
                        "label": "Source OP",
                        "summary": "Select the source operator type for the laser image."
                    },
                    "color": {
                        "label": "Output Color",
                        "summary": "Activate the Color output."
                    },
                    "bluescale": {
                        "label": "Blue Scale",
                        "summary": "Set the intensity of the Blue Channel."
                    },
                    "starthold": {
                        "label": "Start-Point Hold Time",
                        "summary": "Set the time in ms the Laser should wait at the first point of a new data frame before continuing on."
                    },
                    "sop": {
                        "label": "SOP",
                        "summary": "Path to the SOP node."
                    },
                    "bstepsize": {
                        "label": "Blanking Step Size",
                        "summary": "The distance each x,y can change while not outputing color (blanking)."
                    },
                    "vertexorder": {
                        "label": "Vertex Order",
                        "summary": "Output the points in the same order as the vertices of each polygon, instead of the order in which the points are defined in the geometry."
                    },
                    "swap": {
                        "label": "Swap Output",
                        "summary": "Lets you swap the x and y axis of the output."
                    },
                    "postblankon": {
                        "label": "Post Blanking On Delay",
                        "summary": "Set the time in ms the Laser should wait at a position after turning the color output off."
                    },
                    "preblankon": {
                        "label": "Pre Blanking On Delay",
                        "summary": "Set the time in ms the Laser should wait at a position before turning the color output off."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "updatemethod": {
                        "label": "Update Method",
                        "summary": "Control how the Laser CHOP pulls data from its source.      In most cases you will want to keep this at the default setting \\\"When All Points Drawn\\\".   There is a specific usage case that requires the \\\"Every Frame\\\" update method. Background is that the Laser CHOP might have to draw the input values over multiple frames. For example given a source with 200 sampling values. After applying all blanking and step sizes at a certain sample rate, the Laser might need more than one frame to draw the full image. The effect will be visible by the Laser image flickering. With the default setting, the Laser will grab a new set of samples from its input once it has completed drawing all previous values. With the \\\"Every Frame\\\" update method, the Laser will grab the updated values for the remaining samples after each frame."
                    },
                    "redscale": {
                        "label": "Red Scale",
                        "summary": "Set the intensity of the Red Channel."
                    },
                    "chop": {
                        "label": "CHOP",
                        "summary": "Path to the CHOP node."
                    },
                    "postblankoff": {
                        "label": "Post Blanking Off Delay",
                        "summary": "Set the time in ms the Laser should wait at a position after turning the color output on."
                    },
                    "xscale": {
                        "label": "X Scale",
                        "summary": "Control the horizontal scale of the output."
                    },
                    "camera": {
                        "label": "Camera",
                        "summary": "Specify the path to a Camera COMP used to draw a SOP from the cameras view."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "yscale": {
                        "label": "Y Scale",
                        "summary": "Control the vertical scale of the output."
                    },
                    "stepsize": {
                        "label": "Step Size",
                        "summary": "The distance each x,y can change while outputing color."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "Specify the Sample Rate the source will be sampled at. With the default 48000 samples per second and a 60fps frame rate, the Laser CHOP can output 800 position and color values per frame."
                    },
                    "greenscale": {
                        "label": "Green Scale",
                        "summary": "Set the intensity of the Green Channel."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    }
                },
                "summary": ""
            },
            "slopeCHOP": {
                "label": "Slope",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "type": {
                        "label": "Type",
                        "summary": "The type of slope to calculate."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "The sample pairs used to calculate the slope."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Slope CHOP calculates the slope (or \\\"derivative\\\" in math-speak) of the input channels."
            },
            "pipeoutCHOP": {
                "label": "Pipe Out",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "sendscript": {
                        "label": "Send Script",
                        "summary": "Use these parameters to send a one-time textport command through the pipe."
                    },
                    "script": {
                        "label": "Script",
                        "summary": "Use these parameters to send a one-time textport command through the pipe."
                    },
                    "sendinput": {
                        "label": "Send Input",
                        "summary": "On/off toggle for sending the data connected to the Pipe Out CHOP's input."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "When Off, data is not sent."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "echo": {
                        "label": "Echo Messages to Console",
                        "summary": "Print all outgoing data to the Console which can be opened from the Dialogs menu. See this option in the Pipe In CHOP for more details."
                    },
                    "sendsingle": {
                        "label": "Send Current Sample Only",
                        "summary": "This parameter is only enabled if the Pipe Out CHOP is not time sliced (See Common Page of parameters). If On, it only sends the current frame's sample. If Off, it sends all data between this frame and the last frame TouchDesigner cooked at. The difference arises when TouchDesigner is not cooking 60 frames per second and is skipping frames. If playback skips by 3 animation frames between screen draws, the On case sends only one frame of data, and the Off case sends 3 frames of data (a \\\"Time Slice\\\" in TouchDesigner-speak)."
                    },
                    "pulse": {
                        "label": "Send Monitor Pulses",
                        "summary": "Sends pulses (a single null character) once a frame, to monitor the connection. This keeps the connection active, and keeps the Pipe In CHOP aware of the connection status so it can properly report its state."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Path to a DAT containing callback methods for each event sent. See pipeoutCHOP_Class for usage."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "cookalways": {
                        "label": "Cook Every Frame",
                        "summary": "Turn this on to make sure this CHOP gets processed every frame. Usually CHOPs do not get processed every frame unless they are directly involved with some aspect of the geometry being displayed."
                    },
                    "port": {
                        "label": "Server Port",
                        "summary": "The network port to use."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "upload": {
                        "label": "Send All Data",
                        "summary": "When the button is pressed, sends all the channel names and their data once in one burst."
                    },
                    "sample": {
                        "label": "Single Sample",
                        "summary": "In single sample mode, this parameter determines which sample to send; the sample at frame 1 or the current sample."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "mode": {
                        "label": "Connection Mode",
                        "summary": ""
                    },
                    "address": {
                        "label": "Server Address",
                        "summary": "The computer name or IP address of the server computer. This address is a standard WWW address, such as 'foo' or 'foo.bar.com'. You can use an IP address (e.g. 100.123.45.78) or the computer's network name can be entered. If you put \\\"localhost\\\", it means the other end of the pipe is on the same computer."
                    }
                },
                "summary": "The Pipe Out CHOP can be used to transmit data out of TouchDesigner to other processes running on a remote machine using a network connection."
            },
            "transformCHOP": {
                "label": "Transform",
                "parameters": {
                    "inxord": {
                        "label": "Transform Order",
                        "summary": "The transform order of the input channels. If the channels are retrieved from an object, this should be set to the same transform order as the object."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "inrord": {
                        "label": "Rotate Order",
                        "summary": "The rotation order of the input rotations.  Note: When creating rotation channels, the Transform and Object CHOPs will select values which minimize frame-to-frame discontinuities. The graphs will appear continuous and free of 180 degree shifts. The Transform CHOP can be used to smooth out rotation channels derived from outside sources, such as the origin() function."
                    },
                    "usehint": {
                        "label": "Use Rotation Hint",
                        "summary": "Turning this on and using the Hint parameter below allows you to specify approximate starting values for the rotation channels produced. This allows you to change the rotation channel solution to a specific starting point (e.g. for camera output control)."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "matop": {
                        "label": "Matrix Operation",
                        "summary": "The input channels can be pre or post transformed by the transformation parameters. The pre-transformation is the same as using Pre-XForm parameters on a Geometry COMP. In mathematical terms, if we assume a multiply \\\"vector on the right\\\" convention (column vectors), a pre-transformation would be PreXForm * InputXForm, and a regular transform would be the opposite."
                    },
                    "out": {
                        "label": "Output Channels",
                        "summary": "Specify how the channels are output."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "hint": {
                        "label": "Hint",
                        "summary": "Specify approximate starting values for the rotation channels produced."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": ""
                    }
                },
                "summary": "The Transform CHOP takes translate, rotate, and/or scale channels and transforms them using the transform parameters in the CHOP."
            },
            "triggerCHOP": {
                "label": "Trigger",
                "parameters": {
                    "triggeron": {
                        "label": "Trigger On",
                        "summary": "Determines whether a trigger occurs on an increasing slope or decreasing slope when passing the trigger threshold. A release will occur on the opposite slope."
                    },
                    "peak": {
                        "label": "Peak Level",
                        "summary": "The peak level it will rise to in the attack phase."
                    },
                    "minsustainunit": {
                        "label": "Min Sustain Length Unit",
                        "summary": ""
                    },
                    "mintrigger": {
                        "label": "Min Trigger Length",
                        "summary": "The minimum amount of time that the trigger will remain active."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "retrigger": {
                        "label": "Re-Trigger Delay",
                        "summary": "The amount of time after a trigger point that a new trigger may occur."
                    },
                    "decayunit": {
                        "label": "Decay Length Unit",
                        "summary": ""
                    },
                    "minsustain": {
                        "label": "Min Sustain Length",
                        "summary": ""
                    },
                    "dshape": {
                        "label": "Decay Shape",
                        "summary": "The shape of the decay ramp."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "triggerpulse": {
                        "label": "Trigger Pulse",
                        "summary": ""
                    },
                    "threshold": {
                        "label": "Release = Trigger Threshold",
                        "summary": "If on, the trigger and release thresholds are the same value."
                    },
                    "remainder": {
                        "label": "Remainder",
                        "summary": "See Remainder Options. What to do with remaining samples at end of the interval:"
                    },
                    "ashape": {
                        "label": "Attack Shape",
                        "summary": "The shape of the attack ramp."
                    },
                    "delay": {
                        "label": "Delay Length",
                        "summary": "The amount of time to delay the envelope after the trigger point."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "channame": {
                        "label": "Channel Name",
                        "summary": "Name of channels output."
                    },
                    "peaklenunit": {
                        "label": "Peak Length Unit",
                        "summary": ""
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "Sets the sample rate of the output. Only used when Specify Rate is turned on."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "peaklen": {
                        "label": "Peak Length",
                        "summary": "The length of time of the peak is held before going into the decay phase."
                    },
                    "specifyrate": {
                        "label": "Specify Rate",
                        "summary": "Allows you to specify the sample rate in the Sample Rate parameter below."
                    },
                    "retriggerunit": {
                        "label": "Re-Trigger Delay Unit",
                        "summary": ""
                    },
                    "delayunit": {
                        "label": "Delay Length Unit",
                        "summary": ""
                    },
                    "attack": {
                        "label": "Attack Length",
                        "summary": "The amount of rise time from zero to the peak level."
                    },
                    "rshape": {
                        "label": "Release Shape",
                        "summary": "The shape of the release ramp."
                    },
                    "decay": {
                        "label": "Decay Length",
                        "summary": "The amount of decay time from the peak level to the sustain level."
                    },
                    "threshup": {
                        "label": "Trigger Threshold",
                        "summary": "The trigger threshold (see above)."
                    },
                    "mintriggerunit": {
                        "label": "Min Trigger Length Unit",
                        "summary": ""
                    },
                    "multitriggeradd": {
                        "label": "Multi-Triggers Additive",
                        "summary": ""
                    },
                    "releaseunit": {
                        "label": "Release Length Unit",
                        "summary": ""
                    },
                    "complete": {
                        "label": "Complete Envelope",
                        "summary": "If on, a complete envelope is produced for each trigger point. If off, the envelope may be terminated at any time by a release point."
                    },
                    "release": {
                        "label": "Release Length",
                        "summary": "The amount of release time from the sustain level to zero."
                    },
                    "threshdown": {
                        "label": "Release Threshold",
                        "summary": "The release threshold (see above)."
                    },
                    "attackunit": {
                        "label": "Attack Length Unit",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "sustain": {
                        "label": "Sustain Level",
                        "summary": "The sustain level. This level is held until a release point is reached (the input goes below the threshold)."
                    },
                    "clamppeak": {
                        "label": "Clamp at Peak Level",
                        "summary": ""
                    }
                },
                "summary": "The Trigger CHOP starts an audio-style attack/decay/sustain/release (ADSR) envelope to all trigger pulses in the input channels."
            },
            "speedCHOP": {
                "label": "Speed",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "constant3": {
                        "label": "Third Constant",
                        "summary": "Constant to add to the entire result after integrating three times."
                    },
                    "constant1": {
                        "label": "First Constant",
                        "summary": "Constant to add to the entire result after integrating once."
                    },
                    "order": {
                        "label": "Order",
                        "summary": "Determines the order of the integral to use. If the input is a velocity, a First Order integral will return the position. If the input is an acceleration, a Second Order integral will return the position, and a First Order integral will return the velocity."
                    },
                    "min": {
                        "label": "Minimum",
                        "summary": "The minimum value the output channel can have."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "This button resets the channel(s) to the Reset Value."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "resetvalue": {
                        "label": "Reset Value",
                        "summary": "The channel(s) is set to this value when reset."
                    },
                    "max": {
                        "label": "Maximum",
                        "summary": "The maximum value the output channel can have."
                    },
                    "constant2": {
                        "label": "Second Constant",
                        "summary": "Constant to add to the entire result after integrating twice."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "limittype": {
                        "label": "Limit Type",
                        "summary": "The type of limit function to use:"
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "resetcondition": {
                        "label": "Reset Condition",
                        "summary": "This menu determines how the Reset input triggers a reset of the channel(s)."
                    }
                },
                "summary": "The Speed CHOP converts speed (units per second) to distance (units) over a time range."
            },
            "fanCHOP": {
                "label": "Fan",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "alloff": {
                        "label": "All Channels Off",
                        "summary": "For a Fan In operation, when all input channels are off, set the output to -1 or 0."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "quantize": {
                        "label": "Quantize Output",
                        "summary": "On by default. Channels are quatized to the nearest integer. For example, if the input channel's value is 5.6 and 6 channels are created, channel 5 is 1, while the rest are 0."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "channame": {
                        "label": "Channel Names",
                        "summary": "The names for the output channels that this CHOP creates. This also controls how many output channels are created (one for each name) in Fan Out mode. In Fan In mode, only one channel is created, and its name is the base name (minus the number suffix) of the first input channel."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "range": {
                        "label": "Outside Range",
                        "summary": "Determines how to handle input values that are outside the index range (0 to N-1)."
                    },
                    "fanop": {
                        "label": "Operation",
                        "summary": "Selects either Fan In or Fan Out."
                    }
                },
                "summary": "The Fan CHOP converts one channel out to many channels, or converts many channels down to one."
            },
            "mergeCHOP": {
                "label": "Merge",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "align": {
                        "label": "Align",
                        "summary": "This menu handles cases where multiple input CHOPs have different start or end times. All channels output from a CHOP share the same start/end interval, so the inputs must be treated with the Align Options:"
                    },
                    "duplicate": {
                        "label": "Duplicate Names",
                        "summary": "When channels of the input CHOPs have the same name, this menu determines what to do."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Merge CHOP takes multiple inputs and merges them into the output."
            },
            "posistagenetCHOP": {
                "label": "PosiStageNet",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "By default, TCP Port uses 56565. Firewall settings may need to be adjusted to allow for the PosiStageNet CHOP to communicate properly."
                    },
                    "ori": {
                        "label": "Orientation",
                        "summary": "Include orientation channels as Euler angles."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "If turned off, the PosiStageNet CHOP will stop receiving data."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "speed": {
                        "label": "Speed",
                        "summary": "Include speed channels."
                    },
                    "targetpos": {
                        "label": "Target Position",
                        "summary": "Include the target position as channels."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "netaddress": {
                        "label": "Network Address",
                        "summary": "Set this parameter to the network address of the PosiStageNet server, device, or software."
                    },
                    "samplerate": {
                        "label": "Sample Rate",
                        "summary": "Specify the rate at which the incoming data is sampled."
                    },
                    "pos": {
                        "label": "Position",
                        "summary": "Include position channels."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": "This button resets the channels. This will clear all the data channels in the CHOP, so any untracked data will be removed"
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "accel": {
                        "label": "Acceleration",
                        "summary": "Include acceleration channels."
                    }
                },
                "summary": "This operator decodes PosiStageNet protocol data into CHOP channels."
            },
            "trimCHOP": {
                "label": "Trim",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "endunit": {
                        "label": "End Unit",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "discard": {
                        "label": "Discard",
                        "summary": "Which part of the channel to discard:"
                    },
                    "relative": {
                        "label": "Unit Values",
                        "summary": "Determines whether the Start/End parameters are expressed as absolute numbers (relative to time 0) or numbers that are relative to the start and end of the input channels."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "end": {
                        "label": "End",
                        "summary": "The end of the range to trim. The numbers are expressed in seconds, frames or samples, depending on units menu for each parameter."
                    },
                    "startunit": {
                        "label": "Start Unit",
                        "summary": ""
                    },
                    "start": {
                        "label": "Start",
                        "summary": "The start of the range to trim. The numbers are expressed in seconds, frames or samples, depending on units menu for each parameter."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Trim CHOP shortens or lengthens the input's channels."
            },
            "oculusriftCHOP": {
                "label": "Oculus Rift",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "When on, this CHOP will update it's data when it cooks."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "output": {
                        "label": "Output",
                        "summary": "Switches between three different output modes."
                    },
                    "near": {
                        "label": "Near",
                        "summary": "Specifies the distance of the near clipping plane for the projection matrix."
                    },
                    "orientation": {
                        "label": "Orientation",
                        "summary": "When on, the output channels will include sensor orientation."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "velocity": {
                        "label": "Velocity",
                        "summary": "When on, the output channels will include velocity."
                    },
                    "controllerbuttons": {
                        "label": "Controller Buttons",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": ""
                    },
                    "recenter": {
                        "label": "Re-Center",
                        "summary": ""
                    },
                    "acceleration": {
                        "label": "Acceleration",
                        "summary": "When on, the output channels will include acceleration."
                    },
                    "deviceinfo": {
                        "label": "Device Info",
                        "summary": "When on, the output channels will include device info."
                    }
                },
                "summary": "The Oculus Rift CHOP connects to an Oculus Rift device and outputs several useful sets of channels that can be used to integrate the Oculus Rift into projects."
            },
            "dmxinCHOP": {
                "label": "DMX In",
                "parameters": {
                    "subnetname": {
                        "label": "Subnet Name",
                        "summary": "Specify the channel prefix for the subnet part of the address."
                    },
                    "netname": {
                        "label": "Net Name",
                        "summary": "Specify the channel prefix for the net part of the address."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "filterdat": {
                        "label": "Filter Table",
                        "summary": "Available when using Packet Per Channel Format for Art-Net or sACN. Use the docked Table DAT to specify which address channels are being received from. Addresses can be specified by adding rows for each channel and specifying net, subnet and universe. The net, subnet and universe columns are optional. If for example the net column is missing from the Filter Table, the Net parameter is used instead.  When removing the Filter Table from the parameter, the specified address will be used for the first channel while all other channels are received from consecutive addresses.  Note: For sACN the first available universe has the index 1 as universe 0 is reserved by the system for future use."
                    },
                    "universe": {
                        "label": "Art-Net Universe (0-15)",
                        "summary": "When the Interface parameter is set to Art-Net, this sets the universe address. A single DMX512 frame of 512 channels is referred to as a universe. The range for this parameter is 0-15."
                    },
                    "queuesize": {
                        "label": "Queue Size",
                        "summary": "Adds a queue to incoming data to smooth input."
                    },
                    "startcodes": {
                        "label": "Start Codes",
                        "summary": "A list of accepted start codes when using sACN. If the DMX In CHOP receives an sACN packet with a start code not in the list then it will discard it."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "rate": {
                        "label": "Rate",
                        "summary": "Resample the incoming data to this rate."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "serialport": {
                        "label": "Serial Port",
                        "summary": "When the Interface parameter is set Generic Serial this parameter lets you select which Serial (COM) port to use."
                    },
                    "net": {
                        "label": "Art-Net Net (0-127)",
                        "summary": "When the Interface parameter is set to Art-Net, this sets the net address. A net is a groups of 16 consecutive subnets or 256 consecutive universes. The range for this parameter is 0-127. This is not a network IP address."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Connects to the device while On."
                    },
                    "format": {
                        "label": "Format",
                        "summary": "Select between receiving Packet Per Sample (Timesliced), Packet Per Channel (Latest) or Packet Per Channel (All). When selecting Packet Per Channel (Latest), any messages outside the last cook are being discarded while the option Packet Per Channel (All) will append channels that would get otherwise skipped by dropped frames."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "subnet": {
                        "label": "Art-Net Subnet (0-15)",
                        "summary": "When the Interface parameter is set to Art-Net, this sets the subnet address. A subnet is a group of 16 consecutive universes. The range for this parameter is 0-15. This is not a network subnet mask."
                    },
                    "device": {
                        "label": "Device",
                        "summary": "Select a DMX device from the menu."
                    },
                    "multicast": {
                        "label": "Multicast",
                        "summary": "Enable multicast for sACN. Multicast automatically builds the IP based on Net, Subnet, and Universe of the device. This allows for the DMX In CHOP to automatically receive from a sender without knowledge of it's address."
                    },
                    "interface": {
                        "label": "Interface",
                        "summary": "Select the type of interface to connect to the device with."
                    },
                    "universename": {
                        "label": "Universe Name",
                        "summary": "Specify the channel prefix for the universe part of the address."
                    }
                },
                "summary": "The DMX In CHOP receives channels from DMX, Art-Net  or sACN devices."
            },
            "inversekinCHOP": {
                "label": "Inverse Kin",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "boneend": {
                        "label": "End Bone",
                        "summary": "If you specify a bone as the last bone in chain, then you will be defining a bone chain that has the current bone as the first in the chain and the bone chosen from the menu as the final bone in the chain. This chain includes all bones in between those just chosen."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "boneroot": {
                        "label": "Root Bone",
                        "summary": "The starting bone of the chain; where the chain starts."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "ikdampen": {
                        "label": "IK Dampening",
                        "summary": "Amount of damping (slows down at the extremes of angular allowability)."
                    },
                    "iktwist": {
                        "label": "IK Twist",
                        "summary": "Amount of twist allowed by the kinematics solution."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "curve": {
                        "label": "Curve Object",
                        "summary": "Curve object to follow."
                    },
                    "solvertype": {
                        "label": "Solver Type",
                        "summary": "This parameter defines the method used to determine the motion of the Bone object when it, its ancestor, or its children are moved."
                    },
                    "endaffector": {
                        "label": "End Affector",
                        "summary": "This specifies which object will serve as the chain's end affector."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "twistaffector": {
                        "label": "Twist Affector",
                        "summary": "If you specify a twist affector, the entire bone chain will twist along the axis from the chain's root to its end-affector so that the first bone is pointing as much as it can at the twist affector. The twist value can be specified as well, and is applied on top of the twist generated for the twist affector."
                    }
                },
                "summary": "The Inverse Kin CHOP calculates an inverse kinematics simulation for Bone objects."
            },
            "delayCHOP": {
                "label": "Delay",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "maxdelayunit": {
                        "label": "Max Delay Unit",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "delayunit": {
                        "label": "Delay Unit",
                        "summary": ""
                    },
                    "delay": {
                        "label": "Delay",
                        "summary": "Delay in seconds, or in units determined by its Units menu. To get a delay per channel, use me.chanIndex. From a table where each row has a delay amount, use op('delaysTable')[me.chanIndex,0]."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "maxdelay": {
                        "label": "Max Delay",
                        "summary": "Useful for optimizing performance when the Delay parameter above is changing dynamically. Set Max Delay to a value higher than the expected range of the Delay parameter."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Delay CHOP delays the input. Multiple channels can be fed in to delay each separately and each channels can have a separate delay time."
            },
            "keyboardinCHOP": {
                "label": "Keyboard In",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "order": {
                        "label": "Key Order",
                        "summary": "If you ask for 5 keys, they are sequential on the keyboard by three methods:"
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While On, the keyboard inputs will be monitored and the CHOP will cook every frame. When set to Off it will not cook and the current keyboard values will not be output. While Playing will capture keyboard events only when the Timeline is playing forward."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "modifiers": {
                        "label": "Modifier Keys",
                        "summary": "If it is set to Ctrl, the keys will only go On if you are also pressing the Ctrl key. If it set to Ignore, it doesn't matter if the Ctrl key is down or not. The Keyboard In CHOP does not use the Alt key, which has been reserved for shortcuts."
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": ""
                    },
                    "channelnames": {
                        "label": "Channel Names",
                        "summary": "Channel names are generated automatically using one of these criteria."
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": ""
                    },
                    "firstkey": {
                        "label": "First Key",
                        "summary": "Specifies the key to start generating channels from. Valid keys are the numbers 0-9, letters A-Z, and keypad 0-9."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "number": {
                        "label": "Number of Keys",
                        "summary": "Specifies the number of keys to generate including the first key."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": ""
                    }
                },
                "summary": "The Keyboard In CHOP receives ASCII input from the keyboard, and outputs channels for the number of keys specified."
            },
            "leapmotionCHOP": {
                "label": "Leap Motion",
                "parameters": {
                    "lefthands": {
                        "label": "Left Hands",
                        "summary": ""
                    },
                    "righthands": {
                        "label": "Right Hands",
                        "summary": ""
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "fingersize": {
                        "label": "Finger Size",
                        "summary": "If set, the following channels will be included for each finger, in addition to any others: * hand*/finger*:length - Length of the detected finger. * hand*/finger*:width - Width of the detected finger."
                    },
                    "hmd": {
                        "label": "HMD Mode",
                        "summary": "Switches the device to Head Mounted Display mode."
                    },
                    "circlegestures": {
                        "label": "Circle Gestures",
                        "summary": "Number of circle gestures. The following channels will be included for each detected Circle Gesture: * circle*:handindex - Index of the hand associated with the gesture. See Notes. * circle*:t[xyz] - Coordinates of the center of the Circle Gesture relative to the sensor. * circle*:radius - Radius of the circle in the gesture. * circle*:progress - Number of cycles done in the gesture."
                    },
                    "handvelocity": {
                        "label": "Hand Velocity",
                        "summary": "If set, the following channels will be included for each hand, in addition to any others: * hand*:v[xyz] - Velocity of the detected hand."
                    },
                    "statuschannels": {
                        "label": "Status Channels",
                        "summary": "If set, the following channels will be included: * hands - Number of hands detected by the sensor. * fingers - Number of fingers detected by the sensor. * tools - Number of tools detected by the sensor. * gestures - Number of gestures detected by the sensor. * [hand|*finger|tool|circle|swipe|keytap|screeptap]*:tracking - 1 if the data for the hand, finger, tool or gesture is actively being tracked, 0 otherwise."
                    },
                    "namedhands": {
                        "label": "Named Hands",
                        "summary": ""
                    },
                    "debugchannels": {
                        "label": "Debug Channels",
                        "summary": "If set, the following channels will be included: * connected - 1 if the Leap Motion sensor is connected, 0 otherwise. * sequence_id - Unique id corresponding to the current frame."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "handsphere": {
                        "label": "Hand Sphere",
                        "summary": ""
                    },
                    "fingersperhand": {
                        "label": "Fingers per Hand",
                        "summary": ""
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "fingerjoints": {
                        "label": "Finger Joints",
                        "summary": ""
                    },
                    "keytapgestures": {
                        "label": "Key Tap Gestures",
                        "summary": "Number of key tap gestures. The following channels will be included for each detected Key Tap Gesture: * keytap*:handindex - Index of the hand associated with the gesture. See Notes. * keytap*:fingerindex - Index of the finger associated with the gesture. See Notes. * keytap*:t[xyz] - CCoordinates of the Screen Tap Gesture relative to the sensor.    NOTES: Rotation order is Rx Ry Rz. All vectors are given in the following coordinate system. For gestures, if handindex is 1, then channels with the prefix hand1 contain the data for the hand associated with the gesture. If handindex is -1 it means there are no channels available for the hand associated with the gesture. The same follows for fingerindex. Data for all indexed prefixes (hand*, hand/finger*, etc.) will continue to correspond to the same hand/finger/tool/gesture as long as the Leap Motion sensor is detecting it. Limits for hands/fingers/tools/gestures will filter data from the Leap Motion sensor if there are more than the specified limit detected."
                    },
                    "tools": {
                        "label": "Tools",
                        "summary": "Number of tools. The following channels will be included for each detected tool: * tool*:t[xyz] - Coordinates of the tool relative to the sensor. * tool*:length - Length of the detected tool. * tool*:width - Width of the detected tool."
                    },
                    "pinchstrength": {
                        "label": "Pinch Strength",
                        "summary": ""
                    },
                    "screentapgestures": {
                        "label": "Screen Tap Gestures",
                        "summary": ""
                    },
                    "active": {
                        "label": "Active",
                        "summary": "If set, this CHOP will update the values in its channels."
                    },
                    "swipegestures": {
                        "label": "Swipe Gestures",
                        "summary": "Number of swipe gestures. The following channels will be included for each detected Swipe Gesture: * swipe*:handindex - Index of the hand associated with the gesture. See Notes. * swipe*:fingerindex - Index of the finger associated with the gesture. See Notes. * swipe*:t[xyz] - Coordinates of the Swipe Gesture relative to the sensor. * swipe*:start[xyz] - Coordinates of the start of the Swipe Gesture relative to the sensor. * swipe*:speed - Speed of the swipe."
                    },
                    "hands": {
                        "label": "Hands",
                        "summary": "Number of hands. The following channels will be included for each detected hand: * hand*:t[xyz] - Coordinates of the hand relative to the sensor. * hand*:r[xyz] - Rotation of the detected hand."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "fingerextended": {
                        "label": "Finger Extended",
                        "summary": ""
                    },
                    "fingerrotation": {
                        "label": "Finger Rotation",
                        "summary": ""
                    },
                    "namedfingers": {
                        "label": "Named Fingers",
                        "summary": ""
                    },
                    "grabstrength": {
                        "label": "Grab Strength",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Leap Motion CHOP reads hand, finger, tool and gesture data from the Leap Motion controller."
            },
            "audiostreaminCHOP": {
                "label": "Audio Stream In",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "Turns the audio streaming on (1) or off (0)."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "volume": {
                        "label": "Volume",
                        "summary": "0 = mute, 1 = full volume."
                    },
                    "url": {
                        "label": "URL",
                        "summary": "The URL address of the stream. E.g rtsp://localhost:554/tdaudio"
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "opentimeout": {
                        "label": "Open Timeout",
                        "summary": "The time (in milliseconds) TouchDesigner will wait attempting to open the audio stream."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "videostreamintop": {
                        "label": "Video Stream In TOP",
                        "summary": ""
                    }
                },
                "summary": "The Audio Stream In CHOP can stream audio into TouchDesigner from any rtsp server."
            },
            "holdCHOP": {
                "label": "Hold",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "sample": {
                        "label": "Sample",
                        "summary": "Defines when to sample the input channels. The parameters are as follows."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "pulse": {
                        "label": "Off to On Pulse",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Hold CHOP waits for a 0 to 1 step on its second input, at which time it reads the current values from the first input (one value per channel)."
            },
            "audioparaeqCHOP": {
                "label": "Audio Para EQ",
                "parameters": {
                    "bandwidth3": {
                        "label": "Bandwidth EQ3",
                        "summary": "Bandwidth determines how much the levels decrease near the center frequency, expressed in octaves."
                    },
                    "boost3": {
                        "label": "Boost (dB) EQ3",
                        "summary": "When boost is greater than 0, it will make louder the audio around the center frequency. When boost is less than 0, it will make the audio quieter around the center frequency. Boost is in decibels (dB) where 0 dB has no effect."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "enableeq3": {
                        "label": "Enable EQ3",
                        "summary": "When off, it passes the sound through the third equalizer unchanged."
                    },
                    "frequencyhz2": {
                        "label": "Frequency (Hz) EQ2",
                        "summary": "The filter frequency is expressed in Hz (cycles per second). This parameter set to 1000 has exactly the same effect as the above parameter set to 3."
                    },
                    "drywet": {
                        "label": "Dry / Wet Mix",
                        "summary": ""
                    },
                    "frequencyhz3": {
                        "label": "Frequency (Hz) EQ3",
                        "summary": "The filter frequency is expressed in Hz (cycles per second). This parameter set to 1000 has exactly the same effect as the above parameter set to 3."
                    },
                    "bandwidth2": {
                        "label": "Bandwidth EQ2",
                        "summary": "Bandwidth determines how much the levels decrease near the center frequency, expressed in octaves."
                    },
                    "bandwidth1": {
                        "label": "Bandwidth EQ1",
                        "summary": "Bandwidth determines how much the levels decrease near the center frequency, expressed in octaves."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "frequencyhz1": {
                        "label": "Frequency (Hz) EQ1",
                        "summary": "The filter frequency is expressed in Hz (cycles per second). This parameter set to 1000 has exactly the same effect as the above parameter set to 3."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "enableeq2": {
                        "label": "Enable EQ2",
                        "summary": "When off, it passes the sound through the second equalizer unchanged."
                    },
                    "frequencylog1": {
                        "label": "Frequency (Hz=10**val) EQ1",
                        "summary": "The frequency is expressed in power-of-10, where value 0 translates to 1 Hz (10**0), value 1 is 10 Hz (10**1), value 2 is 100 Hz (10**2), value 3 is 1000 Hz, value 4 is 10,000 Hz, value 4.5 is 31,623 Hz. The parameter in this form gives more meaningful range in relation to human hearing, as increasing the parameter by 1 raises the frequency by about 3 octaves."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "frequencylog2": {
                        "label": "Frequency (Hz=10**val) EQ2",
                        "summary": "The frequency is expressed in power-of-10, where value 0 translates to 1 Hz (10**0), value 1 is 10 Hz (10**1), value 2 is 100 Hz (10**2), value 3 is 1000 Hz, value 4 is 10,000 Hz, value 4.5 is 31,623 Hz. The parameter in this form gives more meaningful range in relation to human hearing, as increasing the parameter by 1 raises the frequency by about 3 octaves."
                    },
                    "boost1": {
                        "label": "Boost (dB) EQ1",
                        "summary": "When boost is greater than 0, it will make louder the audio around the center frequency. When boost is less than 0, it will make the audio quieter around the center frequency. Boost is in decibels (dB) where 0 dB has no effect."
                    },
                    "frequencylog3": {
                        "label": "Frequency (Hz=10**val) EQ3",
                        "summary": "The frequency is expressed in power-of-10, where value 0 translates to 1 Hz (10**0), value 1 is 10 Hz (10**1), value 2 is 100 Hz (10**2), value 3 is 1000 Hz, value 4 is 10,000 Hz, value 4.5 is 31,623 Hz. The parameter in this form gives more meaningful range in relation to human hearing, as increasing the parameter by 1 raises the frequency by about 3 octaves."
                    },
                    "units": {
                        "label": "Frequency Units",
                        "summary": "How frequency is expressed:"
                    },
                    "enableeq1": {
                        "label": "Enable EQ1",
                        "summary": "When off, it passes the sound through the first equalizer unchanged."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "boost2": {
                        "label": "Boost (dB) EQ2",
                        "summary": "When boost is greater than 0, it will make louder the audio around the center frequency. When boost is less than 0, it will make the audio quieter around the center frequency. Boost is in decibels (dB) where 0 dB has no effect."
                    }
                },
                "summary": "The Audio Para EQ CHOP (parametric equalizer) applies up to 3 parametric filters to the incoming sound."
            },
            "timesliceCHOP": {
                "label": "Time Slice",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "quatrot": {
                        "label": "Quaternion Blend",
                        "summary": "Rotation channels blended using quaternions. Channels must be tagged as rotation channels (For example with the Attribute CHOP or Object CHOP)."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "How to sample the input CHOP to create the output time slice. If the input CHOP is not time sliced and lies outside the current time slice region, its extend regions will be sampled."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Time Slice CHOP outputs a time slice of samples."
            },
            "spliceCHOP": {
                "label": "Splice",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "insertinterp": {
                        "label": "Insert Interpolate",
                        "summary": "Choose interpolation method for stretched insert channel."
                    },
                    "insertmethod": {
                        "label": "Insert Method",
                        "summary": "Handles how the 2nd input is spliced into the channel."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "direction": {
                        "label": "Direction",
                        "summary": "Specify which direction the Start and Trim parameters below work."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "unmatchedinterp": {
                        "label": "Unmatched Chan Interpolate",
                        "summary": "Choose interpolation method for any channels that are unmatched using \\\"Match Channels\\\"."
                    },
                    "insertlength": {
                        "label": "Insert Length",
                        "summary": "Used to set the length of the inserted data based on the Insert Method above. When set to Trim to Insert Length, the inserted data will be trimmed when this parameter value is shorter than the 2nd input and cycled when it is longer. When set to Stretch to Insert Length, the inserted data is stretched to fit this parameter value."
                    },
                    "units": {
                        "label": "Units",
                        "summary": ""
                    },
                    "trimlength": {
                        "label": "Trim Length",
                        "summary": "The how long the trimmed region is. To output just the trimmed region, switch Output Trimmed Section to On."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "The position the Trim and Insert operations start from. This will be from the first sample or the last sample in the channel depending on the Direction parameter above."
                    },
                    "match": {
                        "label": "Match by",
                        "summary": "Match channels between inputs by name or number."
                    },
                    "trimlengthunits": {
                        "label": "Trim Length Units",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "trimmethod": {
                        "label": "Trim Method",
                        "summary": "Gives options for how to set the trim length."
                    },
                    "insertunits": {
                        "label": "Insert Units",
                        "summary": ""
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "outputtrimmed": {
                        "label": "Output Trimmed Section",
                        "summary": "When Off the output is the spliced and trimmed channels based and on the parameters below. When On the output is the opposite and contains the trimmed out portion of the channels."
                    }
                },
                "summary": "The Splice CHOP inserts CHOP channels connected to the second input into the channels of the first input."
            },
            "countCHOP": {
                "label": "Count",
                "parameters": {
                    "triggeron": {
                        "label": "Trigger On",
                        "summary": "Determines whether a trigger occurs on an increasing slope or decreasing slope when passing the trigger threshold. A release will occur on the opposite slope."
                    },
                    "resetpulse": {
                        "label": "Reset Pulse",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "This button resets the channel(s) to the Reset Value."
                    },
                    "limitmin": {
                        "label": "Limit Minimum",
                        "summary": "The minimum allowed count number."
                    },
                    "limitmax": {
                        "label": "Limit Maximum",
                        "summary": "The maximum allowed count number."
                    },
                    "threshdown": {
                        "label": "Release Threshold",
                        "summary": "A release count is triggered when the channel level drops below this threshold."
                    },
                    "ontooff": {
                        "label": "On to Off",
                        "summary": "The operation to perform when a release event (on to off) occurs."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "resetvalue": {
                        "label": "Reset Value",
                        "summary": "The channel(s) is set to this value when reset."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "retriggerunit": {
                        "label": "Re-Trigger Delay Unit",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "retrigger": {
                        "label": "Re-Trigger Delay",
                        "summary": "The amount of time after a trigger point that a new trigger may occur."
                    },
                    "threshup": {
                        "label": "Trigger Threshold",
                        "summary": "The channel level that must be exceeded in order to trigger a count."
                    },
                    "threshold": {
                        "label": "Release = Trigger Threshold",
                        "summary": "If on, the trigger threshold is also used as the release threshold."
                    },
                    "output": {
                        "label": "Limit",
                        "summary": ""
                    },
                    "on": {
                        "label": "While On",
                        "summary": "The operation to perform while the input remains triggered (on)."
                    },
                    "resetcondition": {
                        "label": "Reset Condition",
                        "summary": "This menu determines how the Reset input triggers a reset of the channel(s)."
                    },
                    "offtoon": {
                        "label": "Off to On",
                        "summary": "The operation to perform when a trigger event (off to on) occurs."
                    },
                    "off": {
                        "label": "While Off",
                        "summary": "The operation to perform while the input is not triggered (off).  Note: The scripts are run relative to the parent node of this CHOP, as if the script is in the node above this CHOP."
                    }
                },
                "summary": "The Count CHOP counts the number of times a channel crosses a trigger or release threshold."
            },
            "selectCHOP": {
                "label": "Select",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "align": {
                        "label": "Align",
                        "summary": "This menu handles cases where multiple input CHOPs have different start or end times. All channels output from a CHOP share the same start/end interval, so the inputs must be treated with the Align Options:"
                    },
                    "renamefrom": {
                        "label": "Rename from",
                        "summary": "The channel pattern to rename. See Pattern Matching."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "chop": {
                        "label": "CHOP",
                        "summary": "The source(s) of the channels. (Assuming the CHOP is not directly connected)."
                    },
                    "channames": {
                        "label": "Channel Names",
                        "summary": "The names of the channels to keep. Name patterns may be used. Ex:    chan[1-5] *x /project1/geo1:t[xyz]  The order of the names determine the order of the output channels. If a channel is specified multiple times, it is included in the output multiple times."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "autoprefix": {
                        "label": "Automatic Prefix",
                        "summary": "When 2 channels have the same name, turning on this option will add the node's name (or the node's parent's name, etc.) as a  prefix to the channel name. For example, if selecting a channel from /wave1/chan1 and /wave2/chan1, the channels would be renamed chan1 and chan2 if this option is off. Once turned on the channels would be named wave1:chan1 and wave2:chan1."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "renameto": {
                        "label": "Rename to",
                        "summary": "The replacement pattern for the names. The default parameters do not rename the channels. See Pattern Replacement.  Example:  : Channel Names: c[1-10:2] ambient : Rename From: c* ambient : Rename To: b[1-5] amb  This example fetches channels c1 c3 c5 c7 c9 and ambient.  They are then renamed to to b1 b2 b3 b4 b5 and amb.  See the Rename CHOP for a further description of rename patterns."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Select CHOP selects and renames channels from other CHOPs of any CHOP network."
            },
            "extendCHOP": {
                "label": "Extend",
                "parameters": {
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "left": {
                        "label": "Left Behavior",
                        "summary": "The extend condition before the CHOP interval. They are:"
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "right": {
                        "label": "Right Behavior",
                        "summary": "Extend condition after the interval. Same options as Extend Left."
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": "The value used for the Default Value extend condition."
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    }
                },
                "summary": "The Extend CHOP only sets the \\\"extend conditions\\\" of a CHOP, which determines what values you get when sampling the CHOP before or after its interval."
            },
            "pulseCHOP": {
                "label": "Pulse",
                "parameters": {
                    "pulse21": {
                        "label": "Pulse 21",
                        "summary": ""
                    },
                    "pulse3": {
                        "label": "Pulse 3",
                        "summary": ""
                    },
                    "pulse1": {
                        "label": "Pulse 1",
                        "summary": ""
                    },
                    "left": {
                        "label": "Extend Left",
                        "summary": "The left extend conditions."
                    },
                    "pulse11": {
                        "label": "Pulse 11",
                        "summary": ""
                    },
                    "pulse18": {
                        "label": "Pulse 18",
                        "summary": ""
                    },
                    "pulse12": {
                        "label": "Pulse 12",
                        "summary": ""
                    },
                    "pulse30": {
                        "label": "Pulse 30",
                        "summary": ""
                    },
                    "pulse31": {
                        "label": "Pulse 31",
                        "summary": ""
                    },
                    "pulse0": {
                        "label": "Pulse 0",
                        "summary": ""
                    },
                    "widthunit": {
                        "label": "Pulse Width Unit",
                        "summary": ""
                    },
                    "defval": {
                        "label": "Default Value",
                        "summary": "The default value for extend conditions."
                    },
                    "interp": {
                        "label": "Interpolate",
                        "summary": "You can interpolate the values between pulses using the following function curves:"
                    },
                    "pulse4": {
                        "label": "Pulse 4",
                        "summary": ""
                    },
                    "exporttable": {
                        "label": "Export Table",
                        "summary": "The DAT used to hold the export information when using the DAT Table Export Methods (See above)."
                    },
                    "srselect": {
                        "label": "Sample Rate Match",
                        "summary": "Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \\\"Linear\\\" if the Interpolate Options are not available."
                    },
                    "pulse6": {
                        "label": "Pulse 6",
                        "summary": ""
                    },
                    "pulse14": {
                        "label": "Pulse 14",
                        "summary": ""
                    },
                    "exportmethod": {
                        "label": "Export Method",
                        "summary": "This will determine how to connect the CHOP channel to the parameter. Refer to the Export article for more information."
                    },
                    "pulse13": {
                        "label": "Pulse 13",
                        "summary": ""
                    },
                    "lastpulse": {
                        "label": "Last Pulse at Last Sample",
                        "summary": "In order to set the value at the last sample, the option Last Pulse at Last Sample is provided. Otherwise, the last pulse is prior to the last sample."
                    },
                    "pulse7": {
                        "label": "Pulse 7",
                        "summary": ""
                    },
                    "pulse19": {
                        "label": "Pulse 19",
                        "summary": ""
                    },
                    "pulse29": {
                        "label": "Pulse 29",
                        "summary": ""
                    },
                    "pulse20": {
                        "label": "Pulse 20",
                        "summary": ""
                    },
                    "pulse15": {
                        "label": "Pulse 15",
                        "summary": ""
                    },
                    "max": {
                        "label": "Maximum",
                        "summary": "The pulses can be restricted to a Maximum limit. If the Limit Type is Clamp, the graph has additional convenient handles at the maximum for each pulse."
                    },
                    "pulse22": {
                        "label": "Pulse 22",
                        "summary": ""
                    },
                    "pulse28": {
                        "label": "Pulse 28",
                        "summary": ""
                    },
                    "start": {
                        "label": "Start",
                        "summary": "The start times of the desired interval."
                    },
                    "scope": {
                        "label": "Scope",
                        "summary": "To determine which channels get affected, some CHOPs use a Scope string on the Common page."
                    },
                    "right": {
                        "label": "Extend Right",
                        "summary": "The right extend conditions."
                    },
                    "pulse25": {
                        "label": "Pulse 25",
                        "summary": ""
                    },
                    "limit": {
                        "label": "Limit Type",
                        "summary": ""
                    },
                    "pulse5": {
                        "label": "Pulse 5",
                        "summary": ""
                    },
                    "channelname": {
                        "label": "Channel Names",
                        "summary": ""
                    },
                    "width": {
                        "label": "Pulse Width",
                        "summary": "By default, the pulses are a single sample long, but you can increase the Pulse Width so that the pulses are steps to the next pulse."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": ""
                    },
                    "endunit": {
                        "label": "End Unit",
                        "summary": ""
                    },
                    "pulse16": {
                        "label": "Pulse 16",
                        "summary": ""
                    },
                    "pulse10": {
                        "label": "Pulse 10",
                        "summary": ""
                    },
                    "min": {
                        "label": "Minimum",
                        "summary": "The pulses can be restricted to a Minimum limit. If the Limit Type is Clamp, the graph has additional convenient handles at the minimum for each pulse."
                    },
                    "pulse27": {
                        "label": "Pulse 27",
                        "summary": ""
                    },
                    "pulse8": {
                        "label": "Pulse 8",
                        "summary": ""
                    },
                    "autoexportroot": {
                        "label": "Export Root",
                        "summary": "This path points to the root node where all of the paths that exporting by Channel Name is Path:Parameter are relative to."
                    },
                    "startunit": {
                        "label": "Start Unit",
                        "summary": ""
                    },
                    "pulse17": {
                        "label": "Pulse 17",
                        "summary": ""
                    },
                    "pulse26": {
                        "label": "Pulse 26",
                        "summary": ""
                    },
                    "pulse23": {
                        "label": "Pulse 23",
                        "summary": ""
                    },
                    "pulse2": {
                        "label": "Pulse 2",
                        "summary": ""
                    },
                    "number": {
                        "label": "Number of Pulses",
                        "summary": "The number of pulses to generate."
                    },
                    "pulse24": {
                        "label": "Pulse 24",
                        "summary": ""
                    },
                    "pulse9": {
                        "label": "Pulse 9",
                        "summary": ""
                    },
                    "end": {
                        "label": "End",
                        "summary": "The end times of the desired interval."
                    },
                    "timeslice": {
                        "label": "Time Slice",
                        "summary": "Turning this on forces the channels to be \\\"Time Sliced\\\".  A Time Slice is the time between the last cook frame and the current cook frame."
                    }
                },
                "summary": "The Pulse CHOP generates pulses in one channel at regular intervals."
            }
        },
        "COMPs": {
            "": {
                "label": "",
                "parameters": {},
                "summary": ""
            },
            "nullCOMP": {
                "label": "Null",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "bank": {
                        "label": "Auto-Bank Factor",
                        "summary": "The Auto-Bank Factor rolls the Component based on the curvature of the path at its current position. To turn off auto-banking, set the bank scale to 0."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "constrain": {
                        "label": "Constrain To",
                        "summary": "Allows the location of the object to be constrained to any other object whose path is specified in this parameter."
                    },
                    "pathorient": {
                        "label": "Orient along Path",
                        "summary": "If this option is selected, the Component will be oriented along the path. The positive Z axis of the Component will be pointing down the path."
                    },
                    "pos": {
                        "label": "Position",
                        "summary": "This parameter lets you specify the Position of the Component along the path. The values you can enter for this parameter range from 0 to 1, where 0 equals the starting point and 1 equals the end point of the path. The value slider allows for values as high as 10 for multiple \\\"passes\\\" along the path."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    },
                    "pathsop": {
                        "label": "Path SOP",
                        "summary": "Names the SOP that functions as the path you want this Component to move along. For instance, you can name an SOP that provides a spline path for the camera to follow.  Production Tip: For Smooth Motion Along a Path - Having a Component follow an animation path is simple. However, when using a NURBS curve as your path, you might notice that the Component speeds up and slows down unexpectedly as it travels along the path. This is usually because the CVs are spaced unevenly. In such a case, use the Resample SOP to redistribute the CVs so that they are evenly spaced along the curve. A caution however - using a Resample SOP can be slow if you have an animating path curve.  An alternative method is to append a Basis SOP to the path curve and change it to a Uniform Curve. This way, your Component will move uniformly down the curve, and there is no need for the Resample SOP and the unnecessary points it generates."
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "pxform": {
                        "label": "Apply Pre-Transform",
                        "summary": ""
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which a Component scales and rotates. Altering the pivot point of a Component produces different results depending on the transformation performed on the Component.  For example, during a scaling operation, if the pivot point of an Component is located at -1, -1, 0 and you wanted to scale the Component by 0.5 (reduce its size by 50%), the Component would scale toward the pivot point and appear to slide down and to the left.  Image:Objects17.gif  In the example above, rotations performed on an Component with different pivot points produce very different results."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "pxord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "preset": {
                        "label": "Reset Transform",
                        "summary": "This button will reset this page's transform so it has no translate/rotate/scale."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "pscale": {
                        "label": "Uniform Scale",
                        "summary": ""
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "pt": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Allows you to orient your Component by naming the Component you would like it to Look At, or point to. Once you have designated this Component to look at, it will continue to face that Component, even if you move it. This is useful if, for instance, you want a camera to follow another Component's movements. The Look At parameter points the Component in question at the other Component's origin.  Tip: To designate a center of interest for the camera that doesn't appear in your scene, create a Null Component and disable its display flag. Then Parent the Camera to the newly created Null Component, and tell the camera to look at this Component using the Look At parameter. You can direct the attention of the camera by moving the Null Component with the Select state. If you want to see both the camera and the Null Component, enable the Null Component's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
                    },
                    "up": {
                        "label": "Orient Up Vector",
                        "summary": "When orienting a Component, the Up Vector is used to determine where the positive Y axis points."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "pcommit": {
                        "label": "Commit to Main Transform",
                        "summary": "This button will copy the transform from this page to the main Xform page, and reset this page's transform."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block. In matrix math terms, if we use the 'multiply vector on the right' (column vector) convention, a transform order of Scale, Rotate, Translate would be written as translate * rotate * scale * vectorOrPosition."
                    },
                    "ps": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "xformmatrixop": {
                        "label": "Xform Matrix/CHOP/DAT",
                        "summary": "This parameter can be used to transform using a 4x4 matrix directly. For information on ways to specify a matrix directly, refer to the Matrix Parameters page."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Using the angle control you can specify a Component's rotation as it animates along the path."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "pp": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "pr": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "This field allows you to change the size of an Component uniformly along the three axes.  Note: Scaling a camera's channels is not generally recommended. However, should you decide to do so, the rendered output will match the Viewport as closely as possible when scales are involved."
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "lookup": {
                        "label": "Look At Up Vector",
                        "summary": "When specifying a Look At, it is possible to specify an up vector for the lookat. Without using an up vector, it is possible to get poor animation when the lookat Component passes through the Y axis of the target Component.  * Don't Use Up Vector - Use this option if the look at Component does not pass through the Y axis of the target Component. * Use Up Vector - This precisely defines the rotates on the Component doing the looking. The Up Vector specified should not be parallel to the look at direction. See Up Vector below. * Use Quaternions - Quaternions are a mathematical representation of a 3D rotation. This method finds the most efficient means of moving from one point to another on a sphere."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "prord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    }
                },
                "summary": "The Null Component serves as a place-holder in a scene."
            },
            "actorCOMP": {
                "label": "Actor",
                "parameters": {
                    "bank": {
                        "label": "Auto-Bank Factor",
                        "summary": "The Auto-Bank Factor rolls the Component based on the curvature of the path at its current position. To turn off auto-banking, set the bank scale to 0."
                    },
                    "angvel": {
                        "label": "Angular Velocity",
                        "summary": "The initial angular velocity of the actor in degrees per second in m/s. This parameter can also be used to modify the actor's angular velocity during a simulation. Additionally, it is used in conjunction with the \\\"Cue Velocity\\\" and \\\"Cue Velocity Pulse\\\" parameters."
                    },
                    "instancemode": {
                        "label": "Instance Count",
                        "summary": "Two modes to determine how many instances will be created."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Using the angle control you can specify a Component's rotation as it animates along the path."
                    },
                    "pathorient": {
                        "label": "Orient along Path",
                        "summary": "If this option is selected, the Component will be oriented along the path. The positive Z axis of the Component will be pointing down the path."
                    },
                    "pos": {
                        "label": "Position",
                        "summary": "This parameter lets you specify the Position of the Component along the path. The values you can enter for this parameter range from 0 to 1, where 0 equals the starting point and 1 equals the end point of the path. The value slider allows for values as high as 10 for multiple \\\"passes\\\" along the path."
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "sops": {
                        "label": "Collision SOPs",
                        "summary": "Specifies SOPs or COMPs to use for the collision shape. If a SOP is referenced, then just that SOP will be used for the collision shape. But if a COMP is selected then all SOPs inside of that (recursive) will be used for the collision shape. If this parameter is left blank, then the SOPs selected will be all SOPs inside the Actor COMP with display and render flags on."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "instanceop": {
                        "label": "Instance CHOP/DAT/SOP",
                        "summary": "Specify a path to a CHOP or DAT used to transform the instances. Number of samples/rows in this CHOP or DAT determines the number of instances when using the CHOP Length/DAT Num Rows mode for Instance Count."
                    },
                    "instancer": {
                        "label": "R",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply to the diffuse color of the instances. These parameters will be combined/replaced with the SOPs 'Cd' attribute, as chosen by the Color Mode parameter."
                    },
                    "instancerotupy": {
                        "label": "Rotate Up Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate up instances."
                    },
                    "instanceg": {
                        "label": "G",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply to the diffuse color of the instances. These parameters will be combined/replaced with the SOPs 'Cd' attribute, as chosen by the Color Mode parameter."
                    },
                    "shape": {
                        "label": "Collision Shape",
                        "summary": "The type of collision shape to make from the selected SOPs. Collision shapes can be viewed using a guide in the Actor COMP's viewer"
                    },
                    "linvel": {
                        "label": "Linear Velocity",
                        "summary": "The initial linear velocity of the actor in m/s. This parameter can also be used to modify an actor's linear velocity during a simulation. Additionally, it is used in conjunction with the \\\"Cue Velocity\\\" and \\\"Cue Velocity Pulse\\\" parameters."
                    },
                    "pxform": {
                        "label": "Apply Pre-Transform",
                        "summary": ""
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "infinitemass": {
                        "label": "Infinite Mass",
                        "summary": "Give the actor infinite mass. If the object is dynamic this will make it unmovable and static. Toggling infinite mass on or off will not require recreation of the collision shape, unlike changing the Kinematic State parameter."
                    },
                    "instancerottoz": {
                        "label": "Rotate to Vector Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate to vector instances."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "instancerx": {
                        "label": "Rotate X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate instances."
                    },
                    "instancetexmode": {
                        "label": "Texture Mode",
                        "summary": "Set how the texture coordinates are applied to the instances."
                    },
                    "instancetexindex": {
                        "label": "Texture Index",
                        "summary": "Select a channel/column (by name) to use from the Instance CHOP/DAT to select which texture to use for the instances."
                    },
                    "pxord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "preset": {
                        "label": "Reset Transform",
                        "summary": "This button will reset this page's transform so it has no translate/rotate/scale."
                    },
                    "instancepy": {
                        "label": "Pivot Y",
                        "summary": ""
                    },
                    "lookup": {
                        "label": "Look At Up Vector",
                        "summary": "When specifying a Look At, it is possible to specify an up vector for the lookat. Without using an up vector, it is possible to get poor animation when the lookat Component passes through the Y axis of the target Component.  * Don't Use Up Vector - Use this option if the look at Component does not pass through the Y axis of the target Component. * Use Up Vector - This precisely defines the rotates on the Component doing the looking. The Up Vector specified should not be parallel to the look at direction. See Up Vector below. * Use Quaternions - Quaternions are a mathematical representation of a 3D rotation. This method finds the most efficient means of moving from one point to another on a sphere."
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "pt": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "init": {
                        "label": "Initialize Actor",
                        "summary": "Recreates the collision shapes for all the bodies in the Actor COMP. Also resets all velocities and position to their default state. Initialize Actor should be pulsed when any changes are made to the SOPs used for creating the collision shape, or for any changes to the instancing OP."
                    },
                    "rest": {
                        "label": "Restitution",
                        "summary": "The coefficient of restitution of the actor. The coefficient of restitution is the ratio of the final to initial relative between two bodies/actors when they collide. In other words, restitution is the fraction of kinetic energy preserved after a collision. If two objects collide with 100% (ie. 1) restitution, then, both bodies will bounce off each other at the same speed at which they collided."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "updatecs": {
                        "label": "Update Collision Shape",
                        "summary": "If enabled the Actor COMP will automatically update collision shapes. This will occur when the \\\"Collision SOPs\\\" or \\\"Collision Shape\\\" parameters are changes or the underlying SOPs used to create the collision shape are changed (ie. when their cook count increases)."
                    },
                    "instanceu": {
                        "label": "U",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply texture coordinates to the instances. This interacts with the first texture layer uv[0] attributes coming from the SOP."
                    },
                    "elltol": {
                        "label": "Ellipsoid Tolerance",
                        "summary": "The tolerance of the minimum volume bounding ellipsoid. In other words, how close to the optimal solution it is."
                    },
                    "instancerottoy": {
                        "label": "Rotate to Vector Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate to vector instances."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block. In matrix math terms, if we use the 'multiply vector on the right' (column vector) convention, a transform order of Scale, Rotate, Translate would be written as translate * rotate * scale * vectorOrPosition."
                    },
                    "instancea": {
                        "label": "A",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply to the diffuse color of the instances. These parameters will be combined/replaced with the SOPs 'Cd' attribute, as chosen by the Color Mode parameter."
                    },
                    "instancesx": {
                        "label": "Scale X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to scale instances."
                    },
                    "ps": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "instancepz": {
                        "label": "Pivot Z",
                        "summary": ""
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "xformmatrixop": {
                        "label": "Xform Matrix/CHOP/DAT",
                        "summary": "This parameter can be used to transform using a 4x4 matrix directly. For information on ways to specify a matrix directly, refer to the Matrix Parameters page."
                    },
                    "instancery": {
                        "label": "Rotate Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate instances."
                    },
                    "com": {
                        "label": "Center of Mass",
                        "summary": "Specifies the center of mass of the collision shape. The center of mass is the point around which the body will rotate. Center of mass can be viewed using a guide in the Actor COMP's viewer. It is shown as a red axis"
                    },
                    "instancecolormode": {
                        "label": "Color Mode",
                        "summary": "Controls how the instance color values interact with the SOPs 'Cd' (diffuse color) attribute. If the SOP doesn't have a 'Cd' attribute, then it will behave as if its 'Cd' is (1, 1, 1, 1)."
                    },
                    "instancesy": {
                        "label": "Scale Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to scale instances."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "pr": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "instancew": {
                        "label": "W",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply texture coordinates to the instances. This interacts with the first texture layer uv[0] attributes coming from the SOP."
                    },
                    "instancerottoorder": {
                        "label": "Rotate to Vector Order",
                        "summary": ""
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "cuevelpulse": {
                        "label": "Cue Velocity Pulse",
                        "summary": "Pulse the linear and angular velocity to values given by linvel and angvel. This will set the velocity to the given value at the beginning of the next frame."
                    },
                    "cuevel": {
                        "label": "Cue Velocity",
                        "summary": "Holds the linear and angular velocity and values given by linvel and angvel. The object will still collide with any other bodies in the simulation."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "ccd": {
                        "label": "Continuous Collision Detection",
                        "summary": "Toggles continuous collision detection on/off for this actor. Typically, collision detection is done discretely, meaning that collision is verified at the beginning/end of a frame. However, if a body is going too fast it will move too far in a single frame and therefore clip through any surfaces (ie. No collision detected). Continuous collision detection improves upon this by performing collision detection at intervals between the body's initial and final positions within a frame. Continuous collision detection can affect performance, so even if the parameter is toggled on it will not be used all the time. It will only be used for bodies moving above a velocity threshold."
                    },
                    "instanceorder": {
                        "label": "Instance Order",
                        "summary": "Sets how transforms are applied to the instances."
                    },
                    "instancetx": {
                        "label": "Translate X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to translate instances."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "prord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "instxord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "instancing": {
                        "label": "Instancing",
                        "summary": "Turns on instancing for the Geometry Component."
                    },
                    "pscale": {
                        "label": "Uniform Scale",
                        "summary": ""
                    },
                    "constrain": {
                        "label": "Constrain To",
                        "summary": "Allows the location of the object to be constrained to any other object whose path is specified in this parameter."
                    },
                    "pcommit": {
                        "label": "Commit to Main Transform",
                        "summary": "This button will copy the transform from this page to the main Xform page, and reset this page's transform."
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "This field allows you to change the size of an Component uniformly along the three axes.  Note: Scaling a camera's channels is not generally recommended. However, should you decide to do so, the rendered output will match the Viewport as closely as possible when scales are involved."
                    },
                    "mass": {
                        "label": "Mass",
                        "summary": "The mass in kilograms of the actor."
                    },
                    "instancefirstrow": {
                        "label": "First Row is",
                        "summary": "What to do with the first row of a table DAT when using DAT rows for Instance Count."
                    },
                    "instancety": {
                        "label": "Translate Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to translate instances."
                    },
                    "pathsop": {
                        "label": "Path SOP",
                        "summary": "Names the SOP that functions as the path you want this Component to move along. For instance, you can name an SOP that provides a spline path for the camera to follow.  Production Tip: For Smooth Motion Along a Path - Having a Component follow an animation path is simple. However, when using a NURBS curve as your path, you might notice that the Component speeds up and slows down unexpectedly as it travels along the path. This is usually because the CVs are spaced unevenly. In such a case, use the Resample SOP to redistribute the CVs so that they are evenly spaced along the curve. A caution however - using a Resample SOP can be slow if you have an animating path curve.  An alternative method is to append a Basis SOP to the path curve and change it to a Uniform Curve. This way, your Component will move uniformly down the curve, and there is no need for the Resample SOP and the unnecessary points it generates."
                    },
                    "feedback": {
                        "label": "Feedback CHOP",
                        "summary": "A reference to a CHOP from which to feedback. The Actor COMP will read transformation and velocity data (in the correct format, see Bullet Solver CHOP for more information) from the CHOP, and overwrite the current values at the beginning of the next frame. A feedback loop can be created with this parameter and the Bullet Solver CHOP. See Bullet Solver CHOP. NOTE: scale cannot be feedbacked."
                    },
                    "displayshape": {
                        "label": "Display Collision Shape",
                        "summary": "Toggles on the display for the collision shape in the COMP viewer."
                    },
                    "globalgrav": {
                        "label": "Use Global Gravity",
                        "summary": "Toggle for whether to use the Bullet Solver COMP's gravity (global), or its own local gravity."
                    },
                    "updatecspulse": {
                        "label": "Update Collision Shape Pulse",
                        "summary": "When clicked this will instantly update the collosion shape."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Toggle the actor on/off. If the actor is active, then it will be updated as the simulation progress. However, if it is inactive, then it will be removed from the simulation and no longer collide with any of the other actors/bodies. As a result, it's transform will also no longer be updated."
                    },
                    "instancerotupz": {
                        "label": "Rotate Up Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate up instances."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "kinstate": {
                        "label": "Kinematic State",
                        "summary": "The kinematic state defines the Actor COMPs ability to move from external forces. If an object is dynamic, then it is moveable in the simulation, but if it static then it is not."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Allows you to orient your Component by naming the Component you would like it to Look At, or point to. Once you have designated this Component to look at, it will continue to face that Component, even if you move it. This is useful if, for instance, you want a camera to follow another Component's movements. The Look At parameter points the Component in question at the other Component's origin.  Tip: To designate a center of interest for the camera that doesn't appear in your scene, create a Null Component and disable its display flag. Then Parent the Camera to the newly created Null Component, and tell the camera to look at this Component using the Look At parameter. You can direct the attention of the camera by moving the Null Component with the Select state. If you want to see both the camera and the Null Component, enable the Null Component's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
                    },
                    "forces": {
                        "label": "Forces",
                        "summary": "A list of local forces, meaning forces (ie. Force COMPs) that will only be applied to this actor."
                    },
                    "instancepx": {
                        "label": "Pivot X",
                        "summary": ""
                    },
                    "gravity": {
                        "label": "Gravity",
                        "summary": "Actor's local gravity in m/s^2. Will only be applied if the actor is not using the Bullet Solver COMP's global gravity ie. the \\\"Use Global Gravity\\\" parameter above is turned off."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "rollfric": {
                        "label": "Rolling Friction",
                        "summary": "The rolling friction of the actor. It is the resistance/drag of one body (such as a sphere or cone) rolling on another."
                    },
                    "instancerotupx": {
                        "label": "Rotate Up X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate up instances."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "numinstances": {
                        "label": "Num Instances",
                        "summary": "When using the Manual mode for Instance Count, this parameter set the number of instances."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "friction": {
                        "label": "Friction",
                        "summary": "The kinetic friction of the actor. It is the resistance between two bodies rubbing/sliding. The overall friction is the product of the two bodies touching. For example, if one body has 0 friction and the other has 1, then the overall friction between the two bodies is 0"
                    },
                    "up": {
                        "label": "Orient Up Vector",
                        "summary": "When orienting a Component, the Up Vector is used to determine where the positive Y axis points."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "instancetexs": {
                        "label": "Instance Textures",
                        "summary": "Specify the paths one or more TOP containing the textures to use with the instances. Wildcards and pattern matching is supported."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which a Component scales and rotates. Altering the pivot point of a Component produces different results depending on the transformation performed on the Component.  For example, during a scaling operation, if the pivot point of an Component is located at -1, -1, 0 and you wanted to scale the Component by 0.5 (reduce its size by 50%), the Component would scale toward the pivot point and appear to slide down and to the left.  Image:Objects17.gif  In the example above, rotations performed on an Component with different pivot points produce very different results."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "instancerz": {
                        "label": "Rotate Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate instances."
                    },
                    "instancerottox": {
                        "label": "Rotate to Vector X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate to vector instances."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "pp": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "instancev": {
                        "label": "V",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply texture coordinates to the instances. This interacts with the first texture layer uv[0] attributes coming from the SOP."
                    },
                    "instancetz": {
                        "label": "Translate Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to translate instances."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "instrord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "instancesz": {
                        "label": "Scale Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to scale instances."
                    },
                    "instanceb": {
                        "label": "B",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply to the diffuse color of the instances. These parameters will be combined/replaced with the SOPs 'Cd' attribute, as chosen by the Color Mode parameter."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    }
                },
                "summary": ""
            },
            "buttonCOMP": {
                "label": "Button",
                "parameters": {
                    "fixedaspect": {
                        "label": "Fixed Aspect",
                        "summary": "Allows easy creation of panels with a specific aspect set in the Aspect Ratio parameter below. Only requires setting the width or height of the panel and the other dimension is calculated based on the Aspect Ratio parameter."
                    },
                    "paneldragop": {
                        "label": "Dropped Operator",
                        "summary": "The Dropped Component parameter is the easiest way to specify an alternative operator to drop. Note that this alternative operator must exist, otherwise the component itself will be dropped. The alternative is only used when dropping onto a network or control panel. Text pasted via dragging and dropping, or files saved via dropping onto the desktop, will still use the original."
                    },
                    "buttongroupdat": {
                        "label": "Button Group DAT",
                        "summary": "Specify a Table DAT that lists all buttons in a radio group. This allows a group of radio buttons to have its member buttons located in any network - the buttons do not have to be in the same component. The paths are relative to the DAT and can contain patterns and wildcards (see Pattern Matching). When a button is activated, it modifies the radio panel values of the DAT's parent, not its own parent, since buttons can now be scattered in different components."
                    },
                    "drop": {
                        "label": "On Dropping Into",
                        "summary": "Specify if this Panel Component accepts items that are dropped onto it."
                    },
                    "vieweraspect": {
                        "label": "Floating Viewer Aspect",
                        "summary": "Controls whether the aspect ratio is proportional or unconstrained when resizing a floating viewer ie. dragging the edges of the viewer to resize it."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "top": {
                        "label": "Background TOP",
                        "summary": "Allows you to specify a TOP as the background for the panel."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "display": {
                        "label": "Display",
                        "summary": "Specifies if the panel is displayed or hidden."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "droptypescript": {
                        "label": "Drop Types",
                        "summary": "If a drop destination script is specified, you can also add a DAT table with a list of return types that the drop destination script will provide. Return types can be one of the op types (COMP,TOP,CHOP,SOP,MAT,DAT), channel, or supported filetypes. Please refer to the Drop Types section of the Drag and Drop page."
                    },
                    "alignmax": {
                        "label": "Max per Line",
                        "summary": "This is enabled by choosing any Align option other than None, Layout Grid Horizontal, Layout Grid Vertical, or Match Network Nodes, and defines the maximum number of children placed in one row or column."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "drag": {
                        "label": "When Dragging This",
                        "summary": "Specify if this Panel Component can be dragged."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "RGB values for the background. (default: black (0,0,0))"
                    },
                    "margin": {
                        "label": "Margin",
                        "summary": "The four fields allow you to specify the space that surrounds the Panel Component. The margin is the space between the Panel Component's border and the outer edge.  The Margin is defined in absolute pixels and does not stretch with the window, as a result margin is not reflected in the node's panel viewer but only when the parent is drawn in a floating window."
                    },
                    "alignorder": {
                        "label": "Align Order",
                        "summary": "This parameter allows you to specify the align position when its parent's Align parameter is set to something other then None or Match Network Nodes. Lower numbers are first."
                    },
                    "leftoffset": {
                        "label": "Left Offset",
                        "summary": "An offset for the left anchor in pixels."
                    },
                    "mousewheel": {
                        "label": "Use Mouse Wheel",
                        "summary": "Turn on to capture events when the mouse wheel is used over the panel."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": "Set the alpha value for the background."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "resize": {
                        "label": "Drag Edges to Resize",
                        "summary": "Four checkboxes allow you to enable resizing a panel by grabbing the corresponding edge or corner: Resize Left, Right, Bottom, Top."
                    },
                    "buttongroup": {
                        "label": "Button Group Label",
                        "summary": "Create a radio button group using this parameter. Buttons grouped using this parameter must all be located in the same component. Any buttons with the same group label will be in the same radio group."
                    },
                    "opacity": {
                        "label": "Opacity",
                        "summary": "Allows you to control the transparency of the panel."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "borderover": {
                        "label": "Border Over Children",
                        "summary": "Draws the panel's borders on top of all children panels."
                    },
                    "bottomborderi": {
                        "label": "Bottom Border Inside",
                        "summary": ""
                    },
                    "vfillweight": {
                        "label": "Vertical Fill Weight",
                        "summary": "When multiple panels are using Vertical Mode = Fill and being aligned by the parent either Top to Bottom or Bottom to Top, this fill weight parameter can be used to bias the fill height of the panels."
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": "This menu specifies if the panel's children are being justified horizontally."
                    },
                    "repositiony": {
                        "label": "Y Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for repositioning the panel component vertically."
                    },
                    "bordera": {
                        "label": "Border A",
                        "summary": "RGB values for border A color."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "dodisablecolor": {
                        "label": "Disable Color",
                        "summary": "Enable the use of a unique disable color below when the panel's Enable = Off."
                    },
                    "borderaalpha": {
                        "label": "Border A Alpha",
                        "summary": "Alpha value for border A color."
                    },
                    "enable": {
                        "label": "Enable",
                        "summary": "Allows you to prevent all interaction with this panel."
                    },
                    "disablecolor": {
                        "label": "Disable Color",
                        "summary": "RGB values for the disable color. (default: black (0,0,0))"
                    },
                    "dropscript": {
                        "label": "Drop Script",
                        "summary": "A component's Drop Script is run when you drop another component or an external file into that component. Please refer to the Drop Scripts - Text section of the Drag and Drop page.          Alternatively specify a Table DAT in the drop script field. TouchDesigner will automatically look for 2 columns in the table. The first column should indicate the data type and the second should indicate the Text DAT that holds the script to process that data type. Please refer to the Drop Script - Tables section of the Drag and Drop page."
                    },
                    "uvbuttons": {
                        "label": "Mouse UV Buttons",
                        "summary": "Allows you to specify which mouse buttons update the uv Panel Values."
                    },
                    "clickthrough": {
                        "label": "Click Through",
                        "summary": "When enabled all mouse clicks are ignored by this Panel Component."
                    },
                    "leftanchor": {
                        "label": "Left Anchor",
                        "summary": "Position of the left anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "rightanchor": {
                        "label": "Right Anchor",
                        "summary": "Position of the right anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "dragscript": {
                        "label": "Drag Script",
                        "summary": "Specify a script that will be executed when starting to drag a Panel Component. Please refer to the Drag Script section of the Drag and Drop page."
                    },
                    "topoffset": {
                        "label": "Top Offset",
                        "summary": "An offset for the top anchor in pixels."
                    },
                    "rightoffset": {
                        "label": "Right Offset",
                        "summary": "An offset for the right anchor in pixels."
                    },
                    "rightborder": {
                        "label": "Right Border",
                        "summary": "What color the 2 right-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "composite": {
                        "label": "Composite",
                        "summary": "Selects how the panel is composited with its siblings panels. See the Composite TOP for a description of the various composite methods."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "borderbalpha": {
                        "label": "Border B Alpha",
                        "summary": "Alpha value for border B color."
                    },
                    "helpdat": {
                        "label": "Help DAT",
                        "summary": "Lets you specify the path to a Text DAT whose content will be displayed as a rollover pop-up help for the control panel."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "dropdestscript": {
                        "label": "Drop Destination Script",
                        "summary": "Specify a script that will be executed when the dragged Panel Component is dropped. A temporary network is created and the component (or the alternative operator specified in Dropped Component) is copied to this network. You can add or modify operators in this network. Please refer to the Drop Destination Script section of the Drag and Drop page."
                    },
                    "alignallow": {
                        "label": "Parent Alignment",
                        "summary": "When set to Ignore, the Panel will ignore any Align parameter settings from its parent."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "bottomoffset": {
                        "label": "Bottom Offset",
                        "summary": "An offset for the bottom anchor in pixels."
                    },
                    "resizeh": {
                        "label": "H Range",
                        "summary": "Limits the bottom-top (height) resizing range."
                    },
                    "bottomborder": {
                        "label": "Bottom Border",
                        "summary": "What color the 2 bottom-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "h": {
                        "label": "Height",
                        "summary": "Specify the Panel's height in pixels."
                    },
                    "topborder": {
                        "label": "Top Border",
                        "summary": "What color the 2 top-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "align": {
                        "label": "Align",
                        "summary": "This menu allows you to specify how the children inside the Panel Component will be laid out. The options Layout Grid Rows,  Layout Grid Columns and Match Network Nodes will scale the Panel Component's children to fit the Component. They use the Align Order of each of the children to determine the ordering of the children."
                    },
                    "cursor": {
                        "label": "Cursor",
                        "summary": "Changes the cursor displayed when cursor is over the panel."
                    },
                    "crop": {
                        "label": "Crop",
                        "summary": "This menu determines if any children panels which are positioned partially or completely outside the panel component's dimensions get cropped."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Allows you to uniformly scale the Panel's children."
                    },
                    "horigin": {
                        "label": "Horizontal Origin",
                        "summary": "Sets the position of the panel's origin horizontally. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "vorigin": {
                        "label": "Vertical Origin",
                        "summary": "Sets the position of the panel's origin vertically. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "disablealpha": {
                        "label": "Disable Alpha",
                        "summary": "Set the alpha value for the disable color."
                    },
                    "repositionx": {
                        "label": "X Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for  repositioning the panel component horizontally."
                    },
                    "rightborderi": {
                        "label": "Right Border Inside",
                        "summary": ""
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "y": {
                        "label": "Y",
                        "summary": "Specify the vertical position in pixels relative to its parent."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "repocomp": {
                        "label": "Component",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter. Specify the path to the panel component you would like to reposition by mouse."
                    },
                    "sizefromwindow": {
                        "label": "Size from Window",
                        "summary": "When enabled the panel component's width and height are set by resizing its floating viewer window."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "borderb": {
                        "label": "Border B",
                        "summary": "RGBA values for border B color."
                    },
                    "buttontype": {
                        "label": "Button Type",
                        "summary": "This menu determines the button's state behavior."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Allows you to offset the Panel's children. This parameter is overwritten by the Align, Justify Horizontal, and Justify Vertical parameters above."
                    },
                    "w": {
                        "label": "Width",
                        "summary": "Specify the panel's width in pixels."
                    },
                    "leftborder": {
                        "label": "Left Border",
                        "summary": "What color the 2 left-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "topfill": {
                        "label": "TOP Fill",
                        "summary": "This menu specifies the way the Background TOP will fill the panel's background."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "hfillweight": {
                        "label": "Horizontal Fill Weight",
                        "summary": "When multiple panels are using Horizontal Mode = Fill and being aligned by the parent either Left to Right or Right to Left, this fill weight parameter can be used to bias the fill width of the panels."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "vmode": {
                        "label": "Vertical Mode",
                        "summary": "Select one of 3 modes to determine the vertical height of the panel."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "aspect": {
                        "label": "Aspect Ratio",
                        "summary": "Specify the ratio when using Fixed Aspect parameter above, the ratio is width/height."
                    },
                    "reposition": {
                        "label": "Drag to Reposition",
                        "summary": "Enables repositioning of the panel or window by dragging with the mouse."
                    },
                    "x": {
                        "label": "X",
                        "summary": "Specify the horizontal position in pixels relative to its parent."
                    },
                    "postoffset": {
                        "label": "Post Offset",
                        "summary": "Adds an offset after all other postions and alignment options have been applied to the panel."
                    },
                    "topborderi": {
                        "label": "Top Border Inside",
                        "summary": ""
                    },
                    "hmode": {
                        "label": "Horizontal Mode",
                        "summary": "Select one of 3 modes to determine the horizontal width of the panel."
                    },
                    "layer": {
                        "label": "Depth Layer",
                        "summary": "Specifies the order the panel components are drawn in, similar to layers in Photoshop. Higher values will be drawn over any other panel with a lower value (that is at the same level of hierarchy). If two panel components have the same Depth Layer value then they are ordered based on the operator's name."
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": "This menu specifies if the panel's children are being justified vertically."
                    },
                    "multrgb": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Multiplies the RGB channels by the alpha channel."
                    },
                    "spacing": {
                        "label": "Spacing",
                        "summary": "This is enabled by choosing any Align option other than None or Match Network Nodes. It defines the space between the children when they are being aligned."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "topanchor": {
                        "label": "Top Anchor",
                        "summary": "Position of the top anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "multitouch": {
                        "label": "Multi-Touch",
                        "summary": "When enabled, this panel will process the first touch it gets in a similar manner to how it processes a mouse click, with updates to u, v, state etc.  The touch event must be initiated from the panel.  Subsequent touches are ignored.  If this panel handles multi-touch events via the Multi Touch In DAT, you may want to disable Built-in Multi-Touch so it won't interfere with script processing."
                    },
                    "bottomanchor": {
                        "label": "Bottom Anchor",
                        "summary": "Position of the bottom anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "resizew": {
                        "label": "W Range",
                        "summary": "Limits the left-right (width) resizing range."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "mouserel": {
                        "label": "Relative UV",
                        "summary": "When enabled the uv Panel Values will reflect relative mouse movement."
                    },
                    "fit": {
                        "label": "Fit",
                        "summary": "This menu allows you to scale the panel's children. It overrides the Justify Horizontal and Justify Vertical parameters."
                    },
                    "leftborderi": {
                        "label": "Left Border Inside",
                        "summary": ""
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    }
                },
                "summary": "The Button Component is used in panels to provide interactive on/off buttons, including toggle buttons, momentary buttons, and sets of radio buttons or exclusive buttons."
            },
            "windowCOMP": {
                "label": "Window",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "size": {
                        "label": "Opening Size",
                        "summary": "Determines how the size of the window is specified by the Width, Height parameters below."
                    },
                    "winclose": {
                        "label": "Close",
                        "summary": "Closes the window, if it's open."
                    },
                    "winop": {
                        "label": "Operator",
                        "summary": "Specifies the operator the window will display."
                    },
                    "cursorvisible": {
                        "label": "Cursor Visible",
                        "summary": "Controls whether or not the cursor remains visible when over this window."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "hwframelock": {
                        "label": "Hardware Frame-Lock",
                        "summary": "Provides multi-GPU frame sync using  Nvidia Gsync and AMD S400 sync cards."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "drawwindow": {
                        "label": "Draw Window",
                        "summary": "When disabled the window will not update it's contents at all. Useful for processes that arn't doing rendering such as Audio or networking processes, or for when using VR devices."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "location": {
                        "label": "Location",
                        "summary": "All the positioning parameters below are done relative to the 'location' that you define here. Your window can span more than the specified 'area', it's just used as the reference for positioning."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "winw": {
                        "label": "Width",
                        "summary": "The default width of the window when not specified."
                    },
                    "dpiscaling": {
                        "label": "DPI Scaling",
                        "summary": ""
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "vsyncmode": {
                        "label": "V-Sync Mode",
                        "summary": "Controls how the window is updated with regards to V-Sync. Enabled means it will update in sync with the monitors refresh which avoids tearing and lost frames. Disabled means it can update at any point during the refresh which can result in tearing or lost frames. FPS is Half Monitor Rate should be used when doing things such as running a 30fps file on a 60Hz display. This makes each update be shown for exactly 2 refreshes which keeps motion looking smooth."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "winoffset": {
                        "label": "Offset",
                        "summary": "Horizontal offset applied to window after justifying."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "interact": {
                        "label": "Allow Viewer Interaction",
                        "summary": "Enables interactions with scoped Operator."
                    },
                    "bordersinsize": {
                        "label": "Include Borders in Size",
                        "summary": ""
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "winopen": {
                        "label": "Open as Separate Window",
                        "summary": "Opens this Window COMP as it's own window, not as the Perform Window. Useful for things such as dialog boxes or popups, but should not be used for putting final rendered content to outputs. Use a single large Perform Window for that instead of individual windows per-monitor."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "opendialog": {
                        "label": "Window Placement Dialog",
                        "summary": "A shortcut to open the Window Placement dialog."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "setperform": {
                        "label": "Set as Perform Window",
                        "summary": "Permanently changes the selection in the Window Placement dialog for the Perform Window to this window."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": ""
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "winrightop": {
                        "label": "Right Eye Operator",
                        "summary": ""
                    },
                    "alwaysontop": {
                        "label": "Always on Top",
                        "summary": "Controls whether or not the window always sits atop other floating windows."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "update": {
                        "label": "Update Settings from Window",
                        "summary": ""
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": ""
                    },
                    "closeescape": {
                        "label": "Close on Escape Key",
                        "summary": "When selected, pressing the escape key over this window will close it."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "performance": {
                        "label": "Open as Perform Window",
                        "summary": "The window specified as the Perform Window is set using the 'Window Placement' dialog. This button allows opening the Window COMP as the Perform Window without changing what is currently selected as the 'real' Perform Window."
                    },
                    "single": {
                        "label": "Shift to Single Monitor",
                        "summary": ""
                    },
                    "openglstereo": {
                        "label": "OpenGL Stereo",
                        "summary": ""
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "monitor": {
                        "label": "Monitor",
                        "summary": "Specify the monitor index when Area is set to Single Monitor."
                    },
                    "borders": {
                        "label": "Borders",
                        "summary": "Controls whether or not the window contains borders and a title bar."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "title": {
                        "label": "Title",
                        "summary": "Specify the window's title."
                    },
                    "winh": {
                        "label": "Height",
                        "summary": "The default height of the window when not specified."
                    }
                },
                "summary": "The Window Component allows you to create and maintain a separate floating window displaying the contents of any Panel or any other Node Viewer."
            },
            "boneCOMP": {
                "label": "Bone",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "yrolloff": {
                        "label": "Y Damping Rolloff",
                        "summary": "Specifes the rate at which the damping increases as the rotation varies through the angle specifed by X / Y Angle Range."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "bank": {
                        "label": "Auto-Bank Factor",
                        "summary": "The Auto-Bank Factor rolls the Component based on the curvature of the path at its current position. To turn off auto-banking, set the bank scale to 0."
                    },
                    "crtopcap": {
                        "label": "Top Cap",
                        "summary": "The X, Y, Z radii of the top/bottom hemisphere."
                    },
                    "lookup": {
                        "label": "Look At Up Vector",
                        "summary": "When specifying a Look At, it is possible to specify an up vector for the lookat. Without using an up vector, it is possible to get poor animation when the lookat Component passes through the Y axis of the target Component.  * Don't Use Up Vector - Use this option if the look at Component does not pass through the Y axis of the target Component. * Use Up Vector - This precisely defines the rotates on the Component doing the looking. The Up Vector specified should not be parallel to the look at direction. See Up Vector below. * Use Quaternions - Quaternions are a mathematical representation of a 3D rotation. This method finds the most efficient means of moving from one point to another on a sphere."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Using the angle control you can specify a Component's rotation as it animates along the path."
                    },
                    "constrain": {
                        "label": "Constrain To",
                        "summary": "Allows the location of the object to be constrained to any other object whose path is specified in this parameter."
                    },
                    "pathorient": {
                        "label": "Orient along Path",
                        "summary": "If this option is selected, the Component will be oriented along the path. The positive Z axis of the Component will be pointing down the path."
                    },
                    "pos": {
                        "label": "Position",
                        "summary": "This parameter lets you specify the Position of the Component along the path. The values you can enter for this parameter range from 0 to 1, where 0 equals the starting point and 1 equals the end point of the path. The value slider allows for values as high as 10 for multiple \\\"passes\\\" along the path."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "ikdamp": {
                        "label": "Dampening",
                        "summary": "This parameter prevents bone chains from locking in a dramatically straight line when they are fully extended. This type of locking motion tends to make characters look robotic. The dampening field is a number between zero and one. The larger the number, the greater the dampening effect. Dampening is applied to the entire bone chain as the chain approaches its full extension. The end affector is thus allowed to drift off the end of the bone chain. The net effect is that when the chain is nearly fully extended, a relatively large end affector motion will cause a relatively small motion in the end of the chain. This gives the animator finer granularity in controlling the bone chain when it is fully extended."
                    },
                    "pathsop": {
                        "label": "Path SOP",
                        "summary": "Names the SOP that functions as the path you want this Component to move along. For instance, you can name an SOP that provides a spline path for the camera to follow.  Production Tip: For Smooth Motion Along a Path - Having a Component follow an animation path is simple. However, when using a NURBS curve as your path, you might notice that the Component speeds up and slows down unexpectedly as it travels along the path. This is usually because the CVs are spaced unevenly. In such a case, use the Resample SOP to redistribute the CVs so that they are evenly spaced along the curve. A caution however - using a Resample SOP can be slow if you have an animating path curve.  An alternative method is to append a Basis SOP to the path curve and change it to a Uniform Curve. This way, your Component will move uniformly down the curve, and there is no need for the Resample SOP and the unnecessary points it generates."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "yrange": {
                        "label": "Y Angle Range",
                        "summary": "Specifies the maximum and minimum rotation angles."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "xdamp": {
                        "label": "X Damping Angle",
                        "summary": "Applies damping to the rotation of the bone when the rotation in each axis falls within the angle specified by X / Y Angle Range."
                    },
                    "pxform": {
                        "label": "Apply Pre-Transform",
                        "summary": ""
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which a Component scales and rotates. Altering the pivot point of a Component produces different results depending on the transformation performed on the Component.  For example, during a scaling operation, if the pivot point of an Component is located at -1, -1, 0 and you wanted to scale the Component by 0.5 (reduce its size by 50%), the Component would scale toward the pivot point and appear to slide down and to the left.  Image:Objects17.gif  In the example above, rotations performed on an Component with different pivot points produce very different results."
                    },
                    "crbotcap": {
                        "label": "Bot Cap",
                        "summary": "The X, Y, Z radii of the top/bottom hemisphere."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "pp": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "ydamp": {
                        "label": "Y Damping Angle",
                        "summary": "Applies damping to the rotation of the bone when the rotation in each axis falls within the angle specified by X / Y Angle Range."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "crbotheight": {
                        "label": "Bot Height",
                        "summary": "Height of the region from the centre to the top cap."
                    },
                    "pxord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "crcenter": {
                        "label": "Region Center",
                        "summary": "Position of the center of the region."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "xrolloff": {
                        "label": "X Damping Rolloff",
                        "summary": "Specifes the rate at which the damping increases as the rotation varies through the angle specifed by X / Y Angle Range."
                    },
                    "pr": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "preset": {
                        "label": "Reset Transform",
                        "summary": "This button will reset this page's transform so it has no translate/rotate/scale."
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "displaycapture": {
                        "label": "Display Capture Geometry",
                        "summary": ""
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "pt": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Allows you to orient your Component by naming the Component you would like it to Look At, or point to. Once you have designated this Component to look at, it will continue to face that Component, even if you move it. This is useful if, for instance, you want a camera to follow another Component's movements. The Look At parameter points the Component in question at the other Component's origin.  Tip: To designate a center of interest for the camera that doesn't appear in your scene, create a Null Component and disable its display flag. Then Parent the Camera to the newly created Null Component, and tell the camera to look at this Component using the Look At parameter. You can direct the attention of the camera by moving the Null Component with the Select state. If you want to see both the camera and the Null Component, enable the Null Component's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
                    },
                    "up": {
                        "label": "Orient Up Vector",
                        "summary": "When orienting a Component, the Up Vector is used to determine where the positive Y axis points."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "pcommit": {
                        "label": "Commit to Main Transform",
                        "summary": "This button will copy the transform from this page to the main Xform page, and reset this page's transform."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block. In matrix math terms, if we use the 'multiply vector on the right' (column vector) convention, a transform order of Scale, Rotate, Translate would be written as translate * rotate * scale * vectorOrPosition."
                    },
                    "length": {
                        "label": "Bone Length",
                        "summary": "This parameter changes the overall length of the Bone Component. It affects the size of the bone geometry and the positioning of the capture geometry and also determines the \\\"end\\\" of the bone -- i.e. where Bone Components that are children of this bone will be positioned. By default, its end is oriented so that it lays along the local negative Z axis."
                    },
                    "ps": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "crtopheight": {
                        "label": "Top Height",
                        "summary": "Height of the region from the centre to the top cap."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "xformmatrixop": {
                        "label": "Xform Matrix/CHOP/DAT",
                        "summary": "This parameter can be used to transform using a 4x4 matrix directly. For information on ways to specify a matrix directly, refer to the Matrix Parameters page."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "restangles": {
                        "label": "Rest Angles",
                        "summary": "Defines the relative weighting of rotations about Rx, Ry, Rz, the bone's x,y,z axis for the Inverse Kinematics solver."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "xrange": {
                        "label": "X Angle Range",
                        "summary": "Specifies the maximum and minimum rotation angles."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "pscale": {
                        "label": "Uniform Scale",
                        "summary": ""
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "This field allows you to change the size of an Component uniformly along the three axes.  Note: Scaling a camera's channels is not generally recommended. However, should you decide to do so, the rendered output will match the Viewport as closely as possible when scales are involved."
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "displaylink": {
                        "label": "Display Link",
                        "summary": "Enabling this option allows you to toggle the display of the link geometry in the Viewport on and off."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "prord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    }
                },
                "summary": "The Bone Component is the foundation of all of the Character Tools."
            },
            "animationCOMP": {
                "label": "Animation",
                "parameters": {
                    "editanimation": {
                        "label": "Edit Animation...",
                        "summary": "Clicking this button will open this Animation COMP in the Animation Editor."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "cuepulse": {
                        "label": "Cue Pulse",
                        "summary": ""
                    },
                    "startunit": {
                        "label": "Start Unit",
                        "summary": ""
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "tdefault": {
                        "label": "Trim Default",
                        "summary": ""
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "playmode": {
                        "label": "Play Mode",
                        "summary": "Specifies the method used to playback the animation or allows the output the entire animation curve."
                    },
                    "cuepoint": {
                        "label": "Cue Point",
                        "summary": "Set any index in the animation as a point to jump to. Only available when Play Mode is Sequential."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "timeref": {
                        "label": "Time Reference",
                        "summary": "The location the Animation COMP looks to for its time information. This is used for default channel range and rate when the Type parameter on the Range page is set to Timeline."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "cyclic": {
                        "label": "Cyclic Range",
                        "summary": "Adapts the range of the animation for cyclic or non-cyclic input indices. When using a cyclic input index the lookup value for index 0.0 and 1.0 result in the same value. To avoid this, set Cyclic Range to Yes and the lookup will cycle smoothly."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "rangetype": {
                        "label": "Type",
                        "summary": ""
                    },
                    "specifyedit": {
                        "label": "Specify Edit Attributes",
                        "summary": "Turn this on to enable the edit attributes parameter below."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "tleft": {
                        "label": "Trim Left",
                        "summary": ""
                    },
                    "cue": {
                        "label": "Cue",
                        "summary": "Jumps to Cue Point when set to 1. Only available when Play Mode is Sequential."
                    },
                    "speed": {
                        "label": "Speed",
                        "summary": "This is a speed multiplier which only works when Play Mode is Sequential. A value of 1 is the default playback speed. A value of 2 is double speed, 0.5 is half speed and so on. Negative values will play the animation backwards."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "Animation plays when On and stops when Off. This animation playback control is only available when Play Mode is Sequential."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "cuepointunit": {
                        "label": "Cue Point Unit",
                        "summary": ""
                    },
                    "editrate": {
                        "label": "Edit Rate",
                        "summary": "Changes the rate of the animation channel edits. This does not change the data stored in the key DAT table, but it does effect the channels display in the graph and playback of the animation."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "editorigin": {
                        "label": "Edit Origin",
                        "summary": "Changes the origin of the animation channel edits. This does not change the data stored in the key DAT table, but it does effect the channels display in the graph and playback of the animation."
                    },
                    "endunit": {
                        "label": "End Unit",
                        "summary": ""
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "end": {
                        "label": "End",
                        "summary": ""
                    },
                    "tright": {
                        "label": "Trim Right",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "start": {
                        "label": "Start",
                        "summary": ""
                    },
                    "inputindexunit": {
                        "label": "Input Index Unit",
                        "summary": "When Play Mode is set to Use Input Index use this menu to choose the units for the index input channel. For example, choose between setting the index with frames or seconds. The Units X option sets the index to use the key information directly from the key DAT table inside the Animation COMP, disregarding any custom settings found in the attributes DAT table."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    }
                },
                "summary": "The Animation Component is a special component used for creating keyframe animation channels."
            },
            "listCOMP": {
                "label": "List",
                "parameters": {
                    "fixedaspect": {
                        "label": "Fixed Aspect",
                        "summary": "Allows easy creation of panels with a specific aspect set in the Aspect Ratio parameter below. Only requires setting the width or height of the panel and the other dimension is calculated based on the Aspect Ratio parameter."
                    },
                    "top": {
                        "label": "Background TOP",
                        "summary": "Allows you to specify a TOP as the background for the panel."
                    },
                    "drop": {
                        "label": "On Dropping Into",
                        "summary": "Specify if this Panel Component accepts items that are dropped onto it."
                    },
                    "layer": {
                        "label": "Depth Layer",
                        "summary": "Specifies the order the panel components are drawn in, similar to layers in Photoshop. Higher values will be drawn over any other panel with a lower value (that is at the same level of hierarchy). If two panel components have the same Depth Layer value then they are ordered based on the operator's name."
                    },
                    "vieweraspect": {
                        "label": "Floating Viewer Aspect",
                        "summary": "Controls whether the aspect ratio is proportional or unconstrained when resizing a floating viewer ie. dragging the edges of the viewer to resize it."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "paneldragop": {
                        "label": "Dropped Operator",
                        "summary": "The Dropped Component parameter is the easiest way to specify an alternative operator to drop. Note that this alternative operator must exist, otherwise the component itself will be dropped. The alternative is only used when dropping onto a network or control panel. Text pasted via dragging and dropping, or files saved via dropping onto the desktop, will still use the original."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "display": {
                        "label": "Display",
                        "summary": "Specifies if the panel is displayed or hidden."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "droptypescript": {
                        "label": "Drop Types",
                        "summary": "If a drop destination script is specified, you can also add a DAT table with a list of return types that the drop destination script will provide. Return types can be one of the op types (COMP,TOP,CHOP,SOP,MAT,DAT), channel, or supported filetypes. Please refer to the Drop Types section of the Drag and Drop page."
                    },
                    "alignmax": {
                        "label": "Max per Line",
                        "summary": "This is enabled by choosing any Align option other than None, Layout Grid Horizontal, Layout Grid Vertical, or Match Network Nodes, and defines the maximum number of children placed in one row or column."
                    },
                    "rightanchor": {
                        "label": "Right Anchor",
                        "summary": "Position of the right anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "RGB values for the background. (default: black (0,0,0))"
                    },
                    "margin": {
                        "label": "Margin",
                        "summary": "The four fields allow you to specify the space that surrounds the Panel Component. The margin is the space between the Panel Component's border and the outer edge.  The Margin is defined in absolute pixels and does not stretch with the window, as a result margin is not reflected in the node's panel viewer but only when the parent is drawn in a floating window."
                    },
                    "alignorder": {
                        "label": "Align Order",
                        "summary": "This parameter allows you to specify the align position when its parent's Align parameter is set to something other then None or Match Network Nodes. Lower numbers are first."
                    },
                    "leftoffset": {
                        "label": "Left Offset",
                        "summary": "An offset for the left anchor in pixels."
                    },
                    "mousewheel": {
                        "label": "Use Mouse Wheel",
                        "summary": "Turn on to capture events when the mouse wheel is used over the panel."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": "Set the alpha value for the background."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "resize": {
                        "label": "Drag Edges to Resize",
                        "summary": "Four checkboxes allow you to enable resizing a panel by grabbing the corresponding edge or corner: Resize Left, Right, Bottom, Top."
                    },
                    "topborder": {
                        "label": "Top Border",
                        "summary": "What color the 2 top-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "opacity": {
                        "label": "Opacity",
                        "summary": "Allows you to control the transparency of the panel."
                    },
                    "borderover": {
                        "label": "Border Over Children",
                        "summary": "Draws the panel's borders on top of all children panels."
                    },
                    "bottomborderi": {
                        "label": "Bottom Border Inside",
                        "summary": ""
                    },
                    "vfillweight": {
                        "label": "Vertical Fill Weight",
                        "summary": "When multiple panels are using Vertical Mode = Fill and being aligned by the parent either Top to Bottom or Bottom to Top, this fill weight parameter can be used to bias the fill height of the panels."
                    },
                    "clickthrough": {
                        "label": "Click Through",
                        "summary": "When enabled all mouse clicks are ignored by this Panel Component."
                    },
                    "leftborder": {
                        "label": "Left Border",
                        "summary": "What color the 2 left-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "bordera": {
                        "label": "Border A",
                        "summary": "RGB values for border A color."
                    },
                    "callbacks": {
                        "label": "Callbacks",
                        "summary": "A reference to the callback DAT."
                    },
                    "rows": {
                        "label": "Rows",
                        "summary": "The number of rows in the List."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "dodisablecolor": {
                        "label": "Disable Color",
                        "summary": "Enable the use of a unique disable color below when the panel's Enable = Off."
                    },
                    "borderaalpha": {
                        "label": "Border A Alpha",
                        "summary": "Alpha value for border A color."
                    },
                    "enable": {
                        "label": "Enable",
                        "summary": "Allows you to prevent all interaction with this panel."
                    },
                    "disablecolor": {
                        "label": "Disable Color",
                        "summary": "RGB values for the disable color. (default: black (0,0,0))"
                    },
                    "dropscript": {
                        "label": "Drop Script",
                        "summary": "A component's Drop Script is run when you drop another component or an external file into that component. Please refer to the Drop Scripts - Text section of the Drag and Drop page.          Alternatively specify a Table DAT in the drop script field. TouchDesigner will automatically look for 2 columns in the table. The first column should indicate the data type and the second should indicate the Text DAT that holds the script to process that data type. Please refer to the Drop Script - Tables section of the Drag and Drop page."
                    },
                    "offcellcallbacks": {
                        "label": "Off Cell Callbacks",
                        "summary": ""
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": "This menu specifies if the panel's children are being justified horizontally."
                    },
                    "x": {
                        "label": "X",
                        "summary": "Specify the horizontal position in pixels relative to its parent."
                    },
                    "leftanchor": {
                        "label": "Left Anchor",
                        "summary": "Position of the left anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "bottomanchor": {
                        "label": "Bottom Anchor",
                        "summary": "Position of the bottom anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "dragscript": {
                        "label": "Drag Script",
                        "summary": "Specify a script that will be executed when starting to drag a Panel Component. Please refer to the Drag Script section of the Drag and Drop page."
                    },
                    "rightborderi": {
                        "label": "Right Border Inside",
                        "summary": ""
                    },
                    "rightoffset": {
                        "label": "Right Offset",
                        "summary": "An offset for the right anchor in pixels."
                    },
                    "rightborder": {
                        "label": "Right Border",
                        "summary": "What color the 2 right-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "composite": {
                        "label": "Composite",
                        "summary": "Selects how the panel is composited with its siblings panels. See the Composite TOP for a description of the various composite methods."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "borderbalpha": {
                        "label": "Border B Alpha",
                        "summary": "Alpha value for border B color."
                    },
                    "helpdat": {
                        "label": "Help DAT",
                        "summary": "Lets you specify the path to a Text DAT whose content will be displayed as a rollover pop-up help for the control panel."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "mouserel": {
                        "label": "Relative UV",
                        "summary": "When enabled the uv Panel Values will reflect relative mouse movement."
                    },
                    "alignallow": {
                        "label": "Parent Alignment",
                        "summary": "When set to Ignore, the Panel will ignore any Align parameter settings from its parent."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "bottomoffset": {
                        "label": "Bottom Offset",
                        "summary": "An offset for the bottom anchor in pixels."
                    },
                    "resizeh": {
                        "label": "H Range",
                        "summary": "Limits the bottom-top (height) resizing range."
                    },
                    "bottomborder": {
                        "label": "Bottom Border",
                        "summary": "What color the 2 bottom-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "h": {
                        "label": "Height",
                        "summary": "Specify the Panel's height in pixels."
                    },
                    "align": {
                        "label": "Align",
                        "summary": "This menu allows you to specify how the children inside the Panel Component will be laid out. The options Layout Grid Rows,  Layout Grid Columns and Match Network Nodes will scale the Panel Component's children to fit the Component. They use the Align Order of each of the children to determine the ordering of the children."
                    },
                    "cursor": {
                        "label": "Cursor",
                        "summary": "Changes the cursor displayed when cursor is over the panel."
                    },
                    "crop": {
                        "label": "Crop",
                        "summary": "This menu determines if any children panels which are positioned partially or completely outside the panel component's dimensions get cropped."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Allows you to uniformly scale the Panel's children."
                    },
                    "horigin": {
                        "label": "Horizontal Origin",
                        "summary": "Sets the position of the panel's origin horizontally. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "vorigin": {
                        "label": "Vertical Origin",
                        "summary": "Sets the position of the panel's origin vertically. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "disablealpha": {
                        "label": "Disable Alpha",
                        "summary": "Set the alpha value for the disable color."
                    },
                    "repositionx": {
                        "label": "X Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for  repositioning the panel component horizontally."
                    },
                    "hscrollbar": {
                        "label": "Horizontal Scroll Bar",
                        "summary": "Enables the horizontal scroll bar."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "y": {
                        "label": "Y",
                        "summary": "Specify the vertical position in pixels relative to its parent."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "repocomp": {
                        "label": "Component",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter. Specify the path to the panel component you would like to reposition by mouse."
                    },
                    "sizefromwindow": {
                        "label": "Size from Window",
                        "summary": "When enabled the panel component's width and height are set by resizing its floating viewer window."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "borderb": {
                        "label": "Border B",
                        "summary": "RGBA values for border B color."
                    },
                    "drag": {
                        "label": "When Dragging This",
                        "summary": "Specify if this Panel Component can be dragged."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Allows you to offset the Panel's children. This parameter is overwritten by the Align, Justify Horizontal, and Justify Vertical parameters above."
                    },
                    "w": {
                        "label": "Width",
                        "summary": "Specify the panel's width in pixels."
                    },
                    "repositiony": {
                        "label": "Y Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for repositioning the panel component vertically."
                    },
                    "topfill": {
                        "label": "TOP Fill",
                        "summary": "This menu specifies the way the Background TOP will fill the panel's background."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "lockfirstrow": {
                        "label": "Lock First Row",
                        "summary": "Locks the first row in place when scrolling horizontally."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "vmode": {
                        "label": "Vertical Mode",
                        "summary": "Select one of 3 modes to determine the vertical height of the panel."
                    },
                    "hfillweight": {
                        "label": "Horizontal Fill Weight",
                        "summary": "When multiple panels are using Horizontal Mode = Fill and being aligned by the parent either Left to Right or Right to Left, this fill weight parameter can be used to bias the fill width of the panels."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "reset": {
                        "label": "Reset",
                        "summary": "Resets the table by running its initialize callbacks."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "topoffset": {
                        "label": "Top Offset",
                        "summary": "An offset for the top anchor in pixels."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "aspect": {
                        "label": "Aspect Ratio",
                        "summary": "Specify the ratio when using Fixed Aspect parameter above, the ratio is width/height."
                    },
                    "reposition": {
                        "label": "Drag to Reposition",
                        "summary": "Enables repositioning of the panel or window by dragging with the mouse."
                    },
                    "vscrollbar": {
                        "label": "Vertical Scroll Bar",
                        "summary": "Enables the vertical scroll bar."
                    },
                    "postoffset": {
                        "label": "Post Offset",
                        "summary": "Adds an offset after all other postions and alignment options have been applied to the panel."
                    },
                    "topborderi": {
                        "label": "Top Border Inside",
                        "summary": ""
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "hmode": {
                        "label": "Horizontal Mode",
                        "summary": "Select one of 3 modes to determine the horizontal width of the panel."
                    },
                    "lockfirstcol": {
                        "label": "Lock First Col",
                        "summary": "Locks the first column in place when scrolling vertically."
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": "This menu specifies if the panel's children are being justified vertically."
                    },
                    "multrgb": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Multiplies the RGB channels by the alpha channel."
                    },
                    "spacing": {
                        "label": "Spacing",
                        "summary": "This is enabled by choosing any Align option other than None or Match Network Nodes. It defines the space between the children when they are being aligned."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "topanchor": {
                        "label": "Top Anchor",
                        "summary": "Position of the top anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "multitouch": {
                        "label": "Multi-Touch",
                        "summary": "When enabled, this panel will process the first touch it gets in a similar manner to how it processes a mouse click, with updates to u, v, state etc.  The touch event must be initiated from the panel.  Subsequent touches are ignored.  If this panel handles multi-touch events via the Multi Touch In DAT, you may want to disable Built-in Multi-Touch so it won't interfere with script processing."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "resizew": {
                        "label": "W Range",
                        "summary": "Limits the left-right (width) resizing range."
                    },
                    "fit": {
                        "label": "Fit",
                        "summary": "This menu allows you to scale the panel's children. It overrides the Justify Horizontal and Justify Vertical parameters."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "dropdestscript": {
                        "label": "Drop Destination Script",
                        "summary": "Specify a script that will be executed when the dragged Panel Component is dropped. A temporary network is created and the component (or the alternative operator specified in Dropped Component) is copied to this network. You can add or modify operators in this network. Please refer to the Drop Destination Script section of the Drag and Drop page."
                    },
                    "cols": {
                        "label": "Columns",
                        "summary": "The number of columns in the List."
                    },
                    "leftborderi": {
                        "label": "Left Border Inside",
                        "summary": ""
                    },
                    "uvbuttons": {
                        "label": "Mouse UV Buttons",
                        "summary": "Allows you to specify which mouse buttons update the uv Panel Values."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    }
                },
                "summary": "The List Component lets you create large lists that are highly customizable via the List COMPs initialization and callback functions."
            },
            "replicatorCOMP": {
                "label": "Replicator",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "numreplicants": {
                        "label": "Number of Replicants",
                        "summary": "Set number of replicants when using Replication Method = By Number above."
                    },
                    "opprefix": {
                        "label": "Operator Prefix",
                        "summary": "Add this prefix to all nodes."
                    },
                    "colindex": {
                        "label": "Column Index",
                        "summary": "Column number, starting from 0."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "tscript": {
                        "label": "Script",
                        "summary": "Tscript only (use callback DAT in python): For every replicant, you can run a script to customize it relative to the master, such as setting the Display or Clone parameters, or a Render flag. Replicator runs the script command to customize each replicant versus the master. me.curItem can be used here to access the current item and make changes to it.  Select one of the 3 entries in the drop menu to the right for some examples.  If you are using Tscript, some local variables are defined:  * $ITEM Name of current node being replicated. * $MASTER Name of master node. * $LOCATION Name of the location component.  The most common need is for the master to not display, and the replicants to display. For Panel components it is most commonly \\\"opparm $ITEM paneldisplay ( 1 )\\\", and for Geometry components it is most commonly \\\"opset -d on $ITEM\\\".  Use the popup menu for some common scripts."
                    },
                    "colname": {
                        "label": "Column Name",
                        "summary": "Name at the top of the column."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "layout": {
                        "label": "Layout",
                        "summary": "How to lay out the new nodes - all in one place (Off), horizontally, vertically, or in a grid."
                    },
                    "layoutorigin": {
                        "label": "Layout Origin",
                        "summary": "Where to lay out the new nodes, giving the XY location of the top-left node's bottom-left corner."
                    },
                    "domaxops": {
                        "label": "Maximum Operators",
                        "summary": "Max number of nodes, to keep it under control."
                    },
                    "doincremental": {
                        "label": "Incremental Update",
                        "summary": ""
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "method": {
                        "label": "Replication Method",
                        "summary": "Choose between using a Template DAT Table where each row will create a replicant or using the Number of Replicants parameter below to set how many replications to make."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "recreatemissing": {
                        "label": "Recreate Missing Operators",
                        "summary": "Re-creates missing operators from the template table but does not delete and re-create already existing replicants."
                    },
                    "namefromtable": {
                        "label": "Name from Table",
                        "summary": "How the node names will be generated."
                    },
                    "destination": {
                        "label": "Destination",
                        "summary": "Where to put the replicant nodes. If the location is .., it puts the nodes inside the parent, which is actually alongside the Replicator component. If you put ., it will put it inside itself, that is, inside the Replicator component.  If left blank, it will error."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "template": {
                        "label": "Template DAT Table",
                        "summary": "Path to the table DAT that will drive the replicating."
                    },
                    "ignorefirstrow": {
                        "label": "Ignore First Row",
                        "summary": "Do not create a node for the first row."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "maxops": {
                        "label": "Maximum Operators",
                        "summary": ""
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Path to a DAT containing callbacks for each event received.  See replicatorCOMP_Class for usage."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "scriptmenu": {
                        "label": "Script Names",
                        "summary": ""
                    },
                    "master": {
                        "label": "Master Operator",
                        "summary": "Which node or component to replicate."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "increment": {
                        "label": "Incremental Update",
                        "summary": "Staggers the replication of operators to avoid large frame drops when creating replicants. It will create the specified number of replicants per frame at most, by default 1 per frame, if Incremental Update is on."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "recreateall": {
                        "label": "Recreate All Operators",
                        "summary": "Deletes all nodes it has created, then re-creates them using the template and its current parameters."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    }
                },
                "summary": "The Replicator Component creates a node for every row of a table, creating nodes (\\\"replicants\\\") and deleting them as the table changes."
            },
            "timeCOMP": {
                "label": "Time",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "rangestart": {
                        "label": "Range Start",
                        "summary": "Sets the start frame of the working range. The working range is a subset of the start/end range which can be used to focus work on a smaller section of time. The playhead will only playback the frames/beats that are inside this working range."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "Controls the playback of the Time Component. 0 = stop, 1 = play."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "independent": {
                        "label": "Run Independently",
                        "summary": "When checked on, this Time COMP's time will not be dependant on parent Time Components found in the network hierarchy. For example, starting/pausing other Time COMP's higher in the hierarchy will not start/pause a Time COMP whose Run Independently parameter is on."
                    },
                    "rangeend": {
                        "label": "Range End",
                        "summary": "Sets the end frame of the working range. The working range is a subset of the start/end range which can be used to focus work on a smaller section of time. The playhead will only playback the frames/beats that are inside this working range."
                    },
                    "tempo": {
                        "label": "Tempo",
                        "summary": "Sets the bpm for the Time Component."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "resetframe": {
                        "label": "Reset Frame",
                        "summary": ""
                    },
                    "rate": {
                        "label": "Rate",
                        "summary": "Sets the frame per second for the Time Component."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "rangelimit": {
                        "label": "Range Limit",
                        "summary": "This menu controls how the playback loops:"
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "end": {
                        "label": "End",
                        "summary": "Sets the end frame for the Time Component. The Start and End parameters determine the overall length of the Time Component."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "start": {
                        "label": "Start",
                        "summary": "Sets the start frame for the Time Component. The Start and End parameters determine the overall length of the Time Component."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "signature": {
                        "label": "Signature",
                        "summary": "Specifies the time signature. The first number is the number of beats per measure and the second number indicates the type of note that constitutes one beat. See Time Signature - Wikipedia for additional information."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    }
                },
                "summary": "The Time Component allows each component to have its own timeline (clock)."
            },
            "cameraCOMP": {
                "label": "Camera",
                "parameters": {
                    "fognear": {
                        "label": "Fog Near",
                        "summary": "The starting distance of the fog. If geometry is closer to the camera than this distance, fog will not be calculated in the color of the geometry. Used in the linear fog equation."
                    },
                    "bank": {
                        "label": "Auto-Bank Factor",
                        "summary": "The Auto-Bank Factor rolls the Component based on the curvature of the path at its current position. To turn off auto-banking, set the bank scale to 0."
                    },
                    "ipdshift": {
                        "label": "IPD Shift",
                        "summary": "This is the Interpupillary Distance which applies a translation on the X axis. It is separate from the other translations because when doing things such as a Cube Map rendering, the shift needs to occur after the rotation to the other cube face. If you apply the shift directly in the X translate parameter the cameras will be in the incorrect spot for many of the cube faces.  To use the IPD with 2 cameras, the right eye camera should be set with +IPD/2 and the left eye camera to -IPD/2."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Using the angle control you can specify a Component's rotation as it animates along the path."
                    },
                    "pathorient": {
                        "label": "Orient along Path",
                        "summary": "If this option is selected, the Component will be oriented along the path. The positive Z axis of the Component will be pointing down the path."
                    },
                    "pos": {
                        "label": "Position",
                        "summary": "This parameter lets you specify the Position of the Component along the path. The values you can enter for this parameter range from 0 to 1, where 0 equals the starting point and 1 equals the end point of the path. The value slider allows for values as high as 10 for multiple \\\"passes\\\" along the path."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "camlightmask": {
                        "label": "Camera Light Mask",
                        "summary": "Allows only specific lights to be used by this camera. This is used in conjunction with the Lights parameter in the Render TOP to determine what lights are used to illuminate the geometry. When this parameter is left blank, all lights specified in the Render TOP will be used. Lights specified in this parameter will limit the geometry's lighting with this camera to the light(s)specified assuming the light(s) is also listed in the Render TOP."
                    },
                    "win": {
                        "label": "Window X/Y",
                        "summary": "These parameters define the center of the window during the rendering process. The window parameter takes the view and expands it to fit the camera's field of vision. It is important to note that this action is independent of perspective. In other words, it acts as though you are panning the camera without actually moving the camera. The units for this parameter are normalized. That is a Window X of -0.5 will move the previous center of the image to the left edge of the render."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "pxform": {
                        "label": "Apply Pre-Transform",
                        "summary": ""
                    },
                    "viewanglemethod": {
                        "label": "Viewing Angle Method",
                        "summary": "This menu determines which method is used to define the camera's angle of view."
                    },
                    "winsize": {
                        "label": "Window Size",
                        "summary": "The Window Size parameter specifies the dimensions for expanding the view. Similar to Window X / Y, this parameter creates a zoom effect by scaling the screen before rendering to the viewport."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "Sets the background color and alpha of the camera's view."
                    },
                    "quadreprojsop": {
                        "label": "Quad Reproject SOP",
                        "summary": "Quad Reprojection is a feature that allows reprojection an arbitrary quad in the scene so that portion of the render where it ends up will be blown up to fill the output of the render. Refer to the Quad Reprojection article for more information about this feature."
                    },
                    "pxord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "lookup": {
                        "label": "Look At Up Vector",
                        "summary": "When specifying a Look At, it is possible to specify an up vector for the lookat. Without using an up vector, it is possible to get poor animation when the lookat Component passes through the Y axis of the target Component.  * Don't Use Up Vector - Use this option if the look at Component does not pass through the Y axis of the target Component. * Use Up Vector - This precisely defines the rotates on the Component doing the looking. The Up Vector specified should not be parallel to the look at direction. See Up Vector below. * Use Quaternions - Quaternions are a mathematical representation of a 3D rotation. This method finds the most efficient means of moving from one point to another on a sphere."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "focal": {
                        "label": "Focal Length",
                        "summary": "The parameter sets the focal length of the lens, zooming in and out. Perspective is flattened or exaggerated depending on focal length. See FOV Angle parameter for relation of aperture, focal length and field of view angle. Some interesting distortion effects can be acheived with this parameter."
                    },
                    "pt": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block. In matrix math terms, if we use the 'multiply vector on the right' (column vector) convention, a transform order of Scale, Rotate, Translate would be written as translate * rotate * scale * vectorOrPosition."
                    },
                    "fog": {
                        "label": "Fog",
                        "summary": "This menu determines the type of fog rendered in the viewport: Linear fog uses the following equation:  Image:Objects14.gif  Exponential fog uses the following equation:  Image:Objects18.gif  Squared Exponential fog uses the following equation:  Image:Objects20.gif"
                    },
                    "ps": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "xformmatrixop": {
                        "label": "Xform Matrix/CHOP/DAT",
                        "summary": "This parameter can be used to transform using a 4x4 matrix directly. For information on ways to specify a matrix directly, refer to the Matrix Parameters page."
                    },
                    "fogdensity": {
                        "label": "Fog Density",
                        "summary": "A value that specifies density or thickness, used in both exponential fog types. Only non-negative densities are accepted."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "pr": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "pscale": {
                        "label": "Uniform Scale",
                        "summary": ""
                    },
                    "quadreprojpts": {
                        "label": "Quad Reproject Points",
                        "summary": "Specifies 4 point indices in the SOP referenced by Quad Reproject SOP that make up the quad that determines the region to be reprojected. The indices should be listed in bottom left, bottom right, top left, top right order, as viewed from the camera. The SOP that is referenced should be in the COMP that is being rendered, so the world transform that will be applied to is can be taken into account."
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "orthowidth": {
                        "label": "Ortho Width",
                        "summary": "Only active if Orthographic is chosen from the Projection pop-up menu. This specifies the width of the orthographic projection."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "winrollpivot": {
                        "label": "Window Roll Pivot",
                        "summary": ""
                    },
                    "preset": {
                        "label": "Reset Transform",
                        "summary": "This button will reset this page's transform so it has no translate/rotate/scale."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "prord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "constrain": {
                        "label": "Constrain To",
                        "summary": "Allows the location of the object to be constrained to any other object whose path is specified in this parameter."
                    },
                    "pcommit": {
                        "label": "Commit to Main Transform",
                        "summary": "This button will copy the transform from this page to the main Xform page, and reset this page's transform."
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "This field allows you to change the size of an Component uniformly along the three axes.  Note: Scaling a camera's channels is not generally recommended. However, should you decide to do so, the rendered output will match the Viewport as closely as possible when scales are involved."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "pathsop": {
                        "label": "Path SOP",
                        "summary": "Names the SOP that functions as the path you want this Component to move along. For instance, you can name an SOP that provides a spline path for the camera to follow.  Production Tip: For Smooth Motion Along a Path - Having a Component follow an animation path is simple. However, when using a NURBS curve as your path, you might notice that the Component speeds up and slows down unexpectedly as it travels along the path. This is usually because the CVs are spaced unevenly. In such a case, use the Resample SOP to redistribute the CVs so that they are evenly spaced along the curve. A caution however - using a Resample SOP can be slow if you have an animating path curve.  An alternative method is to append a Basis SOP to the path curve and change it to a Uniform Curve. This way, your Component will move uniformly down the curve, and there is no need for the Resample SOP and the unnecessary points it generates."
                    },
                    "projectionblend": {
                        "label": "Projection Blend",
                        "summary": "Blends between perspective projection and orthographic projection when the Projection parameter is set to Perspective to Ortho Blend."
                    },
                    "fogmap": {
                        "label": "Fog Map",
                        "summary": "Use a TOP texture as a color map for the fog."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "aperture": {
                        "label": "Aperture",
                        "summary": "This value relates to the area through which light can pass for the camera."
                    },
                    "winroll": {
                        "label": "Window Roll",
                        "summary": "This parameter sets the amount, in degrees, the window area rolls. This can be set as a static value or as an aspect that changes over the course of the animation. The roll occurs about the centre of the window."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "near": {
                        "label": "Near",
                        "summary": "This control allows you to designate the near clipping planes. Geometry closer from the lens than these distances will not be visible.  NOTE: If geometry in your scene is producing z-depth artifacts, increase the resolution of the camera's z-depth buffer. To do this, decrease the difference between near and far clipping planes, starting with the near plane."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "far": {
                        "label": "Far",
                        "summary": "This control allows you to designate the far clipping planes. Geometry further away from the lens than these distances will not be visible.  NOTE: If geometry in your scene is producing z-depth artifacts, increase the resolution of the camera's z-depth buffer. To do this, decrease the difference between near and far clipping planes, starting with the near plane."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Allows you to orient your Component by naming the Component you would like it to Look At, or point to. Once you have designated this Component to look at, it will continue to face that Component, even if you move it. This is useful if, for instance, you want a camera to follow another Component's movements. The Look At parameter points the Component in question at the other Component's origin.  Tip: To designate a center of interest for the camera that doesn't appear in your scene, create a Null Component and disable its display flag. Then Parent the Camera to the newly created Null Component, and tell the camera to look at this Component using the Look At parameter. You can direct the attention of the camera by moving the Null Component with the Select state. If you want to see both the camera and the Null Component, enable the Null Component's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
                    },
                    "up": {
                        "label": "Orient Up Vector",
                        "summary": "When orienting a Component, the Up Vector is used to determine where the positive Y axis points."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "projmatrixop": {
                        "label": "Proj Matrix/CHOP/DAT",
                        "summary": "When Custom Projection Matrix is selected, this parameters should be filled in a custom 4x4 projection matrix. For ways to specify a matrix in a parameter, refer to the Matrix Parameters article."
                    },
                    "fogfar": {
                        "label": "Fog Far",
                        "summary": "The far distance used in the linear fog equation."
                    },
                    "fogalpha": {
                        "label": "Fog Alpha",
                        "summary": "Used to control the background opacity of the scene."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which a Component scales and rotates. Altering the pivot point of a Component produces different results depending on the transformation performed on the Component.  For example, during a scaling operation, if the pivot point of an Component is located at -1, -1, 0 and you wanted to scale the Component by 0.5 (reduce its size by 50%), the Component would scale toward the pivot point and appear to slide down and to the left.  Image:Objects17.gif  In the example above, rotations performed on an Component with different pivot points produce very different results."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "customproj": {
                        "label": "Custom Projection GLSL DAT",
                        "summary": "Takes a DAT containing a GLSL shader to specify custom projection functions. You must provide one functions in this shader. As a starting point, here are the definitions for the function that is used when custom ones are not provided. This will only be used when the Render TOP is rendering a 2D output, not cubemaps or fisheye renders.    vec4 UserWorldToProj(vec4 worldSpaceVertPosition, int cameraIndex)   {       vec4 projP = uTDMats[cameraIndex].camProj * worldSpaceVertPosition;       return projP;   }  vec3 TDWorldToProj() will automatically call this at the appropriate point. You can use uniforms/samplers in this shader code by declaring them here and providing them in the GLSL page of the Render TOP."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "projection": {
                        "label": "Projection",
                        "summary": "A pop-up menu lets you choose from Perspective and Orthographic projection types. A third option Perpective to Ortho Blend enables the Projection Blend parameter below which can be used to blend between perspectives. A 4th option Custom Projection Matrix allows you to specify a custom 4x4 projection matrix using a tdu.Matrix, CHOP or a DAT."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "fov": {
                        "label": "FOV Angle",
                        "summary": "The field of view (FOV) angle is the angular extend of the scene imaged by the camera.  Field of View and Throw Angle: The FOV would be: :FOV = arctan( (screenWidth / 2) / (distanceToScreen) ) * 2 :FOV = arctan( 0.5 * (screenWidth / distanceToScreen) ) * 2  Throw is: :Throw = distanceToScreen / screenWidth :1/Throw = screenWidth / distanceToScreen  In terms of throw, it\\u2019s  :FOV = arctan(0.5 * (1/Throw)) * 2 :FOV = arctan(0.5 / Throw) * 2"
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "fogcolor": {
                        "label": "Fog Color",
                        "summary": "The color of the fog."
                    },
                    "pp": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    }
                },
                "summary": "The Camera Component is a 3D object that acts like real-world cameras."
            },
            "ambientlightCOMP": {
                "label": "Ambient Light",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "dimmer": {
                        "label": "Dimmer",
                        "summary": "This parameter allows you to change the intensity of the light either as a static value or over time."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "c": {
                        "label": "Light Color",
                        "summary": "You can modify the color of the light three ways: Color List, Hue, Saturation, and Value, or Red, Green, and Blue. To choose one, click on the appropriate box and the color editing fields below change accordingly."
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    }
                },
                "summary": "The Ambient Light Component controls the color and intensity of the environmental light in a given scene."
            },
            "usdCOMP": {
                "label": "USD",
                "parameters": {
                    "bank": {
                        "label": "Auto-Bank Factor",
                        "summary": "The Auto-Bank Factor rolls the Component based on the curvature of the path at its current position. To turn off auto-banking, set the bank scale to 0."
                    },
                    "samplerate": {
                        "label": "Sample Rate",
                        "summary": "It is used to specify the sample rate (FPS) for the animation. This parameter is disabled by default and can be enabled once the Custom option is selected from the Sample Rate Menu."
                    },
                    "update": {
                        "label": "Update",
                        "summary": "Updates the network. This option is specifically useful when the USD file is edited after the USD network is imported in TouchDesigner."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Using the angle control you can specify a Component's rotation as it animates along the path."
                    },
                    "buildnetwork": {
                        "label": "Build Network",
                        "summary": "Every time (including the first time) you specify a new file, or change any parameter from the USD page, you need to re-build it, so it generates the network according to the current selected parameters."
                    },
                    "pathorient": {
                        "label": "Orient along Path",
                        "summary": "If this option is selected, the Component will be oriented along the path. The positive Z axis of the Component will be pointing down the path."
                    },
                    "pos": {
                        "label": "Position",
                        "summary": "This parameter lets you specify the Position of the Component along the path. The values you can enter for this parameter range from 0 to 1, where 0 equals the starting point and 1 equals the end point of the path. The value slider allows for values as high as 10 for multiple \\\"passes\\\" along the path."
                    },
                    "cuepulse": {
                        "label": "Cue Pulse",
                        "summary": "When pressed the animation jumps to the Cue Point and continues from that point."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "genactors": {
                        "label": "Generate Actor COMPs",
                        "summary": "When enabled, will generate Actor COMPs in place of Geometry COMPs as the parents' of Import Select SOPs."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "shiftanimationstart": {
                        "label": "Shift Animation Start",
                        "summary": "A toggle to specify whether to shift the animation to the start of animation indicated in the USD file."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "ps": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "pxform": {
                        "label": "Apply Pre-Transform",
                        "summary": ""
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "mergelevel": {
                        "label": "Merge Level",
                        "summary": "Defines the desired merge level for merging the nodes. The start value is 1 which is the root of the network and it increases for the children of nodes the same as their positions within tree hierarchy. By default, this parameter is disabled and can be enabled once the toggle for Merge Geometry is set to ON."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "maxwiredchildren": {
                        "label": "Max Wired Children",
                        "summary": "This value is used to define how many wired children a Geometry/Null COMP node can have on the same network level (note that this network level refers to all the nodes that can be seen on the same canvas network). If a node has more children than this value, all its children will be relocated inside of it. This is used to prune out the wired children nodes of a parent node to make a lighter and cleaner network. The default value is 5."
                    },
                    "pxord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "keepparams": {
                        "label": "Keep Parameters",
                        "summary": "A toggle to keep the parameters of the current network over parameters of the re-imported (via Update parameter) network."
                    },
                    "preset": {
                        "label": "Reset Transform",
                        "summary": "This button will reset this page's transform so it has no translate/rotate/scale."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "cue": {
                        "label": "Cue",
                        "summary": "A toggle to jump to Cue Point when it\\u2019s set to ON and it stays at that position. Only available when Play Mode is Sequential."
                    },
                    "keepconnections": {
                        "label": "Keep Connections",
                        "summary": "A toggle to keep the connection of the current network over the connections of the re-imported (via Update parameter) network."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT will execute during import or update allowing for modification and customization of the imported operators and resulting network."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "computenormals": {
                        "label": "Compute Normals",
                        "summary": "A toggle for generating normal vectors from subdivision schema specified from USD file using OpenSubdiv library. Turning this toggle to OFF makes will make the SOPs use the TouchDesigner generated normal instead (only CPU mode)."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "textendleft": {
                        "label": "Extend Left",
                        "summary": "Determines how USD COMP handles animation positions that lie before the Trim Start position. For example, if Trim Start is set to 1, and the animation current index is -10, the Extend Left menu determines how the animation position is calculated."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block. In matrix math terms, if we use the 'multiply vector on the right' (column vector) convention, a transform order of Scale, Rotate, Translate would be written as translate * rotate * scale * vectorOrPosition."
                    },
                    "gpudirect": {
                        "label": "Direct to GPU",
                        "summary": "A toggle to load the geometry directly to the GPU. This makes the rendering much faster than CPU mode. However, currently the only supported geometries are mesh and point primitives. If a USD scene contains other prim types such as NURBs Patches, an error will be generated for each Import Select SOP that is not supported."
                    },
                    "cuepointunit": {
                        "label": "Cue Point Unit",
                        "summary": "Specifies a unit type for Cue Point. Changing this will convert the previous unit to the selected unit."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "xformmatrixop": {
                        "label": "Xform Matrix/CHOP/DAT",
                        "summary": "This parameter can be used to transform using a 4x4 matrix directly. For information on ways to specify a matrix directly, refer to the Matrix Parameters page."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "pr": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "pscale": {
                        "label": "Uniform Scale",
                        "summary": ""
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "trim": {
                        "label": "Trim",
                        "summary": "A toggle to enable the Trim Start and Trim End parameters."
                    },
                    "lookup": {
                        "label": "Look At Up Vector",
                        "summary": "When specifying a Look At, it is possible to specify an up vector for the lookat. Without using an up vector, it is possible to get poor animation when the lookat Component passes through the Y axis of the target Component.  * Don't Use Up Vector - Use this option if the look at Component does not pass through the Y axis of the target Component. * Use Up Vector - This precisely defines the rotates on the Component doing the looking. The Up Vector specified should not be parallel to the look at direction. See Up Vector below. * Use Quaternions - Quaternions are a mathematical representation of a 3D rotation. This method finds the most efficient means of moving from one point to another on a sphere."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "reload": {
                        "label": "Reload File",
                        "summary": "A pulse to reload the assets from the file without making any changes to the existing network."
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "tstart": {
                        "label": "Trim Start",
                        "summary": "Sets an in point from the beginning of the animation, allowing you to trim the starting index of the animation. The units\\u2019 menu on the right let you specify this position by index, frames, seconds, or fraction (percentage)."
                    },
                    "initialize": {
                        "label": "Initialize",
                        "summary": "Resets the animation to its initial state."
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "constrain": {
                        "label": "Constrain To",
                        "summary": "Allows the location of the object to be constrained to any other object whose path is specified in this parameter."
                    },
                    "pcommit": {
                        "label": "Commit to Main Transform",
                        "summary": "This button will copy the transform from this page to the main Xform page, and reset this page's transform."
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "This field allows you to change the size of an Component uniformly along the three axes.  Note: Scaling a camera's channels is not generally recommended. However, should you decide to do so, the rendered output will match the Viewport as closely as possible when scales are involved."
                    },
                    "textendright": {
                        "label": "Extend Right",
                        "summary": "Determines how USD COMP handles animation positions that lie after the Trim End position. For example, if Trim End is set to 20, and the animation current index is 25, the Extend Right menu determines how the animation position is calculated."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "index": {
                        "label": "Index",
                        "summary": "This parameter explicitly sets the animation position when Play Mode is set to Specify Index. The units\\u2019 menu on the right lets you specify the index in the following units: Index, Frames, Seconds, and Fraction (percentage)."
                    },
                    "pathsop": {
                        "label": "Path SOP",
                        "summary": "Names the SOP that functions as the path you want this Component to move along. For instance, you can name an SOP that provides a spline path for the camera to follow.  Production Tip: For Smooth Motion Along a Path - Having a Component follow an animation path is simple. However, when using a NURBS curve as your path, you might notice that the Component speeds up and slows down unexpectedly as it travels along the path. This is usually because the CVs are spaced unevenly. In such a case, use the Resample SOP to redistribute the CVs so that they are evenly spaced along the curve. A caution however - using a Resample SOP can be slow if you have an animating path curve.  An alternative method is to append a Basis SOP to the path curve and change it to a Uniform Curve. This way, your Component will move uniformly down the curve, and there is no need for the Resample SOP and the unnecessary points it generates."
                    },
                    "cuepoint": {
                        "label": "Cue Point",
                        "summary": "Set any index in the animation as a point to jump to."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "pt": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "playmode": {
                        "label": "Play Mode",
                        "summary": "A menu to specify the method used to play the animation."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "speed": {
                        "label": "Speed",
                        "summary": "This is a speed multiplier which only works when Play Mode is Sequential. A value of 1 is the default playback speed. A value of 2 is double speed, 0.5 is half speed and so on."
                    },
                    "tend": {
                        "label": "Trim End",
                        "summary": "Sets an end point from the end of the movie, allowing you to trim the ending index of the animation. The units\\u2019 menu on the right let you specify this position by index, frames, seconds, or fraction (percentage)."
                    },
                    "indexunit": {
                        "label": "Index Unit",
                        "summary": "Specifies a unit type for Index. Changing this will convert the previous unit to the selected unit."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Allows you to orient your Component by naming the Component you would like it to Look At, or point to. Once you have designated this Component to look at, it will continue to face that Component, even if you move it. This is useful if, for instance, you want a camera to follow another Component's movements. The Look At parameter points the Component in question at the other Component's origin.  Tip: To designate a center of interest for the camera that doesn't appear in your scene, create a Null Component and disable its display flag. Then Parent the Camera to the newly created Null Component, and tell the camera to look at this Component using the Look At parameter. You can direct the attention of the camera by moving the Null Component with the Select state. If you want to see both the camera and the Null Component, enable the Null Component's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
                    },
                    "up": {
                        "label": "Orient Up Vector",
                        "summary": "When orienting a Component, the Up Vector is used to determine where the positive Y axis points."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "A toggle that makes the animation to play when it sets to ON. This Parameter is only available/enabled if the Sequential mode is selected from the Play Mode."
                    },
                    "cameras": {
                        "label": "Cameras",
                        "summary": "A toggle to specify whether the Camera nodes (subject to be defined in the USD file) created for the USD COMP or not."
                    },
                    "usematerial": {
                        "label": "Use Material",
                        "summary": "A toggle to specify whether the material/shading be enabled for all the geometry primitives with material binding or not. By turning this toggle on, the MAT nodes and -according to the need- the ImportSelect TOPs for texture mapping assets are generated."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which a Component scales and rotates. Altering the pivot point of a Component produces different results depending on the transformation performed on the Component.  For example, during a scaling operation, if the pivot point of an Component is located at -1, -1, 0 and you wanted to scale the Component by 0.5 (reduce its size by 50%), the Component would scale toward the pivot point and appear to slide down and to the left.  Image:Objects17.gif  In the example above, rotations performed on an Component with different pivot points produce very different results."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "mergegeo": {
                        "label": "Merge Geometry",
                        "summary": "A toggle to merge the mergeable geometries SOPs and their transformation COMPs up to a specified merge level. This feature can noticeably increase the performance of the USD COMP network."
                    },
                    "file": {
                        "label": "USD File",
                        "summary": "The path to the USD file. The file can be a binary (.usd or .usdc) or ASCII format (.usda)."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "tendunit": {
                        "label": "Trim End Unit",
                        "summary": "Specifies a unit type for Trim End. Changing this will convert the previous unit to the selected unit."
                    },
                    "prord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "tstartunit": {
                        "label": "Trim Start Unit",
                        "summary": "Specifies a unit type for Trim Start. Changing this will convert the previous unit to the selected unit."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "Resets the animation to its initial state and starts playback."
                    },
                    "sampleratemode": {
                        "label": "Sample Rate Mode",
                        "summary": "A menu to choose between the file FPS or custom sample rate."
                    },
                    "pp": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    }
                },
                "summary": ""
            },
            "fieldCOMP": {
                "label": "Field",
                "parameters": {
                    "fixedaspect": {
                        "label": "Fixed Aspect",
                        "summary": "Allows easy creation of panels with a specific aspect set in the Aspect Ratio parameter below. Only requires setting the width or height of the panel and the other dimension is calculated based on the Aspect Ratio parameter."
                    },
                    "top": {
                        "label": "Background TOP",
                        "summary": "Allows you to specify a TOP as the background for the panel."
                    },
                    "drop": {
                        "label": "On Dropping Into",
                        "summary": "Specify if this Panel Component accepts items that are dropped onto it."
                    },
                    "vieweraspect": {
                        "label": "Floating Viewer Aspect",
                        "summary": "Controls whether the aspect ratio is proportional or unconstrained when resizing a floating viewer ie. dragging the edges of the viewer to resize it."
                    },
                    "fieldlock": {
                        "label": "Field Lock",
                        "summary": "When checked on the field can not be edited."
                    },
                    "fieldconspaces": {
                        "label": "Spaces to Underscores",
                        "summary": "Converts spaces to underscores."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "paneldragop": {
                        "label": "Dropped Operator",
                        "summary": "The Dropped Component parameter is the easiest way to specify an alternative operator to drop. Note that this alternative operator must exist, otherwise the component itself will be dropped. The alternative is only used when dropping onto a network or control panel. Text pasted via dragging and dropping, or files saved via dropping onto the desktop, will still use the original."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "display": {
                        "label": "Display",
                        "summary": "Specifies if the panel is displayed or hidden."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "droptypescript": {
                        "label": "Drop Types",
                        "summary": "If a drop destination script is specified, you can also add a DAT table with a list of return types that the drop destination script will provide. Return types can be one of the op types (COMP,TOP,CHOP,SOP,MAT,DAT), channel, or supported filetypes. Please refer to the Drop Types section of the Drag and Drop page."
                    },
                    "alignmax": {
                        "label": "Max per Line",
                        "summary": "This is enabled by choosing any Align option other than None, Layout Grid Horizontal, Layout Grid Vertical, or Match Network Nodes, and defines the maximum number of children placed in one row or column."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "RGB values for the background. (default: black (0,0,0))"
                    },
                    "margin": {
                        "label": "Margin",
                        "summary": "The four fields allow you to specify the space that surrounds the Panel Component. The margin is the space between the Panel Component's border and the outer edge.  The Margin is defined in absolute pixels and does not stretch with the window, as a result margin is not reflected in the node's panel viewer but only when the parent is drawn in a floating window."
                    },
                    "alignorder": {
                        "label": "Align Order",
                        "summary": "This parameter allows you to specify the align position when its parent's Align parameter is set to something other then None or Match Network Nodes. Lower numbers are first."
                    },
                    "leftoffset": {
                        "label": "Left Offset",
                        "summary": "An offset for the left anchor in pixels."
                    },
                    "mousewheel": {
                        "label": "Use Mouse Wheel",
                        "summary": "Turn on to capture events when the mouse wheel is used over the panel."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": "Set the alpha value for the background."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "resize": {
                        "label": "Drag Edges to Resize",
                        "summary": "Four checkboxes allow you to enable resizing a panel by grabbing the corresponding edge or corner: Resize Left, Right, Bottom, Top."
                    },
                    "topborder": {
                        "label": "Top Border",
                        "summary": "What color the 2 top-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "opacity": {
                        "label": "Opacity",
                        "summary": "Allows you to control the transparency of the panel."
                    },
                    "borderover": {
                        "label": "Border Over Children",
                        "summary": "Draws the panel's borders on top of all children panels."
                    },
                    "bottomborderi": {
                        "label": "Bottom Border Inside",
                        "summary": ""
                    },
                    "vfillweight": {
                        "label": "Vertical Fill Weight",
                        "summary": "When multiple panels are using Vertical Mode = Fill and being aligned by the parent either Top to Bottom or Bottom to Top, this fill weight parameter can be used to bias the fill height of the panels."
                    },
                    "clickthrough": {
                        "label": "Click Through",
                        "summary": "When enabled all mouse clicks are ignored by this Panel Component."
                    },
                    "fieldnoshift": {
                        "label": "Enter as Newline with no Shift",
                        "summary": "<Enter> key works as newline (carriage return) so you do not have to hold down shift for a newline."
                    },
                    "repositiony": {
                        "label": "Y Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for repositioning the panel component vertically."
                    },
                    "bordera": {
                        "label": "Border A",
                        "summary": "RGB values for border A color."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "dodisablecolor": {
                        "label": "Disable Color",
                        "summary": "Enable the use of a unique disable color below when the panel's Enable = Off."
                    },
                    "borderaalpha": {
                        "label": "Border A Alpha",
                        "summary": "Alpha value for border A color."
                    },
                    "enable": {
                        "label": "Enable",
                        "summary": "Allows you to prevent all interaction with this panel."
                    },
                    "disablecolor": {
                        "label": "Disable Color",
                        "summary": "RGB values for the disable color. (default: black (0,0,0))"
                    },
                    "dropscript": {
                        "label": "Drop Script",
                        "summary": "A component's Drop Script is run when you drop another component or an external file into that component. Please refer to the Drop Scripts - Text section of the Drag and Drop page.          Alternatively specify a Table DAT in the drop script field. TouchDesigner will automatically look for 2 columns in the table. The first column should indicate the data type and the second should indicate the Text DAT that holds the script to process that data type. Please refer to the Drop Script - Tables section of the Drag and Drop page."
                    },
                    "uvbuttons": {
                        "label": "Mouse UV Buttons",
                        "summary": "Allows you to specify which mouse buttons update the uv Panel Values."
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": "This menu specifies if the panel's children are being justified horizontally."
                    },
                    "leftanchor": {
                        "label": "Left Anchor",
                        "summary": "Position of the left anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "dragscript": {
                        "label": "Drag Script",
                        "summary": "Specify a script that will be executed when starting to drag a Panel Component. Please refer to the Drag Script section of the Drag and Drop page."
                    },
                    "topoffset": {
                        "label": "Top Offset",
                        "summary": "An offset for the top anchor in pixels."
                    },
                    "rightoffset": {
                        "label": "Right Offset",
                        "summary": "An offset for the right anchor in pixels."
                    },
                    "rightborder": {
                        "label": "Right Border",
                        "summary": "What color the 2 right-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "composite": {
                        "label": "Composite",
                        "summary": "Selects how the panel is composited with its siblings panels. See the Composite TOP for a description of the various composite methods."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "borderbalpha": {
                        "label": "Border B Alpha",
                        "summary": "Alpha value for border B color."
                    },
                    "helpdat": {
                        "label": "Help DAT",
                        "summary": "Lets you specify the path to a Text DAT whose content will be displayed as a rollover pop-up help for the control panel."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "dropdestscript": {
                        "label": "Drop Destination Script",
                        "summary": "Specify a script that will be executed when the dragged Panel Component is dropped. A temporary network is created and the component (or the alternative operator specified in Dropped Component) is copied to this network. You can add or modify operators in this network. Please refer to the Drop Destination Script section of the Drag and Drop page."
                    },
                    "alignallow": {
                        "label": "Parent Alignment",
                        "summary": "When set to Ignore, the Panel will ignore any Align parameter settings from its parent."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "bottomoffset": {
                        "label": "Bottom Offset",
                        "summary": "An offset for the bottom anchor in pixels."
                    },
                    "resizeh": {
                        "label": "H Range",
                        "summary": "Limits the bottom-top (height) resizing range."
                    },
                    "bottomborder": {
                        "label": "Bottom Border",
                        "summary": "What color the 2 bottom-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "h": {
                        "label": "Height",
                        "summary": "Specify the Panel's height in pixels."
                    },
                    "align": {
                        "label": "Align",
                        "summary": "This menu allows you to specify how the children inside the Panel Component will be laid out. The options Layout Grid Rows,  Layout Grid Columns and Match Network Nodes will scale the Panel Component's children to fit the Component. They use the Align Order of each of the children to determine the ordering of the children."
                    },
                    "cursor": {
                        "label": "Cursor",
                        "summary": "Changes the cursor displayed when cursor is over the panel."
                    },
                    "crop": {
                        "label": "Crop",
                        "summary": "This menu determines if any children panels which are positioned partially or completely outside the panel component's dimensions get cropped."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Allows you to uniformly scale the Panel's children."
                    },
                    "horigin": {
                        "label": "Horizontal Origin",
                        "summary": "Sets the position of the panel's origin horizontally. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "vorigin": {
                        "label": "Vertical Origin",
                        "summary": "Sets the position of the panel's origin vertically. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "disablealpha": {
                        "label": "Disable Alpha",
                        "summary": "Set the alpha value for the disable color."
                    },
                    "repositionx": {
                        "label": "X Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for  repositioning the panel component horizontally."
                    },
                    "rightborderi": {
                        "label": "Right Border Inside",
                        "summary": ""
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "y": {
                        "label": "Y",
                        "summary": "Specify the vertical position in pixels relative to its parent."
                    },
                    "fieldexpand": {
                        "label": "Expand Tscript Variables",
                        "summary": "Will expand any variables that are input into the field."
                    },
                    "repocomp": {
                        "label": "Component",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter. Specify the path to the panel component you would like to reposition by mouse."
                    },
                    "sizefromwindow": {
                        "label": "Size from Window",
                        "summary": "When enabled the panel component's width and height are set by resizing its floating viewer window."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "borderb": {
                        "label": "Border B",
                        "summary": "RGBA values for border B color."
                    },
                    "drag": {
                        "label": "When Dragging This",
                        "summary": "Specify if this Panel Component can be dragged."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Allows you to offset the Panel's children. This parameter is overwritten by the Align, Justify Horizontal, and Justify Vertical parameters above."
                    },
                    "w": {
                        "label": "Width",
                        "summary": "Specify the panel's width in pixels."
                    },
                    "leftborder": {
                        "label": "Left Border",
                        "summary": "What color the 2 left-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "topfill": {
                        "label": "TOP Fill",
                        "summary": "This menu specifies the way the Background TOP will fill the panel's background."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "fieldfocus": {
                        "label": "Focus Order",
                        "summary": "The path to a DAT with a list of field component focus orders.  The DAT should container a list of paths relative to the DAT parent in the focus order. When the user hits <tab> or <shift+tab> the focus will automatically be set to the field before or after the entry for this field.  If the path for this field is not specified in focus order table, the focus will remain unchanged."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "hfillweight": {
                        "label": "Horizontal Fill Weight",
                        "summary": "When multiple panels are using Horizontal Mode = Fill and being aligned by the parent either Left to Right or Right to Left, this fill weight parameter can be used to bias the fill width of the panels."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "bottomanchor": {
                        "label": "Bottom Anchor",
                        "summary": "Position of the bottom anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "vmode": {
                        "label": "Vertical Mode",
                        "summary": "Select one of 3 modes to determine the vertical height of the panel."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "aspect": {
                        "label": "Aspect Ratio",
                        "summary": "Specify the ratio when using Fixed Aspect parameter above, the ratio is width/height."
                    },
                    "reposition": {
                        "label": "Drag to Reposition",
                        "summary": "Enables repositioning of the panel or window by dragging with the mouse."
                    },
                    "x": {
                        "label": "X",
                        "summary": "Specify the horizontal position in pixels relative to its parent."
                    },
                    "postoffset": {
                        "label": "Post Offset",
                        "summary": "Adds an offset after all other postions and alignment options have been applied to the panel."
                    },
                    "topborderi": {
                        "label": "Top Border Inside",
                        "summary": ""
                    },
                    "hmode": {
                        "label": "Horizontal Mode",
                        "summary": "Select one of 3 modes to determine the horizontal width of the panel."
                    },
                    "layer": {
                        "label": "Depth Layer",
                        "summary": "Specifies the order the panel components are drawn in, similar to layers in Photoshop. Higher values will be drawn over any other panel with a lower value (that is at the same level of hierarchy). If two panel components have the same Depth Layer value then they are ordered based on the operator's name."
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": "This menu specifies if the panel's children are being justified vertically."
                    },
                    "multrgb": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Multiplies the RGB channels by the alpha channel."
                    },
                    "spacing": {
                        "label": "Spacing",
                        "summary": "This is enabled by choosing any Align option other than None or Match Network Nodes. It defines the space between the children when they are being aligned."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "topanchor": {
                        "label": "Top Anchor",
                        "summary": "Position of the top anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "multitouch": {
                        "label": "Multi-Touch",
                        "summary": "When enabled, this panel will process the first touch it gets in a similar manner to how it processes a mouse click, with updates to u, v, state etc.  The touch event must be initiated from the panel.  Subsequent touches are ignored.  If this panel handles multi-touch events via the Multi Touch In DAT, you may want to disable Built-in Multi-Touch so it won't interfere with script processing."
                    },
                    "rightanchor": {
                        "label": "Right Anchor",
                        "summary": "Position of the right anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "resizew": {
                        "label": "W Range",
                        "summary": "Limits the left-right (width) resizing range."
                    },
                    "fieldprotected": {
                        "label": "Render Password Protected",
                        "summary": "Renders all characters as \\\"*\\\", useful for hiding strings in password fields."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "mouserel": {
                        "label": "Relative UV",
                        "summary": "When enabled the uv Panel Values will reflect relative mouse movement."
                    },
                    "fit": {
                        "label": "Fit",
                        "summary": "This menu allows you to scale the panel's children. It overrides the Justify Horizontal and Justify Vertical parameters."
                    },
                    "leftborderi": {
                        "label": "Left Border Inside",
                        "summary": ""
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "fieldtype": {
                        "label": "Field Type",
                        "summary": "Specify what kind of data can be input into the field."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    }
                },
                "summary": "The Field Component lets you enter text strings and renders text generated with the Text TOP."
            },
            "impulseforceCOMP": {
                "label": "Impulse Force",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "pulse": {
                        "label": "Pulse Force",
                        "summary": "Pulse for the impulse force. When pulsed, on the next frame it will apply the impulse force."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "relpos": {
                        "label": "Relative Position",
                        "summary": "The position at which to apply the linear force, relative to the center of the body (Note: the physical center of the object, not the center of mass). Having a nonzero relative position will also cause the body to rotate due to added torque."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "force": {
                        "label": "Force",
                        "summary": "The linear force in Newtons to be applied when the node is pulsed."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "torque": {
                        "label": "Torque",
                        "summary": "The rotational force in Newtons that will be applied."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    }
                },
                "summary": ""
            },
            "sharedmeminCOMP": {
                "label": "Shared Mem In",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "name": {
                        "label": "Shared Mem Name",
                        "summary": "The name of the memory block it reads from."
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    }
                },
                "summary": "The Shared Mem In COMP will read transform data from a shared memory block."
            },
            "fbxCOMP": {
                "label": "FBX",
                "parameters": {
                    "bank": {
                        "label": "Auto-Bank Factor",
                        "summary": "The Auto-Bank Factor rolls the Component based on the curvature of the path at its current position. To turn off auto-banking, set the bank scale to 0."
                    },
                    "samplerate": {
                        "label": "Sample Rate",
                        "summary": "Set the sample rate when the \\\"Sample Rate Mode\\\" parameter above is set to 'Custom'."
                    },
                    "update": {
                        "label": "Update",
                        "summary": "Imports the FBX file with the above parameters and with the above merge conditions and merges it with the network that is currently inside the FBX COMP, therefore maintaining your changes. This parameter should be used if the FBX file is modified and those changes need to be reflected in TouchDesigner."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Using the angle control you can specify a Component's rotation as it animates along the path."
                    },
                    "buildnetwork": {
                        "label": "Build Network",
                        "summary": "Performs a clean import of the FBX file. Builds the network from the imported file with the above parameters. If there are any nodes inside the FBX COMP they will be removed prior to importing."
                    },
                    "pathorient": {
                        "label": "Orient along Path",
                        "summary": "If this option is selected, the Component will be oriented along the path. The positive Z axis of the Component will be pointing down the path."
                    },
                    "pos": {
                        "label": "Position",
                        "summary": "This parameter lets you specify the Position of the Component along the path. The values you can enter for this parameter range from 0 to 1, where 0 equals the starting point and 1 equals the end point of the path. The value slider allows for values as high as 10 for multiple \\\"passes\\\" along the path."
                    },
                    "cuepulse": {
                        "label": "Cue Pulse",
                        "summary": "Jumps to the Cue Point when pulsed. Only available when Play Mode is Sequential."
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    },
                    "genactors": {
                        "label": "Generate Actor COMPs",
                        "summary": "When enabled, will generate Actor COMPs in place of Geometry COMPs as the parents' of Import Select SOPs. This is useful for working with Bullet Dynamics systems with your imported geometry."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "shiftanimationstart": {
                        "label": "Shift Animation Start",
                        "summary": "A toggle to specify whether to shift the animation to the start of animation indicated in the importing file."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "ps": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "pxform": {
                        "label": "Apply Pre-Transform",
                        "summary": ""
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "mergelevel": {
                        "label": "Merge Level",
                        "summary": "When enabled the FBX COMP will attempt to merge up to the desired \\u201clevel\\u201d. Level is how many steps down a node is from the root (FBX COMP). If its level is higher than the merge level and it is mergeable then it will be merged upward."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "maxwiredchildren": {
                        "label": "Max Wired Children",
                        "summary": "Any COMPs that have more wired children than this parameter will have those wired children converted to internal children of the COMP. This maintains parenting but can cleanup networks."
                    },
                    "pxord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "keepparams": {
                        "label": "Keep Parameters",
                        "summary": "When enabled, any parameter conflicts during update will keep the user changes. When disabled, any user changes to parameters may be overwritten."
                    },
                    "preset": {
                        "label": "Reset Transform",
                        "summary": "This button will reset this page's transform so it has no translate/rotate/scale."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "cue": {
                        "label": "Cue",
                        "summary": "Jumps to and holds at the Cue Point when set to 1. Only available when Play Mode is Sequential."
                    },
                    "keepconnections": {
                        "label": "Keep Connections",
                        "summary": "When enabled, any wiring/connection conflicts during update will keep the user changes. When disabled, any user changes to wiring/connections may be overwritten."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT will execute during import or update allowing for modification and customization of the imported operators and resulting network."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "textendleft": {
                        "label": "Extend Left",
                        "summary": "Determines how the animation behaves before the start of the animation (or Trim Start position if it is used)."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block. In matrix math terms, if we use the 'multiply vector on the right' (column vector) convention, a transform order of Scale, Rotate, Translate would be written as translate * rotate * scale * vectorOrPosition."
                    },
                    "gpudirect": {
                        "label": "Direct to GPU",
                        "summary": "Load the geometry directly to the GPU."
                    },
                    "cuepointunit": {
                        "label": "Cue Point Unit",
                        "summary": "Select what type of unit to specify the Cue Point with."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "xformmatrixop": {
                        "label": "Xform Matrix/CHOP/DAT",
                        "summary": "This parameter can be used to transform using a 4x4 matrix directly. For information on ways to specify a matrix directly, refer to the Matrix Parameters page."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "pr": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "pscale": {
                        "label": "Uniform Scale",
                        "summary": ""
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "trim": {
                        "label": "Trim",
                        "summary": "A toggle to enable the Trim Start and Trim End parameters."
                    },
                    "lookup": {
                        "label": "Look At Up Vector",
                        "summary": "When specifying a Look At, it is possible to specify an up vector for the lookat. Without using an up vector, it is possible to get poor animation when the lookat Component passes through the Y axis of the target Component.  * Don't Use Up Vector - Use this option if the look at Component does not pass through the Y axis of the target Component. * Use Up Vector - This precisely defines the rotates on the Component doing the looking. The Up Vector specified should not be parallel to the look at direction. See Up Vector below. * Use Quaternions - Quaternions are a mathematical representation of a 3D rotation. This method finds the most efficient means of moving from one point to another on a sphere."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "reload": {
                        "label": "Reload File",
                        "summary": "A pulse to reload the contents of the assets from the file without making any changes to the existing network."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "tstart": {
                        "label": "Trim Start",
                        "summary": "Sets an in point from the beginning of the animation, allowing you to trim the starting index of the animation. The units\\u2019 menu on the right let you specify this position by index, frames, seconds, or fraction (percentage)."
                    },
                    "initialize": {
                        "label": "Initialize",
                        "summary": "Resets the animation to its initial state."
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "constrain": {
                        "label": "Constrain To",
                        "summary": "Allows the location of the object to be constrained to any other object whose path is specified in this parameter."
                    },
                    "pcommit": {
                        "label": "Commit to Main Transform",
                        "summary": "This button will copy the transform from this page to the main Xform page, and reset this page's transform."
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "This field allows you to change the size of an Component uniformly along the three axes.  Note: Scaling a camera's channels is not generally recommended. However, should you decide to do so, the rendered output will match the Viewport as closely as possible when scales are involved."
                    },
                    "textendright": {
                        "label": "Extend Right",
                        "summary": "Determines how the animation behaves after the end of the animation (or Trim End position if it is used)."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "index": {
                        "label": "Index",
                        "summary": "This parameter explicitly sets the animation position when Play Mode is set to Specify Index. The units menu on the right lets you specify the index in the following units: Index, Frames, Seconds, and Fraction (percentage)"
                    },
                    "pathsop": {
                        "label": "Path SOP",
                        "summary": "Names the SOP that functions as the path you want this Component to move along. For instance, you can name an SOP that provides a spline path for the camera to follow.  Production Tip: For Smooth Motion Along a Path - Having a Component follow an animation path is simple. However, when using a NURBS curve as your path, you might notice that the Component speeds up and slows down unexpectedly as it travels along the path. This is usually because the CVs are spaced unevenly. In such a case, use the Resample SOP to redistribute the CVs so that they are evenly spaced along the curve. A caution however - using a Resample SOP can be slow if you have an animating path curve.  An alternative method is to append a Basis SOP to the path curve and change it to a Uniform Curve. This way, your Component will move uniformly down the curve, and there is no need for the Resample SOP and the unnecessary points it generates."
                    },
                    "cuepoint": {
                        "label": "Cue Point",
                        "summary": "Set any index in the animation as a point to jump to. Only available when Play Mode is Sequential."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "pt": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "playmode": {
                        "label": "Play Mode",
                        "summary": "A menu to specify the method used to play the animation."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "speed": {
                        "label": "Speed",
                        "summary": "This is a speed multiplier which only works when Play Mode is Sequential. A value of 1 is the default playback speed. A value of 2 is double speed, 0.5 is half speed and so on. Negative values will play backwards."
                    },
                    "tend": {
                        "label": "Trim End",
                        "summary": "Sets an end point from the end of the movie, allowing you to trim the ending index of the animation. The units\\u2019 menu on the right let you specify this position by index, frames, seconds, or fraction (percentage)."
                    },
                    "indexunit": {
                        "label": "Index Unit",
                        "summary": ""
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Allows you to orient your Component by naming the Component you would like it to Look At, or point to. Once you have designated this Component to look at, it will continue to face that Component, even if you move it. This is useful if, for instance, you want a camera to follow another Component's movements. The Look At parameter points the Component in question at the other Component's origin.  Tip: To designate a center of interest for the camera that doesn't appear in your scene, create a Null Component and disable its display flag. Then Parent the Camera to the newly created Null Component, and tell the camera to look at this Component using the Look At parameter. You can direct the attention of the camera by moving the Null Component with the Select state. If you want to see both the camera and the Null Component, enable the Null Component's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
                    },
                    "up": {
                        "label": "Orient Up Vector",
                        "summary": "When orienting a Component, the Up Vector is used to determine where the positive Y axis points."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "Animation plays when On and stops when Off. This animation playback control is only available when Play Mode is Sequential."
                    },
                    "cameras": {
                        "label": "Cameras",
                        "summary": "When enabled the FBX COMP will import any cameras within the FBX File."
                    },
                    "animation": {
                        "label": "Animation",
                        "summary": "Specifies the animation name (if any is specified) to playback from the imported FBX."
                    },
                    "lights": {
                        "label": "Lights",
                        "summary": "When enabled the FBX COMP will import any lights within the FBX File."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which a Component scales and rotates. Altering the pivot point of a Component produces different results depending on the transformation performed on the Component.  For example, during a scaling operation, if the pivot point of an Component is located at -1, -1, 0 and you wanted to scale the Component by 0.5 (reduce its size by 50%), the Component would scale toward the pivot point and appear to slide down and to the left.  Image:Objects17.gif  In the example above, rotations performed on an Component with different pivot points produce very different results."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "mergegeo": {
                        "label": "Merge Geometry",
                        "summary": "When enabled the FBX COMP will merge Geometry COMPs. Geometry COMPs are merged if they have only default parameters except transform. If they have the same material then their Import Select SOPs will be merged."
                    },
                    "file": {
                        "label": "FBX File",
                        "summary": "The FBX file to import."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "tendunit": {
                        "label": "Trim End Unit",
                        "summary": "Specifies a unit type for Trim End. Changing this will convert the previous unit to the selected unit."
                    },
                    "primgroups": {
                        "label": "Primitive Groups",
                        "summary": "When enabled the FBX COMP will put each merged SOP into its own primitive group, so that they can be split up later if need be."
                    },
                    "tstartunit": {
                        "label": "Trim Start Unit",
                        "summary": "Specifies a unit type for Trim Start. Changing this will convert the previous unit to the selected unit."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "Resets the animation to its initial state and starts playback."
                    },
                    "sampleratemode": {
                        "label": "Sample Rate Mode",
                        "summary": "Select between using the 'File FPS' embedded in the FBX file or setting a 'Custom' sample rate."
                    },
                    "pp": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "prord": {
                        "label": "Rotate Order",
                        "summary": ""
                    }
                },
                "summary": ""
            },
            "sharedmemoutCOMP": {
                "label": "Shared Mem Out",
                "parameters": {
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Controls if this node cooks every frame or not."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "name": {
                        "label": "Shared Mem Name",
                        "summary": "The name of the memory block it writes to."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    }
                },
                "summary": "The Shared Mem Out COMP will write transform data to a shared memory block."
            },
            "tableCOMP": {
                "label": "Table",
                "parameters": {
                    "fixedaspect": {
                        "label": "Fixed Aspect",
                        "summary": "Allows easy creation of panels with a specific aspect set in the Aspect Ratio parameter below. Only requires setting the width or height of the panel and the other dimension is calculated based on the Aspect Ratio parameter."
                    },
                    "top": {
                        "label": "Background TOP",
                        "summary": "Allows you to specify a TOP as the background for the panel."
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": "This menu specifies if the panel's children are being justified vertically."
                    },
                    "drop": {
                        "label": "On Dropping Into",
                        "summary": "Specify if this Panel Component accepts items that are dropped onto it."
                    },
                    "vieweraspect": {
                        "label": "Floating Viewer Aspect",
                        "summary": "Controls whether the aspect ratio is proportional or unconstrained when resizing a floating viewer ie. dragging the edges of the viewer to resize it."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "paneldragop": {
                        "label": "Dropped Operator",
                        "summary": "The Dropped Component parameter is the easiest way to specify an alternative operator to drop. Note that this alternative operator must exist, otherwise the component itself will be dropped. The alternative is only used when dropping onto a network or control panel. Text pasted via dragging and dropping, or files saved via dropping onto the desktop, will still use the original."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "colattributes": {
                        "label": "Col Attributes DAT",
                        "summary": "A list of attribute DATs, one per column."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "droptypescript": {
                        "label": "Drop Types",
                        "summary": "If a drop destination script is specified, you can also add a DAT table with a list of return types that the drop destination script will provide. Return types can be one of the op types (COMP,TOP,CHOP,SOP,MAT,DAT), channel, or supported filetypes. Please refer to the Drop Types section of the Drag and Drop page."
                    },
                    "alignmax": {
                        "label": "Max per Line",
                        "summary": "This is enabled by choosing any Align option other than None, Layout Grid Horizontal, Layout Grid Vertical, or Match Network Nodes, and defines the maximum number of children placed in one row or column."
                    },
                    "tableattributes": {
                        "label": "Table Attributes DAT",
                        "summary": "A single reference to an attribute DAT."
                    },
                    "values": {
                        "label": "Values DAT",
                        "summary": "A list of values that contain the contents of each cell when the cell is a field type."
                    },
                    "rightanchor": {
                        "label": "Right Anchor",
                        "summary": "Position of the right anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "tablerows": {
                        "label": "Table Rows",
                        "summary": "The number of rows in the table."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "RGB values for the background. (default: black (0,0,0))"
                    },
                    "margin": {
                        "label": "Margin",
                        "summary": "The four fields allow you to specify the space that surrounds the Panel Component. The margin is the space between the Panel Component's border and the outer edge.  The Margin is defined in absolute pixels and does not stretch with the window, as a result margin is not reflected in the node's panel viewer but only when the parent is drawn in a floating window."
                    },
                    "borderb": {
                        "label": "Border B",
                        "summary": "RGBA values for border B color."
                    },
                    "leftoffset": {
                        "label": "Left Offset",
                        "summary": "An offset for the left anchor in pixels."
                    },
                    "mousewheel": {
                        "label": "Use Mouse Wheel",
                        "summary": "Turn on to capture events when the mouse wheel is used over the panel."
                    },
                    "clickthrough": {
                        "label": "Click Through",
                        "summary": "When enabled all mouse clicks are ignored by this Panel Component."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": "Set the alpha value for the background."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "resize": {
                        "label": "Drag Edges to Resize",
                        "summary": "Four checkboxes allow you to enable resizing a panel by grabbing the corresponding edge or corner: Resize Left, Right, Bottom, Top."
                    },
                    "topborder": {
                        "label": "Top Border",
                        "summary": "What color the 2 top-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "opacity": {
                        "label": "Opacity",
                        "summary": "Allows you to control the transparency of the panel."
                    },
                    "borderover": {
                        "label": "Border Over Children",
                        "summary": "Draws the panel's borders on top of all children panels."
                    },
                    "bottomborderi": {
                        "label": "Bottom Border Inside",
                        "summary": ""
                    },
                    "tablereset": {
                        "label": "Table Reset",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect Ratio",
                        "summary": "Specify the ratio when using Fixed Aspect parameter above, the ratio is width/height."
                    },
                    "leftborder": {
                        "label": "Left Border",
                        "summary": "What color the 2 left-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "bordera": {
                        "label": "Border A",
                        "summary": "RGB values for border A color."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "dodisablecolor": {
                        "label": "Disable Color",
                        "summary": "Enable the use of a unique disable color below when the panel's Enable = Off."
                    },
                    "borderaalpha": {
                        "label": "Border A Alpha",
                        "summary": "Alpha value for border A color."
                    },
                    "enable": {
                        "label": "Enable",
                        "summary": "Allows you to prevent all interaction with this panel."
                    },
                    "dropscript": {
                        "label": "Drop Script",
                        "summary": "A component's Drop Script is run when you drop another component or an external file into that component. Please refer to the Drop Scripts - Text section of the Drag and Drop page.          Alternatively specify a Table DAT in the drop script field. TouchDesigner will automatically look for 2 columns in the table. The first column should indicate the data type and the second should indicate the Text DAT that holds the script to process that data type. Please refer to the Drop Script - Tables section of the Drag and Drop page."
                    },
                    "uvbuttons": {
                        "label": "Mouse UV Buttons",
                        "summary": "Allows you to specify which mouse buttons update the uv Panel Values."
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": "This menu specifies if the panel's children are being justified horizontally."
                    },
                    "x": {
                        "label": "X",
                        "summary": "Specify the horizontal position in pixels relative to its parent."
                    },
                    "leftanchor": {
                        "label": "Left Anchor",
                        "summary": "Position of the left anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "multitouch": {
                        "label": "Multi-Touch",
                        "summary": "When enabled, this panel will process the first touch it gets in a similar manner to how it processes a mouse click, with updates to u, v, state etc.  The touch event must be initiated from the panel.  Subsequent touches are ignored.  If this panel handles multi-touch events via the Multi Touch In DAT, you may want to disable Built-in Multi-Touch so it won't interfere with script processing."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "dragscript": {
                        "label": "Drag Script",
                        "summary": "Specify a script that will be executed when starting to drag a Panel Component. Please refer to the Drag Script section of the Drag and Drop page."
                    },
                    "w": {
                        "label": "Width",
                        "summary": "Specify the panel's width in pixels."
                    },
                    "tableoffset": {
                        "label": "Table Offset",
                        "summary": ""
                    },
                    "topoffset": {
                        "label": "Top Offset",
                        "summary": "An offset for the top anchor in pixels."
                    },
                    "rightoffset": {
                        "label": "Right Offset",
                        "summary": "An offset for the right anchor in pixels."
                    },
                    "rightborder": {
                        "label": "Right Border",
                        "summary": "What color the 2 right-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "composite": {
                        "label": "Composite",
                        "summary": "Selects how the panel is composited with its siblings panels. See the Composite TOP for a description of the various composite methods."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "borderbalpha": {
                        "label": "Border B Alpha",
                        "summary": "Alpha value for border B color."
                    },
                    "helpdat": {
                        "label": "Help DAT",
                        "summary": "Lets you specify the path to a Text DAT whose content will be displayed as a rollover pop-up help for the control panel."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "mouserel": {
                        "label": "Relative UV",
                        "summary": "When enabled the uv Panel Values will reflect relative mouse movement."
                    },
                    "alignallow": {
                        "label": "Parent Alignment",
                        "summary": "When set to Ignore, the Panel will ignore any Align parameter settings from its parent."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "bottomoffset": {
                        "label": "Bottom Offset",
                        "summary": "An offset for the bottom anchor in pixels."
                    },
                    "resizeh": {
                        "label": "H Range",
                        "summary": "Limits the bottom-top (height) resizing range."
                    },
                    "bottomborder": {
                        "label": "Bottom Border",
                        "summary": "What color the 2 bottom-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "display": {
                        "label": "Display",
                        "summary": "Specifies if the panel is displayed or hidden."
                    },
                    "h": {
                        "label": "Height",
                        "summary": "Specify the Panel's height in pixels."
                    },
                    "align": {
                        "label": "Align",
                        "summary": "This menu allows you to specify how the children inside the Panel Component will be laid out. The options Layout Grid Rows,  Layout Grid Columns and Match Network Nodes will scale the Panel Component's children to fit the Component. They use the Align Order of each of the children to determine the ordering of the children."
                    },
                    "cursor": {
                        "label": "Cursor",
                        "summary": "Changes the cursor displayed when cursor is over the panel."
                    },
                    "crop": {
                        "label": "Crop",
                        "summary": "This menu determines if any children panels which are positioned partially or completely outside the panel component's dimensions get cropped."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Allows you to uniformly scale the Panel's children."
                    },
                    "horigin": {
                        "label": "Horizontal Origin",
                        "summary": "Sets the position of the panel's origin horizontally. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "vorigin": {
                        "label": "Vertical Origin",
                        "summary": "Sets the position of the panel's origin vertically. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "repositionx": {
                        "label": "X Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for  repositioning the panel component horizontally."
                    },
                    "rightborderi": {
                        "label": "Right Border Inside",
                        "summary": ""
                    },
                    "infoformat": {
                        "label": "Info Format",
                        "summary": ""
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "y": {
                        "label": "Y",
                        "summary": "Specify the vertical position in pixels relative to its parent."
                    },
                    "vfillweight": {
                        "label": "Vertical Fill Weight",
                        "summary": "When multiple panels are using Vertical Mode = Fill and being aligned by the parent either Top to Bottom or Bottom to Top, this fill weight parameter can be used to bias the fill height of the panels."
                    },
                    "repocomp": {
                        "label": "Component",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter. Specify the path to the panel component you would like to reposition by mouse."
                    },
                    "sizefromwindow": {
                        "label": "Size from Window",
                        "summary": "When enabled the panel component's width and height are set by resizing its floating viewer window."
                    },
                    "tablecols": {
                        "label": "Table Columns",
                        "summary": "The number of columns in the table."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "alignorder": {
                        "label": "Align Order",
                        "summary": "This parameter allows you to specify the align position when its parent's Align parameter is set to something other then None or Match Network Nodes. Lower numbers are first."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Allows you to offset the Panel's children. This parameter is overwritten by the Align, Justify Horizontal, and Justify Vertical parameters above."
                    },
                    "attributes": {
                        "label": "Cell Attributes DAT",
                        "summary": "A list of attribute DATs, one per cell."
                    },
                    "repositiony": {
                        "label": "Y Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for repositioning the panel component vertically."
                    },
                    "topfill": {
                        "label": "TOP Fill",
                        "summary": "This menu specifies the way the Background TOP will fill the panel's background."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "rowattributes": {
                        "label": "Row Attributes DAT",
                        "summary": "A list of attribute DATs, one per row."
                    },
                    "hfillweight": {
                        "label": "Horizontal Fill Weight",
                        "summary": "When multiple panels are using Horizontal Mode = Fill and being aligned by the parent either Left to Right or Right to Left, this fill weight parameter can be used to bias the fill width of the panels."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "fontsizeunit": {
                        "label": "Font Size Unit",
                        "summary": ""
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "vmode": {
                        "label": "Vertical Mode",
                        "summary": "Select one of 3 modes to determine the vertical height of the panel."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "drag": {
                        "label": "When Dragging This",
                        "summary": "Specify if this Panel Component can be dragged."
                    },
                    "reposition": {
                        "label": "Drag to Reposition",
                        "summary": "Enables repositioning of the panel or window by dragging with the mouse."
                    },
                    "disablecolor": {
                        "label": "Disable Color",
                        "summary": "RGB values for the disable color. (default: black (0,0,0))"
                    },
                    "postoffset": {
                        "label": "Post Offset",
                        "summary": "Adds an offset after all other postions and alignment options have been applied to the panel."
                    },
                    "tablealign": {
                        "label": "Table Align",
                        "summary": "Specifies the order in which cells are arranged:"
                    },
                    "topborderi": {
                        "label": "Top Border Inside",
                        "summary": ""
                    },
                    "hmode": {
                        "label": "Horizontal Mode",
                        "summary": "Select one of 3 modes to determine the horizontal width of the panel."
                    },
                    "layer": {
                        "label": "Depth Layer",
                        "summary": "Specifies the order the panel components are drawn in, similar to layers in Photoshop. Higher values will be drawn over any other panel with a lower value (that is at the same level of hierarchy). If two panel components have the same Depth Layer value then they are ordered based on the operator's name."
                    },
                    "disablealpha": {
                        "label": "Disable Alpha",
                        "summary": "Set the alpha value for the disable color."
                    },
                    "multrgb": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Multiplies the RGB channels by the alpha channel."
                    },
                    "spacing": {
                        "label": "Spacing",
                        "summary": "This is enabled by choosing any Align option other than None or Match Network Nodes. It defines the space between the children when they are being aligned."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "topanchor": {
                        "label": "Top Anchor",
                        "summary": "Position of the top anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "bottomanchor": {
                        "label": "Bottom Anchor",
                        "summary": "Position of the bottom anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "resizew": {
                        "label": "W Range",
                        "summary": "Limits the left-right (width) resizing range."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "dropdestscript": {
                        "label": "Drop Destination Script",
                        "summary": "Specify a script that will be executed when the dragged Panel Component is dropped. A temporary network is created and the component (or the alternative operator specified in Dropped Component) is copied to this network. You can add or modify operators in this network. Please refer to the Drop Destination Script section of the Drag and Drop page."
                    },
                    "fit": {
                        "label": "Fit",
                        "summary": "This menu allows you to scale the panel's children. It overrides the Justify Horizontal and Justify Vertical parameters."
                    },
                    "leftborderi": {
                        "label": "Left Border Inside",
                        "summary": ""
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    }
                },
                "summary": "The Table Component creates a grid of user interface gadgets."
            },
            "camerablendCOMP": {
                "label": "Camera Blend",
                "parameters": {
                    "fognear": {
                        "label": "Fog Near",
                        "summary": "The starting distance of the fog. If geometry is closer to the camera than this distance, fog will not be calculated in the color of the geometry. Used in the linear fog equation."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "bank": {
                        "label": "Auto-Bank Factor",
                        "summary": "The Auto-Bank Factor rolls the Component based on the curvature of the path at its current position. To turn off auto-banking, set the bank scale to 0."
                    },
                    "ipdshift": {
                        "label": "IPD Shift",
                        "summary": ""
                    },
                    "fogcolor": {
                        "label": "Fog Color",
                        "summary": "The color of the fog."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Using the angle control you can specify a Component's rotation as it animates along the path."
                    },
                    "constrain": {
                        "label": "Constrain To",
                        "summary": "Allows the location of the object to be constrained to any other object whose path is specified in this parameter."
                    },
                    "pathorient": {
                        "label": "Orient along Path",
                        "summary": "If this option is selected, the Component will be oriented along the path. The positive Z axis of the Component will be pointing down the path."
                    },
                    "pos": {
                        "label": "Position",
                        "summary": "This parameter lets you specify the Position of the Component along the path. The values you can enter for this parameter range from 0 to 1, where 0 equals the starting point and 1 equals the end point of the path. The value slider allows for values as high as 10 for multiple \\\"passes\\\" along the path."
                    },
                    "blendw4": {
                        "label": "Weight 4",
                        "summary": "These weights are used to weight each corresponding input parent."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    },
                    "blendm1": {
                        "label": "Mask 1",
                        "summary": "These masks are used to select which component of each parent is used in the blending process."
                    },
                    "pathsop": {
                        "label": "Path SOP",
                        "summary": "Names the SOP that functions as the path you want this Component to move along. For instance, you can name an SOP that provides a spline path for the camera to follow.  Production Tip: For Smooth Motion Along a Path - Having a Component follow an animation path is simple. However, when using a NURBS curve as your path, you might notice that the Component speeds up and slows down unexpectedly as it travels along the path. This is usually because the CVs are spaced unevenly. In such a case, use the Resample SOP to redistribute the CVs so that they are evenly spaced along the curve. A caution however - using a Resample SOP can be slow if you have an animating path curve.  An alternative method is to append a Basis SOP to the path curve and change it to a Uniform Curve. This way, your Component will move uniformly down the curve, and there is no need for the Resample SOP and the unnecessary points it generates."
                    },
                    "camlightmask": {
                        "label": "Camera Light Mask",
                        "summary": ""
                    },
                    "blendw1": {
                        "label": "Weight 1",
                        "summary": "These weights are used to weight each corresponding input parent."
                    },
                    "fogmap": {
                        "label": "Fog Map",
                        "summary": ""
                    },
                    "lookup": {
                        "label": "Look At Up Vector",
                        "summary": "When specifying a Look At, it is possible to specify an up vector for the lookat. Without using an up vector, it is possible to get poor animation when the lookat Component passes through the Y axis of the target Component.  * Don't Use Up Vector - Use this option if the look at Component does not pass through the Y axis of the target Component. * Use Up Vector - This precisely defines the rotates on the Component doing the looking. The Up Vector specified should not be parallel to the look at direction. See Up Vector below. * Use Quaternions - Quaternions are a mathematical representation of a 3D rotation. This method finds the most efficient means of moving from one point to another on a sphere."
                    },
                    "shortrot": {
                        "label": "Short Rotation",
                        "summary": "Does quaternion blending in cases where 2 inputs are being blended."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "reset": {
                        "label": "Reset Frame",
                        "summary": ""
                    },
                    "projectionblend": {
                        "label": "Projection Blend",
                        "summary": ""
                    },
                    "pxform": {
                        "label": "Apply Pre-Transform",
                        "summary": ""
                    },
                    "axesorient": {
                        "label": "Orient Axes",
                        "summary": "When exactly three parents are input, this option will orient the child's local axes to match the orientation of the parents as follows:  * First Parent: Axes Center * Second Parent: Axes +X * Third Parent: Axes +Y"
                    },
                    "viewanglemethod": {
                        "label": "Viewing Angle Method",
                        "summary": ""
                    },
                    "winsize": {
                        "label": "Window Size",
                        "summary": "The Window Size parameter specifies the dimensions for expanding the view. Similar to Window X / Y, this parameter creates a zoom effect by scaling the screen before rendering to the viewport."
                    },
                    "win": {
                        "label": "Window X/Y",
                        "summary": "These parameters define the center of the window during the rendering process. The window parameter takes the view and expands it to fit the camera's field of vision. It is important to note that this action is independent of perspective. In other words, it acts as though you are panning the camera without actually moving the camera."
                    },
                    "near": {
                        "label": "Near",
                        "summary": "This control allows you to designate the near clipping planes. Geometry closer from the lens than these distances will not be visible.  NOTE: If geometry in your scene is producing z-depth artifacts, increase the resolution of the camera's z-depth buffer. To do this, decrease the difference between near and far clipping planes, starting with the near plane."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "Sets the background color and alpha of the camera's view."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which a Component scales and rotates. Altering the pivot point of a Component produces different results depending on the transformation performed on the Component.  For example, during a scaling operation, if the pivot point of an Component is located at -1, -1, 0 and you wanted to scale the Component by 0.5 (reduce its size by 50%), the Component would scale toward the pivot point and appear to slide down and to the left.  Image:Objects17.gif  In the example above, rotations performed on an Component with different pivot points produce very different results."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "far": {
                        "label": "Far",
                        "summary": "This control allows you to designate the far clipping planes. Geometry further away from the lens than these distances will not be visible.  NOTE: If geometry in your scene is producing z-depth artifacts, increase the resolution of the camera's z-depth buffer. To do this, decrease the difference between near and far clipping planes, starting with the near plane."
                    },
                    "up": {
                        "label": "Orient Up Vector",
                        "summary": "When orienting a Component, the Up Vector is used to determine where the positive Y axis points."
                    },
                    "pxord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "orthowidth": {
                        "label": "Ortho Width",
                        "summary": ""
                    },
                    "blendm3": {
                        "label": "Mask 3",
                        "summary": "These masks are used to select which component of each parent is used in the blending process."
                    },
                    "blendm2": {
                        "label": "Mask 2",
                        "summary": "These masks are used to select which component of each parent is used in the blending process."
                    },
                    "noffset": {
                        "label": "Normal Offset",
                        "summary": "When exactly three parents are input, the child position may be offset in the direction perpendicular to the triangular plane they form."
                    },
                    "blendw3": {
                        "label": "Weight 3",
                        "summary": "These weights are used to weight each corresponding input parent."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "preset": {
                        "label": "Reset Transform",
                        "summary": "This button will reset this page's transform so it has no translate/rotate/scale."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "pscale": {
                        "label": "Uniform Scale",
                        "summary": ""
                    },
                    "focal": {
                        "label": "Focal Length",
                        "summary": ""
                    },
                    "pt": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Allows you to orient your Component by naming the Component you would like it to Look At, or point to. Once you have designated this Component to look at, it will continue to face that Component, even if you move it. This is useful if, for instance, you want a camera to follow another Component's movements. The Look At parameter points the Component in question at the other Component's origin.  Tip: To designate a center of interest for the camera that doesn't appear in your scene, create a Null Component and disable its display flag. Then Parent the Camera to the newly created Null Component, and tell the camera to look at this Component using the Look At parameter. You can direct the attention of the camera by moving the Null Component with the Select state. If you want to see both the camera and the Null Component, enable the Null Component's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
                    },
                    "blendw2": {
                        "label": "Weight 2",
                        "summary": "These weights are used to weight each corresponding input parent."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "projmatrixop": {
                        "label": "Proj Matrix/CHOP/DAT",
                        "summary": ""
                    },
                    "fogfar": {
                        "label": "Fog Far",
                        "summary": "The far distance used in the linear fog equation."
                    },
                    "pp": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "pcommit": {
                        "label": "Commit to Main Transform",
                        "summary": "This button will copy the transform from this page to the main Xform page, and reset this page's transform."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block. In matrix math terms, if we use the 'multiply vector on the right' (column vector) convention, a transform order of Scale, Rotate, Translate would be written as translate * rotate * scale * vectorOrPosition."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "blendm4": {
                        "label": "Mask 4",
                        "summary": "These masks are used to select which component of each parent is used in the blending process."
                    },
                    "fog": {
                        "label": "Fog",
                        "summary": "This menu determines the type of fog rendered in the viewport: Linear fog uses the following equation:   Image:Objects14.gif  Exponential fog uses the following equation:  Image:Objects18.gif  Squared Exponential fog uses the following equation:   Image:Objects20.gif  Regardless of the fog mode, f is clamped to the range [0,1] after it is computed. Then, if GL is in RGBA color mode, the fragment's color Cr is replaced by:  Image:Objects19.gif"
                    },
                    "ps": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "fogalpha": {
                        "label": "Fog Alpha",
                        "summary": "Used to control the background opacity of the scene."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "xformmatrixop": {
                        "label": "Xform Matrix/CHOP/DAT",
                        "summary": "This parameter can be used to transform using a 4x4 matrix directly. For information on ways to specify a matrix directly, refer to the Matrix Parameters page."
                    },
                    "winroll": {
                        "label": "Window Roll",
                        "summary": "This parameter sets the amount, in degrees, the window area rolls. This can be set as a static value or as an aspect that changes over the course of the animation. The roll occurs about the centre of the window."
                    },
                    "fogdensity": {
                        "label": "Fog Density",
                        "summary": "A value that specifies density or thickness, used in both exponential fog types. Only non-negative densities are accepted."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "projection": {
                        "label": "Projection",
                        "summary": "A pop-up menu lets you choose from Perspective and Orthographic projection types. A third option Perpective to Ortho Blend enables the Projection Blend parameter below which can be used to blend between perspectives."
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "This field allows you to change the size of an Component uniformly along the three axes.  Note: Scaling a camera's channels is not generally recommended. However, should you decide to do so, the rendered output will match the Viewport as closely as possible when scales are involved."
                    },
                    "parenttype": {
                        "label": "Type",
                        "summary": "Method in which parent transforms (i.e. Translate, Rotate, Scale) are combined to produce a unique blended transform."
                    },
                    "aperture": {
                        "label": "Aperture",
                        "summary": ""
                    },
                    "pr": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "fov": {
                        "label": "FOV Angle",
                        "summary": ""
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "sequence": {
                        "label": "Sequence",
                        "summary": ""
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "prord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    }
                },
                "summary": "The Camera Blend Component allows various effects by blending multiple Components together."
            },
            "selectCOMP": {
                "label": "Select",
                "parameters": {
                    "fixedaspect": {
                        "label": "Fixed Aspect",
                        "summary": "Allows easy creation of panels with a specific aspect set in the Aspect Ratio parameter below. Only requires setting the width or height of the panel and the other dimension is calculated based on the Aspect Ratio parameter."
                    },
                    "paneldragop": {
                        "label": "Dropped Operator",
                        "summary": "The Dropped Component parameter is the easiest way to specify an alternative operator to drop. Note that this alternative operator must exist, otherwise the component itself will be dropped. The alternative is only used when dropping onto a network or control panel. Text pasted via dragging and dropping, or files saved via dropping onto the desktop, will still use the original."
                    },
                    "drop": {
                        "label": "On Dropping Into",
                        "summary": "Specify if this Panel Component accepts items that are dropped onto it."
                    },
                    "vieweraspect": {
                        "label": "Floating Viewer Aspect",
                        "summary": "Controls whether the aspect ratio is proportional or unconstrained when resizing a floating viewer ie. dragging the edges of the viewer to resize it."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "top": {
                        "label": "Background TOP",
                        "summary": "Allows you to specify a TOP as the background for the panel."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "display": {
                        "label": "Display",
                        "summary": "Specifies if the panel is displayed or hidden."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "droptypescript": {
                        "label": "Drop Types",
                        "summary": "If a drop destination script is specified, you can also add a DAT table with a list of return types that the drop destination script will provide. Return types can be one of the op types (COMP,TOP,CHOP,SOP,MAT,DAT), channel, or supported filetypes. Please refer to the Drop Types section of the Drag and Drop page."
                    },
                    "alignmax": {
                        "label": "Max per Line",
                        "summary": "This is enabled by choosing any Align option other than None, Layout Grid Horizontal, Layout Grid Vertical, or Match Network Nodes, and defines the maximum number of children placed in one row or column."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "RGB values for the background. (default: black (0,0,0))"
                    },
                    "margin": {
                        "label": "Margin",
                        "summary": "The four fields allow you to specify the space that surrounds the Panel Component. The margin is the space between the Panel Component's border and the outer edge.  The Margin is defined in absolute pixels and does not stretch with the window, as a result margin is not reflected in the node's panel viewer but only when the parent is drawn in a floating window."
                    },
                    "alignorder": {
                        "label": "Align Order",
                        "summary": "This parameter allows you to specify the align position when its parent's Align parameter is set to something other then None or Match Network Nodes. Lower numbers are first."
                    },
                    "leftoffset": {
                        "label": "Left Offset",
                        "summary": "An offset for the left anchor in pixels."
                    },
                    "mousewheel": {
                        "label": "Use Mouse Wheel",
                        "summary": "Turn on to capture events when the mouse wheel is used over the panel."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": "Set the alpha value for the background."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "resize": {
                        "label": "Drag Edges to Resize",
                        "summary": "Four checkboxes allow you to enable resizing a panel by grabbing the corresponding edge or corner: Resize Left, Right, Bottom, Top."
                    },
                    "topborder": {
                        "label": "Top Border",
                        "summary": "What color the 2 top-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "opacity": {
                        "label": "Opacity",
                        "summary": "Allows you to control the transparency of the panel."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "borderover": {
                        "label": "Border Over Children",
                        "summary": "Draws the panel's borders on top of all children panels."
                    },
                    "bottomborderi": {
                        "label": "Bottom Border Inside",
                        "summary": ""
                    },
                    "vfillweight": {
                        "label": "Vertical Fill Weight",
                        "summary": "When multiple panels are using Vertical Mode = Fill and being aligned by the parent either Top to Bottom or Bottom to Top, this fill weight parameter can be used to bias the fill height of the panels."
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": "This menu specifies if the panel's children are being justified horizontally."
                    },
                    "repositiony": {
                        "label": "Y Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for repositioning the panel component vertically."
                    },
                    "bordera": {
                        "label": "Border A",
                        "summary": "RGB values for border A color."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "dodisablecolor": {
                        "label": "Disable Color",
                        "summary": "Enable the use of a unique disable color below when the panel's Enable = Off."
                    },
                    "borderaalpha": {
                        "label": "Border A Alpha",
                        "summary": "Alpha value for border A color."
                    },
                    "enable": {
                        "label": "Enable",
                        "summary": "Allows you to prevent all interaction with this panel."
                    },
                    "disablecolor": {
                        "label": "Disable Color",
                        "summary": "RGB values for the disable color. (default: black (0,0,0))"
                    },
                    "dropscript": {
                        "label": "Drop Script",
                        "summary": "A component's Drop Script is run when you drop another component or an external file into that component. Please refer to the Drop Scripts - Text section of the Drag and Drop page.          Alternatively specify a Table DAT in the drop script field. TouchDesigner will automatically look for 2 columns in the table. The first column should indicate the data type and the second should indicate the Text DAT that holds the script to process that data type. Please refer to the Drop Script - Tables section of the Drag and Drop page."
                    },
                    "uvbuttons": {
                        "label": "Mouse UV Buttons",
                        "summary": "Allows you to specify which mouse buttons update the uv Panel Values."
                    },
                    "clickthrough": {
                        "label": "Click Through",
                        "summary": "When enabled all mouse clicks are ignored by this Panel Component."
                    },
                    "leftanchor": {
                        "label": "Left Anchor",
                        "summary": "Position of the left anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "rightanchor": {
                        "label": "Right Anchor",
                        "summary": "Position of the right anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "dragscript": {
                        "label": "Drag Script",
                        "summary": "Specify a script that will be executed when starting to drag a Panel Component. Please refer to the Drag Script section of the Drag and Drop page."
                    },
                    "topoffset": {
                        "label": "Top Offset",
                        "summary": "An offset for the top anchor in pixels."
                    },
                    "rightoffset": {
                        "label": "Right Offset",
                        "summary": "An offset for the right anchor in pixels."
                    },
                    "rightborder": {
                        "label": "Right Border",
                        "summary": "What color the 2 right-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "composite": {
                        "label": "Composite",
                        "summary": "Selects how the panel is composited with its siblings panels. See the Composite TOP for a description of the various composite methods."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "borderbalpha": {
                        "label": "Border B Alpha",
                        "summary": "Alpha value for border B color."
                    },
                    "helpdat": {
                        "label": "Help DAT",
                        "summary": "Lets you specify the path to a Text DAT whose content will be displayed as a rollover pop-up help for the control panel."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "dropdestscript": {
                        "label": "Drop Destination Script",
                        "summary": "Specify a script that will be executed when the dragged Panel Component is dropped. A temporary network is created and the component (or the alternative operator specified in Dropped Component) is copied to this network. You can add or modify operators in this network. Please refer to the Drop Destination Script section of the Drag and Drop page."
                    },
                    "alignallow": {
                        "label": "Parent Alignment",
                        "summary": "When set to Ignore, the Panel will ignore any Align parameter settings from its parent."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "bottomoffset": {
                        "label": "Bottom Offset",
                        "summary": "An offset for the bottom anchor in pixels."
                    },
                    "resizeh": {
                        "label": "H Range",
                        "summary": "Limits the bottom-top (height) resizing range."
                    },
                    "bottomborder": {
                        "label": "Bottom Border",
                        "summary": "What color the 2 bottom-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "h": {
                        "label": "Height",
                        "summary": "Specify the Panel's height in pixels."
                    },
                    "align": {
                        "label": "Align",
                        "summary": "This menu allows you to specify how the children inside the Panel Component will be laid out. The options Layout Grid Rows,  Layout Grid Columns and Match Network Nodes will scale the Panel Component's children to fit the Component. They use the Align Order of each of the children to determine the ordering of the children."
                    },
                    "cursor": {
                        "label": "Cursor",
                        "summary": "Changes the cursor displayed when cursor is over the panel."
                    },
                    "crop": {
                        "label": "Crop",
                        "summary": "This menu determines if any children panels which are positioned partially or completely outside the panel component's dimensions get cropped."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Allows you to uniformly scale the Panel's children."
                    },
                    "horigin": {
                        "label": "Horizontal Origin",
                        "summary": "Sets the position of the panel's origin horizontally. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "vorigin": {
                        "label": "Vertical Origin",
                        "summary": "Sets the position of the panel's origin vertically. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "disablealpha": {
                        "label": "Disable Alpha",
                        "summary": "Set the alpha value for the disable color."
                    },
                    "repositionx": {
                        "label": "X Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for  repositioning the panel component horizontally."
                    },
                    "rightborderi": {
                        "label": "Right Border Inside",
                        "summary": ""
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "y": {
                        "label": "Y",
                        "summary": "Specify the vertical position in pixels relative to its parent."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "repocomp": {
                        "label": "Component",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter. Specify the path to the panel component you would like to reposition by mouse."
                    },
                    "sizefromwindow": {
                        "label": "Size from Window",
                        "summary": "When enabled the panel component's width and height are set by resizing its floating viewer window."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "borderb": {
                        "label": "Border B",
                        "summary": "RGBA values for border B color."
                    },
                    "drag": {
                        "label": "When Dragging This",
                        "summary": "Specify if this Panel Component can be dragged."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Allows you to offset the Panel's children. This parameter is overwritten by the Align, Justify Horizontal, and Justify Vertical parameters above."
                    },
                    "w": {
                        "label": "Width",
                        "summary": "Specify the panel's width in pixels."
                    },
                    "selectpanel": {
                        "label": "Select Panel",
                        "summary": "The Panel Component which is being selected."
                    },
                    "leftborder": {
                        "label": "Left Border",
                        "summary": "What color the 2 left-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "topfill": {
                        "label": "TOP Fill",
                        "summary": "This menu specifies the way the Background TOP will fill the panel's background."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "hfillweight": {
                        "label": "Horizontal Fill Weight",
                        "summary": "When multiple panels are using Horizontal Mode = Fill and being aligned by the parent either Left to Right or Right to Left, this fill weight parameter can be used to bias the fill width of the panels."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "vmode": {
                        "label": "Vertical Mode",
                        "summary": "Select one of 3 modes to determine the vertical height of the panel."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "aspect": {
                        "label": "Aspect Ratio",
                        "summary": "Specify the ratio when using Fixed Aspect parameter above, the ratio is width/height."
                    },
                    "reposition": {
                        "label": "Drag to Reposition",
                        "summary": "Enables repositioning of the panel or window by dragging with the mouse."
                    },
                    "x": {
                        "label": "X",
                        "summary": "Specify the horizontal position in pixels relative to its parent."
                    },
                    "postoffset": {
                        "label": "Post Offset",
                        "summary": "Adds an offset after all other postions and alignment options have been applied to the panel."
                    },
                    "topborderi": {
                        "label": "Top Border Inside",
                        "summary": ""
                    },
                    "hmode": {
                        "label": "Horizontal Mode",
                        "summary": "Select one of 3 modes to determine the horizontal width of the panel."
                    },
                    "layer": {
                        "label": "Depth Layer",
                        "summary": "Specifies the order the panel components are drawn in, similar to layers in Photoshop. Higher values will be drawn over any other panel with a lower value (that is at the same level of hierarchy). If two panel components have the same Depth Layer value then they are ordered based on the operator's name."
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": "This menu specifies if the panel's children are being justified vertically."
                    },
                    "multrgb": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Multiplies the RGB channels by the alpha channel."
                    },
                    "spacing": {
                        "label": "Spacing",
                        "summary": "This is enabled by choosing any Align option other than None or Match Network Nodes. It defines the space between the children when they are being aligned."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "topanchor": {
                        "label": "Top Anchor",
                        "summary": "Position of the top anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "multitouch": {
                        "label": "Multi-Touch",
                        "summary": "When enabled, this panel will process the first touch it gets in a similar manner to how it processes a mouse click, with updates to u, v, state etc.  The touch event must be initiated from the panel.  Subsequent touches are ignored.  If this panel handles multi-touch events via the Multi Touch In DAT, you may want to disable Built-in Multi-Touch so it won't interfere with script processing."
                    },
                    "bottomanchor": {
                        "label": "Bottom Anchor",
                        "summary": "Position of the bottom anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "resizew": {
                        "label": "W Range",
                        "summary": "Limits the left-right (width) resizing range."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "mouserel": {
                        "label": "Relative UV",
                        "summary": "When enabled the uv Panel Values will reflect relative mouse movement."
                    },
                    "fit": {
                        "label": "Fit",
                        "summary": "This menu allows you to scale the panel's children. It overrides the Justify Horizontal and Justify Vertical parameters."
                    },
                    "leftborderi": {
                        "label": "Left Border Inside",
                        "summary": ""
                    },
                    "matchsize": {
                        "label": "Match Size",
                        "summary": ""
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    }
                },
                "summary": "The Select Component selects a Panel Component from any other location."
            },
            "widgetCOMP": {
                "label": "Widget",
                "parameters": {
                    "fixedaspect": {
                        "label": "Fixed Aspect",
                        "summary": "Allows easy creation of panels with a specific aspect set in the Aspect Ratio parameter below. Only requires setting the width or height of the panel and the other dimension is calculated based on the Aspect Ratio parameter."
                    },
                    "paneldragop": {
                        "label": "Dropped Operator",
                        "summary": "The Dropped Component parameter is the easiest way to specify an alternative operator to drop. Note that this alternative operator must exist, otherwise the component itself will be dropped. The alternative is only used when dropping onto a network or control panel. Text pasted via dragging and dropping, or files saved via dropping onto the desktop, will still use the original."
                    },
                    "drop": {
                        "label": "On Dropping Into",
                        "summary": "Specify if this Panel Component accepts items that are dropped onto it."
                    },
                    "vieweraspect": {
                        "label": "Floating Viewer Aspect",
                        "summary": "Controls whether the aspect ratio is proportional or unconstrained when resizing a floating viewer ie. dragging the edges of the viewer to resize it."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "top": {
                        "label": "Background TOP",
                        "summary": "Allows you to specify a TOP as the background for the panel."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "display": {
                        "label": "Display",
                        "summary": "Specifies if the panel is displayed or hidden."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "droptypescript": {
                        "label": "Drop Types",
                        "summary": "If a drop destination script is specified, you can also add a DAT table with a list of return types that the drop destination script will provide. Return types can be one of the op types (COMP,TOP,CHOP,SOP,MAT,DAT), channel, or supported filetypes. Please refer to the Drop Types section of the Drag and Drop page."
                    },
                    "alignmax": {
                        "label": "Max per Line",
                        "summary": "This is enabled by choosing any Align option other than None, Layout Grid Horizontal, Layout Grid Vertical, or Match Network Nodes, and defines the maximum number of children placed in one row or column."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "RGB values for the background. (default: black (0,0,0))"
                    },
                    "margin": {
                        "label": "Margin",
                        "summary": "The four fields allow you to specify the space that surrounds the Panel Component. The margin is the space between the Panel Component's border and the outer edge.  The Margin is defined in absolute pixels and does not stretch with the window, as a result margin is not reflected in the node's panel viewer but only when the parent is drawn in a floating window."
                    },
                    "alignorder": {
                        "label": "Align Order",
                        "summary": "This parameter allows you to specify the align position when its parent's Align parameter is set to something other then None or Match Network Nodes. Lower numbers are first."
                    },
                    "leftoffset": {
                        "label": "Left Offset",
                        "summary": "An offset for the left anchor in pixels."
                    },
                    "mousewheel": {
                        "label": "Use Mouse Wheel",
                        "summary": "Turn on to capture events when the mouse wheel is used over the panel."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": "Set the alpha value for the background."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "resize": {
                        "label": "Drag Edges to Resize",
                        "summary": "Four checkboxes allow you to enable resizing a panel by grabbing the corresponding edge or corner: Resize Left, Right, Bottom, Top."
                    },
                    "topborder": {
                        "label": "Top Border",
                        "summary": "What color the 2 top-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "opacity": {
                        "label": "Opacity",
                        "summary": "Allows you to control the transparency of the panel."
                    },
                    "borderover": {
                        "label": "Border Over Children",
                        "summary": "Draws the panel's borders on top of all children panels."
                    },
                    "bottomborderi": {
                        "label": "Bottom Border Inside",
                        "summary": ""
                    },
                    "vfillweight": {
                        "label": "Vertical Fill Weight",
                        "summary": "When multiple panels are using Vertical Mode = Fill and being aligned by the parent either Top to Bottom or Bottom to Top, this fill weight parameter can be used to bias the fill height of the panels."
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": "This menu specifies if the panel's children are being justified horizontally."
                    },
                    "repositiony": {
                        "label": "Y Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for repositioning the panel component vertically."
                    },
                    "bordera": {
                        "label": "Border A",
                        "summary": "RGB values for border A color."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "dodisablecolor": {
                        "label": "Disable Color",
                        "summary": "Enable the use of a unique disable color below when the panel's Enable = Off."
                    },
                    "borderaalpha": {
                        "label": "Border A Alpha",
                        "summary": "Alpha value for border A color."
                    },
                    "enable": {
                        "label": "Enable",
                        "summary": "Allows you to prevent all interaction with this panel."
                    },
                    "disablecolor": {
                        "label": "Disable Color",
                        "summary": "RGB values for the disable color. (default: black (0,0,0))"
                    },
                    "dropscript": {
                        "label": "Drop Script",
                        "summary": "A component's Drop Script is run when you drop another component or an external file into that component. Please refer to the Drop Scripts - Text section of the Drag and Drop page.          Alternatively specify a Table DAT in the drop script field. TouchDesigner will automatically look for 2 columns in the table. The first column should indicate the data type and the second should indicate the Text DAT that holds the script to process that data type. Please refer to the Drop Script - Tables section of the Drag and Drop page."
                    },
                    "uvbuttons": {
                        "label": "Mouse UV Buttons",
                        "summary": "Allows you to specify which mouse buttons update the uv Panel Values."
                    },
                    "clickthrough": {
                        "label": "Click Through",
                        "summary": "When enabled all mouse clicks are ignored by this Panel Component."
                    },
                    "leftanchor": {
                        "label": "Left Anchor",
                        "summary": "Position of the left anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "dragscript": {
                        "label": "Drag Script",
                        "summary": "Specify a script that will be executed when starting to drag a Panel Component. Please refer to the Drag Script section of the Drag and Drop page."
                    },
                    "topoffset": {
                        "label": "Top Offset",
                        "summary": "An offset for the top anchor in pixels."
                    },
                    "rightoffset": {
                        "label": "Right Offset",
                        "summary": "An offset for the right anchor in pixels."
                    },
                    "rightborder": {
                        "label": "Right Border",
                        "summary": "What color the 2 right-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "composite": {
                        "label": "Composite",
                        "summary": "Selects how the panel is composited with its siblings panels. See the Composite TOP for a description of the various composite methods."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "borderbalpha": {
                        "label": "Border B Alpha",
                        "summary": "Alpha value for border B color."
                    },
                    "helpdat": {
                        "label": "Help DAT",
                        "summary": "Lets you specify the path to a Text DAT whose content will be displayed as a rollover pop-up help for the control panel."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "dropdestscript": {
                        "label": "Drop Destination Script",
                        "summary": "Specify a script that will be executed when the dragged Panel Component is dropped. A temporary network is created and the component (or the alternative operator specified in Dropped Component) is copied to this network. You can add or modify operators in this network. Please refer to the Drop Destination Script section of the Drag and Drop page."
                    },
                    "alignallow": {
                        "label": "Parent Alignment",
                        "summary": "When set to Ignore, the Panel will ignore any Align parameter settings from its parent."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "bottomoffset": {
                        "label": "Bottom Offset",
                        "summary": "An offset for the bottom anchor in pixels."
                    },
                    "resizeh": {
                        "label": "H Range",
                        "summary": "Limits the bottom-top (height) resizing range."
                    },
                    "bottomborder": {
                        "label": "Bottom Border",
                        "summary": "What color the 2 bottom-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "h": {
                        "label": "Height",
                        "summary": "Specify the Panel's height in pixels."
                    },
                    "align": {
                        "label": "Align",
                        "summary": "This menu allows you to specify how the children inside the Panel Component will be laid out. The options Layout Grid Rows,  Layout Grid Columns and Match Network Nodes will scale the Panel Component's children to fit the Component. They use the Align Order of each of the children to determine the ordering of the children."
                    },
                    "cursor": {
                        "label": "Cursor",
                        "summary": "Changes the cursor displayed when cursor is over the panel."
                    },
                    "crop": {
                        "label": "Crop",
                        "summary": "This menu determines if any children panels which are positioned partially or completely outside the panel component's dimensions get cropped."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Allows you to uniformly scale the Panel's children."
                    },
                    "horigin": {
                        "label": "Horizontal Origin",
                        "summary": "Sets the position of the panel's origin horizontally. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "vorigin": {
                        "label": "Vertical Origin",
                        "summary": "Sets the position of the panel's origin vertically. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "disablealpha": {
                        "label": "Disable Alpha",
                        "summary": "Set the alpha value for the disable color."
                    },
                    "repositionx": {
                        "label": "X Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for  repositioning the panel component horizontally."
                    },
                    "rightborderi": {
                        "label": "Right Border Inside",
                        "summary": ""
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "y": {
                        "label": "Y",
                        "summary": "Specify the vertical position in pixels relative to its parent."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "repocomp": {
                        "label": "Component",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter. Specify the path to the panel component you would like to reposition by mouse."
                    },
                    "sizefromwindow": {
                        "label": "Size from Window",
                        "summary": "When enabled the panel component's width and height are set by resizing its floating viewer window."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "borderb": {
                        "label": "Border B",
                        "summary": "RGBA values for border B color."
                    },
                    "drag": {
                        "label": "When Dragging This",
                        "summary": "Specify if this Panel Component can be dragged."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Allows you to offset the Panel's children. This parameter is overwritten by the Align, Justify Horizontal, and Justify Vertical parameters above."
                    },
                    "w": {
                        "label": "Width",
                        "summary": "Specify the panel's width in pixels."
                    },
                    "leftborder": {
                        "label": "Left Border",
                        "summary": "What color the 2 left-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "topfill": {
                        "label": "TOP Fill",
                        "summary": "This menu specifies the way the Background TOP will fill the panel's background."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "hfillweight": {
                        "label": "Horizontal Fill Weight",
                        "summary": "When multiple panels are using Horizontal Mode = Fill and being aligned by the parent either Left to Right or Right to Left, this fill weight parameter can be used to bias the fill width of the panels."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "bottomanchor": {
                        "label": "Bottom Anchor",
                        "summary": "Position of the bottom anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "vmode": {
                        "label": "Vertical Mode",
                        "summary": "Select one of 3 modes to determine the vertical height of the panel."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "aspect": {
                        "label": "Aspect Ratio",
                        "summary": "Specify the ratio when using Fixed Aspect parameter above, the ratio is width/height."
                    },
                    "reposition": {
                        "label": "Drag to Reposition",
                        "summary": "Enables repositioning of the panel or window by dragging with the mouse."
                    },
                    "x": {
                        "label": "X",
                        "summary": "Specify the horizontal position in pixels relative to its parent."
                    },
                    "postoffset": {
                        "label": "Post Offset",
                        "summary": "Adds an offset after all other postions and alignment options have been applied to the panel."
                    },
                    "topborderi": {
                        "label": "Top Border Inside",
                        "summary": ""
                    },
                    "hmode": {
                        "label": "Horizontal Mode",
                        "summary": "Select one of 3 modes to determine the horizontal width of the panel."
                    },
                    "layer": {
                        "label": "Depth Layer",
                        "summary": "Specifies the order the panel components are drawn in, similar to layers in Photoshop. Higher values will be drawn over any other panel with a lower value (that is at the same level of hierarchy). If two panel components have the same Depth Layer value then they are ordered based on the operator's name."
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": "This menu specifies if the panel's children are being justified vertically."
                    },
                    "multrgb": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Multiplies the RGB channels by the alpha channel."
                    },
                    "spacing": {
                        "label": "Spacing",
                        "summary": "This is enabled by choosing any Align option other than None or Match Network Nodes. It defines the space between the children when they are being aligned."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "topanchor": {
                        "label": "Top Anchor",
                        "summary": "Position of the top anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "multitouch": {
                        "label": "Multi-Touch",
                        "summary": "When enabled, this panel will process the first touch it gets in a similar manner to how it processes a mouse click, with updates to u, v, state etc.  The touch event must be initiated from the panel.  Subsequent touches are ignored.  If this panel handles multi-touch events via the Multi Touch In DAT, you may want to disable Built-in Multi-Touch so it won't interfere with script processing."
                    },
                    "rightanchor": {
                        "label": "Right Anchor",
                        "summary": "Position of the right anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "resizew": {
                        "label": "W Range",
                        "summary": "Limits the left-right (width) resizing range."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "mouserel": {
                        "label": "Relative UV",
                        "summary": "When enabled the uv Panel Values will reflect relative mouse movement."
                    },
                    "fit": {
                        "label": "Fit",
                        "summary": "This menu allows you to scale the panel's children. It overrides the Justify Horizontal and Justify Vertical parameters."
                    },
                    "leftborderi": {
                        "label": "Left Border Inside",
                        "summary": ""
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    }
                },
                "summary": ""
            },
            "baseCOMP": {
                "label": "Base",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    }
                },
                "summary": "The Base Component has no panel parameters and no 3D object parameters."
            },
            "flowEmitterCOMP": {
                "label": "Nvidia Flow Emitter",
                "parameters": {
                    "bank": {
                        "label": "Auto-Bank Factor",
                        "summary": "The Auto-Bank Factor rolls the Component based on the curvature of the path at its current position. To turn off auto-banking, set the bank scale to 0."
                    },
                    "color": {
                        "label": "Color",
                        "summary": ""
                    },
                    "colorramp": {
                        "label": "Color Ramp",
                        "summary": ""
                    },
                    "instancemode": {
                        "label": "Instance Count",
                        "summary": "Two modes to determine how many instances will be created."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Using the angle control you can specify a Component's rotation as it animates along the path."
                    },
                    "pathorient": {
                        "label": "Orient along Path",
                        "summary": "If this option is selected, the Component will be oriented along the path. The positive Z axis of the Component will be pointing down the path."
                    },
                    "pos": {
                        "label": "Position",
                        "summary": "This parameter lets you specify the Position of the Component along the path. The values you can enter for this parameter range from 0 to 1, where 0 equals the starting point and 1 equals the end point of the path. The value slider allows for values as high as 10 for multiple \\\"passes\\\" along the path."
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "instanceop": {
                        "label": "Instance CHOP/DAT/SOP",
                        "summary": "Specify a path to a CHOP or DAT used to transform the instances. Number of samples/rows in this CHOP or DAT determines the number of instances when using the CHOP Length/DAT Num Rows mode for Instance Count."
                    },
                    "shapeop": {
                        "label": "Shape TOP",
                        "summary": ""
                    },
                    "instancerotupy": {
                        "label": "Rotate Up Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate up instances."
                    },
                    "fuelcorrate": {
                        "label": "Fuel Correction Rate",
                        "summary": ""
                    },
                    "ps": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "pxform": {
                        "label": "Apply Pre-Transform",
                        "summary": ""
                    },
                    "type": {
                        "label": "Type",
                        "summary": ""
                    },
                    "size": {
                        "label": "Size",
                        "summary": ""
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "instancerx": {
                        "label": "Rotate X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate instances."
                    },
                    "instancetexmode": {
                        "label": "Texture Mode",
                        "summary": "Set how the texture coordinates are applied to the instances."
                    },
                    "instancetexindex": {
                        "label": "Texture Index",
                        "summary": "Select a channel/column (by name) to use from the Instance CHOP/DAT to select which texture to use for the instances."
                    },
                    "tempintensitymask": {
                        "label": "Temp Intensity Mask",
                        "summary": ""
                    },
                    "pxord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "preset": {
                        "label": "Reset Transform",
                        "summary": "This button will reset this page's transform so it has no translate/rotate/scale."
                    },
                    "instancepy": {
                        "label": "Pivot Y",
                        "summary": ""
                    },
                    "smokeintensitymask": {
                        "label": "Smoke Intensity Mask",
                        "summary": ""
                    },
                    "linearvel": {
                        "label": "Linear Velocity",
                        "summary": ""
                    },
                    "lookup": {
                        "label": "Look At Up Vector",
                        "summary": "When specifying a Look At, it is possible to specify an up vector for the lookat. Without using an up vector, it is possible to get poor animation when the lookat Component passes through the Y axis of the target Component.  * Don't Use Up Vector - Use this option if the look at Component does not pass through the Y axis of the target Component. * Use Up Vector - This precisely defines the rotates on the Component doing the looking. The Up Vector specified should not be parallel to the look at direction. See Up Vector below. * Use Quaternions - Quaternions are a mathematical representation of a 3D rotation. This method finds the most efficient means of moving from one point to another on a sphere."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "pt": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "smokecorrate": {
                        "label": "Smoke Correction Rate",
                        "summary": ""
                    },
                    "fuelreleasetemp": {
                        "label": "Fuel Release Temp",
                        "summary": ""
                    },
                    "fuelalphamask": {
                        "label": "Fuel Alpha Mask",
                        "summary": ""
                    },
                    "tempalphamask": {
                        "label": "Temp Alpha Mask",
                        "summary": ""
                    },
                    "angularvel": {
                        "label": "Angular Velocity",
                        "summary": ""
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "allocpredict": {
                        "label": "Alloc Predict",
                        "summary": ""
                    },
                    "instanceu": {
                        "label": "U",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply texture coordinates to the instances. This interacts with the first texture layer uv[0] attributes coming from the SOP."
                    },
                    "allocscale": {
                        "label": "Alloc Scale",
                        "summary": ""
                    },
                    "instancerottoy": {
                        "label": "Rotate to Vector Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate to vector instances."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block. In matrix math terms, if we use the 'multiply vector on the right' (column vector) convention, a transform order of Scale, Rotate, Translate would be written as translate * rotate * scale * vectorOrPosition."
                    },
                    "length": {
                        "label": "Length",
                        "summary": ""
                    },
                    "instancea": {
                        "label": "A",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply to the diffuse color of the instances. These parameters will be combined/replaced with the SOPs 'Cd' attribute, as chosen by the Color Mode parameter."
                    },
                    "instancesx": {
                        "label": "Scale X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to scale instances."
                    },
                    "instancesz": {
                        "label": "Scale Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to scale instances."
                    },
                    "instancepz": {
                        "label": "Pivot Z",
                        "summary": ""
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "xformmatrixop": {
                        "label": "Xform Matrix/CHOP/DAT",
                        "summary": "This parameter can be used to transform using a 4x4 matrix directly. For information on ways to specify a matrix directly, refer to the Matrix Parameters page."
                    },
                    "tempcolormask": {
                        "label": "Temp Color Mask",
                        "summary": ""
                    },
                    "instancetexs": {
                        "label": "Instance Textures",
                        "summary": "Specify the paths one or more TOP containing the textures to use with the instances. Wildcards and pattern matching is supported."
                    },
                    "instancecolormode": {
                        "label": "Color Mode",
                        "summary": "Controls how the instance color values interact with the SOPs 'Cd' (diffuse color) attribute. If the SOP doesn't have a 'Cd' attribute, then it will behave as if its 'Cd' is (1, 1, 1, 1)."
                    },
                    "burnintensitymask": {
                        "label": "Burn Intensity Mask",
                        "summary": ""
                    },
                    "instancesy": {
                        "label": "Scale Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to scale instances."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "intensitybias": {
                        "label": "Intensity Bias",
                        "summary": ""
                    },
                    "pr": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "instancew": {
                        "label": "W",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply texture coordinates to the instances. This interacts with the first texture layer uv[0] attributes coming from the SOP."
                    },
                    "smokealphamask": {
                        "label": "Smoke Alpha Mask",
                        "summary": ""
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "fuelrelease": {
                        "label": "Fuel Release",
                        "summary": ""
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "fuel": {
                        "label": "Fuel",
                        "summary": ""
                    },
                    "instancerotupx": {
                        "label": "Rotate Up X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate up instances."
                    },
                    "fuelcolormask": {
                        "label": "Fuel Color Mask",
                        "summary": ""
                    },
                    "innerwidth": {
                        "label": "Inner Width",
                        "summary": ""
                    },
                    "additivefactor": {
                        "label": "Additive Factor",
                        "summary": ""
                    },
                    "instancetx": {
                        "label": "Translate X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to translate instances."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "prord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "tempcorrate": {
                        "label": "Temp Correction Rate",
                        "summary": ""
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "fuelintensitymask": {
                        "label": "Fuel Intensity Mask",
                        "summary": ""
                    },
                    "instxord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "alphabias": {
                        "label": "Alpha Bias",
                        "summary": ""
                    },
                    "instancing": {
                        "label": "Instancing",
                        "summary": "Turns on instancing for the Geometry Component."
                    },
                    "pscale": {
                        "label": "Uniform Scale",
                        "summary": ""
                    },
                    "constrain": {
                        "label": "Constrain To",
                        "summary": "Allows the location of the object to be constrained to any other object whose path is specified in this parameter."
                    },
                    "pcommit": {
                        "label": "Commit to Main Transform",
                        "summary": "This button will copy the transform from this page to the main Xform page, and reset this page's transform."
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "This field allows you to change the size of an Component uniformly along the three axes.  Note: Scaling a camera's channels is not generally recommended. However, should you decide to do so, the rendered output will match the Viewport as closely as possible when scales are involved."
                    },
                    "temp": {
                        "label": "Temp",
                        "summary": ""
                    },
                    "instancefirstrow": {
                        "label": "First Row is",
                        "summary": "What to do with the first row of a table DAT when using DAT rows for Instance Count."
                    },
                    "instancev": {
                        "label": "V",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply texture coordinates to the instances. This interacts with the first texture layer uv[0] attributes coming from the SOP."
                    },
                    "instancety": {
                        "label": "Translate Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to translate instances."
                    },
                    "pathsop": {
                        "label": "Path SOP",
                        "summary": "Names the SOP that functions as the path you want this Component to move along. For instance, you can name an SOP that provides a spline path for the camera to follow.  Production Tip: For Smooth Motion Along a Path - Having a Component follow an animation path is simple. However, when using a NURBS curve as your path, you might notice that the Component speeds up and slows down unexpectedly as it travels along the path. This is usually because the CVs are spaced unevenly. In such a case, use the Resample SOP to redistribute the CVs so that they are evenly spaced along the curve. A caution however - using a Resample SOP can be slow if you have an animating path curve.  An alternative method is to append a Basis SOP to the path curve and change it to a Uniform Curve. This way, your Component will move uniformly down the curve, and there is no need for the Resample SOP and the unnecessary points it generates."
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "burnalphamask": {
                        "label": "Burn Alpha Mask",
                        "summary": ""
                    },
                    "burncolormask": {
                        "label": "Burn Color Mask",
                        "summary": ""
                    },
                    "radius": {
                        "label": "Radius",
                        "summary": ""
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "active": {
                        "label": "Active",
                        "summary": ""
                    },
                    "instancerotupz": {
                        "label": "Rotate Up Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate up instances."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "smoke": {
                        "label": "Smoke",
                        "summary": ""
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "instancer": {
                        "label": "R",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply to the diffuse color of the instances. These parameters will be combined/replaced with the SOPs 'Cd' attribute, as chosen by the Color Mode parameter."
                    },
                    "instancerottoorder": {
                        "label": "Rotate to Vector Order",
                        "summary": ""
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "instanceb": {
                        "label": "B",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply to the diffuse color of the instances. These parameters will be combined/replaced with the SOPs 'Cd' attribute, as chosen by the Color Mode parameter."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "instancepx": {
                        "label": "Pivot X",
                        "summary": ""
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "numinstances": {
                        "label": "Num Instances",
                        "summary": "When using the Manual mode for Instance Count, this parameter set the number of instances."
                    },
                    "outerwidth": {
                        "label": "Outer Width",
                        "summary": ""
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "smokecolormask": {
                        "label": "Smoke Color Mask",
                        "summary": ""
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Allows you to orient your Component by naming the Component you would like it to Look At, or point to. Once you have designated this Component to look at, it will continue to face that Component, even if you move it. This is useful if, for instance, you want a camera to follow another Component's movements. The Look At parameter points the Component in question at the other Component's origin.  Tip: To designate a center of interest for the camera that doesn't appear in your scene, create a Null Component and disable its display flag. Then Parent the Camera to the newly created Null Component, and tell the camera to look at this Component using the Look At parameter. You can direct the attention of the camera by moving the Null Component with the Select state. If you want to see both the camera and the Null Component, enable the Null Component's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
                    },
                    "up": {
                        "label": "Orient Up Vector",
                        "summary": "When orienting a Component, the Up Vector is used to determine where the positive Y axis points."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "centerofmass": {
                        "label": "Center of Mass",
                        "summary": ""
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "velcorrate": {
                        "label": "Velocity Correction Rate",
                        "summary": ""
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "instanceorder": {
                        "label": "Instance Order",
                        "summary": "Sets how transforms are applied to the instances."
                    },
                    "instanceg": {
                        "label": "G",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply to the diffuse color of the instances. These parameters will be combined/replaced with the SOPs 'Cd' attribute, as chosen by the Color Mode parameter."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which a Component scales and rotates. Altering the pivot point of a Component produces different results depending on the transformation performed on the Component.  For example, during a scaling operation, if the pivot point of an Component is located at -1, -1, 0 and you wanted to scale the Component by 0.5 (reduce its size by 50%), the Component would scale toward the pivot point and appear to slide down and to the left.  Image:Objects17.gif  In the example above, rotations performed on an Component with different pivot points produce very different results."
                    },
                    "mode": {
                        "label": "Mode",
                        "summary": ""
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "instancerz": {
                        "label": "Rotate Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate instances."
                    },
                    "instancery": {
                        "label": "Rotate Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate instances."
                    },
                    "instancerottox": {
                        "label": "Rotate to Vector X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate to vector instances."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "pp": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "instancetz": {
                        "label": "Translate Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to translate instances."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "alphascale": {
                        "label": "Alpha Scale",
                        "summary": ""
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "instrord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "instancerottoz": {
                        "label": "Rotate to Vector Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate to vector instances."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    }
                },
                "summary": "The Nvidia Flow COMP is the fuel emitter for the Flow simulation and can be placed anywhere in the 3D scene. This operator only works with Nvidia GPUs."
            },
            "bulletsolverCOMP": {
                "label": "Bullet Solver",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "bank": {
                        "label": "Auto-Bank Factor",
                        "summary": "The Auto-Bank Factor rolls the Component based on the curvature of the path at its current position. To turn off auto-banking, set the bank scale to 0."
                    },
                    "contacttest": {
                        "label": "Perform Contact Test",
                        "summary": "Enables contact testing for all bodies in the simulation. Contact testing is used for the colliding and total_collisions channels on the Bullet Solver CHOP. Without this parameter enabled those channel values will not update. NOTE: Contact testing can be slow for lots of bodies."
                    },
                    "alwayssim": {
                        "label": "Always Simulate",
                        "summary": "When enabled the Bullet Solver COMP will simulate (ie. cook) every frame."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Using the angle control you can specify a Component's rotation as it animates along the path."
                    },
                    "constrain": {
                        "label": "Constrain To",
                        "summary": "Allows the location of the object to be constrained to any other object whose path is specified in this parameter."
                    },
                    "pathorient": {
                        "label": "Orient along Path",
                        "summary": "If this option is selected, the Component will be oriented along the path. The positive Z axis of the Component will be pointing down the path."
                    },
                    "pos": {
                        "label": "Position",
                        "summary": "This parameter lets you specify the Position of the Component along the path. The values you can enter for this parameter range from 0 to 1, where 0 equals the starting point and 1 equals the end point of the path. The value slider allows for values as high as 10 for multiple \\\"passes\\\" along the path."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "feedback": {
                        "label": "Feedback CHOP",
                        "summary": "(see also: Bullet Solver CHOP) A reference to a CHOP to feedback. The Bullet Solver COMP will take the transform/velocity channels from the CHOP and override the respective actor's transform or velocity at the beginning of the next simulation step.  If you feedback a Bullet Solver CHOP that has no change to the channel values in it, the simulation will act as normal as nothing is being overriden. This allows you do things like the example below.  For example, to negate the velocity of every actor in a simulation you could use a Bullet Solver CHOP, put that into a Switch CHOP with the second input being the same CHOP only with the velocity channels negated. Then export a button pulse to the switch index and put the Switch CHOP into the Feedback CHOP parameter. Then, when the button is pressed for a single frame (pulsed) the velocities will be overridden and negated.   The only channels required to feedback are the actor_id and body_id channels, all other channels are optional. The channel names should all be the same as in the Bullet Solver CHOP. In addition to the channels outputted in the Bullet Solver CHOP, force and torque can also be used. The channel names are force[xyz] and torque[xyz]. NOTE: scale cannot be used for feedback."
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "dimension": {
                        "label": "Dimension",
                        "summary": "The dimension of the simulation. The options in this menu can also be recreated using the linear/angular multiplier parameters."
                    },
                    "pathsop": {
                        "label": "Path SOP",
                        "summary": "Names the SOP that functions as the path you want this Component to move along. For instance, you can name an SOP that provides a spline path for the camera to follow.  Production Tip: For Smooth Motion Along a Path - Having a Component follow an animation path is simple. However, when using a NURBS curve as your path, you might notice that the Component speeds up and slows down unexpectedly as it travels along the path. This is usually because the CVs are spaced unevenly. In such a case, use the Resample SOP to redistribute the CVs so that they are evenly spaced along the curve. A caution however - using a Resample SOP can be slow if you have an animating path curve.  An alternative method is to append a Basis SOP to the path curve and change it to a Uniform Curve. This way, your Component will move uniformly down the curve, and there is no need for the Resample SOP and the unnecessary points it generates."
                    },
                    "lookup": {
                        "label": "Look At Up Vector",
                        "summary": "When specifying a Look At, it is possible to specify an up vector for the lookat. Without using an up vector, it is possible to get poor animation when the lookat Component passes through the Y axis of the target Component.  * Don't Use Up Vector - Use this option if the look at Component does not pass through the Y axis of the target Component. * Use Up Vector - This precisely defines the rotates on the Component doing the looking. The Up Vector specified should not be parallel to the look at direction. See Up Vector below. * Use Quaternions - Quaternions are a mathematical representation of a 3D rotation. This method finds the most efficient means of moving from one point to another on a sphere."
                    },
                    "actors": {
                        "label": "Actors",
                        "summary": "The Actor COMPs to include in the simulation. These actors cannot already be a part of another Bullet Solver COMP."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "pxform": {
                        "label": "Apply Pre-Transform",
                        "summary": ""
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "initall": {
                        "label": "Initialize Sim and Collision Shapes",
                        "summary": "Resets all bodies to their initial state (ie. position, orientation, velocity) and recreates their collision shapes. This parameter is equivalent to pulsing each Actor COMP's \\\"Initialize Actor\\\". Creating collision shapes can be time consuming in certain cases, so if it's not need then Initialize Sim should be used instead. Collision shapes need to be recreated if any of the SOPs used to create the collision shape change, or if the instancing OP changes."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "pp": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "init": {
                        "label": "Initialize Sim",
                        "summary": "Reset all bodies to their initial state (ie. position, orientation, velocity). This will not begin stepping through the simulation, it will only initialize. NOTE: This will not reset the collision shapes of any Actor COMPs, \\\"Initialize Sim and Collision Shapes\\\" above or \\\"Initialize Actor\\\" on the Actor COMP should be used for that."
                    },
                    "forces": {
                        "label": "Global Forces",
                        "summary": "The Force COMPs to include in the simulation. These forces are global forces and will be applied to all non-static actors in the simulation."
                    },
                    "pxord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "linmult": {
                        "label": "Linear Multiplier",
                        "summary": "A multiplier for the linear velocities of the actors in the simulation. For example, if linmult is (0, 1, 1) then the actors can move linearly at normal speed on the Y and Z axes but cannot move in the X direction. These values are multiplied internally by the values from dimension. For example, if the dimension is 2D and linmult is (0, 1, 1) then the only direction the actors can move is along the Y axis because 2D is constraining on the Z and this parameter is constraining on the Y."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "simspeed": {
                        "label": "Simulation Speed",
                        "summary": "The speed of the simulation. It is a multiplier for the size of the timestep to slow down or speed up the simulation."
                    },
                    "preset": {
                        "label": "Reset Transform",
                        "summary": "This button will reset this page's transform so it has no translate/rotate/scale."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "pscale": {
                        "label": "Uniform Scale",
                        "summary": ""
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "pt": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Allows you to orient your Component by naming the Component you would like it to Look At, or point to. Once you have designated this Component to look at, it will continue to face that Component, even if you move it. This is useful if, for instance, you want a camera to follow another Component's movements. The Look At parameter points the Component in question at the other Component's origin.  Tip: To designate a center of interest for the camera that doesn't appear in your scene, create a Null Component and disable its display flag. Then Parent the Camera to the newly created Null Component, and tell the camera to look at this Component using the Look At parameter. You can direct the attention of the camera by moving the Null Component with the Select state. If you want to see both the camera and the Null Component, enable the Null Component's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
                    },
                    "up": {
                        "label": "Orient Up Vector",
                        "summary": "When orienting a Component, the Up Vector is used to determine where the positive Y axis points."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "play": {
                        "label": "Play",
                        "summary": "Play the simulation. Will step through the simulation when toggled on, but will not when it is toggled off (ie. it will be paused)."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "A reference to a DAT with python callbacks. The available callbacks are: onCollision(solverComp, collisions), onFrameStart(solverComp), onFrameEnd(solverComp), onInit(solverComp), onStart(solverComp). A DAT with these callbacks will be automatically created and referenced when a Bullet Solver COMP is created. onCollision(solverComp, collisions) passes a list of all collisions occuring, and requires that Perform Contact test be enabled. collisions is a list of named tuples (bodyA and bodyB). bodyA and bodyB are the two bodies participating in the collision. bodyA and bodyB are Python Body Objects (see Body Class)."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "gravity": {
                        "label": "Gravity",
                        "summary": "Gravity applied to all actors in the simulation in m/s^2. Gravity is applied to actors irrespective of their mass."
                    },
                    "pcommit": {
                        "label": "Commit to Main Transform",
                        "summary": "This button will copy the transform from this page to the main Xform page, and reset this page's transform."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block. In matrix math terms, if we use the 'multiply vector on the right' (column vector) convention, a transform order of Scale, Rotate, Translate would be written as translate * rotate * scale * vectorOrPosition."
                    },
                    "angmult": {
                        "label": "Angular Multiplier",
                        "summary": "A multiplier for the angular velocities of the actors in the simulation. For example, if angmult is (1, 0, 0) then the actors can only rotate on the X axes. These values are multiplied internally by the values from dimension. So, if dimension is 2D and angmult is (1, 0, 0) then the actor will not be able to rotate in any direction because 2D constrains rotation only to the Z axis, and this parameter is constraining it only to the X axis."
                    },
                    "rate": {
                        "label": "Sample Rate",
                        "summary": "The sample rate of the simulation.  The sample rate affects the timestep, which is 1/rate"
                    },
                    "ps": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which a Component scales and rotates. Altering the pivot point of a Component produces different results depending on the transformation performed on the Component.  For example, during a scaling operation, if the pivot point of an Component is located at -1, -1, 0 and you wanted to scale the Component by 0.5 (reduce its size by 50%), the Component would scale toward the pivot point and appear to slide down and to the left.  Image:Objects17.gif  In the example above, rotations performed on an Component with different pivot points produce very different results."
                    },
                    "xformmatrixop": {
                        "label": "Xform Matrix/CHOP/DAT",
                        "summary": "This parameter can be used to transform using a 4x4 matrix directly. For information on ways to specify a matrix directly, refer to the Matrix Parameters page."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "pr": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "This field allows you to change the size of an Component uniformly along the three axes.  Note: Scaling a camera's channels is not generally recommended. However, should you decide to do so, the rendered output will match the Viewport as closely as possible when scales are involved."
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "start": {
                        "label": "Start Sim",
                        "summary": "Initialize the simulation and run it (begin stepping)."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "prord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    }
                },
                "summary": ""
            },
            "geometryCOMP": {
                "label": "Geometry",
                "parameters": {
                    "bank": {
                        "label": "Auto-Bank Factor",
                        "summary": "The Auto-Bank Factor rolls the Component based on the curvature of the path at its current position. To turn off auto-banking, set the bank scale to 0."
                    },
                    "instancemode": {
                        "label": "Instance Count",
                        "summary": "Two modes to determine how many instances will be created."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Using the angle control you can specify a Component's rotation as it animates along the path."
                    },
                    "pathorient": {
                        "label": "Orient along Path",
                        "summary": "If this option is selected, the Component will be oriented along the path. The positive Z axis of the Component will be pointing down the path."
                    },
                    "pos": {
                        "label": "Position",
                        "summary": "This parameter lets you specify the Position of the Component along the path. The values you can enter for this parameter range from 0 to 1, where 0 equals the starting point and 1 equals the end point of the path. The value slider allows for values as high as 10 for multiple \\\"passes\\\" along the path."
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "instancesx": {
                        "label": "Scale X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to scale instances."
                    },
                    "instancer": {
                        "label": "R",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply to the diffuse color of the instances. These parameters will be combined/replaced with the SOPs 'Cd' attribute, as chosen by the Color Mode parameter."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "ps": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "pxform": {
                        "label": "Apply Pre-Transform",
                        "summary": ""
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "instancerotupx": {
                        "label": "Rotate Up X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate up instances."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "instancerx": {
                        "label": "Rotate X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate instances."
                    },
                    "instancetexmode": {
                        "label": "Texture Mode",
                        "summary": "Set how the texture coordinates are applied to the instances."
                    },
                    "instancetexindex": {
                        "label": "Texture Index",
                        "summary": "Select a channel/column (by name) to use from the Instance CHOP/DAT to select which texture to use for the instances."
                    },
                    "pxord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "lookup": {
                        "label": "Look At Up Vector",
                        "summary": "When specifying a Look At, it is possible to specify an up vector for the lookat. Without using an up vector, it is possible to get poor animation when the lookat Component passes through the Y axis of the target Component.  * Don't Use Up Vector - Use this option if the look at Component does not pass through the Y axis of the target Component. * Use Up Vector - This precisely defines the rotates on the Component doing the looking. The Up Vector specified should not be parallel to the look at direction. See Up Vector below. * Use Quaternions - Quaternions are a mathematical representation of a 3D rotation. This method finds the most efficient means of moving from one point to another on a sphere."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "pt": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "instancecolormode": {
                        "label": "Color Mode",
                        "summary": "Controls how the instance color values interact with the SOPs 'Cd' (diffuse color) attribute. If the SOP doesn't have a 'Cd' attribute, then it will behave as if its 'Cd' is (1, 1, 1, 1)."
                    },
                    "instanceu": {
                        "label": "U",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply texture coordinates to the instances. This interacts with the first texture layer uv[0] attributes coming from the SOP."
                    },
                    "instancerottoy": {
                        "label": "Rotate to Vector Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate to vector instances."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block. In matrix math terms, if we use the 'multiply vector on the right' (column vector) convention, a transform order of Scale, Rotate, Translate would be written as translate * rotate * scale * vectorOrPosition."
                    },
                    "instancea": {
                        "label": "A",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply to the diffuse color of the instances. These parameters will be combined/replaced with the SOPs 'Cd' attribute, as chosen by the Color Mode parameter."
                    },
                    "instanceop": {
                        "label": "Instance CHOP/DAT/SOP",
                        "summary": "Specify a path to a CHOP or DAT used to transform the instances. Number of samples/rows in this CHOP or DAT determines the number of instances when using the CHOP Length/DAT Num Rows mode for Instance Count."
                    },
                    "instancesz": {
                        "label": "Scale Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to scale instances."
                    },
                    "instancepz": {
                        "label": "Pivot Z",
                        "summary": ""
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "xformmatrixop": {
                        "label": "Xform Matrix/CHOP/DAT",
                        "summary": "This parameter can be used to transform using a 4x4 matrix directly. For information on ways to specify a matrix directly, refer to the Matrix Parameters page."
                    },
                    "instancery": {
                        "label": "Rotate Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate instances."
                    },
                    "instancetexs": {
                        "label": "Instance Textures",
                        "summary": "Specify the paths one or more TOP containing the textures to use with the instances. Wildcards and pattern matching is supported."
                    },
                    "instancepy": {
                        "label": "Pivot Y",
                        "summary": ""
                    },
                    "instancesy": {
                        "label": "Scale Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to scale instances."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "pr": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "instancew": {
                        "label": "W",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply texture coordinates to the instances. This interacts with the first texture layer uv[0] attributes coming from the SOP."
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "instanceorder": {
                        "label": "Instance Order",
                        "summary": "Sets how transforms are applied to the instances."
                    },
                    "preset": {
                        "label": "Reset Transform",
                        "summary": "This button will reset this page's transform so it has no translate/rotate/scale."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "prord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "instxord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block."
                    },
                    "instancerotupy": {
                        "label": "Rotate Up Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate up instances."
                    },
                    "instancing": {
                        "label": "Instancing",
                        "summary": "Turns on instancing for the Geometry Component."
                    },
                    "instancerottoorder": {
                        "label": "Rotate to Vector Order",
                        "summary": ""
                    },
                    "constrain": {
                        "label": "Constrain To",
                        "summary": "Allows the location of the object to be constrained to any other object whose path is specified in this parameter."
                    },
                    "pcommit": {
                        "label": "Commit to Main Transform",
                        "summary": "This button will copy the transform from this page to the main Xform page, and reset this page's transform."
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "This field allows you to change the size of an Component uniformly along the three axes.  Note: Scaling a camera's channels is not generally recommended. However, should you decide to do so, the rendered output will match the Viewport as closely as possible when scales are involved."
                    },
                    "instancefirstrow": {
                        "label": "First Row is",
                        "summary": "What to do with the first row of a table DAT when using DAT rows for Instance Count."
                    },
                    "instancety": {
                        "label": "Translate Y",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to translate instances."
                    },
                    "pathsop": {
                        "label": "Path SOP",
                        "summary": "Names the SOP that functions as the path you want this Component to move along. For instance, you can name an SOP that provides a spline path for the camera to follow.  Production Tip: For Smooth Motion Along a Path - Having a Component follow an animation path is simple. However, when using a NURBS curve as your path, you might notice that the Component speeds up and slows down unexpectedly as it travels along the path. This is usually because the CVs are spaced unevenly. In such a case, use the Resample SOP to redistribute the CVs so that they are evenly spaced along the curve. A caution however - using a Resample SOP can be slow if you have an animating path curve.  An alternative method is to append a Basis SOP to the path curve and change it to a Uniform Curve. This way, your Component will move uniformly down the curve, and there is no need for the Resample SOP and the unnecessary points it generates."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "instancerotupz": {
                        "label": "Rotate Up Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate up instances."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "instancepx": {
                        "label": "Pivot X",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "numinstances": {
                        "label": "Num Instances",
                        "summary": "When using the Manual mode for Instance Count, this parameter set the number of instances."
                    },
                    "pscale": {
                        "label": "Uniform Scale",
                        "summary": ""
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Allows you to orient your Component by naming the Component you would like it to Look At, or point to. Once you have designated this Component to look at, it will continue to face that Component, even if you move it. This is useful if, for instance, you want a camera to follow another Component's movements. The Look At parameter points the Component in question at the other Component's origin.  Tip: To designate a center of interest for the camera that doesn't appear in your scene, create a Null Component and disable its display flag. Then Parent the Camera to the newly created Null Component, and tell the camera to look at this Component using the Look At parameter. You can direct the attention of the camera by moving the Null Component with the Select state. If you want to see both the camera and the Null Component, enable the Null Component's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
                    },
                    "up": {
                        "label": "Orient Up Vector",
                        "summary": "When orienting a Component, the Up Vector is used to determine where the positive Y axis points."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "instanceg": {
                        "label": "G",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply to the diffuse color of the instances. These parameters will be combined/replaced with the SOPs 'Cd' attribute, as chosen by the Color Mode parameter."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which a Component scales and rotates. Altering the pivot point of a Component produces different results depending on the transformation performed on the Component.  For example, during a scaling operation, if the pivot point of an Component is located at -1, -1, 0 and you wanted to scale the Component by 0.5 (reduce its size by 50%), the Component would scale toward the pivot point and appear to slide down and to the left.  Image:Objects17.gif  In the example above, rotations performed on an Component with different pivot points produce very different results."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "instancerz": {
                        "label": "Rotate Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate instances."
                    },
                    "instancetx": {
                        "label": "Translate X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to translate instances."
                    },
                    "instancerottox": {
                        "label": "Rotate to Vector X",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate to vector instances."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "instancev": {
                        "label": "V",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply texture coordinates to the instances. This interacts with the first texture layer uv[0] attributes coming from the SOP."
                    },
                    "instancetz": {
                        "label": "Translate Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to translate instances."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "instanceb": {
                        "label": "B",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to apply to the diffuse color of the instances. These parameters will be combined/replaced with the SOPs 'Cd' attribute, as chosen by the Color Mode parameter."
                    },
                    "instrord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "instancerottoz": {
                        "label": "Rotate to Vector Z",
                        "summary": "Select the channel/column (by name) to use from the Instance CHOP/DAT to rotate to vector instances."
                    },
                    "pp": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    }
                },
                "summary": "The Geometry Component is a 3D surface that you see and render in TouchDesigner with a Render TOP."
            },
            "lightCOMP": {
                "label": "Light",
                "parameters": {
                    "projmapmode": {
                        "label": "Projector Map Mode",
                        "summary": "Specify how the projection map is applied"
                    },
                    "bank": {
                        "label": "Auto-Bank Factor",
                        "summary": "The Auto-Bank Factor rolls the Component based on the curvature of the path at its current position. To turn off auto-banking, set the bank scale to 0."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Using the angle control you can specify a Component's rotation as it animates along the path."
                    },
                    "pathorient": {
                        "label": "Orient along Path",
                        "summary": "If this option is selected, the Component will be oriented along the path. The positive Z axis of the Component will be pointing down the path."
                    },
                    "pos": {
                        "label": "Position",
                        "summary": "This parameter lets you specify the Position of the Component along the path. The values you can enter for this parameter range from 0 to 1, where 0 equals the starting point and 1 equals the end point of the path. The value slider allows for values as high as 10 for multiple \\\"passes\\\" along the path."
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    },
                    "coneangle": {
                        "label": "Cone Angle",
                        "summary": "This specifies the angle within which the light remains at full intensity. Decreasing the cone angle to between ten and forty degrees focuses the beam to spotlight proportions."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "attenuationend": {
                        "label": "Attenuation End",
                        "summary": "The distance from the light source where the light attenuation ends (i.e., no light radiates beyond this point)."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "pxform": {
                        "label": "Apply Pre-Transform",
                        "summary": ""
                    },
                    "viewanglemethod": {
                        "label": "Viewing Angle Method",
                        "summary": "This menu determines which method is used to define the camera's angle of view."
                    },
                    "projmap": {
                        "label": "Projector Map",
                        "summary": "The path to a TOP used for the light's projector map."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "Set the background color of the view when using the light as a camera."
                    },
                    "lightsize": {
                        "label": "Light Size",
                        "summary": "Controls the size of the source light when using Soft or Custom shadows."
                    },
                    "xformmatrixop": {
                        "label": "Xform Matrix/CHOP/DAT",
                        "summary": "This parameter can be used to transform using a 4x4 matrix directly. For information on ways to specify a matrix directly, refer to the Matrix Parameters page."
                    },
                    "pxord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "preset": {
                        "label": "Reset Transform",
                        "summary": "This button will reset this page's transform so it has no translate/rotate/scale."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "attenuationexp": {
                        "label": "Attenuation Rolloff",
                        "summary": "Controls how the light fades off between the Attenuation Start and End points."
                    },
                    "focal": {
                        "label": "Focal Length",
                        "summary": "The parameter sets the focal length of the lens, zooming in and out. Perspective is flattened or exaggerated depending on focal length. Some interesting distortion effects can be acheived with this parameter."
                    },
                    "pt": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block. In matrix math terms, if we use the 'multiply vector on the right' (column vector) convention, a transform order of Scale, Rotate, Translate would be written as translate * rotate * scale * vectorOrPosition."
                    },
                    "ps": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "zbounds": {
                        "label": "Z Bounds",
                        "summary": ""
                    },
                    "attenuated": {
                        "label": "Distance-Attenuated",
                        "summary": "Turn on this checkbox to enable distance-based attenuation of the light."
                    },
                    "shadowmap": {
                        "label": "Custom Shadow Map",
                        "summary": "The path to a TOP used for the light's shadow map.  See also Rendering Shadows."
                    },
                    "polygonoffsetunits": {
                        "label": "Polygon Offset Units",
                        "summary": ""
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "This field allows you to change the size of an Component uniformly along the three axes.  Note: Scaling a camera's channels is not generally recommended. However, should you decide to do so, the rendered output will match the Viewport as closely as possible when scales are involved."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "c": {
                        "label": "Light Color",
                        "summary": "You can modify the color of a light here by adjusting the red, green, and blue parameters.  Alternatively, clicking on the color swatch will open a dialog with HSV and/or RGB sliders allowing interactive color picking with a preview of the selected color."
                    },
                    "pr": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "pscale": {
                        "label": "Uniform Scale",
                        "summary": ""
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "orthowidth": {
                        "label": "Ortho Width",
                        "summary": "Only active if Orthographic is chosen from the Projection pop-up menu. This specifies the width of the orthographic projection."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "frontfacelit": {
                        "label": "Polygon Front Faces",
                        "summary": "Controls how the polygon's normal is used to light the front face of the polygon. For more information refer to the Two-Sided Lighting article."
                    },
                    "lookup": {
                        "label": "Look At Up Vector",
                        "summary": "When specifying a Look At, it is possible to specify an up vector for the lookat. Without using an up vector, it is possible to get poor animation when the lookat Component passes through the Y axis of the target Component.  * Don't Use Up Vector - Use this option if the look at Component does not pass through the Y axis of the target Component. * Use Up Vector - This precisely defines the rotates on the Component doing the looking. The Up Vector specified should not be parallel to the look at direction. See Up Vector below. * Use Quaternions - Quaternions are a mathematical representation of a 3D rotation. This method finds the most efficient means of moving from one point to another on a sphere."
                    },
                    "dimmer": {
                        "label": "Dimmer",
                        "summary": "This parameter changes the intensity of the light without affecting its hue. Lights with Dimmer intensity below 0.001 are ignored. This optimization allows lights that are set to 0.0 to not be calculated in the scene."
                    },
                    "prord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "constrain": {
                        "label": "Constrain To",
                        "summary": "Allows the location of the object to be constrained to any other object whose path is specified in this parameter."
                    },
                    "pcommit": {
                        "label": "Commit to Main Transform",
                        "summary": "This button will copy the transform from this page to the main Xform page, and reset this page's transform."
                    },
                    "ybounds": {
                        "label": "Y Bounds",
                        "summary": ""
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "pathsop": {
                        "label": "Path SOP",
                        "summary": "Names the SOP that functions as the path you want this Component to move along. For instance, you can name an SOP that provides a spline path for the camera to follow.  Production Tip: For Smooth Motion Along a Path - Having a Component follow an animation path is simple. However, when using a NURBS curve as your path, you might notice that the Component speeds up and slows down unexpectedly as it travels along the path. This is usually because the CVs are spaced unevenly. In such a case, use the Resample SOP to redistribute the CVs so that they are evenly spaced along the curve. A caution however - using a Resample SOP can be slow if you have an animating path curve.  An alternative method is to append a Basis SOP to the path curve and change it to a Uniform Curve. This way, your Component will move uniformly down the curve, and there is no need for the Resample SOP and the unnecessary points it generates."
                    },
                    "maxshadowsoftness": {
                        "label": "Max Shadow Softness",
                        "summary": "Fine tuning for the shadow's software when using Soft or Custom shadows."
                    },
                    "scenecamera": {
                        "label": "Scene Camera",
                        "summary": ""
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "aperture": {
                        "label": "Aperture",
                        "summary": "This value relates to the area through which light can pass for the camera."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "conedelta": {
                        "label": "Cone Delta",
                        "summary": "This value, in degrees, represents the angle outside the cone angle through which the light intensity drops from its maximum to zero. Beyond this area, no more light is cast.  Image:Objects16.gif"
                    },
                    "shadowresolution": {
                        "label": "Shadow Resolution",
                        "summary": "The resolution of the shadow's texture map used for the calculation."
                    },
                    "filtersamples": {
                        "label": "Filter Samples",
                        "summary": "Controls how many samples to look up into the shadow map for each pixel when doing soft shadows."
                    },
                    "near": {
                        "label": "Near",
                        "summary": "This control allows you to designate the near clipping planes. Geometry closer to the lens than these distances will not be visible."
                    },
                    "pp": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "xbounds": {
                        "label": "X Bounds",
                        "summary": ""
                    },
                    "far": {
                        "label": "Far",
                        "summary": "This control allows you to designate the far clipping planes. Geometry further away from the lens than these distances will not be visible."
                    },
                    "coneroll": {
                        "label": "Cone Rolloff",
                        "summary": "This parameter (a value between one and ten) defines how gently or suddenly the amount of light decreases between full intensity and zero intensity within the Cone Delta area."
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "projangle": {
                        "label": "Projector Angle",
                        "summary": "Specifies the cone angle spread of the projector map, similar to how the Cone Angle parameter works for Cone Lights."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Allows you to orient your Component by naming the Component you would like it to Look At, or point to. Once you have designated this Component to look at, it will continue to face that Component, even if you move it. This is useful if, for instance, you want a camera to follow another Component's movements. The Look At parameter points the Component in question at the other Component's origin.  Tip: To designate a center of interest for the camera that doesn't appear in your scene, create a Null Component and disable its display flag. Then Parent the Camera to the newly created Null Component, and tell the camera to look at this Component using the Look At parameter. You can direct the attention of the camera by moving the Null Component with the Select state. If you want to see both the camera and the Null Component, enable the Null Component's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
                    },
                    "up": {
                        "label": "Orient Up Vector",
                        "summary": "When orienting a Component, the Up Vector is used to determine where the positive Y axis points."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "lighttype": {
                        "label": "Light Type",
                        "summary": "Specifies the type of light."
                    },
                    "projmatrixop": {
                        "label": "Proj Matrix/CHOP/DAT",
                        "summary": "When Custom Projection Matrix is selected, this parameters should be filled in with either a CHOP or a DAT with a custom 4x4 projection matrix. If a CHOP is used the first sample of the first 16 channels of the CHOP are used to create a 4x4 matrix. The channels can be thought as being read row-by-row or column-by-column. If a DAT is given a 4x4 table should be used. The matrix convention used is column major, which means vectors/points are multiplied on the right of the matrix."
                    },
                    "useconeforfov": {
                        "label": "Use Cone Angle/Delta for FOV",
                        "summary": "If the light is set to Cone Light type, enabling this option sets the FOV using the Cone Angle and Cone Delta parameters on the Light parameter page."
                    },
                    "shadowcasters": {
                        "label": "Shadow Casters",
                        "summary": "The Geometry COMPs that will cast shadows from this light."
                    },
                    "aspectcorrect": {
                        "label": "Aspect Correct Projection",
                        "summary": "Keeps the aspect ratio of the view correct when using the light as a camera to look through."
                    },
                    "searchsteps": {
                        "label": "Search Steps",
                        "summary": "Controls how many steps to take to search for occlusion when doing soft shadows."
                    },
                    "polygonoffsetfactor": {
                        "label": "Polygon Offset Factor",
                        "summary": ""
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which a Component scales and rotates. Altering the pivot point of a Component produces different results depending on the transformation performed on the Component.  For example, during a scaling operation, if the pivot point of an Component is located at -1, -1, 0 and you wanted to scale the Component by 0.5 (reduce its size by 50%), the Component would scale toward the pivot point and appear to slide down and to the left.  Image:Objects17.gif  In the example above, rotations performed on an Component with different pivot points produce very different results."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "customproj": {
                        "label": "Custom Projection GLSL DAT",
                        "summary": "Takes a DAT containing a GLSL shader to specify custom projection functions. You must provide two functions in this shader. Both functions must be provided and return correct results for your rendering to work in all cases. As a starting point, here are the definitions for these functions that are used when custom ones are not provided.       vec4 TDSOPToProj(vec4 p)   {       vec4 projP = uTDMat.worldCamProj * p;       return projP;   }   vec4 TDCamToProj(vec4 p)   {       vec4 projP = uTDMat.proj * p;       return projP;   }     The other convenience variations of these functions such as vec3 TDCamToProj(vec3 p) will automatically call the correct one of either of the two above functions. You can use uniforms/samplers in this shader code by declaring them here and providing them in the GLSL page of the Render TOP."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "projection": {
                        "label": "Projection",
                        "summary": "A pop-up menu lets you choose the projection type."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "fov": {
                        "label": "FOV Angle",
                        "summary": "The field of view (FOV) angle is the angular extend of the scene imaged by the camera."
                    },
                    "shadowtype": {
                        "label": "Shadow Type",
                        "summary": "Sets the type of shadows cast by the light."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "projmaptype": {
                        "label": "Projector Map Type",
                        "summary": ""
                    },
                    "attenuationstart": {
                        "label": "Attenuation Start",
                        "summary": "The distance from the light source where the light attenuation begins."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "backfacelit": {
                        "label": "Polygon Back Faces",
                        "summary": "Controls how the polygon's normal is used to light the back face of the polygon. For more information refer to the Two-Sided Lighting article."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    }
                },
                "summary": "The Light Components are objects which cast light into a 3D scene."
            },
            "constraintCOMP": {
                "label": "Constraint",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "collisions": {
                        "label": "Collisions between Bodies",
                        "summary": "Turns on/off collisions between the body to body constraints."
                    },
                    "actor1": {
                        "label": "Actor COMP",
                        "summary": "A reference to an Actor COMP. This specifies the Actor COMP of which you want to constrain some bodies."
                    },
                    "axis1": {
                        "label": "Hinge Axis",
                        "summary": "The axis around which to create the hinge. Each value is typically a number between 0 and 1. For example, to spin around the Z axis set to 0, 0, 1."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "pivot1": {
                        "label": "Pivot",
                        "summary": "The pivot point for the constraint."
                    },
                    "bodies2": {
                        "label": "Actor Bodies",
                        "summary": "A list (regular expression) of the IDs of the bodies in actor2 to constrain. If an Actor COMP contains N bodies, then body IDs will go from 0 to N-1 for that Actor COMP. The number of bodies can be verified using the Bullet Solver CHOP."
                    },
                    "sliderrot1": {
                        "label": "Slider Rotation",
                        "summary": "The rotation of the slider constraint axis. By default the slider constraint is applied on the X axis."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "bodytobody": {
                        "label": "Body to Body",
                        "summary": "Toggle body to body mode on/off. Body to body mode creates a constraint between two bodies (Actor 1 Bodies and Actor 2 Bodies). When toggled off it will create constrain bodies individually. If Actor 1 Bodies and Actor 2 Bodies contain the same number of referenced bodies, then this mode will create a constraint between each respective pair. For instance, if Actor 1 Bodies contains the string \\\"0 1 2\\\", and Actor 2 Bodies contains the string \\\"3 4 5\\\" then this will create 3 constraints: 0->3, 1->4, 2->5. It is a 1 to 1 relationship between these two parameters. However, if Actor 1 Bodies has more bodies than Actor 2 Bodies, then the remaining \\\"unmatched\\\" bodies of Actor 1 Bodies will instead be individually constrained. For instance, if Actor 1 Bodies contains the string \\\"0 1 2\\\" and Actor 2 Bodies contains the string \\\"3 4\\\", then two constraints will be created between bodies: 0->3, 1->4. Body 2 will be constrained individually. If Actor 2 Bodies contains more bodies than Actor 1 Bodies, then any unmatched bodies in Actor 2 Bodies will simply be disregarded (no constraint created for them)."
                    },
                    "upperlinlim": {
                        "label": "Upper Linear Limit",
                        "summary": "The upper limit for translation of the body along the constraint. Only used with slider constraints."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Toggle the constraint on/off in the simulation."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "sliderrot2": {
                        "label": "Slider Rotation",
                        "summary": "The rotation of the slider constraint axis. By default the slider constraint is applied on the X axis."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "actor2": {
                        "label": "Actor COMP",
                        "summary": "A reference to an Actor COMP. This specifies the Actor COMP of which you want to constrain some bodies. This Actor COMP is only used when body to body mode is toggled on."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "lowerlinlim": {
                        "label": "Lower Linear Limit",
                        "summary": "The lower limit for translation of the body along the constraint. Only used with slider constraints."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "dispcom": {
                        "label": "Display Constraint",
                        "summary": "Turns on/off the display of the constraint guide in the viewer."
                    },
                    "enablelimits": {
                        "label": "Enable Limits",
                        "summary": "Enables limits on the constraint. Without constraints, the bodies will be able to rotate a full 360 degrees, or translate any distance."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "axis2": {
                        "label": "Hinge Axis",
                        "summary": "The axis around which to create the hinge. Each value is typically a number between 0 and 1. For example, to spin around the Z axis set to 0, 0, 1."
                    },
                    "bodies1": {
                        "label": "Actor Bodies",
                        "summary": "A list (regular expression) of the IDs of the bodies in actor1 to constrain. If an Actor COMP contains N bodies, then body IDs will go from 0 to N-1 for that Actor COMP. The number of bodies can be verified using the Bullet Solver CHOP."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "upperanglim": {
                        "label": "Upper Angular Limit",
                        "summary": "The upper limit for rotation of the body around its axis. Used with slider constraints or hinge constraints."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "pivot2": {
                        "label": "Pivot",
                        "summary": "The pivot point for the constraint."
                    },
                    "type": {
                        "label": "Type",
                        "summary": "The type of constraint to create: point to point, hinge, or slider."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "loweranglim": {
                        "label": "Lower Angular Limit",
                        "summary": "The lower limit for rotation of the body around its axis. Used with slider constraints or hinge constraints."
                    }
                },
                "summary": ""
            },
            "processCOMP": {
                "label": "Process",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "file": {
                        "label": "Tox File",
                        "summary": "Specify the .tox file to run in this process."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    }
                },
                "summary": ""
            },
            "containerCOMP": {
                "label": "Container",
                "parameters": {
                    "fixedaspect": {
                        "label": "Fixed Aspect",
                        "summary": "Allows easy creation of panels with a specific aspect set in the Aspect Ratio parameter below. Only requires setting the width or height of the panel and the other dimension is calculated based on the Aspect Ratio parameter."
                    },
                    "paneldragop": {
                        "label": "Dropped Operator",
                        "summary": "The Dropped Component parameter is the easiest way to specify an alternative operator to drop. Note that this alternative operator must exist, otherwise the component itself will be dropped. The alternative is only used when dropping onto a network or control panel. Text pasted via dragging and dropping, or files saved via dropping onto the desktop, will still use the original."
                    },
                    "drop": {
                        "label": "On Dropping Into",
                        "summary": "Specify if this Panel Component accepts items that are dropped onto it."
                    },
                    "vieweraspect": {
                        "label": "Floating Viewer Aspect",
                        "summary": "Controls whether the aspect ratio is proportional or unconstrained when resizing a floating viewer ie. dragging the edges of the viewer to resize it."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "top": {
                        "label": "Background TOP",
                        "summary": "Allows you to specify a TOP as the background for the panel."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "display": {
                        "label": "Display",
                        "summary": "Specifies if the panel is displayed or hidden."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "droptypescript": {
                        "label": "Drop Types",
                        "summary": "If a drop destination script is specified, you can also add a DAT table with a list of return types that the drop destination script will provide. Return types can be one of the op types (COMP,TOP,CHOP,SOP,MAT,DAT), channel, or supported filetypes. Please refer to the Drop Types section of the Drag and Drop page."
                    },
                    "alignmax": {
                        "label": "Max per Line",
                        "summary": "This is enabled by choosing any Align option other than None, Layout Grid Horizontal, Layout Grid Vertical, or Match Network Nodes, and defines the maximum number of children placed in one row or column."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "RGB values for the background. (default: black (0,0,0))"
                    },
                    "margin": {
                        "label": "Margin",
                        "summary": "The four fields allow you to specify the space that surrounds the Panel Component. The margin is the space between the Panel Component's border and the outer edge.  The Margin is defined in absolute pixels and does not stretch with the window, as a result margin is not reflected in the node's panel viewer but only when the parent is drawn in a floating window."
                    },
                    "alignorder": {
                        "label": "Align Order",
                        "summary": "This parameter allows you to specify the align position when its parent's Align parameter is set to something other then None or Match Network Nodes. Lower numbers are first."
                    },
                    "leftoffset": {
                        "label": "Left Offset",
                        "summary": "An offset for the left anchor in pixels."
                    },
                    "mousewheel": {
                        "label": "Use Mouse Wheel",
                        "summary": "Turn on to capture events when the mouse wheel is used over the panel."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": "Set the alpha value for the background."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "resize": {
                        "label": "Drag Edges to Resize",
                        "summary": "Four checkboxes allow you to enable resizing a panel by grabbing the corresponding edge or corner: Resize Left, Right, Bottom, Top."
                    },
                    "topborder": {
                        "label": "Top Border",
                        "summary": "What color the 2 top-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "opacity": {
                        "label": "Opacity",
                        "summary": "Allows you to control the transparency of the panel."
                    },
                    "borderover": {
                        "label": "Border Over Children",
                        "summary": "Draws the panel's borders on top of all children panels."
                    },
                    "bottomborderi": {
                        "label": "Bottom Border Inside",
                        "summary": ""
                    },
                    "vfillweight": {
                        "label": "Vertical Fill Weight",
                        "summary": "When multiple panels are using Vertical Mode = Fill and being aligned by the parent either Top to Bottom or Bottom to Top, this fill weight parameter can be used to bias the fill height of the panels."
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": "This menu specifies if the panel's children are being justified horizontally."
                    },
                    "repositiony": {
                        "label": "Y Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for repositioning the panel component vertically."
                    },
                    "bordera": {
                        "label": "Border A",
                        "summary": "RGB values for border A color."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "dodisablecolor": {
                        "label": "Disable Color",
                        "summary": "Enable the use of a unique disable color below when the panel's Enable = Off."
                    },
                    "borderaalpha": {
                        "label": "Border A Alpha",
                        "summary": "Alpha value for border A color."
                    },
                    "enable": {
                        "label": "Enable",
                        "summary": "Allows you to prevent all interaction with this panel."
                    },
                    "disablecolor": {
                        "label": "Disable Color",
                        "summary": "RGB values for the disable color. (default: black (0,0,0))"
                    },
                    "dropscript": {
                        "label": "Drop Script",
                        "summary": "A component's Drop Script is run when you drop another component or an external file into that component. Please refer to the Drop Scripts - Text section of the Drag and Drop page.          Alternatively specify a Table DAT in the drop script field. TouchDesigner will automatically look for 2 columns in the table. The first column should indicate the data type and the second should indicate the Text DAT that holds the script to process that data type. Please refer to the Drop Script - Tables section of the Drag and Drop page."
                    },
                    "uvbuttons": {
                        "label": "Mouse UV Buttons",
                        "summary": "Allows you to specify which mouse buttons update the uv Panel Values."
                    },
                    "clickthrough": {
                        "label": "Click Through",
                        "summary": "When enabled all mouse clicks are ignored by this Panel Component."
                    },
                    "leftanchor": {
                        "label": "Left Anchor",
                        "summary": "Position of the left anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "dragscript": {
                        "label": "Drag Script",
                        "summary": "Specify a script that will be executed when starting to drag a Panel Component. Please refer to the Drag Script section of the Drag and Drop page."
                    },
                    "topoffset": {
                        "label": "Top Offset",
                        "summary": "An offset for the top anchor in pixels."
                    },
                    "rightoffset": {
                        "label": "Right Offset",
                        "summary": "An offset for the right anchor in pixels."
                    },
                    "rightborder": {
                        "label": "Right Border",
                        "summary": "What color the 2 right-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "composite": {
                        "label": "Composite",
                        "summary": "Selects how the panel is composited with its siblings panels. See the Composite TOP for a description of the various composite methods."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "borderbalpha": {
                        "label": "Border B Alpha",
                        "summary": "Alpha value for border B color."
                    },
                    "helpdat": {
                        "label": "Help DAT",
                        "summary": "Lets you specify the path to a Text DAT whose content will be displayed as a rollover pop-up help for the control panel."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "dropdestscript": {
                        "label": "Drop Destination Script",
                        "summary": "Specify a script that will be executed when the dragged Panel Component is dropped. A temporary network is created and the component (or the alternative operator specified in Dropped Component) is copied to this network. You can add or modify operators in this network. Please refer to the Drop Destination Script section of the Drag and Drop page."
                    },
                    "alignallow": {
                        "label": "Parent Alignment",
                        "summary": "When set to Ignore, the Panel will ignore any Align parameter settings from its parent."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "bottomoffset": {
                        "label": "Bottom Offset",
                        "summary": "An offset for the bottom anchor in pixels."
                    },
                    "resizeh": {
                        "label": "H Range",
                        "summary": "Limits the bottom-top (height) resizing range."
                    },
                    "bottomborder": {
                        "label": "Bottom Border",
                        "summary": "What color the 2 bottom-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "h": {
                        "label": "Height",
                        "summary": "Specify the Panel's height in pixels."
                    },
                    "align": {
                        "label": "Align",
                        "summary": "This menu allows you to specify how the children inside the Panel Component will be laid out. The options Layout Grid Rows,  Layout Grid Columns and Match Network Nodes will scale the Panel Component's children to fit the Component. They use the Align Order of each of the children to determine the ordering of the children."
                    },
                    "cursor": {
                        "label": "Cursor",
                        "summary": "Changes the cursor displayed when cursor is over the panel."
                    },
                    "crop": {
                        "label": "Crop",
                        "summary": "This menu determines if any children panels which are positioned partially or completely outside the panel component's dimensions get cropped."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Allows you to uniformly scale the Panel's children."
                    },
                    "horigin": {
                        "label": "Horizontal Origin",
                        "summary": "Sets the position of the panel's origin horizontally. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "vorigin": {
                        "label": "Vertical Origin",
                        "summary": "Sets the position of the panel's origin vertically. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "disablealpha": {
                        "label": "Disable Alpha",
                        "summary": "Set the alpha value for the disable color."
                    },
                    "repositionx": {
                        "label": "X Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for  repositioning the panel component horizontally."
                    },
                    "rightborderi": {
                        "label": "Right Border Inside",
                        "summary": ""
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "y": {
                        "label": "Y",
                        "summary": "Specify the vertical position in pixels relative to its parent."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "repocomp": {
                        "label": "Component",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter. Specify the path to the panel component you would like to reposition by mouse."
                    },
                    "sizefromwindow": {
                        "label": "Size from Window",
                        "summary": "When enabled the panel component's width and height are set by resizing its floating viewer window."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "borderb": {
                        "label": "Border B",
                        "summary": "RGBA values for border B color."
                    },
                    "drag": {
                        "label": "When Dragging This",
                        "summary": "Specify if this Panel Component can be dragged."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Allows you to offset the Panel's children. This parameter is overwritten by the Align, Justify Horizontal, and Justify Vertical parameters above."
                    },
                    "w": {
                        "label": "Width",
                        "summary": "Specify the panel's width in pixels."
                    },
                    "leftborder": {
                        "label": "Left Border",
                        "summary": "What color the 2 left-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "topfill": {
                        "label": "TOP Fill",
                        "summary": "This menu specifies the way the Background TOP will fill the panel's background."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "hfillweight": {
                        "label": "Horizontal Fill Weight",
                        "summary": "When multiple panels are using Horizontal Mode = Fill and being aligned by the parent either Left to Right or Right to Left, this fill weight parameter can be used to bias the fill width of the panels."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "bottomanchor": {
                        "label": "Bottom Anchor",
                        "summary": "Position of the bottom anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "vmode": {
                        "label": "Vertical Mode",
                        "summary": "Select one of 3 modes to determine the vertical height of the panel."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "aspect": {
                        "label": "Aspect Ratio",
                        "summary": "Specify the ratio when using Fixed Aspect parameter above, the ratio is width/height."
                    },
                    "reposition": {
                        "label": "Drag to Reposition",
                        "summary": "Enables repositioning of the panel or window by dragging with the mouse."
                    },
                    "x": {
                        "label": "X",
                        "summary": "Specify the horizontal position in pixels relative to its parent."
                    },
                    "postoffset": {
                        "label": "Post Offset",
                        "summary": "Adds an offset after all other postions and alignment options have been applied to the panel."
                    },
                    "topborderi": {
                        "label": "Top Border Inside",
                        "summary": ""
                    },
                    "hmode": {
                        "label": "Horizontal Mode",
                        "summary": "Select one of 3 modes to determine the horizontal width of the panel."
                    },
                    "layer": {
                        "label": "Depth Layer",
                        "summary": "Specifies the order the panel components are drawn in, similar to layers in Photoshop. Higher values will be drawn over any other panel with a lower value (that is at the same level of hierarchy). If two panel components have the same Depth Layer value then they are ordered based on the operator's name."
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": "This menu specifies if the panel's children are being justified vertically."
                    },
                    "multrgb": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Multiplies the RGB channels by the alpha channel."
                    },
                    "spacing": {
                        "label": "Spacing",
                        "summary": "This is enabled by choosing any Align option other than None or Match Network Nodes. It defines the space between the children when they are being aligned."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "topanchor": {
                        "label": "Top Anchor",
                        "summary": "Position of the top anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "multitouch": {
                        "label": "Multi-Touch",
                        "summary": "When enabled, this panel will process the first touch it gets in a similar manner to how it processes a mouse click, with updates to u, v, state etc.  The touch event must be initiated from the panel.  Subsequent touches are ignored.  If this panel handles multi-touch events via the Multi Touch In DAT, you may want to disable Built-in Multi-Touch so it won't interfere with script processing."
                    },
                    "rightanchor": {
                        "label": "Right Anchor",
                        "summary": "Position of the right anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "resizew": {
                        "label": "W Range",
                        "summary": "Limits the left-right (width) resizing range."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "mouserel": {
                        "label": "Relative UV",
                        "summary": "When enabled the uv Panel Values will reflect relative mouse movement."
                    },
                    "fit": {
                        "label": "Fit",
                        "summary": "This menu allows you to scale the panel's children. It overrides the Justify Horizontal and Justify Vertical parameters."
                    },
                    "leftborderi": {
                        "label": "Left Border Inside",
                        "summary": ""
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    }
                },
                "summary": "The Container Component groups together any number of button, slider, field, container and other Panel Components to build an interface."
            },
            "blendCOMP": {
                "label": "Blend",
                "parameters": {
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "bank": {
                        "label": "Auto-Bank Factor",
                        "summary": "The Auto-Bank Factor rolls the Component based on the curvature of the path at its current position. To turn off auto-banking, set the bank scale to 0."
                    },
                    "up": {
                        "label": "Orient Up Vector",
                        "summary": "When orienting a Component, the Up Vector is used to determine where the positive Y axis points."
                    },
                    "pcommit": {
                        "label": "Commit to Main Transform",
                        "summary": "This button will copy the transform from this page to the main Xform page, and reset this page's transform."
                    },
                    "roll": {
                        "label": "Roll",
                        "summary": "Using the angle control you can specify a Component's rotation as it animates along the path."
                    },
                    "constrain": {
                        "label": "Constrain To",
                        "summary": "Allows the location of the object to be constrained to any other object whose path is specified in this parameter."
                    },
                    "pathorient": {
                        "label": "Orient along Path",
                        "summary": "If this option is selected, the Component will be oriented along the path. The positive Z axis of the Component will be pointing down the path."
                    },
                    "pos": {
                        "label": "Position",
                        "summary": "This parameter lets you specify the Position of the Component along the path. The values you can enter for this parameter range from 0 to 1, where 0 equals the starting point and 1 equals the end point of the path. The value slider allows for values as high as 10 for multiple \\\"passes\\\" along the path."
                    },
                    "blendw4": {
                        "label": "Weight 4",
                        "summary": "These weights are used to weight each corresponding input parent."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    },
                    "blendm1": {
                        "label": "Mask 1",
                        "summary": "These masks are used to select which component of each parent is used in the blending process."
                    },
                    "pathsop": {
                        "label": "Path SOP",
                        "summary": "Names the SOP that functions as the path you want this Component to move along. For instance, you can name an SOP that provides a spline path for the camera to follow.  Production Tip: For Smooth Motion Along a Path - Having a Component follow an animation path is simple. However, when using a NURBS curve as your path, you might notice that the Component speeds up and slows down unexpectedly as it travels along the path. This is usually because the CVs are spaced unevenly. In such a case, use the Resample SOP to redistribute the CVs so that they are evenly spaced along the curve. A caution however - using a Resample SOP can be slow if you have an animating path curve.  An alternative method is to append a Basis SOP to the path curve and change it to a Uniform Curve. This way, your Component will move uniformly down the curve, and there is no need for the Resample SOP and the unnecessary points it generates."
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "shortrot": {
                        "label": "Short Rotation",
                        "summary": "Does quaternion blending in cases with 2 inputs are being blended."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "pxform": {
                        "label": "Apply Pre-Transform",
                        "summary": ""
                    },
                    "axesorient": {
                        "label": "Orient Axes",
                        "summary": "When exactly three parents are input this option will orient the child's local axes to match the orientation of the parents as follows:  * First Parent: Axes Center * Second Parent: Axes +X * Third Parent: Axes +Y"
                    },
                    "blendw1": {
                        "label": "Weight 1",
                        "summary": "These weights are used to weight each corresponding input parent."
                    },
                    "lookup": {
                        "label": "Look At Up Vector",
                        "summary": "When specifying a Look At, it is possible to specify an up vector for the lookat. Without using an up vector, it is possible to get poor animation when the lookat Component passes through the Y axis of the target Component.  * Don't Use Up Vector - Use this option if the look at Component does not pass through the Y axis of the target Component. * Use Up Vector - This precisely defines the rotates on the Component doing the looking. The Up Vector specified should not be parallel to the look at direction. See Up Vector below. * Use Quaternions - Quaternions are a mathematical representation of a 3D rotation. This method finds the most efficient means of moving from one point to another on a sphere."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "p": {
                        "label": "Pivot",
                        "summary": "The Pivot point edit fields allow you to define the point about which a Component scales and rotates. Altering the pivot point of a Component produces different results depending on the transformation performed on the Component.  For example, during a scaling operation, if the pivot point of an Component is located at -1, -1, 0 and you wanted to scale the Component by 0.5 (reduce its size by 50%), the Component would scale toward the pivot point and appear to slide down and to the left.  Image:Objects17.gif  In the example above, rotations performed on an Component with different pivot points produce very different results."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "reset": {
                        "label": "Reset Frame",
                        "summary": ""
                    },
                    "pxord": {
                        "label": "Transform Order",
                        "summary": ""
                    },
                    "r": {
                        "label": "Rotate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "blendm2": {
                        "label": "Mask 2",
                        "summary": "These masks are used to select which component of each parent is used in the blending process."
                    },
                    "noffset": {
                        "label": "Normal Offset",
                        "summary": "When exactly three parents are input, the child position may be offset in the direction perpendicular to the triangular plane they form."
                    },
                    "blendw3": {
                        "label": "Weight 3",
                        "summary": "These weights are used to weight each corresponding input parent."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "pt": {
                        "label": "Translate",
                        "summary": ""
                    },
                    "lookat": {
                        "label": "Look At",
                        "summary": "Allows you to orient your Component by naming the Component you would like it to Look At, or point to. Once you have designated this Component to look at, it will continue to face that Component, even if you move it. This is useful if, for instance, you want a camera to follow another Component's movements. The Look At parameter points the Component in question at the other Component's origin.  Tip: To designate a center of interest for the camera that doesn't appear in your scene, create a Null Component and disable its display flag. Then Parent the Camera to the newly created Null Component, and tell the camera to look at this Component using the Look At parameter. You can direct the attention of the camera by moving the Null Component with the Select state. If you want to see both the camera and the Null Component, enable the Null Component's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
                    },
                    "blendw2": {
                        "label": "Weight 2",
                        "summary": "These weights are used to weight each corresponding input parent."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "blendm3": {
                        "label": "Mask 3",
                        "summary": "These masks are used to select which component of each parent is used in the blending process."
                    },
                    "xord": {
                        "label": "Transform Order",
                        "summary": "The menu attached to this parameter allows you to specify the order in which the changes to your Component will take place. Changing the Transform order will change where things go much the same way as going a block and turning east gets you to a different place than turning east and then going a block. In matrix math terms, if we use the 'multiply vector on the right' (column vector) convention, a transform order of Scale, Rotate, Translate would be written as translate * rotate * scale * vectorOrPosition."
                    },
                    "blendm4": {
                        "label": "Mask 4",
                        "summary": "These masks are used to select which component of each parent is used in the blending process."
                    },
                    "ps": {
                        "label": "Scale",
                        "summary": ""
                    },
                    "s": {
                        "label": "Scale",
                        "summary": "The three fields allow you to specify the amount of movement along any of the three axes; the amount, in degrees, of rotation around any of the three axes; and a non-uniform scaling along the three axes. As an alternative to entering the values directly into these fields, you can modify the values by manipulating the Component in the Viewport with the Select & Transform state."
                    },
                    "xformmatrixop": {
                        "label": "Xform Matrix/CHOP/DAT",
                        "summary": "This parameter can be used to transform using a 4x4 matrix directly. For information on ways to specify a matrix directly, refer to the Matrix Parameters page."
                    },
                    "pscale": {
                        "label": "Uniform Scale",
                        "summary": ""
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "scale": {
                        "label": "Uniform Scale",
                        "summary": "This field allows you to change the size of an Component uniformly along the three axes.  Note: Scaling a camera's channels is not generally recommended. However, should you decide to do so, the rendered output will match the Viewport as closely as possible when scales are involved."
                    },
                    "parenttype": {
                        "label": "Type",
                        "summary": "Method in which parent transforms (i.e. Translate, Rotate, Scale) are combined to produce a unique blended transform."
                    },
                    "pp": {
                        "label": "Pivot",
                        "summary": ""
                    },
                    "pr": {
                        "label": "Rotate",
                        "summary": ""
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "sequence": {
                        "label": "Sequence",
                        "summary": ""
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "rord": {
                        "label": "Rotate Order",
                        "summary": "The rotational matrix presented when you click on this option allows you to set the transform order for the Component's rotations. As with transform order (above), changing the order in which the Component's rotations take place will alter the Component's final position."
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "preset": {
                        "label": "Reset Transform",
                        "summary": "This button will reset this page's transform so it has no translate/rotate/scale."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "prord": {
                        "label": "Rotate Order",
                        "summary": ""
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    }
                },
                "summary": "The Blend Component allows various effects such as blended inputs, animating the parents of Components, sequencing, partial transformation inheritance, three-point orientation, and other effects."
            },
            "handleCOMP": {
                "label": "Handle",
                "parameters": {
                    "target": {
                        "label": "Target",
                        "summary": "Where the Handle will pull the bone towards (like an end-affector)."
                    },
                    "dorylimit": {
                        "label": "Rotation Limits Y",
                        "summary": "These affects how much the bone is allowed to rotate with respect to its parent."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "lrx": {
                        "label": "Limit X",
                        "summary": ""
                    },
                    "twistonly": {
                        "label": "Twist Only",
                        "summary": "When enabled the handle only contributes the the z rotation of the bone, when disabled it points the bone (rx, ry, and rz)."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "t": {
                        "label": "Translate",
                        "summary": "Displacement tx,ty,tz relative to the origin of the bone where the handle is anchored."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    },
                    "falloff": {
                        "label": "Falloff",
                        "summary": "This value affects how much parent bones are affected when the child bone is reaching a target. It affects the flexibility of the chain."
                    },
                    "dorzlimit": {
                        "label": "Rotation Limits Z",
                        "summary": "These affects how much the bone is allowed to rotate with respect to its parent."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "dorxlimit": {
                        "label": "Rotation Limits X",
                        "summary": "These affects how much the bone is allowed to rotate with respect to its parent."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "lrz": {
                        "label": "Limit Z",
                        "summary": ""
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "lry": {
                        "label": "Limit Y",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "weight": {
                        "label": "Weight",
                        "summary": "When multiple handles are attached to a bone, higher weighted handles draw closer to their target."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    }
                },
                "summary": "The Handle Component is a new IK tool designed for manipulating groups of bones."
            },
            "environmentlightCOMP": {
                "label": "Environment Light",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "drawpriority": {
                        "label": "Draw Priority",
                        "summary": "Determines the order in which the Components are drawn. Smaller values get drawn after (on top of) larger values."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "envlightmaprotate": {
                        "label": "Environment Map Rotate",
                        "summary": "Rotate the texture specified by the Environment Map parameter above."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "envlightmaptype2d": {
                        "label": "Environment Map 2D Type",
                        "summary": ""
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "envlightmap": {
                        "label": "Environment Map",
                        "summary": "Uses a TOP texture to define an environment map for the material. Environment mapping simulates an object reflecting its surroundings. The TOP defined in this parameter is the texture that will be reflected. The Env Map is added to whatever the normal lighting will be, so to make an object purely reflective turn the Diffuse and Specular parameters to 0. This input expects a sphere map. An example of a sphere map can be found here. This input will also accept a cube map, created with the Cube Map TOP or the Render TOP's Render Cube Map parameter."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "envlightmapprefilter": {
                        "label": "Pre-Filter Environment Map",
                        "summary": ""
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "render": {
                        "label": "Render",
                        "summary": "Whether the Component's geometry is visible in the Render TOP. This parameter works in conjunction (logical AND) with the Component's Render Flag."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "dimmer": {
                        "label": "Dimmer",
                        "summary": "This parameter allows you to change the intensity of the light either as a static value or over time."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "lightmask": {
                        "label": "Light Mask",
                        "summary": "By default all lights used in the Render TOP will affect geometry renderer. This parmaeter can be used to specify a sub-set of lights to be used for this particular geometry. The lights must be listed in the Render TOP as well as this parameter to be used."
                    },
                    "material": {
                        "label": "Material",
                        "summary": "Selects a MAT to apply to the geometry inside."
                    },
                    "wcolor": {
                        "label": "Wireframe Color",
                        "summary": "Use the R, G, and B fields to set the Component's color when displayed in wireframe shading mode."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "envlightmapquality": {
                        "label": "Environment Map Quality",
                        "summary": "Controls the number of samples used by the Environment Light which determines the quality of the result. This value is multiplied by the PBR MATs Env Light Quality parameter."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "c": {
                        "label": "Light Color",
                        "summary": "You can modify the color of the light three ways: Color List, Hue, Saturation, and Value, or Red, Green, and Blue. To choose one, click on the appropriate box and the color editing fields below change accordingly."
                    },
                    "pickpriority": {
                        "label": "Pick Priority",
                        "summary": "When using a Render Pick CHOP or a Render Pick DAT, there is an option to have a 'Search Area'. If multiple objects are found within the search area, the pick priority can be used to select one object over another. A higher value will get picked over a lower value. This does not affect draw order, or objects that are drawn over each other on the same pixel. Only one will be visible for a pick per pixel."
                    }
                },
                "summary": "The Environment Light Component controls the color and intensity of an environmental light in a given scene."
            },
            "sliderCOMP": {
                "label": "Slider",
                "parameters": {
                    "fixedaspect": {
                        "label": "Fixed Aspect",
                        "summary": "Allows easy creation of panels with a specific aspect set in the Aspect Ratio parameter below. Only requires setting the width or height of the panel and the other dimension is calculated based on the Aspect Ratio parameter."
                    },
                    "top": {
                        "label": "Background TOP",
                        "summary": "Allows you to specify a TOP as the background for the panel."
                    },
                    "clampuh": {
                        "label": "Clamp U High",
                        "summary": "Clamps the maximum output of the panel value u to 0."
                    },
                    "drop": {
                        "label": "On Dropping Into",
                        "summary": "Specify if this Panel Component accepts items that are dropped onto it."
                    },
                    "disablecolor": {
                        "label": "Disable Color",
                        "summary": "RGB values for the disable color. (default: black (0,0,0))"
                    },
                    "vieweraspect": {
                        "label": "Floating Viewer Aspect",
                        "summary": "Controls whether the aspect ratio is proportional or unconstrained when resizing a floating viewer ie. dragging the edges of the viewer to resize it."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "paneldragop": {
                        "label": "Dropped Operator",
                        "summary": "The Dropped Component parameter is the easiest way to specify an alternative operator to drop. Note that this alternative operator must exist, otherwise the component itself will be dropped. The alternative is only used when dropping onto a network or control panel. Text pasted via dragging and dropping, or files saved via dropping onto the desktop, will still use the original."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "display": {
                        "label": "Display",
                        "summary": "Specifies if the panel is displayed or hidden."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "droptypescript": {
                        "label": "Drop Types",
                        "summary": "If a drop destination script is specified, you can also add a DAT table with a list of return types that the drop destination script will provide. Return types can be one of the op types (COMP,TOP,CHOP,SOP,MAT,DAT), channel, or supported filetypes. Please refer to the Drop Types section of the Drag and Drop page."
                    },
                    "alignmax": {
                        "label": "Max per Line",
                        "summary": "This is enabled by choosing any Align option other than None, Layout Grid Horizontal, Layout Grid Vertical, or Match Network Nodes, and defines the maximum number of children placed in one row or column."
                    },
                    "rightanchor": {
                        "label": "Right Anchor",
                        "summary": "Position of the right anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "zoneb": {
                        "label": "Zone Bottom",
                        "summary": "Sets the bottom bounding area that the slider will track movement in."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "RGB values for the background. (default: black (0,0,0))"
                    },
                    "margin": {
                        "label": "Margin",
                        "summary": "The four fields allow you to specify the space that surrounds the Panel Component. The margin is the space between the Panel Component's border and the outer edge.  The Margin is defined in absolute pixels and does not stretch with the window, as a result margin is not reflected in the node's panel viewer but only when the parent is drawn in a floating window."
                    },
                    "alignorder": {
                        "label": "Align Order",
                        "summary": "This parameter allows you to specify the align position when its parent's Align parameter is set to something other then None or Match Network Nodes. Lower numbers are first."
                    },
                    "leftoffset": {
                        "label": "Left Offset",
                        "summary": "An offset for the left anchor in pixels."
                    },
                    "mousewheel": {
                        "label": "Use Mouse Wheel",
                        "summary": "Turn on to capture events when the mouse wheel is used over the panel."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": "Set the alpha value for the background."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "resize": {
                        "label": "Drag Edges to Resize",
                        "summary": "Four checkboxes allow you to enable resizing a panel by grabbing the corresponding edge or corner: Resize Left, Right, Bottom, Top."
                    },
                    "topborder": {
                        "label": "Top Border",
                        "summary": "What color the 2 top-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "opacity": {
                        "label": "Opacity",
                        "summary": "Allows you to control the transparency of the panel."
                    },
                    "borderover": {
                        "label": "Border Over Children",
                        "summary": "Draws the panel's borders on top of all children panels."
                    },
                    "bottomborderi": {
                        "label": "Bottom Border Inside",
                        "summary": ""
                    },
                    "vfillweight": {
                        "label": "Vertical Fill Weight",
                        "summary": "When multiple panels are using Vertical Mode = Fill and being aligned by the parent either Top to Bottom or Bottom to Top, this fill weight parameter can be used to bias the fill height of the panels."
                    },
                    "clickthrough": {
                        "label": "Click Through",
                        "summary": "When enabled all mouse clicks are ignored by this Panel Component."
                    },
                    "leftborder": {
                        "label": "Left Border",
                        "summary": "What color the 2 left-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "bordera": {
                        "label": "Border A",
                        "summary": "RGB values for border A color."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "clampul": {
                        "label": "Clamp U Low",
                        "summary": "Clamps the minimum output of the panel value u to 0."
                    },
                    "dodisablecolor": {
                        "label": "Disable Color",
                        "summary": "Enable the use of a unique disable color below when the panel's Enable = Off."
                    },
                    "borderaalpha": {
                        "label": "Border A Alpha",
                        "summary": "Alpha value for border A color."
                    },
                    "enable": {
                        "label": "Enable",
                        "summary": "Allows you to prevent all interaction with this panel."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "dropscript": {
                        "label": "Drop Script",
                        "summary": "A component's Drop Script is run when you drop another component or an external file into that component. Please refer to the Drop Scripts - Text section of the Drag and Drop page.          Alternatively specify a Table DAT in the drop script field. TouchDesigner will automatically look for 2 columns in the table. The first column should indicate the data type and the second should indicate the Text DAT that holds the script to process that data type. Please refer to the Drop Script - Tables section of the Drag and Drop page."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": "This menu specifies if the panel's children are being justified horizontally."
                    },
                    "leftanchor": {
                        "label": "Left Anchor",
                        "summary": "Position of the left anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "zonel": {
                        "label": "Zone Left",
                        "summary": "Sets the left bounding area that the slider will track movement in. 0 is the left edge of the panel, 1 is the right edge of the panel. Values outside the 0-1 range can be used."
                    },
                    "clampvl": {
                        "label": "Clamp V Low",
                        "summary": "Clamps the minimum output of the panel value v to 0."
                    },
                    "dragscript": {
                        "label": "Drag Script",
                        "summary": "Specify a script that will be executed when starting to drag a Panel Component. Please refer to the Drag Script section of the Drag and Drop page."
                    },
                    "topoffset": {
                        "label": "Top Offset",
                        "summary": "An offset for the top anchor in pixels."
                    },
                    "rightoffset": {
                        "label": "Right Offset",
                        "summary": "An offset for the right anchor in pixels."
                    },
                    "rightborder": {
                        "label": "Right Border",
                        "summary": "What color the 2 right-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "composite": {
                        "label": "Composite",
                        "summary": "Selects how the panel is composited with its siblings panels. See the Composite TOP for a description of the various composite methods."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "borderbalpha": {
                        "label": "Border B Alpha",
                        "summary": "Alpha value for border B color."
                    },
                    "clampvh": {
                        "label": "Clamp V High",
                        "summary": "Clamps the maximum output of the panel value v to 0."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "mouserel": {
                        "label": "Relative UV",
                        "summary": "When enabled the uv Panel Values will reflect relative mouse movement."
                    },
                    "alignallow": {
                        "label": "Parent Alignment",
                        "summary": "When set to Ignore, the Panel will ignore any Align parameter settings from its parent."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "bottomoffset": {
                        "label": "Bottom Offset",
                        "summary": "An offset for the bottom anchor in pixels."
                    },
                    "resizeh": {
                        "label": "H Range",
                        "summary": "Limits the bottom-top (height) resizing range."
                    },
                    "bottomborder": {
                        "label": "Bottom Border",
                        "summary": "What color the 2 bottom-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "h": {
                        "label": "Height",
                        "summary": "Specify the Panel's height in pixels."
                    },
                    "align": {
                        "label": "Align",
                        "summary": "This menu allows you to specify how the children inside the Panel Component will be laid out. The options Layout Grid Rows,  Layout Grid Columns and Match Network Nodes will scale the Panel Component's children to fit the Component. They use the Align Order of each of the children to determine the ordering of the children."
                    },
                    "cursor": {
                        "label": "Cursor",
                        "summary": "Changes the cursor displayed when cursor is over the panel."
                    },
                    "crop": {
                        "label": "Crop",
                        "summary": "This menu determines if any children panels which are positioned partially or completely outside the panel component's dimensions get cropped."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Allows you to uniformly scale the Panel's children."
                    },
                    "horigin": {
                        "label": "Horizontal Origin",
                        "summary": "Sets the position of the panel's origin horizontally. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "vorigin": {
                        "label": "Vertical Origin",
                        "summary": "Sets the position of the panel's origin vertically. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "disablealpha": {
                        "label": "Disable Alpha",
                        "summary": "Set the alpha value for the disable color."
                    },
                    "repositionx": {
                        "label": "X Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for  repositioning the panel component horizontally."
                    },
                    "rightborderi": {
                        "label": "Right Border Inside",
                        "summary": ""
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "y": {
                        "label": "Y",
                        "summary": "Specify the vertical position in pixels relative to its parent."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "repocomp": {
                        "label": "Component",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter. Specify the path to the panel component you would like to reposition by mouse."
                    },
                    "sizefromwindow": {
                        "label": "Size from Window",
                        "summary": "When enabled the panel component's width and height are set by resizing its floating viewer window."
                    },
                    "zoner": {
                        "label": "Zone Right",
                        "summary": "Sets the right bounding area that the slider will track movement in."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "zonet": {
                        "label": "Zone Top",
                        "summary": "Sets the top bounding area that the slider will track movement in."
                    },
                    "borderb": {
                        "label": "Border B",
                        "summary": "RGBA values for border B color."
                    },
                    "drag": {
                        "label": "When Dragging This",
                        "summary": "Specify if this Panel Component can be dragged."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Allows you to offset the Panel's children. This parameter is overwritten by the Align, Justify Horizontal, and Justify Vertical parameters above."
                    },
                    "w": {
                        "label": "Width",
                        "summary": "Specify the panel's width in pixels."
                    },
                    "repositiony": {
                        "label": "Y Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for repositioning the panel component vertically."
                    },
                    "topfill": {
                        "label": "TOP Fill",
                        "summary": "This menu specifies the way the Background TOP will fill the panel's background."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "hfillweight": {
                        "label": "Horizontal Fill Weight",
                        "summary": "When multiple panels are using Horizontal Mode = Fill and being aligned by the parent either Left to Right or Right to Left, this fill weight parameter can be used to bias the fill width of the panels."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "bottomanchor": {
                        "label": "Bottom Anchor",
                        "summary": "Position of the bottom anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "vmode": {
                        "label": "Vertical Mode",
                        "summary": "Select one of 3 modes to determine the vertical height of the panel."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "aspect": {
                        "label": "Aspect Ratio",
                        "summary": "Specify the ratio when using Fixed Aspect parameter above, the ratio is width/height."
                    },
                    "reposition": {
                        "label": "Drag to Reposition",
                        "summary": "Enables repositioning of the panel or window by dragging with the mouse."
                    },
                    "x": {
                        "label": "X",
                        "summary": "Specify the horizontal position in pixels relative to its parent."
                    },
                    "postoffset": {
                        "label": "Post Offset",
                        "summary": "Adds an offset after all other postions and alignment options have been applied to the panel."
                    },
                    "topborderi": {
                        "label": "Top Border Inside",
                        "summary": ""
                    },
                    "hmode": {
                        "label": "Horizontal Mode",
                        "summary": "Select one of 3 modes to determine the horizontal width of the panel."
                    },
                    "layer": {
                        "label": "Depth Layer",
                        "summary": "Specifies the order the panel components are drawn in, similar to layers in Photoshop. Higher values will be drawn over any other panel with a lower value (that is at the same level of hierarchy). If two panel components have the same Depth Layer value then they are ordered based on the operator's name."
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": "This menu specifies if the panel's children are being justified vertically."
                    },
                    "helpdat": {
                        "label": "Help DAT",
                        "summary": "Lets you specify the path to a Text DAT whose content will be displayed as a rollover pop-up help for the control panel."
                    },
                    "spacing": {
                        "label": "Spacing",
                        "summary": "This is enabled by choosing any Align option other than None or Match Network Nodes. It defines the space between the children when they are being aligned."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "multrgb": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Multiplies the RGB channels by the alpha channel."
                    },
                    "topanchor": {
                        "label": "Top Anchor",
                        "summary": "Position of the top anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "multitouch": {
                        "label": "Multi-Touch",
                        "summary": "When enabled, this panel will process the first touch it gets in a similar manner to how it processes a mouse click, with updates to u, v, state etc.  The touch event must be initiated from the panel.  Subsequent touches are ignored.  If this panel handles multi-touch events via the Multi Touch In DAT, you may want to disable Built-in Multi-Touch so it won't interfere with script processing."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "resizew": {
                        "label": "W Range",
                        "summary": "Limits the left-right (width) resizing range."
                    },
                    "slidertype": {
                        "label": "Slider Type",
                        "summary": "Sets the type of slider."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "dropdestscript": {
                        "label": "Drop Destination Script",
                        "summary": "Specify a script that will be executed when the dragged Panel Component is dropped. A temporary network is created and the component (or the alternative operator specified in Dropped Component) is copied to this network. You can add or modify operators in this network. Please refer to the Drop Destination Script section of the Drag and Drop page."
                    },
                    "fit": {
                        "label": "Fit",
                        "summary": "This menu allows you to scale the panel's children. It overrides the Justify Horizontal and Justify Vertical parameters."
                    },
                    "leftborderi": {
                        "label": "Left Border Inside",
                        "summary": ""
                    },
                    "uvbuttons": {
                        "label": "Mouse UV Buttons",
                        "summary": "Allows you to specify which mouse buttons update the uv Panel Values."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    }
                },
                "summary": "The Slider Component lets you build sliders in X, Y and XY, and outputs 1 or 2 channels from a Panel CHOP placed in the Slider component."
            },
            "opviewerCOMP": {
                "label": "OP Viewer",
                "parameters": {
                    "fixedaspect": {
                        "label": "Fixed Aspect",
                        "summary": "Allows easy creation of panels with a specific aspect set in the Aspect Ratio parameter below. Only requires setting the width or height of the panel and the other dimension is calculated based on the Aspect Ratio parameter."
                    },
                    "paneldragop": {
                        "label": "Dropped Operator",
                        "summary": "The Dropped Component parameter is the easiest way to specify an alternative operator to drop. Note that this alternative operator must exist, otherwise the component itself will be dropped. The alternative is only used when dropping onto a network or control panel. Text pasted via dragging and dropping, or files saved via dropping onto the desktop, will still use the original."
                    },
                    "drop": {
                        "label": "On Dropping Into",
                        "summary": "Specify if this Panel Component accepts items that are dropped onto it."
                    },
                    "vieweraspect": {
                        "label": "Floating Viewer Aspect",
                        "summary": "Controls whether the aspect ratio is proportional or unconstrained when resizing a floating viewer ie. dragging the edges of the viewer to resize it."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "top": {
                        "label": "Background TOP",
                        "summary": "Allows you to specify a TOP as the background for the panel."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "display": {
                        "label": "Display",
                        "summary": "Specifies if the panel is displayed or hidden."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "droptypescript": {
                        "label": "Drop Types",
                        "summary": "If a drop destination script is specified, you can also add a DAT table with a list of return types that the drop destination script will provide. Return types can be one of the op types (COMP,TOP,CHOP,SOP,MAT,DAT), channel, or supported filetypes. Please refer to the Drop Types section of the Drag and Drop page."
                    },
                    "alignmax": {
                        "label": "Max per Line",
                        "summary": "This is enabled by choosing any Align option other than None, Layout Grid Horizontal, Layout Grid Vertical, or Match Network Nodes, and defines the maximum number of children placed in one row or column."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "RGB values for the background. (default: black (0,0,0))"
                    },
                    "margin": {
                        "label": "Margin",
                        "summary": "The four fields allow you to specify the space that surrounds the Panel Component. The margin is the space between the Panel Component's border and the outer edge.  The Margin is defined in absolute pixels and does not stretch with the window, as a result margin is not reflected in the node's panel viewer but only when the parent is drawn in a floating window."
                    },
                    "alignorder": {
                        "label": "Align Order",
                        "summary": "This parameter allows you to specify the align position when its parent's Align parameter is set to something other then None or Match Network Nodes. Lower numbers are first."
                    },
                    "leftoffset": {
                        "label": "Left Offset",
                        "summary": "An offset for the left anchor in pixels."
                    },
                    "mousewheel": {
                        "label": "Use Mouse Wheel",
                        "summary": "Turn on to capture events when the mouse wheel is used over the panel."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": "Set the alpha value for the background."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "resize": {
                        "label": "Drag Edges to Resize",
                        "summary": "Four checkboxes allow you to enable resizing a panel by grabbing the corresponding edge or corner: Resize Left, Right, Bottom, Top."
                    },
                    "topborder": {
                        "label": "Top Border",
                        "summary": "What color the 2 top-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "opacity": {
                        "label": "Opacity",
                        "summary": "Allows you to control the transparency of the panel."
                    },
                    "borderover": {
                        "label": "Border Over Children",
                        "summary": "Draws the panel's borders on top of all children panels."
                    },
                    "bottomborderi": {
                        "label": "Bottom Border Inside",
                        "summary": ""
                    },
                    "vfillweight": {
                        "label": "Vertical Fill Weight",
                        "summary": "When multiple panels are using Vertical Mode = Fill and being aligned by the parent either Top to Bottom or Bottom to Top, this fill weight parameter can be used to bias the fill height of the panels."
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": "This menu specifies if the panel's children are being justified horizontally."
                    },
                    "repositiony": {
                        "label": "Y Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for repositioning the panel component vertically."
                    },
                    "bordera": {
                        "label": "Border A",
                        "summary": "RGB values for border A color."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "dodisablecolor": {
                        "label": "Disable Color",
                        "summary": "Enable the use of a unique disable color below when the panel's Enable = Off."
                    },
                    "borderaalpha": {
                        "label": "Border A Alpha",
                        "summary": "Alpha value for border A color."
                    },
                    "enable": {
                        "label": "Enable",
                        "summary": "Allows you to prevent all interaction with this panel."
                    },
                    "disablecolor": {
                        "label": "Disable Color",
                        "summary": "RGB values for the disable color. (default: black (0,0,0))"
                    },
                    "dropscript": {
                        "label": "Drop Script",
                        "summary": "A component's Drop Script is run when you drop another component or an external file into that component. Please refer to the Drop Scripts - Text section of the Drag and Drop page.          Alternatively specify a Table DAT in the drop script field. TouchDesigner will automatically look for 2 columns in the table. The first column should indicate the data type and the second should indicate the Text DAT that holds the script to process that data type. Please refer to the Drop Script - Tables section of the Drag and Drop page."
                    },
                    "uvbuttons": {
                        "label": "Mouse UV Buttons",
                        "summary": "Allows you to specify which mouse buttons update the uv Panel Values."
                    },
                    "clickthrough": {
                        "label": "Click Through",
                        "summary": "When enabled all mouse clicks are ignored by this Panel Component."
                    },
                    "leftanchor": {
                        "label": "Left Anchor",
                        "summary": "Position of the left anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "dragscript": {
                        "label": "Drag Script",
                        "summary": "Specify a script that will be executed when starting to drag a Panel Component. Please refer to the Drag Script section of the Drag and Drop page."
                    },
                    "topoffset": {
                        "label": "Top Offset",
                        "summary": "An offset for the top anchor in pixels."
                    },
                    "rightoffset": {
                        "label": "Right Offset",
                        "summary": "An offset for the right anchor in pixels."
                    },
                    "rightborder": {
                        "label": "Right Border",
                        "summary": "What color the 2 right-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "composite": {
                        "label": "Composite",
                        "summary": "Selects how the panel is composited with its siblings panels. See the Composite TOP for a description of the various composite methods."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "borderbalpha": {
                        "label": "Border B Alpha",
                        "summary": "Alpha value for border B color."
                    },
                    "helpdat": {
                        "label": "Help DAT",
                        "summary": "Lets you specify the path to a Text DAT whose content will be displayed as a rollover pop-up help for the control panel."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "dropdestscript": {
                        "label": "Drop Destination Script",
                        "summary": "Specify a script that will be executed when the dragged Panel Component is dropped. A temporary network is created and the component (or the alternative operator specified in Dropped Component) is copied to this network. You can add or modify operators in this network. Please refer to the Drop Destination Script section of the Drag and Drop page."
                    },
                    "alignallow": {
                        "label": "Parent Alignment",
                        "summary": "When set to Ignore, the Panel will ignore any Align parameter settings from its parent."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "bottomoffset": {
                        "label": "Bottom Offset",
                        "summary": "An offset for the bottom anchor in pixels."
                    },
                    "resizeh": {
                        "label": "H Range",
                        "summary": "Limits the bottom-top (height) resizing range."
                    },
                    "bottomborder": {
                        "label": "Bottom Border",
                        "summary": "What color the 2 bottom-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "h": {
                        "label": "Height",
                        "summary": "Specify the Panel's height in pixels."
                    },
                    "align": {
                        "label": "Align",
                        "summary": "This menu allows you to specify how the children inside the Panel Component will be laid out. The options Layout Grid Rows,  Layout Grid Columns and Match Network Nodes will scale the Panel Component's children to fit the Component. They use the Align Order of each of the children to determine the ordering of the children."
                    },
                    "cursor": {
                        "label": "Cursor",
                        "summary": "Changes the cursor displayed when cursor is over the panel."
                    },
                    "crop": {
                        "label": "Crop",
                        "summary": "This menu determines if any children panels which are positioned partially or completely outside the panel component's dimensions get cropped."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Allows you to uniformly scale the Panel's children."
                    },
                    "horigin": {
                        "label": "Horizontal Origin",
                        "summary": "Sets the position of the panel's origin horizontally. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "vorigin": {
                        "label": "Vertical Origin",
                        "summary": "Sets the position of the panel's origin vertically. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "disablealpha": {
                        "label": "Disable Alpha",
                        "summary": "Set the alpha value for the disable color."
                    },
                    "repositionx": {
                        "label": "X Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for  repositioning the panel component horizontally."
                    },
                    "rightborderi": {
                        "label": "Right Border Inside",
                        "summary": ""
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "y": {
                        "label": "Y",
                        "summary": "Specify the vertical position in pixels relative to its parent."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "repocomp": {
                        "label": "Component",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter. Specify the path to the panel component you would like to reposition by mouse."
                    },
                    "sizefromwindow": {
                        "label": "Size from Window",
                        "summary": "When enabled the panel component's width and height are set by resizing its floating viewer window."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "borderb": {
                        "label": "Border B",
                        "summary": "RGBA values for border B color."
                    },
                    "drag": {
                        "label": "When Dragging This",
                        "summary": "Specify if this Panel Component can be dragged."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Allows you to offset the Panel's children. This parameter is overwritten by the Align, Justify Horizontal, and Justify Vertical parameters above."
                    },
                    "w": {
                        "label": "Width",
                        "summary": "Specify the panel's width in pixels."
                    },
                    "leftborder": {
                        "label": "Left Border",
                        "summary": "What color the 2 left-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "topfill": {
                        "label": "TOP Fill",
                        "summary": "This menu specifies the way the Background TOP will fill the panel's background."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "hfillweight": {
                        "label": "Horizontal Fill Weight",
                        "summary": "When multiple panels are using Horizontal Mode = Fill and being aligned by the parent either Left to Right or Right to Left, this fill weight parameter can be used to bias the fill width of the panels."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "bottomanchor": {
                        "label": "Bottom Anchor",
                        "summary": "Position of the bottom anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "vmode": {
                        "label": "Vertical Mode",
                        "summary": "Select one of 3 modes to determine the vertical height of the panel."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "aspect": {
                        "label": "Aspect Ratio",
                        "summary": "Specify the ratio when using Fixed Aspect parameter above, the ratio is width/height."
                    },
                    "reposition": {
                        "label": "Drag to Reposition",
                        "summary": "Enables repositioning of the panel or window by dragging with the mouse."
                    },
                    "x": {
                        "label": "X",
                        "summary": "Specify the horizontal position in pixels relative to its parent."
                    },
                    "postoffset": {
                        "label": "Post Offset",
                        "summary": "Adds an offset after all other postions and alignment options have been applied to the panel."
                    },
                    "topborderi": {
                        "label": "Top Border Inside",
                        "summary": ""
                    },
                    "hmode": {
                        "label": "Horizontal Mode",
                        "summary": "Select one of 3 modes to determine the horizontal width of the panel."
                    },
                    "layer": {
                        "label": "Depth Layer",
                        "summary": "Specifies the order the panel components are drawn in, similar to layers in Photoshop. Higher values will be drawn over any other panel with a lower value (that is at the same level of hierarchy). If two panel components have the same Depth Layer value then they are ordered based on the operator's name."
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": "This menu specifies if the panel's children are being justified vertically."
                    },
                    "multrgb": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Multiplies the RGB channels by the alpha channel."
                    },
                    "spacing": {
                        "label": "Spacing",
                        "summary": "This is enabled by choosing any Align option other than None or Match Network Nodes. It defines the space between the children when they are being aligned."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "topanchor": {
                        "label": "Top Anchor",
                        "summary": "Position of the top anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "multitouch": {
                        "label": "Multi-Touch",
                        "summary": "When enabled, this panel will process the first touch it gets in a similar manner to how it processes a mouse click, with updates to u, v, state etc.  The touch event must be initiated from the panel.  Subsequent touches are ignored.  If this panel handles multi-touch events via the Multi Touch In DAT, you may want to disable Built-in Multi-Touch so it won't interfere with script processing."
                    },
                    "rightanchor": {
                        "label": "Right Anchor",
                        "summary": "Position of the right anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "resizew": {
                        "label": "W Range",
                        "summary": "Limits the left-right (width) resizing range."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "mouserel": {
                        "label": "Relative UV",
                        "summary": "When enabled the uv Panel Values will reflect relative mouse movement."
                    },
                    "fit": {
                        "label": "Fit",
                        "summary": "This menu allows you to scale the panel's children. It overrides the Justify Horizontal and Justify Vertical parameters."
                    },
                    "leftborderi": {
                        "label": "Left Border Inside",
                        "summary": ""
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    }
                },
                "summary": "The OP Viewer Component allows any operator viewer (CHOP Viewer, SOP Viewer etc) to be part of a panel with full interactivity."
            },
            "forceCOMP": {
                "label": "Force",
                "parameters": {
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "relpos": {
                        "label": "Relative Position",
                        "summary": "The position at which to apply the linear force, relative to the center of the body (Note: the physical center of the object, not the center of mass). Having a nonzero relative position will also cause the body to rotate due to added torque."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "force": {
                        "label": "Force",
                        "summary": "The linear force in Newtons that will be applied."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Toggle the force on/off in the simulation"
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "torque": {
                        "label": "Torque",
                        "summary": "The rotational force in Newtons that will be applied."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    }
                },
                "summary": ""
            },
            "parameterCOMP": {
                "label": "Parameter",
                "parameters": {
                    "fixedaspect": {
                        "label": "Fixed Aspect",
                        "summary": "Allows easy creation of panels with a specific aspect set in the Aspect Ratio parameter below. Only requires setting the width or height of the panel and the other dimension is calculated based on the Aspect Ratio parameter."
                    },
                    "top": {
                        "label": "Background TOP",
                        "summary": "Allows you to specify a TOP as the background for the panel."
                    },
                    "pagenames": {
                        "label": "Page Names",
                        "summary": ""
                    },
                    "drop": {
                        "label": "On Dropping Into",
                        "summary": "Specify if this Panel Component accepts items that are dropped onto it."
                    },
                    "vieweraspect": {
                        "label": "Floating Viewer Aspect",
                        "summary": "Controls whether the aspect ratio is proportional or unconstrained when resizing a floating viewer ie. dragging the edges of the viewer to resize it."
                    },
                    "extension4": {
                        "label": "Extension Object 4",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "paneldragop": {
                        "label": "Dropped Operator",
                        "summary": "The Dropped Component parameter is the easiest way to specify an alternative operator to drop. Note that this alternative operator must exist, otherwise the component itself will be dropped. The alternative is only used when dropping onto a network or control panel. Text pasted via dragging and dropping, or files saved via dropping onto the desktop, will still use the original."
                    },
                    "iopshortcut": {
                        "label": "Internal OP Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as a path to \\\"Internal OP\\\" below. See Internal Operators."
                    },
                    "display": {
                        "label": "Display",
                        "summary": "Specifies if the panel is displayed or hidden."
                    },
                    "promoteextension4": {
                        "label": "Promote Extension 4",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "builtin": {
                        "label": "Built-In",
                        "summary": "Include the operator's built-in parameters."
                    },
                    "droptypescript": {
                        "label": "Drop Types",
                        "summary": "If a drop destination script is specified, you can also add a DAT table with a list of return types that the drop destination script will provide. Return types can be one of the op types (COMP,TOP,CHOP,SOP,MAT,DAT), channel, or supported filetypes. Please refer to the Drop Types section of the Drag and Drop page."
                    },
                    "custom": {
                        "label": "Custom",
                        "summary": "Include the operator's Custom Parameters."
                    },
                    "header": {
                        "label": "Header",
                        "summary": "Include the header of the parameter dialog. This is the section with OP type, name, and help buttons."
                    },
                    "justifyv": {
                        "label": "Justify Vertical",
                        "summary": "This menu specifies if the panel's children are being justified vertically."
                    },
                    "clone": {
                        "label": "Clone Master",
                        "summary": "Path to a component used as the Master Clone."
                    },
                    "extension3": {
                        "label": "Extension Object 3",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "bgcolor": {
                        "label": "Background Color",
                        "summary": "RGB values for the background. (default: black (0,0,0))"
                    },
                    "margin": {
                        "label": "Margin",
                        "summary": "The four fields allow you to specify the space that surrounds the Panel Component. The margin is the space between the Panel Component's border and the outer edge.  The Margin is defined in absolute pixels and does not stretch with the window, as a result margin is not reflected in the node's panel viewer but only when the parent is drawn in a floating window."
                    },
                    "alignorder": {
                        "label": "Align Order",
                        "summary": "This parameter allows you to specify the align position when its parent's Align parameter is set to something other then None or Match Network Nodes. Lower numbers are first."
                    },
                    "leftoffset": {
                        "label": "Left Offset",
                        "summary": "An offset for the left anchor in pixels."
                    },
                    "mousewheel": {
                        "label": "Use Mouse Wheel",
                        "summary": "Turn on to capture events when the mouse wheel is used over the panel."
                    },
                    "bgalpha": {
                        "label": "Background Alpha",
                        "summary": "Set the alpha value for the background."
                    },
                    "extension2": {
                        "label": "Extension Object 2",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "resize": {
                        "label": "Drag Edges to Resize",
                        "summary": "Four checkboxes allow you to enable resizing a panel by grabbing the corresponding edge or corner: Resize Left, Right, Bottom, Top."
                    },
                    "topborder": {
                        "label": "Top Border",
                        "summary": "What color the 2 top-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "opacity": {
                        "label": "Opacity",
                        "summary": "Allows you to control the transparency of the panel."
                    },
                    "borderover": {
                        "label": "Border Over Children",
                        "summary": "Draws the panel's borders on top of all children panels."
                    },
                    "bottomborderi": {
                        "label": "Bottom Border Inside",
                        "summary": ""
                    },
                    "vfillweight": {
                        "label": "Vertical Fill Weight",
                        "summary": "When multiple panels are using Vertical Mode = Fill and being aligned by the parent either Top to Bottom or Bottom to Top, this fill weight parameter can be used to bias the fill height of the panels."
                    },
                    "clickthrough": {
                        "label": "Click Through",
                        "summary": "When enabled all mouse clicks are ignored by this Panel Component."
                    },
                    "leftborder": {
                        "label": "Left Border",
                        "summary": "What color the 2 left-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "bordera": {
                        "label": "Border A",
                        "summary": "RGB values for border A color."
                    },
                    "combinescopes": {
                        "label": "Combine Scopes",
                        "summary": ""
                    },
                    "aspect": {
                        "label": "Aspect Ratio",
                        "summary": "Specify the ratio when using Fixed Aspect parameter above, the ratio is width/height."
                    },
                    "opshortcut": {
                        "label": "Global OP Shortcut",
                        "summary": "Specifies a name you can use anywhere at all as the path to that component. See Global OP Shortcut."
                    },
                    "dodisablecolor": {
                        "label": "Disable Color",
                        "summary": "Enable the use of a unique disable color below when the panel's Enable = Off."
                    },
                    "borderaalpha": {
                        "label": "Border A Alpha",
                        "summary": "Alpha value for border A color."
                    },
                    "enable": {
                        "label": "Enable",
                        "summary": "Allows you to prevent all interaction with this panel."
                    },
                    "disablecolor": {
                        "label": "Disable Color",
                        "summary": "RGB values for the disable color. (default: black (0,0,0))"
                    },
                    "dropscript": {
                        "label": "Drop Script",
                        "summary": "A component's Drop Script is run when you drop another component or an external file into that component. Please refer to the Drop Scripts - Text section of the Drag and Drop page.          Alternatively specify a Table DAT in the drop script field. TouchDesigner will automatically look for 2 columns in the table. The first column should indicate the data type and the second should indicate the Text DAT that holds the script to process that data type. Please refer to the Drop Script - Tables section of the Drag and Drop page."
                    },
                    "uvbuttons": {
                        "label": "Mouse UV Buttons",
                        "summary": "Allows you to specify which mouse buttons update the uv Panel Values."
                    },
                    "justifyh": {
                        "label": "Justify Horizontal",
                        "summary": "This menu specifies if the panel's children are being justified horizontally."
                    },
                    "alignmax": {
                        "label": "Max per Line",
                        "summary": "This is enabled by choosing any Align option other than None, Layout Grid Horizontal, Layout Grid Vertical, or Match Network Nodes, and defines the maximum number of children placed in one row or column."
                    },
                    "leftanchor": {
                        "label": "Left Anchor",
                        "summary": "Position of the left anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "enablecloning": {
                        "label": "Enable Cloning",
                        "summary": "Control if the OP should be actively cloned. The Pulse button can be used to instantaneously clone the contents."
                    },
                    "reloadcustom": {
                        "label": "Reload Custom Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's Custom Parameters are reloaded when the .tox is reloaded."
                    },
                    "dragscript": {
                        "label": "Drag Script",
                        "summary": "Specify a script that will be executed when starting to drag a Panel Component. Please refer to the Drag Script section of the Drag and Drop page."
                    },
                    "w": {
                        "label": "Width",
                        "summary": "Specify the panel's width in pixels."
                    },
                    "topoffset": {
                        "label": "Top Offset",
                        "summary": "An offset for the top anchor in pixels."
                    },
                    "rightoffset": {
                        "label": "Right Offset",
                        "summary": "An offset for the right anchor in pixels."
                    },
                    "rightborder": {
                        "label": "Right Border",
                        "summary": "What color the 2 right-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "composite": {
                        "label": "Composite",
                        "summary": "Selects how the panel is composited with its siblings panels. See the Composite TOP for a description of the various composite methods."
                    },
                    "promoteextension3": {
                        "label": "Promote Extension 3",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "externaltox": {
                        "label": "External .tox",
                        "summary": "Path to a .tox file on disk which will source the component's contents upon start of a .toe. This allows for components to contain networks that can be updated independently. If the .tox file can not be found, whatever the .toe file was saved with will be loaded."
                    },
                    "borderbalpha": {
                        "label": "Border B Alpha",
                        "summary": "Alpha value for border B color."
                    },
                    "helpdat": {
                        "label": "Help DAT",
                        "summary": "Lets you specify the path to a Text DAT whose content will be displayed as a rollover pop-up help for the control panel."
                    },
                    "iop": {
                        "label": "Internal OP",
                        "summary": "The path to the Internal OP inside this component. See Internal Operators."
                    },
                    "mouserel": {
                        "label": "Relative UV",
                        "summary": "When enabled the uv Panel Values will reflect relative mouse movement."
                    },
                    "alignallow": {
                        "label": "Parent Alignment",
                        "summary": "When set to Ignore, the Panel will ignore any Align parameter settings from its parent."
                    },
                    "subcompname": {
                        "label": "Sub-Component to Load",
                        "summary": "When loading from an External .tox file, this option allows you to reach into the .tox and pull out a COMP and make that the top-level COMP, ignoring everything else in the file (except for the contents of that COMP). For example if a .tox file named project1.tox contains project1/geo1, putting geo1 as the Sub-Component to Load, will result in geo1 being loaded in place of the current COMP. If this parameter is blank, it just loads the .tox file normally using the top level COMP in the file."
                    },
                    "bottomoffset": {
                        "label": "Bottom Offset",
                        "summary": "An offset for the bottom anchor in pixels."
                    },
                    "resizeh": {
                        "label": "H Range",
                        "summary": "Limits the bottom-top (height) resizing range."
                    },
                    "bottomborder": {
                        "label": "Bottom Border",
                        "summary": "What color the 2 bottom-most pixels are. Options are 0 (no change), Border A (uses color defined in Border A), or Border B (uses color defined in Border B)."
                    },
                    "h": {
                        "label": "Height",
                        "summary": "Specify the Panel's height in pixels."
                    },
                    "align": {
                        "label": "Align",
                        "summary": "This menu allows you to specify how the children inside the Panel Component will be laid out. The options Layout Grid Rows,  Layout Grid Columns and Match Network Nodes will scale the Panel Component's children to fit the Component. They use the Align Order of each of the children to determine the ordering of the children."
                    },
                    "cursor": {
                        "label": "Cursor",
                        "summary": "Changes the cursor displayed when cursor is over the panel."
                    },
                    "crop": {
                        "label": "Crop",
                        "summary": "This menu determines if any children panels which are positioned partially or completely outside the panel component's dimensions get cropped."
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "Allows you to uniformly scale the Panel's children."
                    },
                    "horigin": {
                        "label": "Horizontal Origin",
                        "summary": "Sets the position of the panel's origin horizontally. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "promoteextension1": {
                        "label": "Promote Extension 1",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "vorigin": {
                        "label": "Vertical Origin",
                        "summary": "Sets the position of the panel's origin vertically. The default origin (0,0) is the bottom-left corner of the panel."
                    },
                    "parscope": {
                        "label": "Parameter Scope",
                        "summary": "Selects which parameters to include. Use * for Pattern Matching all."
                    },
                    "repositionx": {
                        "label": "X Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for  repositioning the panel component horizontally."
                    },
                    "rightborderi": {
                        "label": "Right Border Inside",
                        "summary": ""
                    },
                    "extname4": {
                        "label": "Extension Name 4",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "y": {
                        "label": "Y",
                        "summary": "Specify the vertical position in pixels relative to its parent."
                    },
                    "parentshortcut": {
                        "label": "Parent Shortcut",
                        "summary": "Specifies a name you can use anywhere inside the component as the path to that component. See Parent Shortcut."
                    },
                    "repocomp": {
                        "label": "Component",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter. Specify the path to the panel component you would like to reposition by mouse."
                    },
                    "sizefromwindow": {
                        "label": "Size from Window",
                        "summary": "When enabled the panel component's width and height are set by resizing its floating viewer window."
                    },
                    "op": {
                        "label": "Operator",
                        "summary": "Path to the operator whose parameters will be used."
                    },
                    "opviewer": {
                        "label": "Operator Viewer",
                        "summary": "Select which operator's node viewer to use when the Node View parameter above is set to Operator Viewer."
                    },
                    "reinitextensions": {
                        "label": "Re-Init Extensions",
                        "summary": "Recompile all extension objects. Normally extension objects are compiled only when they are referenced and their definitions have changed."
                    },
                    "borderb": {
                        "label": "Border B",
                        "summary": "RGBA values for border B color."
                    },
                    "offset": {
                        "label": "Offset",
                        "summary": "Allows you to offset the Panel's children. This parameter is overwritten by the Align, Justify Horizontal, and Justify Vertical parameters above."
                    },
                    "pagescope": {
                        "label": "Page Scope",
                        "summary": ""
                    },
                    "repositiony": {
                        "label": "Y Range",
                        "summary": "Enabled by choosing the Component option from the Reposition parameter.  Sets the maximum range for repositioning the panel component vertically."
                    },
                    "topfill": {
                        "label": "TOP Fill",
                        "summary": "This menu specifies the way the Background TOP will fill the panel's background."
                    },
                    "promoteextension2": {
                        "label": "Promote Extension 2",
                        "summary": "Controls whether or not the extensions are visible directly at the component level, or must be accessed through the .ext member.  Example:  n.Somefunction vs n.ext.Somefunction"
                    },
                    "reloadbuiltin": {
                        "label": "Reload Built-in Parameters",
                        "summary": "When this checkbox is enabled, the values of the component's built-in parameters are reloaded when the .tox is reloaded."
                    },
                    "hfillweight": {
                        "label": "Horizontal Fill Weight",
                        "summary": "When multiple panels are using Horizontal Mode = Fill and being aligned by the parent either Left to Right or Right to Left, this fill weight parameter can be used to bias the fill width of the panels."
                    },
                    "reloadtoxonstart": {
                        "label": "Reload .tox on Start",
                        "summary": "When on (default), the external .tox file will be loaded when the .toe starts and the contents of the COMP will match that of the external .tox. This can be turned off to avoid loading from the referenced external .tox on startup if desired (the contents of the COMP are instead loaded from the .toe file). Useful if you wish to have a COMP reference an external .tox but not always load from it unless you specifically push the Re-Init Network parameter button."
                    },
                    "bottomanchor": {
                        "label": "Bottom Anchor",
                        "summary": "Position of the bottom anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "extname2": {
                        "label": "Extension Name 2",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "vmode": {
                        "label": "Vertical Mode",
                        "summary": "Select one of 3 modes to determine the vertical height of the panel."
                    },
                    "savebackup": {
                        "label": "Save Backup of External",
                        "summary": "When this checkbox is enabled, a backup copy of the component specified by the External .tox parameter is saved in the .toe file.  This backup copy will be used if the External .tox can not be found. This may happen if the .tox was renamed, deleted, or the .toe file is running on another computer that is missing component media."
                    },
                    "nodeview": {
                        "label": "Node View",
                        "summary": "Determines what is displayed in the node viewer, also known as the Node Viewer. Some options will not be available depending on the Component type (Object Component, Panel Component, Misc.)"
                    },
                    "drag": {
                        "label": "When Dragging This",
                        "summary": "Specify if this Panel Component can be dragged."
                    },
                    "reposition": {
                        "label": "Drag to Reposition",
                        "summary": "Enables repositioning of the panel or window by dragging with the mouse."
                    },
                    "x": {
                        "label": "X",
                        "summary": "Specify the horizontal position in pixels relative to its parent."
                    },
                    "postoffset": {
                        "label": "Post Offset",
                        "summary": "Adds an offset after all other postions and alignment options have been applied to the panel."
                    },
                    "topborderi": {
                        "label": "Top Border Inside",
                        "summary": ""
                    },
                    "reinitnet": {
                        "label": "Re-Init Network",
                        "summary": "This button will re-load from the external .tox file (if present), followed by re-initializing itself from its master, if it's a clone."
                    },
                    "hmode": {
                        "label": "Horizontal Mode",
                        "summary": "Select one of 3 modes to determine the horizontal width of the panel."
                    },
                    "layer": {
                        "label": "Depth Layer",
                        "summary": "Specifies the order the panel components are drawn in, similar to layers in Photoshop. Higher values will be drawn over any other panel with a lower value (that is at the same level of hierarchy). If two panel components have the same Depth Layer value then they are ordered based on the operator's name."
                    },
                    "disablealpha": {
                        "label": "Disable Alpha",
                        "summary": "Set the alpha value for the disable color."
                    },
                    "multrgb": {
                        "label": "Multiply RGB by Alpha",
                        "summary": "Multiplies the RGB channels by the alpha channel."
                    },
                    "spacing": {
                        "label": "Spacing",
                        "summary": "This is enabled by choosing any Align option other than None or Match Network Nodes. It defines the space between the children when they are being aligned."
                    },
                    "loadondemand": {
                        "label": "Load on Demand",
                        "summary": "Loads the component into memory only when required. Good to use for components that are not always used in the project."
                    },
                    "scopeorder": {
                        "label": "Order by Scope",
                        "summary": ""
                    },
                    "extension1": {
                        "label": "Extension Object 1",
                        "summary": "A number of class instances that can be attached to the component."
                    },
                    "topanchor": {
                        "label": "Top Anchor",
                        "summary": "Position of the top anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the bottom edge of the parent and 1 is the top edge of the parent."
                    },
                    "multitouch": {
                        "label": "Multi-Touch",
                        "summary": "When enabled, this panel will process the first touch it gets in a similar manner to how it processes a mouse click, with updates to u, v, state etc.  The touch event must be initiated from the panel.  Subsequent touches are ignored.  If this panel handles multi-touch events via the Multi Touch In DAT, you may want to disable Built-in Multi-Touch so it won't interfere with script processing."
                    },
                    "rightanchor": {
                        "label": "Right Anchor",
                        "summary": "Position of the right anchor of the panel with respect to the parent. This value is normalized 0-1, 0 is the left edge of the parent and 1 is the right edge of the parent."
                    },
                    "enablecloningpulse": {
                        "label": "Enable Cloning Pulse",
                        "summary": ""
                    },
                    "resizew": {
                        "label": "W Range",
                        "summary": "Limits the left-right (width) resizing range."
                    },
                    "oversize": {
                        "label": "Oversize",
                        "summary": ""
                    },
                    "keepmemory": {
                        "label": "Keep in Memory",
                        "summary": ""
                    },
                    "extname3": {
                        "label": "Extension Name 3",
                        "summary": "Optional name to search by, instead of the instance class name."
                    },
                    "dropdestscript": {
                        "label": "Drop Destination Script",
                        "summary": "Specify a script that will be executed when the dragged Panel Component is dropped. A temporary network is created and the component (or the alternative operator specified in Dropped Component) is copied to this network. You can add or modify operators in this network. Please refer to the Drop Destination Script section of the Drag and Drop page."
                    },
                    "fit": {
                        "label": "Fit",
                        "summary": "This menu allows you to scale the panel's children. It overrides the Justify Horizontal and Justify Vertical parameters."
                    },
                    "leftborderi": {
                        "label": "Left Border Inside",
                        "summary": ""
                    },
                    "extname1": {
                        "label": "Extension Name 1",
                        "summary": "Optional name to search by, instead of the instance class name."
                    }
                },
                "summary": "The Parameter Component allows any operator's parameter dialog to be a panel with full interactivity."
            }
        },
        "DATs": {
            "": {
                "label": "",
                "parameters": {},
                "summary": ""
            },
            "parameterexecuteDAT": {
                "label": "Parameter Execute",
                "parameters": {
                    "exportchange": {
                        "label": "Export Change",
                        "summary": "The onExportChange() method executes if the export path to the specified parameter changes. For example, if the parameter is being exported to from /chopname/chan1 and that is changed so /chopname2/chan2 is now exporting to it, then the script will be triggered."
                    },
                    "custom": {
                        "label": "Custom",
                        "summary": "Monitor Custom Parameters."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the DAT will respond to the Parameter that is referenced."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "(Tscript only) Determines the location the script is run from."
                    },
                    "op": {
                        "label": "OP",
                        "summary": "Specify which operator the triggering parameter belongs to."
                    },
                    "valuechange": {
                        "label": "Value Change",
                        "summary": "The onValueChange() method executes when the parameter specified changes value in any way. It is called once each frame."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "This operator is also the path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "modechange": {
                        "label": "Mode Change",
                        "summary": "The onModeChange() method executes if the specified parameter goes from being disabled to enabled."
                    },
                    "edit": {
                        "label": "Edit..",
                        "summary": "Clicking this opens a text editor to edit text in the DAT."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "expressionchange": {
                        "label": "Expression Change",
                        "summary": "The onExpressionChange() method executes whenever the specified parameter's expression changes. For example, changing the expression from me.time.frame to me.time.seconds will trigger the script."
                    },
                    "enablechange": {
                        "label": "Enable Change",
                        "summary": "The onEnableChange() method executes if the specified parameter goes from being disabled to enabled."
                    },
                    "onpulse": {
                        "label": "On Pulse",
                        "summary": ""
                    },
                    "pars": {
                        "label": "Parameters",
                        "summary": "Specify which parameter to monitor for triggering the script."
                    },
                    "builtin": {
                        "label": "Built-In",
                        "summary": "Monitor Built-In parameters."
                    }
                },
                "summary": "The Parameter Execute DAT runs a  script when a parameter of any operator changes state."
            },
            "chopexecuteDAT": {
                "label": "CHOP Execute",
                "parameters": {
                    "whileoff": {
                        "label": "While Off",
                        "summary": "The whileOff() method executes when the channel specified is off. It is called once each frame."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "chop": {
                        "label": "CHOP",
                        "summary": "The CHOP whose channel change will trigger the DAT to execute its script."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the DAT will respond to the CHOP that is referenced."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "(Tscript only) Determines the location the script is run from."
                    },
                    "ontooff": {
                        "label": "On to Off",
                        "summary": "The onOnToOff() method executes when the channel specified switches from on to off, called at the first \\\"off\\\" frame."
                    },
                    "valuechange": {
                        "label": "Value Change",
                        "summary": "The onValueChange() method executes when the channel specified changes value in any way. It is called once each frame."
                    },
                    "whileon": {
                        "label": "While On",
                        "summary": "The whileOn() method executes when the channel specified is on. It is called once each frame."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "freq": {
                        "label": "While Off/On Frequency",
                        "summary": "Enabled when using the While On or While Off options above.  Determines if the DAT executes For Every Sample or Once Per Frame."
                    },
                    "edit": {
                        "label": "Edit..",
                        "summary": "Clicking this opens a text editor to edit text in the DAT."
                    },
                    "channel": {
                        "label": "Channel",
                        "summary": "Which channel will trigger change."
                    },
                    "offtoon": {
                        "label": "Off to On",
                        "summary": "The onOffToOn() method executes when the channel specified switches from off to on, called at the first \\\"on\\\" frame."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The CHOP Execute DAT will run its script when the channel values of a specified CHOP change."
            },
            "parameterDAT": {
                "label": "Parameter",
                "parameters": {
                    "includeopname": {
                        "label": "Include Op Name",
                        "summary": "Adds the OP name to the beginning of each parameter name in the table"
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "constant": {
                        "label": "Constant",
                        "summary": "Outputs the current constant value of the parameter."
                    },
                    "parameters": {
                        "label": "Parameters",
                        "summary": "The list of parameters names (which can include wildcards) you want to get from the OP(s). One or more parameter, or * for all parameters. You can also specify a \\\"NOT\\\" selection with an ^. Or select the parameter using the menu. See Pattern Matching."
                    },
                    "section": {
                        "label": "Section",
                        "summary": "Outputs whether the parameter has a section divider/separator (ie. line) above it."
                    },
                    "default": {
                        "label": "Default",
                        "summary": "Outputs the default value of the parameter"
                    },
                    "eval": {
                        "label": "Eval",
                        "summary": "Outputs the evaluated parameter value as a python object."
                    },
                    "path": {
                        "label": "Path",
                        "summary": "Outputs the path to the node."
                    },
                    "minmax": {
                        "label": "Min/Max",
                        "summary": "Outputs the minimum and maximum values of the parameter. These values will clamp the value parameter to be within the range. If clampmin is 0 then the minimum will not clamp and the row/column entry will be 0. If clampmax is 0 then the maximum will not clamp and the row/column entry will be 1."
                    },
                    "menuindex": {
                        "label": "Menu Index",
                        "summary": "If the parameter is a menu, then output the selected index of the menu."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "readonly": {
                        "label": "Read Only",
                        "summary": "Outputs whether the parameter is currently read-only"
                    },
                    "style": {
                        "label": "Style",
                        "summary": "Outputs what format the parameter is (eg. Float for float parameters, Menu for menu parameters etc.)."
                    },
                    "export": {
                        "label": "Export",
                        "summary": "Outputs the export path of the parameter."
                    },
                    "menulabels": {
                        "label": "Menu Labels",
                        "summary": "Outputs a list of the menu labels for any menu parameters."
                    },
                    "mode": {
                        "label": "Mode",
                        "summary": "Outputs the current mode of the parameter (constant, expression, or export)."
                    },
                    "size": {
                        "label": "Size",
                        "summary": "Outputs the size of the tuplet. For example, tx on the Geometry COMP would have a tuplet size of 3 since it's a part of the 't' tuplet with 3 parameters."
                    },
                    "custom": {
                        "label": "Custom",
                        "summary": "Output the operators' custom parameters."
                    },
                    "header": {
                        "label": "Header",
                        "summary": "Outputs the column headers."
                    },
                    "renamefrom": {
                        "label": "Rename from",
                        "summary": "See Pattern Matching."
                    },
                    "enabled": {
                        "label": "Enabled",
                        "summary": "Outputs whether the parameter is currently enabled"
                    },
                    "name": {
                        "label": "Name",
                        "summary": "Outputs the parameter name."
                    },
                    "normminmax": {
                        "label": "Norm Min/Max",
                        "summary": "Outputs the minimum and maximum values of the parameter in the interface (ie. the minimum and maximum values of a slider)."
                    },
                    "value": {
                        "label": "Value",
                        "summary": "Outputs the evaluated parameter value."
                    },
                    "renameto": {
                        "label": "Rename to",
                        "summary": "See Pattern Expansion."
                    },
                    "tupletname": {
                        "label": "Tuplet Name",
                        "summary": "Outputs the name of the tuplet the parameter is in. For example, tx on the Geometry COMP is a part of the 't' tuplet."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "clampminmax": {
                        "label": "Clamp Min/Max",
                        "summary": "Outputs whether or not the parameter has a clamped min or clamped max. If true, then the values are defined by min/max columns."
                    },
                    "menunames": {
                        "label": "Menu Names",
                        "summary": "Outputs a list of the menu names for any menu parameters."
                    },
                    "ops": {
                        "label": "Operators",
                        "summary": "The operators determine where to obtain the channels. Specify or more operator names or paths. Examples: wave1, slider*, constant[1-9] constant[10-19:2], ../base1. Or select the operators using the menu."
                    },
                    "builtin": {
                        "label": "Built-In",
                        "summary": "Output the operators' built-in parameters."
                    },
                    "expression": {
                        "label": "Expression",
                        "summary": "Outputs the current python expression of the parameter."
                    }
                },
                "summary": "The Parameter DAT outputs a table of parameter names and values of an operator, including custom parameters, from any OP type. It outputs pre-evaluated expressions, and the parameter mode."
            },
            "xmlDAT": {
                "label": "XML",
                "parameters": {
                    "pname": {
                        "label": "Parent Name",
                        "summary": ""
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "show": {
                        "label": "Show",
                        "summary": "This controls how the selected elements are presented."
                    },
                    "mlabel": {
                        "label": "Label",
                        "summary": "Merge and label can be used to combine two inputs of data. The second input must be XML formatted, and not SGML/HTML. These two parameters control where and how the second input is merged."
                    },
                    "plabel": {
                        "label": "Parent Label",
                        "summary": "Elements must have a parent whose label matches this parameter."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "label": {
                        "label": "Label",
                        "summary": "Element labels must match this parameter."
                    },
                    "ptype": {
                        "label": "Parent Type",
                        "summary": "Elements must have a parent whose type matches this parameter."
                    },
                    "pvalue": {
                        "label": "Parent Value",
                        "summary": ""
                    },
                    "ptext": {
                        "label": "Parent Text",
                        "summary": "Elements must have a parent whose text matches this parameter."
                    },
                    "text": {
                        "label": "Text",
                        "summary": "Element text must match this parameter."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "merge": {
                        "label": "Merge",
                        "summary": ""
                    },
                    "type": {
                        "label": "Type",
                        "summary": "Element types must match this parameter."
                    },
                    "value": {
                        "label": "Value",
                        "summary": "If an element contains attributes, at least one must have a value matching this parameter."
                    },
                    "oaname": {
                        "label": "Name Attributes",
                        "summary": "Only output attributes whos name match this parameter."
                    },
                    "name": {
                        "label": "Name",
                        "summary": "If an element contains attributes, at least one must have a name matching this parameter."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "oclabel": {
                        "label": "Children Labels",
                        "summary": "Only output children whose label match this parameter."
                    },
                    "oavalue": {
                        "label": "Value Attributes",
                        "summary": "Only output attributes whose value match this parameter."
                    },
                    "sgml": {
                        "label": "Parse SGML/HTML",
                        "summary": "If enabled, the input should be in SGML/HTML format. This includes form data. If disabled, XML format is assumed."
                    },
                    "lprefix": {
                        "label": "Label Prefix",
                        "summary": "This determines whether or not the element label is prefixed when outputting tables or attributes or children."
                    }
                },
                "summary": "The XML DAT can be used to parse arbitrary XML and SGML/HTML formatted data."
            },
            "multitouchinDAT": {
                "label": "Multi Touch In",
                "parameters": {
                    "relativepos": {
                        "label": "Relative Position",
                        "summary": "Output position and normalized coordinates relative to lower left corner of the specified panel."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "relativeid": {
                        "label": "Relative IDs",
                        "summary": "Reorder the touch ids so only the ones within the specified panel are counted."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "outputtype": {
                        "label": "Output",
                        "summary": "Sets how the output is displayed in the table."
                    },
                    "contactthresh": {
                        "label": "Contact Threshold",
                        "summary": "Some touch devices have a width and height of a press, representing pressure of amount of finger contact. This is a minimum threshold below which no events are recognized."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Registers event when Active is On."
                    },
                    "mouse": {
                        "label": "Include Mouse",
                        "summary": "When on, the mouse add a touch event when clicked. This event always shares ID 1 with the first touch. Using mouse and multitouch at the same time may result in unexpected behaviours."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": ""
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "doubleclickthresh": {
                        "label": "Double Click (secs)",
                        "summary": "The maximum time allowed between clicks to be registered as a 'double-click'."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "posthresh": {
                        "label": "Position Threshold",
                        "summary": "A new message will not be added if a finger has moved less than this number of units. The units are determined by the input device, not necessarily the resolution of the screen that it is associated with."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "panel": {
                        "label": "Panel",
                        "summary": "The Panel Component to capture the touch events from."
                    },
                    "minrows": {
                        "label": "Min Rows Displayed",
                        "summary": "The minimum number of rows always displayed in the table."
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a script command, here is an example: opparm -c /serial1 clear"
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The Multi Touch In DAT is used for receiving messages and events from the Windows 7+ standard multi-touch API."
            },
            "indicesDAT": {
                "label": "Indices",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "end": {
                        "label": "End",
                        "summary": "The end of the number range."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "The start of the number range."
                    },
                    "level": {
                        "label": "Level",
                        "summary": "Determines how the range is divided. Coarse = 0, Medium = 1, Fine = 2."
                    },
                    "origin": {
                        "label": "Origin",
                        "summary": "The first number in the series."
                    }
                },
                "summary": "The Indices DAT creates a series of numbers in a table, ranging between the start and end values."
            },
            "convertDAT": {
                "label": "Convert",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "spacers": {
                        "label": "Concatenate with",
                        "summary": "Insert this string between each cell when converting from a table to text."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "removeblank": {
                        "label": "Remove Blank Lines",
                        "summary": "When enabled, do not convert blank lines into empty rows."
                    },
                    "delimiters": {
                        "label": "Split Cells at",
                        "summary": "A list of individual characters to use to split the string into cells. The delimiters are used independently. That is, if $% is used in this parameter, the cells will be split at $ OR %, not only at $%. A Substitute DAT can be used to collapse a more complex delimiter into a single character to be use for the conversion."
                    },
                    "how": {
                        "label": "How",
                        "summary": "Convert text format."
                    }
                },
                "summary": "The Convert DAT changes the text format from simple text to table form and vice-versa."
            },
            "opfindDAT": {
                "label": "OP Find",
                "parameters": {
                    "limitmaxdepth": {
                        "label": "Limit Max Depth",
                        "summary": "Turns on the Maximum Depth parameter to limit searching through sub-components. Turning this toggle off will search through all sub-networks."
                    },
                    "pathcol": {
                        "label": "Path",
                        "summary": ""
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "mindepth": {
                        "label": "Minimum Depth",
                        "summary": "Set a minmum depth for the sub-components the OP Find DAT should recursively search through."
                    },
                    "namecol": {
                        "label": "Name",
                        "summary": ""
                    },
                    "casesensitive": {
                        "label": "Case Sensitive",
                        "summary": "Use case sensitivity in all pattern matching below."
                    },
                    "mats": {
                        "label": "MATs",
                        "summary": ""
                    },
                    "sops": {
                        "label": "SOPs",
                        "summary": ""
                    },
                    "depthcol": {
                        "label": "Depth",
                        "summary": ""
                    },
                    "parvaluefilter": {
                        "label": "Par Value",
                        "summary": ""
                    },
                    "tops": {
                        "label": "TOPs",
                        "summary": ""
                    },
                    "parnondefaultonly": {
                        "label": "Par Non-Default Only",
                        "summary": "Only match with parameters that are non-default values."
                    },
                    "maxdepth": {
                        "label": "Maximum Depth",
                        "summary": "Set the maximum depth for the sub-components the OP Find DAT should recursively search through."
                    },
                    "convertbool": {
                        "label": "Convert Bool to Int",
                        "summary": "For boolean logic values, the value will be '1' or '0'. When this parameter is Off, they will be 'True\\\" or 'False'."
                    },
                    "pathfilter": {
                        "label": "Path",
                        "summary": ""
                    },
                    "activecook": {
                        "label": "Active Cook",
                        "summary": "Determines when to cook the DAT."
                    },
                    "other": {
                        "label": "Other COMPs",
                        "summary": ""
                    },
                    "idcol": {
                        "label": "ID",
                        "summary": "An integer that uniquely defines the node in this process. It's the same number for the duration of the process, but may be different when you run the process again."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Path to a DAT containing callbacks for each event received. See opfindDAT_Class for usage."
                    },
                    "textfilter": {
                        "label": "DAT Text",
                        "summary": ""
                    },
                    "parnamefilter": {
                        "label": "Par Name",
                        "summary": ""
                    },
                    "tagsfilter": {
                        "label": "Tags",
                        "summary": ""
                    },
                    "parentpath": {
                        "label": "Parent Path",
                        "summary": ""
                    },
                    "component": {
                        "label": "Component",
                        "summary": "The path to the component where the search starts from."
                    },
                    "combinefilters": {
                        "label": "Combine Filters",
                        "summary": "Combine 'All' or 'Any' of the filters below to get a match."
                    },
                    "excludefilter": {
                        "label": "Exclude Path (relative)",
                        "summary": ""
                    },
                    "objects": {
                        "label": "Object COMPs",
                        "summary": ""
                    },
                    "cookpulse": {
                        "label": "Cook Pulse",
                        "summary": ""
                    },
                    "parentfilter": {
                        "label": "Parent Path (relative)",
                        "summary": ""
                    },
                    "parexpressionfilter": {
                        "label": "Par Expression",
                        "summary": ""
                    },
                    "typefilter": {
                        "label": "Type",
                        "summary": "Use names like waveCHOP and panelexecuteDAT. Look at the column Type to see the syntax."
                    },
                    "dats": {
                        "label": "DATs",
                        "summary": ""
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "namefilter": {
                        "label": "Name",
                        "summary": "Use the operator's names like 'wave1', 'wave2', etc."
                    },
                    "typecol": {
                        "label": "Type",
                        "summary": ""
                    },
                    "tagscol": {
                        "label": "Tags",
                        "summary": ""
                    },
                    "cooktimescol": {
                        "label": "Cook Times",
                        "summary": ""
                    },
                    "commentfilter": {
                        "label": "Comment",
                        "summary": ""
                    },
                    "chops": {
                        "label": "CHOPs",
                        "summary": ""
                    },
                    "panels": {
                        "label": "Panel COMPs",
                        "summary": ""
                    },
                    "relpathcol": {
                        "label": "Relative Path",
                        "summary": ""
                    },
                    "convertnone": {
                        "label": "Convert None to Empty",
                        "summary": "For 'None' values, the value will be converted to Empty."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The OP Find DAT traverses the component hierarchy starting at one component and looking at all nodes within that component, and outputs a table with one row per node that matches criteria the user chooses."
            },
            "nullDAT": {
                "label": "Null",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The Null DAT has no effect on the data. It is an instance of the DAT connected to its input."
            },
            "touchoutDAT": {
                "label": "Touch Out",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "Select which protocol to use, refer to the Network Protocols article for more information."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "resend": {
                        "label": "Resend Data",
                        "summary": ""
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "The port the packets will be sent over."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the DAT sends data to the network port. While Off, no updating occurs."
                    },
                    "shared": {
                        "label": "Shared Connection",
                        "summary": "Use the same connection as other networking DATs using the same network protocol."
                    },
                    "redendantsends": {
                        "label": "Redundant Sends",
                        "summary": ""
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "address": {
                        "label": "Network Address",
                        "summary": "For multi-cast protocol, this is the multi-cast address to listen for. For UDT protocol this is the IP address of the server."
                    }
                },
                "summary": "The Touch Out DAT sends full DAT tables across the network to the Touch In DAT in another TouchDesigner process, as opposed to messages with the other network based DATs."
            },
            "ndiDAT": {
                "label": "NDI",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "persistence": {
                        "label": "Persistence (ms)",
                        "summary": "Persistence affects how long an entry in the DAT stays present even after the source has disappeared. This allows for a source to disappear for a bit and then reappear without being removed from the list."
                    },
                    "extraips": {
                        "label": "Extra Search IPs",
                        "summary": "By default NDI searches using mDNS, which is usually limited to locate networks. To find sources available on machines not reachable by mDNS, this parameter can be filled with a space-separated list of one or more IP address."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Script callbacks for events relating to NDI sources and streams."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": ""
            },
            "monitorsDAT": {
                "label": "Monitors",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "monitors": {
                        "label": "Monitors",
                        "summary": "Specify which monitors to report information about."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "units": {
                        "label": "Units",
                        "summary": "Specify if the numbers are reported in Native Pixel units or DPI Scaled units."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Runs this script once for each change to the table (ie. monitor state change). See monitorsDAT_Class for usage."
                    },
                    "bounds": {
                        "label": "Bounds",
                        "summary": "While on, an additional \\\"bounds\\\" row will be added to the table. The dimensions correspond to a bounding box around all the detected monitors. In this row, \\\"primary\\\" refers to the index in the table of the primary monitor."
                    }
                },
                "summary": "The Monitors DAT is a table of data about all currently detected monitors with information on the resolution, screen positioning, monitor name and description, GPU, and a flag indicating whether it is a primary monitor or not."
            },
            "fifoDAT": {
                "label": "FIFO",
                "parameters": {
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The operator whose state change will trigger the DAT to execute its script when Execute is set to Specified Operator. This operator is also the path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "firstrow": {
                        "label": "Keep First Row",
                        "summary": "Keeps first row in table."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a python script op('opname').par.clear.pulse()"
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT will execute once for each row added to the FIFO DAT."
                    }
                },
                "summary": "The FIFO DAT maintains a user-set maximum number of rows in a table."
            },
            "errorDAT": {
                "label": "Error",
                "parameters": {
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Inhibits and allows message to be added to log."
                    },
                    "type": {
                        "label": "Type",
                        "summary": "Filter pattern for the output."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "severity": {
                        "label": "Severity",
                        "summary": "Filter pattern for the output."
                    },
                    "source": {
                        "label": "Source",
                        "summary": "Filter pattern for the output."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The DAT's script will execute once for each message coming in. See errorDAT_Class for usage."
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "logcurrent": {
                        "label": "Log Current Errors",
                        "summary": "Traverse through all nodes and captures all current errors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "message": {
                        "label": "Message",
                        "summary": "Filter pattern for the output."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading."
                    }
                },
                "summary": "The Error DAT lists the most recent TouchDesigner errors in its FIFO (first in/first out) table."
            },
            "udpinDAT": {
                "label": "UDP In",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "Select which protocol to use, refer to the Network Protocols article for more information."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The operator whose state change will trigger the DAT to execute its script when Execute from is set to Specified Operator. This operator is also the path that the script will be executed from if the Execute from parameter is set to Specified Operator."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "The network port to listen on."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "This check box enables the connection."
                    },
                    "format": {
                        "label": "Row/Callback Format",
                        "summary": "Determines how the incoming data is parsed."
                    },
                    "shared": {
                        "label": "Shared Connection",
                        "summary": "Use the same connection as other networking DATs using the same network protocol."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT will execute once for each message coming in. See udpinDAT_Class for usage."
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a python script op(\\\"opname\\\").par.clear.pulse()"
                    },
                    "bytes": {
                        "label": "Bytes Column",
                        "summary": "Outputs the raw bytes of the message in a separate column."
                    },
                    "address": {
                        "label": "Network Address",
                        "summary": "The multi-cast IP address to listen for."
                    }
                },
                "summary": "The UDP In DAT is used for receiving information over a UDP connection between two remotely located computers."
            },
            "udtoutDAT": {
                "label": "UDT Out",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "Selects the network protocol to use. Refer to the Network Protocols article for more information."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The operator whose state change will trigger the DAT to execute its script when Execute from is set to Specified Operator. This operator is also the path that the script will be executed from if the Execute from parameter is set to Specified Operator."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "The network port to send to."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "This check box enables the connection."
                    },
                    "format": {
                        "label": "Row/Callback Format",
                        "summary": "Determines how the incoming data is parsed."
                    },
                    "shared": {
                        "label": "Shared Connection",
                        "summary": "Use the same connection as other networking DATs using the same network protocol."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT will execute once for each message coming in."
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a python script op(\\\"opname\\\").par.clear.pulse()"
                    },
                    "bytes": {
                        "label": "Bytes Column",
                        "summary": "Outputs the raw bytes of the message in a separate column."
                    }
                },
                "summary": "The UDT Out DAT is used for sending information over a UDT connection between remotely located computers."
            },
            "tcpipDAT": {
                "label": "TCP/IP",
                "parameters": {
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The component who's state change will trigger the DAT to execute its script when Execute from is set to On Panel Change. This component is also the path that the script will be executed from if the Execute from parameter is set to Specified Component."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "The network port to listen on or connect to, depending on of the node is the server or client respectively."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "This check box enables the connection."
                    },
                    "format": {
                        "label": "Row/Callback Format",
                        "summary": "Determines how the incoming data is parsed into the table."
                    },
                    "shared": {
                        "label": "Shared Connection",
                        "summary": "Use the same connection as other networking DATs using the same network protocol."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT will execute once for each message received."
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "mode": {
                        "label": "Connection Mode",
                        "summary": "Specify if this operator is communicating as a client or a server."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a script command, here is an example: opparm -c /serial1 clear"
                    },
                    "bytes": {
                        "label": "Bytes Column",
                        "summary": "Outputs the raw bytes of the message in a separate column."
                    },
                    "address": {
                        "label": "Network Address",
                        "summary": "If this node is communicating as a client, this should be the IP address of the server."
                    }
                },
                "summary": "The TCP/IP DAT is used for sending and receiving information over a TCP/IP connection between two remotely located computers."
            },
            "datexecuteDAT": {
                "label": "DAT Execute",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "dat": {
                        "label": "DAT",
                        "summary": "The DAT which is monitored and will trigger the script to execute when its contents change."
                    },
                    "sizechange": {
                        "label": "Size Change",
                        "summary": "The onSizeChange() method is called for every table size change since the last cook."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the DAT will respond to the CHOP that is referenced."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "(Tscript only) Determines the location the script is run from."
                    },
                    "execute": {
                        "label": "Execute",
                        "summary": "Determines if the methods are executed at the start of the frame or end of the frame."
                    },
                    "tablechange": {
                        "label": "Table Change",
                        "summary": "The onTableChange() method is called if the table changes in any way since the last cook."
                    },
                    "colchange": {
                        "label": "Column Change",
                        "summary": "The onColChange() method is called once for every column that changed (since its last cook)."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "edit": {
                        "label": "Edit..",
                        "summary": "Clicking this opens a text editor to edit text in the DAT."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "cellchange": {
                        "label": "Cell Change",
                        "summary": "The onCellChange() method is called for every cell that changed since the last cook."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "rowchange": {
                        "label": "Row Change",
                        "summary": "The onRowChange() method is called once for every row that changed (since its last cook)."
                    }
                },
                "summary": "The DAT Execute DAT monitors another DAT's contents and runs a script when those contents change. The other DAT is usually a table."
            },
            "sortDAT": {
                "label": "Sort",
                "parameters": {
                    "ignorecase": {
                        "label": "Ignore Case",
                        "summary": "Ignores case sensitivity when Sort Order is set to Alphabetical or Alphabetical with Numbers."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "order": {
                        "label": "Order",
                        "summary": "Determines the type of sorting."
                    },
                    "sortmethod": {
                        "label": "Sort",
                        "summary": "Determines how the table will be sorted."
                    },
                    "seed": {
                        "label": "Seed",
                        "summary": "The random seed when Sort Order is set to Random."
                    },
                    "reverse": {
                        "label": "Reverse Output",
                        "summary": "Reverses the sort order."
                    },
                    "unique": {
                        "label": "Unique Output",
                        "summary": "Remove duplicate rows/column entries in the sorted row/column."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "name": {
                        "label": "Name",
                        "summary": "When using Sort Specify Row/Column Name, specify the name in this parameter. If the sort name does not find a match, the output will be unsorted."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "index": {
                        "label": "Index",
                        "summary": "When using Sort Specify Row/Column Index, specify the index in this parameter. If the sort index is -1 or out of bounds, the output will be unsorted."
                    },
                    "preservefirst": {
                        "label": "Preserve First",
                        "summary": "Does not resort the first row or column (depending if Sort is set to Rows or Columns)."
                    }
                },
                "summary": "The Sort DAT will sort table DAT data by row or column."
            },
            "webDAT": {
                "label": "Web",
                "parameters": {
                    "disconnect": {
                        "label": "Disconnect",
                        "summary": "Closes the session."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "asyncfetch": {
                        "label": "Asynchronous Fetch",
                        "summary": "Turn on this option to allow the download to occur in the background. You can use a DAT Execute DAT to do something when the data finally arrives."
                    },
                    "url": {
                        "label": "URL",
                        "summary": "The url address of the web page to be retrieved."
                    },
                    "fetch": {
                        "label": "Fetch",
                        "summary": "The data will be fetched when this button is pressed. Use this method to retrieve simple single pages from the internet. By default the Web DAT will stall the process until the whole page has been transferred, or an error occurs. You can do asynchronous downloads using the Asynchronous Fetch option."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "timeout": {
                        "label": "Timeout",
                        "summary": "If this value is 0 the fetch request will never timeout. Any other value is how many milliseconds before the fetch times out."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "method": {
                        "label": "Submit Method",
                        "summary": "Currently only POST is implemented, though this will be expanded with other techniques such as GET."
                    },
                    "includeheader": {
                        "label": "Include Header in Output",
                        "summary": "Includes the HTTP header in the output."
                    },
                    "verifypeer": {
                        "label": "Verify Peer Certificate",
                        "summary": ""
                    },
                    "submitfetch": {
                        "label": "Submit and Fetch",
                        "summary": "Post all the name/value pairs from the input DAT to the server, then fetch the page specified in the URL parameter.  Use this method to post data to a web server before retrieving the page. The data to be sent is in the form of name and value pairs. It can be specified with a table formatted DAT connected to the first input, where the first column represents data names, and the second column represents data values. The Web DAT will pause until the whole page has been transferred, or an error occurs."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The Web DAT fetches pages of data from a web connection."
            },
            "panelexecuteDAT": {
                "label": "Panel Execute",
                "parameters": {
                    "whileoff": {
                        "label": "While Off",
                        "summary": "The whileOff() method executes when the panel value specified is off. It is called once each frame."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "panelvalue": {
                        "label": "Panel Value",
                        "summary": "The Panel Value(s) that is monitored to trigger the execution of the script.  Scripts will execute based on a combination of the five trigger events listed below. The script is executed once per trigger (except for While On/While Off cases). Each event will only cause one trigger to go off (i.e. if both Off to On and On Value Change are checked, one event will be fired with Off to On as the trigger). Logic for the 'on' state is greater than zero."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the DAT will respond to the Panel that is referenced."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "(Tscript only) Determines the location the script is run from."
                    },
                    "ontooff": {
                        "label": "On to Off",
                        "summary": "The onOnToOff() method executes when the panel value specified switches from on to off, called at the first \\\"off\\\" frame."
                    },
                    "valuechange": {
                        "label": "Value Change",
                        "summary": "The onValueChange() method executes when the panel value specified changes value in any way. It is called once each frame."
                    },
                    "whileon": {
                        "label": "While On",
                        "summary": "The whileOn() method executes when the panel value specified is on. It is called once each frame."
                    },
                    "panel": {
                        "label": "Panel",
                        "summary": ""
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "edit": {
                        "label": "Edit..",
                        "summary": "Clicking this opens a text editor to edit text in the DAT."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "offtoon": {
                        "label": "Off to On",
                        "summary": "The onOffToOn() method executes when the panel value specified switches from off to on, called at the first \\\"on\\\" frame."
                    }
                },
                "summary": "The Panel Execute DAT will run its script when the Panel Values of a specified panel component changes."
            },
            "fileoutDAT": {
                "label": "File Out",
                "parameters": {
                    "n": {
                        "label": "N",
                        "summary": "Using me.par.n (or $N in Tscript) in the filename (in the File parameter) in conjuction with the N parameter here gives a method of incrementing file names. The N parameter must manually be incremented each time. Exporting a Count CHOP which increments each time you want to save out a new file is an easy way to do this."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "write": {
                        "label": "Write File",
                        "summary": "Press this button to write the file once."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "file": {
                        "label": "File",
                        "summary": "The filesystem path and name of the file to be written."
                    },
                    "append": {
                        "label": "Append (txt Only)",
                        "summary": "Appends the text into the file instead of overwriting the file contents completely."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    }
                },
                "summary": "The File Out DAT allows you to write out DAT contents to a .dat file or a .txt file."
            },
            "mergeDAT": {
                "label": "Merge",
                "parameters": {
                    "byname": {
                        "label": "By Name",
                        "summary": "Specifies if you are appending columns and rows by name."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "dat": {
                        "label": "DAT",
                        "summary": "Specifies the path to DATs to be merged. Can be used in conjunction with the operator's wired inputs."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "unmatched": {
                        "label": "Append Unmatched",
                        "summary": "If the subsequent tables have rows or columns that are not found in the first table, these will be added to the output."
                    },
                    "spacer": {
                        "label": "Concatenate with",
                        "summary": "Allows you to separate the cell data with a string when concatenating. The default is a space."
                    },
                    "how": {
                        "label": "How",
                        "summary": "Sets how tables are merged together."
                    }
                },
                "summary": "The Merged DAT is a multi-input DAT which merges the text or tables from the input DATs together."
            },
            "touchinDAT": {
                "label": "Touch In",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "Select which protocol to use, refer to the Network Protocols article for more information."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "The port receiving the packets."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the DAT receives information sent to the network port. While Off, no updating occurs. Data sent to the port is lost."
                    },
                    "shared": {
                        "label": "Shared Connection",
                        "summary": "Use the same connection as other networking DATs using the same network protocol."
                    },
                    "address": {
                        "label": "Network Address",
                        "summary": "For multi-cast protocol, this is the multi-cast address to listen for. For UDT protocol this is the IP address of the server."
                    }
                },
                "summary": "The Touch In DAT receives full tables across the network from the Touch Out DAT, as opposed to messages with the other network based DATs."
            },
            "scriptDAT": {
                "label": "Script",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "setuppars": {
                        "label": "Setup Parameters",
                        "summary": "Clicking the button runs the setupParameters() callback function."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Specifies the DAT which holds the callbacks. See scriptDAT_Class for usage."
                    }
                },
                "summary": "The Script DAT runs a script each time the DAT cooks and can build/modify the output table based in the optional input tables."
            },
            "switchDAT": {
                "label": "Switch",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "index": {
                        "label": "Index",
                        "summary": "Selects which input to pass though to the output. The first input is 0."
                    }
                },
                "summary": "The Switch DAT is a multi-input operator which lets you choose which input is output by using the Input parameter."
            },
            "clipDAT": {
                "label": "Clip",
                "parameters": {
                    "clip": {
                        "label": "Clip",
                        "summary": "Points to the Clip CHOP which will trigger the script when run in a Clip Blender CHOP."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "file": {
                        "label": "File",
                        "summary": "The path and name of the file to load. Accepts .txt and .dat files. The file can be read in from disk or from the web. Use http:// when specifying a URL."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "reload": {
                        "label": "Reload File",
                        "summary": "When set to 1, reloads the file into the DAT."
                    },
                    "framefirst": {
                        "label": "Execute on Frame (First)",
                        "summary": "Executes the script once, the first time the specified index of the clip is played in a clipblender. Even if the clip is looping in a clipblender, the script will only be executed once."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "edit": {
                        "label": "Edit..",
                        "summary": "Clicking this opens a text editor to add/edit/delete text from the DAT."
                    },
                    "exit": {
                        "label": "Execute on Exit",
                        "summary": "Executes the script when a clipblender exits the specified clip."
                    },
                    "printstate": {
                        "label": "Print State",
                        "summary": ""
                    },
                    "component": {
                        "label": "Component",
                        "summary": ""
                    },
                    "frameloop": {
                        "label": "Execute on Frame (Loop)",
                        "summary": "Executes the script everytime the specified index of the clip is played in a clipblender. When a clip is looping, the script will run each time through the loop."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The Clip DAT contains information about motion clips that are manipulated by a Clip CHOP and Clip Blender CHOP."
            },
            "choptoDAT": {
                "label": "CHOP to",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "latestsample": {
                        "label": "Latest Sample when Time Slice",
                        "summary": "When on and the CHOP is time sliced, only the latest sample of the CHOP will be used to create the DAT output. This prevents the table size from fluctuating as frames are dropped."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "chop": {
                        "label": "CHOP",
                        "summary": "The CHOP to be used to retrieve values. A row is created for each channel's value."
                    },
                    "output": {
                        "label": "Output",
                        "summary": "Create a row per channel or column per channel."
                    },
                    "names": {
                        "label": "Include Names",
                        "summary": "When checked on, an extra column will be created in every row for the channel's name."
                    }
                },
                "summary": "The CHOP to DAT allows you to get CHOP channel values into a DAT in table format."
            },
            "infoDAT": {
                "label": "Info",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "passive": {
                        "label": "Passive",
                        "summary": "If this option is off, the Info DAT will update automatically when the information changes. If on, the data may or may not be out-of-date, and the Info DAT may require a forced cook to update its contents. This parameter can by useful to prevent unnecessary cooking."
                    },
                    "op": {
                        "label": "Operator",
                        "summary": "The path to the operator that the Info DAT is getting information from. You can drag & drop any node onto this path, or type the path directly into the field."
                    }
                },
                "summary": "The Info DAT gives you string information about a node."
            },
            "opexecuteDAT": {
                "label": "OP Execute",
                "parameters": {
                    "precook": {
                        "label": "Pre Cook",
                        "summary": "The onPreCook() method is triggered before the operator is cooked."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wirechange": {
                        "label": "Wire Change",
                        "summary": "The onWireChange() method is triggered when the operator's inputs are rewired (connected, disconnected, swapped)."
                    },
                    "flagchange": {
                        "label": "Flag Change",
                        "summary": "The onFlagChange() method is triggered when one of the operator's Flags changes state. This includes all the flags in the Common Flags list of an OP_Class, plus all the python accessible flags listed in COMP_Class, SOP_Class, CHOP_Class."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the DAT will respond to the OP that is referenced."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "(Tscript only) Determines the location the script is run from."
                    },
                    "extensionchange": {
                        "label": "Extension Change",
                        "summary": "The onExtensionChange() method is triggered when an extension of the operator is changed."
                    },
                    "opdelete": {
                        "label": "OP Delete",
                        "summary": "The onOPdelete() method is triggered when the operator is deleted."
                    },
                    "op": {
                        "label": "Monitor OP",
                        "summary": "Specify which operator to monitor to trigger the scripts."
                    },
                    "postcook": {
                        "label": "Post Cook",
                        "summary": "The onPostCook() method is triggered after the operator is cooked."
                    },
                    "numchildrenchange": {
                        "label": "Number Children Change",
                        "summary": "The onNumChildrenChange() method is triggered if the number of children an operator has changes. Only works with Component type operators."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "uichange": {
                        "label": "UI Change",
                        "summary": "The onUIChange() method is triggered when operator is resized or moved in the network editor."
                    },
                    "edit": {
                        "label": "Edit..",
                        "summary": "Clicking this opens a text editor to edit text in the DAT."
                    },
                    "childrename": {
                        "label": "Child Rename",
                        "summary": "The onChildRename() method is triggered if a child of the operator is renamed."
                    },
                    "pathchange": {
                        "label": "Path Change",
                        "summary": "The onPathChange() method is triggered when the path of the operator is changed."
                    },
                    "currentchildchange": {
                        "label": "Current Child Change",
                        "summary": "The onCurrentChildChange() method is triggered if a child of the operator is made current in a network. Only works with Component type operators."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "namechange": {
                        "label": "Name Change",
                        "summary": "The onNameChange() method is triggered when the name of the operator is changed."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The OP Execute DAT runs a script when the state of an operator changes."
            },
            "tableDAT": {
                "label": "Table",
                "parameters": {
                    "loadonstartpulse": {
                        "label": "Load File",
                        "summary": ""
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "dims": {
                        "label": "Exact Dimensions",
                        "summary": "When enabled, lets you define the exact number of rows and columns of the Table DAT via the /rows and /cols parameter. When you enable this, it will not destroy any existing rows or columns."
                    },
                    "file": {
                        "label": "File",
                        "summary": "The filesystem path and name of the file to load. Accepts .txt and .dat files."
                    },
                    "loadonstart": {
                        "label": "Load on Start",
                        "summary": "When set to 1, reloads the file from disk into the DAT when the projects starts. Pulse to reload instantly."
                    },
                    "removeblank": {
                        "label": "Remove Blank Lines",
                        "summary": "When enabled, do not convert blank lines into empty rows when loading files."
                    },
                    "rows": {
                        "label": "Rows",
                        "summary": "Defines the number of rows in the table."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "write": {
                        "label": "Write on Toe Save",
                        "summary": "When set to 1, writes the contents of the DAT out to the file on disk when the project is saved. Pulse to save instantly."
                    },
                    "edit": {
                        "label": "Edit..",
                        "summary": "Clicking this opens a text editor to add/edit/delete text from the DAT."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "writepulse": {
                        "label": "Write File",
                        "summary": ""
                    },
                    "cols": {
                        "label": "Columns",
                        "summary": "Defines the number of columns in the table."
                    }
                },
                "summary": "The Table DAT lets you hand-edit or create a table of rows and columns of cells, each cell containing a text string."
            },
            "cplusplusDAT": {
                "label": "CPlusPlus",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "reinitpulse": {
                        "label": "Re-Init Class",
                        "summary": ""
                    },
                    "reinit": {
                        "label": "Re-Init Class",
                        "summary": "When this parameter goes above 1, it will delete the instance of the class created by the plugin, and create a new one."
                    },
                    "unloadplugin": {
                        "label": "Unload Plugin",
                        "summary": "When this parameter goes above 1, it will delete the instance of the class created by the plugin and unload the plugin. If multiple DATs have loaded the same plugin they will all need to unload it to release the file."
                    },
                    "plugin": {
                        "label": "Plugin Path",
                        "summary": "The path to the plugin you want to load."
                    }
                },
                "summary": "The CPlusPlus DAT allows you to make custom DAT operators by writing your own plugin using C++."
            },
            "substituteDAT": {
                "label": "Substitute",
                "parameters": {
                    "rownameend": {
                        "label": "End Row  Name",
                        "summary": ""
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "colnameend": {
                        "label": "End Col Name",
                        "summary": ""
                    },
                    "colexpr": {
                        "label": "Col Select Condition",
                        "summary": ""
                    },
                    "extractcols": {
                        "label": "Select Cols",
                        "summary": ""
                    },
                    "rownamestart": {
                        "label": "Start Row Name",
                        "summary": ""
                    },
                    "expand": {
                        "label": "Expand the From String",
                        "summary": "Expand variables and back quotes in the From string."
                    },
                    "rowindexstart": {
                        "label": "Start Row Index",
                        "summary": ""
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "colindexstart": {
                        "label": "Start Col Index",
                        "summary": ""
                    },
                    "fromrow": {
                        "label": "From Row",
                        "summary": ""
                    },
                    "rownames": {
                        "label": "Row Select Values",
                        "summary": ""
                    },
                    "fromcol": {
                        "label": "From Column",
                        "summary": ""
                    },
                    "rowexpr": {
                        "label": "Row Select Condition",
                        "summary": ""
                    },
                    "colnamestart": {
                        "label": "Start Col Name",
                        "summary": ""
                    },
                    "before": {
                        "label": "Before",
                        "summary": "Search term to replace. The following special characters may be used: * * - match any number of characters * ? - match a single character * [] - match any character defined within the brackets To match these special characters exactly, put a backslash (\\\\) before the special character."
                    },
                    "case": {
                        "label": "Case Sensitive",
                        "summary": "Respect case sensitivity in search term."
                    },
                    "rowindexend": {
                        "label": "End Row Index",
                        "summary": ""
                    },
                    "colindexend": {
                        "label": "End Col Index",
                        "summary": ""
                    },
                    "xfirstcol": {
                        "label": "Exclude First Col",
                        "summary": "Forces the first column to be ignored even if it is not specified by the Select Cols settings."
                    },
                    "first": {
                        "label": "First Match Only",
                        "summary": "Replaces only the first instance of the matching string."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "expandto": {
                        "label": "Expand the To String",
                        "summary": "Expand variables and back quotes in the To string."
                    },
                    "colnames": {
                        "label": "Col Select Values",
                        "summary": ""
                    },
                    "extractrows": {
                        "label": "Select Rows",
                        "summary": ""
                    },
                    "xfirstrow": {
                        "label": "Exclude First Row",
                        "summary": "Forces the first row to be ignored even if it is not specified by the Select Rows settings."
                    },
                    "match": {
                        "label": "Match",
                        "summary": "Specify where to match:"
                    },
                    "after": {
                        "label": "After",
                        "summary": "The replacement term. This replaces everything matched in the search term. Spaces are permitted."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The Substitute DAT changes the cells of the incoming DAT using pattern matching and substitution strings."
            },
            "insertDAT": {
                "label": "Insert",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "index": {
                        "label": "Index",
                        "summary": "Index to insert the row or column.  You can use local variables $NR and $NC to append at the end of the table."
                    },
                    "at": {
                        "label": "At",
                        "summary": "Specify where to insert."
                    },
                    "insert": {
                        "label": "Insert",
                        "summary": "Specify what to insert."
                    },
                    "contents": {
                        "label": "Contents",
                        "summary": "Entries for each cell separated by spaces. Put entries that have spaces in quotes, for example Name Species \\\"Home Planet\\\" will put Name in the first cell, Species in the second, and Home Planet in the third. Extra entries will be ignored."
                    }
                },
                "summary": "The Insert DAT allows you to insert a row or column into an exiting table."
            },
            "fileinDAT": {
                "label": "File In",
                "parameters": {
                    "refreshpulse": {
                        "label": "Refresh Pulse",
                        "summary": ""
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "file": {
                        "label": "File",
                        "summary": "The filesystem path and name of the file to load. Accepts .txt files for regular text and .dat files for text in table format."
                    },
                    "refresh": {
                        "label": "Refresh",
                        "summary": "When set to 1, reloads the file into the DAT."
                    },
                    "converttable": {
                        "label": "Convert Text to Table",
                        "summary": "Converts the contents of the DAT from regular text to table-formatted text (tab-delimited text, each <tab> is a new column in the table)."
                    }
                },
                "summary": "The File In DAT reads in .txt text files and .dat table files."
            },
            "lookupDAT": {
                "label": "Lookup",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "valueloction": {
                        "label": "Value Location",
                        "summary": "When 'Row Values' or 'Col Values' is selected in the Index Parameter, this parameter lets you select how the lookup row or column where the index value searches will be specified."
                    },
                    "valuename": {
                        "label": "Value Name",
                        "summary": "Specify the name of the lookup row or column."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "valueindex": {
                        "label": "Value Index",
                        "summary": "Specify the index of the lookup row or column."
                    },
                    "index": {
                        "label": "Index",
                        "summary": "Select how the index values are interpreted: as values/indices contained in a column or contained in a row."
                    },
                    "includeheader": {
                        "label": "Include Header",
                        "summary": "Include the first row or column."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The Lookup DAT  outputs values from a lookup Table. The first input is an index into the second input."
            },
            "websocketDAT": {
                "label": "WebSocket",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "port": {
                        "label": "Network Port",
                        "summary": "The port in which the DAT will accept messages."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the DAT receives information sent to the network port. While Off, no updating occurs. Data sent to the port is lost."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT will execute once for each message coming in."
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The operator whose state change will trigger the DAT to execute its script when Execute from is set to Specified Operator. This operator is also the path that the script will be executed from if the Execute from parameter is set to Specified Operator."
                    },
                    "socketioaddress": {
                        "label": "Socket.io Address",
                        "summary": "Can be used to define initial socket.io header requests."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "netaddress": {
                        "label": "Network Address",
                        "summary": "The network address of the server computer. This address is a standard WWW address, such as foo or foo.bar.com. You can put an IP address (e.g. 100.123.45.78). If you put localhost, it means the other end of the connection is on the same computer."
                    },
                    "socketio": {
                        "label": "Socket.io Format (0.9.16)",
                        "summary": "When on, a Socket.io handshake is negotiated after the WebSocket handshake. Messages will continue as normal, plus Socket.IO heartbeats, timeouts and disconnection support are additionally available, which are useful for realtime applications."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a python script op(\\\"opname\\\").par.clear.pulse()"
                    },
                    "bytes": {
                        "label": "Bytes Column",
                        "summary": "Outputs the raw bytes of the message in a separate column."
                    }
                },
                "summary": "The WebSocket DAT receives and parses WebSocket messages."
            },
            "soptoDAT": {
                "label": "SOP to",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "sop": {
                        "label": "SOP",
                        "summary": "Specify the SOP to pull data from."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "attrib": {
                        "label": "Attributes",
                        "summary": "Attributes to extract.    Point specific attributes can include P and Pw for position and weight.    Primitive specific attributes include vertices and close. Vertices list the point numbers in a primitive and close reports whether the primitive is a closed polygon. The index column is the point or primitive number and will always be output."
                    },
                    "uvforpts": {
                        "label": "Copy Vertex UV to Points",
                        "summary": "Copies the vertex UVs to point UVs."
                    },
                    "extract": {
                        "label": "Extract",
                        "summary": "Specify whether to pull point data or primitive data."
                    },
                    "group": {
                        "label": "Group",
                        "summary": "Point or primitive group to extract. If none specify all data will be extracted."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The SOP to DAT allows you to extract point, vertex and primitive (e.g. polygon) data and attributes from a SOP."
            },
            "artnetDAT": {
                "label": "Art-Net",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "poll": {
                        "label": "Poll Devices",
                        "summary": "Poll the network for devices."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "columns": {
                        "label": "Columns",
                        "summary": "Select which columns are included in the table.  Click the drop menu to the right to see all that are available."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Runs this script when polling the network for devices. See artnetDAT_Class for usage."
                    }
                },
                "summary": "The Art-Net DAT polls and lists all devices on the network."
            },
            "tuioinDAT": {
                "label": "TUIO In",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "Select which protocol to use, refer to the Network Protocols article for more information."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The operator whose state change will trigger the DAT to execute its script when Execute from is set to Specified Operator. This operator is also the path that the script will be executed from if the Execute from parameter is set to Specified Operator."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "The port which TUIO In will accept packets on."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the DAT receives information sent to the network port. While Off, no updating occurs. Data sent to the port is lost."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "shared": {
                        "label": "Shared Connection",
                        "summary": "Use the same connection as other networking DATs using the same network protocol."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT will get callbacks for TUIO events. See tuioinDAT_Class for usage."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "address": {
                        "label": "Network Address",
                        "summary": "For multi-cast protocol, this is the multi-cast address to listen for."
                    }
                },
                "summary": "The TUIO In DAT receives and parses TUIO messages (received over network) into columns in the table."
            },
            "transposeDAT": {
                "label": "Transpose",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The Transpose DAT converts rows into columns."
            },
            "outDAT": {
                "label": "Out",
                "parameters": {
                    "label": {
                        "label": "Label",
                        "summary": "Creates a pop-up label when the cursor rolls over this Component output."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The Out DAT is used to create a DAT output in a Component."
            },
            "examineDAT": {
                "label": "Examine",
                "parameters": {
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "outputheaders": {
                        "label": "Output Headers",
                        "summary": "Turn this on to display the column names when Format is set to Table."
                    },
                    "subkey": {
                        "label": "Subkey",
                        "summary": ""
                    },
                    "type": {
                        "label": "Type",
                        "summary": "Filter Type results."
                    },
                    "format": {
                        "label": "Format",
                        "summary": "Determines whether the output is raw text or in table format."
                    },
                    "outputkey": {
                        "label": "Output Key",
                        "summary": "Turn this on to output the Key column of the results."
                    },
                    "op": {
                        "label": "Operator",
                        "summary": "Path to the operator to examine."
                    },
                    "maxlevels": {
                        "label": "Max Levels",
                        "summary": ""
                    },
                    "source": {
                        "label": "Source",
                        "summary": "Specifies what part of the node to examine."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "key": {
                        "label": "Key",
                        "summary": "Filter Key results."
                    },
                    "expandclasses": {
                        "label": "Expand Classes",
                        "summary": ""
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "level": {
                        "label": "Level",
                        "summary": "Filter Level results."
                    },
                    "outputlevel": {
                        "label": "Output Level",
                        "summary": "Turn this on to output the Level column of the results."
                    },
                    "value": {
                        "label": "Value",
                        "summary": "Filter Value results."
                    },
                    "outputvalue": {
                        "label": "Output Value",
                        "summary": "Turn this on to output the Value column of the results."
                    },
                    "expression": {
                        "label": "Expression",
                        "summary": "When source is set to Expression, enter your expression in this parameter."
                    },
                    "outputtype": {
                        "label": "Output Type",
                        "summary": "Turn this on to output the Type column of the results."
                    }
                },
                "summary": "The Examine DAT lets you inspect an operator's python storage, locals, globals, expressions, and extensions."
            },
            "udpoutDAT": {
                "label": "UDP Out",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "Selects the network protocol to use. Refer to the Network Protocols article for more information."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "The network port to send to."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "This check box enables the connection."
                    },
                    "format": {
                        "label": "Row/Callback Format",
                        "summary": "Determines how the incoming data is parsed."
                    },
                    "shared": {
                        "label": "Shared Connection",
                        "summary": "Use the same connection as other networking DATs using the same network protocol."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT will execute once for each message coming in."
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The operator whose state change will trigger the DAT to execute its script when Execute from is set to Specified Operator. This operator is also the path that the script will be executed from if the Execute from parameter is set to Specified Operator."
                    },
                    "localport": {
                        "label": "Local Port",
                        "summary": ""
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "localportmode": {
                        "label": "Local Port Mode",
                        "summary": ""
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a python script op(\\\"opname\\\").par.clear.pulse()"
                    },
                    "bytes": {
                        "label": "Bytes Column",
                        "summary": "Outputs the raw bytes of the message in a separate column."
                    },
                    "address": {
                        "label": "Network Address",
                        "summary": "You can put an IP address (e.g. 100.123.45.78), or a machine name to send to. If you put \\\"localhost\\\", it means the other end of the pipe is on the same computer. If you are using multi-cast you should put the multi-cast address you want to send to here."
                    }
                },
                "summary": "The UDP Out DAT is used to send information over a UDP connection to/from a remotely-located computer."
            },
            "midieventDAT": {
                "label": "MIDI Event",
                "parameters": {
                    "filter": {
                        "label": "Filter Messages",
                        "summary": "Turning this on enables the message filtering parameters below."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "index": {
                        "label": "Index",
                        "summary": "Filter by the MIDI message index. Indices range from 1 to 128."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Logs MIDI events when turned on."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "skipsense": {
                        "label": "Skip Sense",
                        "summary": "Does not log sense messages when this is turned on."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "dir": {
                        "label": "Dir",
                        "summary": "Filter by the message direction, \\\"input\\\" or \\\"output\\\"."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Runs this script once for each row added to the table (ie. MIDI event recieved). See midieventDAT_Class for usage."
                    },
                    "value": {
                        "label": "Value",
                        "summary": "Filter by the MIDI message value. Values range from 0 to 127."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The operator whose state change will trigger the DAT to execute its script when Execute is set to Specified Operator. This operator is also the path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "channel": {
                        "label": "Channel",
                        "summary": "Filter by the MIDI message channel.Channels range from 1 to 16."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "skiptiming": {
                        "label": "Skip Timing",
                        "summary": "Does not report timing messages when this is turned on."
                    },
                    "message": {
                        "label": "Message",
                        "summary": "Filter by the MIDI message content. Example \\\"Control Change\\\""
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a python script op(\\\"opname\\\").par.clear.pulse()"
                    },
                    "bytes": {
                        "label": "Bytes Column",
                        "summary": "Outputs the raw bytes of the message in a separate column."
                    }
                },
                "summary": "The MIDI Event DAT logs all MIDI messages coming into TouchDesigner from all MIDI devices."
            },
            "executeDAT": {
                "label": "Execute",
                "parameters": {
                    "fromop": {
                        "label": "From Operator",
                        "summary": "This component is also the path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the DAT will respond to the events selected below."
                    },
                    "create": {
                        "label": "Create",
                        "summary": "The create() method is executed when the node is created. This can be triggered on start, by loading a component from disk, by copying & pasting, or any other way a node can be created."
                    },
                    "devicechange": {
                        "label": "Device Change",
                        "summary": "The onDeviceChange() method is executed each time devices are connected or disconnected from the computer. For example, plugging in MIDI devices, cameras, joysticks, etc.  NOTE: When using multiple Execute DATs with Start and Create functions, they are triggered in numbered-alphanumeric order of the DAT's names."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "(Tscript only) Determines the location the script is run from."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "edit": {
                        "label": "Edit..",
                        "summary": "Clicking this opens a text editor to edit text in the DAT.  TIP: To direct all \\\"standard output\\\" of python to a Text DAT, put this in the start() method: sys.stdout = op('text1')  To safely to this and restore standard output: prev = sys.stdout sys.stdout = op('text1') sys.stdout = prev"
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "start": {
                        "label": "Start",
                        "summary": "The onStart() method is executed when TouchDesigner starts."
                    },
                    "frameend": {
                        "label": "Frame End",
                        "summary": "The onFrameEnd() method is executed at the end of every frame."
                    },
                    "framestart": {
                        "label": "Frame Start",
                        "summary": "The onFrameStart() method is executed at the start of every frame."
                    },
                    "playstatechange": {
                        "label": "Play State Change",
                        "summary": "The onPlayStateChange() method is executed each time the play state changes, ie. pause or play is used on the timeline."
                    },
                    "exit": {
                        "label": "Exit",
                        "summary": "The onExit() method is executed when the TouchDesigner process quits."
                    }
                },
                "summary": "The Execute DAT lets you edit scripts and run them based on conditions."
            },
            "textDAT": {
                "label": "Text",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "loadonstartpulse": {
                        "label": "Load File",
                        "summary": ""
                    },
                    "write": {
                        "label": "Write on Toe Save",
                        "summary": "When set to 1, writes the contents of the DAT out to the file on disk when the project is saved. Pulse to save instantly."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "edit": {
                        "label": "Edit..",
                        "summary": "Clicking this opens a text editor to add/edit/delete text from the DAT."
                    },
                    "file": {
                        "label": "File",
                        "summary": "The filesystem path and name of the file to load. Accepts .txt and .dat files."
                    },
                    "writepulse": {
                        "label": "Write File",
                        "summary": ""
                    },
                    "loadonstart": {
                        "label": "Load on Start",
                        "summary": "When set to 1, reloads the file from disk into the DAT when the projects starts. Pulse to reload instantly."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The Text DAT lets you edit free-form, multi-line ASCII text."
            },
            "inDAT": {
                "label": "In",
                "parameters": {
                    "label": {
                        "label": "Label",
                        "summary": "Creates a pop-up label when the cursor rolls over this Component input."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The In DAT is used to create a DAT input in a Component."
            },
            "keyboardinDAT": {
                "label": "Keyboard In",
                "parameters": {
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The operator whose state change will trigger the DAT to execute its script when Execute is set to Specified Operator. This operator is also the path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "keys": {
                        "label": "Keys",
                        "summary": "List of keys to allow through the filter. Just put the characters in the list, space-separated. Eg. '1 2 g h' for the 1, 2, g and h keys. Only these keys will be added to the log and generate an event. If blank, no filtering will be done. List of accepted keys: Keyboard UI"
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "perform": {
                        "label": "Perform Window Only",
                        "summary": "When on, key events are only detected while in perform mode."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Inhibits and allows message to be added to log."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "shortcuts": {
                        "label": "Shortcuts",
                        "summary": "List of shortcuts to watch for. See \\\"Shortcuts\\\" in the notes for defining shortcuts."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": ""
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "panels": {
                        "label": "Panels",
                        "summary": "Optional list of references to panels to detect events from. Events will only be fired when any of the listed panels has focus."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading.  To clear with a python script op(\\\"opname\\\").par.clear.pulse()"
                    },
                    "lrmodifiers": {
                        "label": "Left/Right Modifiers",
                        "summary": "When on, the states of the left and right modifier keys (see Notes) will be added to the table. Switching the state of this parameter will reset the table's contents."
                    }
                },
                "summary": "The Keyboard In DAT lists the most recent key events in its FIFO (first in/first out) table."
            },
            "reorderDAT": {
                "label": "Reorder",
                "parameters": {
                    "reorder": {
                        "label": "Reorder",
                        "summary": "This parameter allows you to reorder either rows or columns."
                    },
                    "delete": {
                        "label": "Delete Unspecified",
                        "summary": "Only available when Method is 'In Specified Order by Name' or 'In Specified Order by Index'. It will delete any row/column not listed in the Order parameter."
                    },
                    "before": {
                        "label": "Before",
                        "summary": "The rows or columns to copy or swap from."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "order": {
                        "label": "Order",
                        "summary": "The order of input rows and columns to copy."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "method": {
                        "label": "Method",
                        "summary": "Specify how to reorder the table."
                    },
                    "after": {
                        "label": "After",
                        "summary": "The rows or columns to copy or swap to."
                    }
                },
                "summary": "The Reorder DAT allows you to reorder the rows and columns of the input table."
            },
            "selectDAT": {
                "label": "Select",
                "parameters": {
                    "rownameend": {
                        "label": "End Row  Name",
                        "summary": "Specify the row name to end the selection range."
                    },
                    "dat": {
                        "label": "DAT",
                        "summary": "The path of the DAT being referenced."
                    },
                    "colnameend": {
                        "label": "End Col Name",
                        "summary": "Specify the column name to end the selection range."
                    },
                    "colexpr": {
                        "label": "Col Select Condition",
                        "summary": "Specify an expression that will be evaluated. If the expression evaluates to true, the column will be selected. See Row Select Condition for more details."
                    },
                    "extractcols": {
                        "label": "Select Cols",
                        "summary": "This parameter allows you to pick different ways of specifying the columns selected."
                    },
                    "output": {
                        "label": "Output",
                        "summary": "Determines what format will be used for output from the DAT."
                    },
                    "colnames": {
                        "label": "Col Select Values",
                        "summary": "Specify actual column names that you want to select. You can use pattern matching, for example colvalue[1-4] will select all the columns named colvalue1 thru colvalue4."
                    },
                    "rowindexstart": {
                        "label": "Start Row Index",
                        "summary": "Specify the row index to start the selection range from."
                    },
                    "rowexpr": {
                        "label": "Row Select Condition",
                        "summary": "Specify an expression that will be evaluated.  If the expression evaluates to true, the row will be selected.    Expand the parameter and you will see that it is in expression mode.    File:SelectDAT_rowselectexpr.png  By default, the Python expression is re.match('.*',me.inputCell.val) != None.  '.*' means match any character multiple times, so this expression matches all values.  If you want to match the parent's operator name followed by any numeric number you can use me.parent().name+'[0-9]*', where '[0-9]*' matches any numerical string.  '.*'+parent().name+'.*' will match any cell that contains the operator's parent name.  You can check  Regular Expression Operations for additional information on how to use the Python Regular Expression module.  In Tscript, you can access the cell value with the local variable $V, and the row and column with $R and $C"
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "colindexstart": {
                        "label": "Start Col Index",
                        "summary": "Specify the column index to start the selection range from."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "fromrow": {
                        "label": "From Row",
                        "summary": "When extracting columns by Specified Names, this parameter selects which row to use when matching cell values to Selected Col Values to determine which columns are selected."
                    },
                    "rownames": {
                        "label": "Row Select Values",
                        "summary": "Specify actual row names that you want to select. You can use pattern matching, for example row[1-4] will select all the rows names row1 thru row4."
                    },
                    "fromcol": {
                        "label": "From Column",
                        "summary": "When selecting rows by values, this parameter selects which column to use when matching cell values to Selected Row Values to determine which rows are selected."
                    },
                    "colnamestart": {
                        "label": "Start Col Name",
                        "summary": "Specify the column name to start the selection range from."
                    },
                    "firstrow": {
                        "label": "Include First Row",
                        "summary": "Forces the first row to be selected even if it is not specified by the Select Rows settings."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "firstcol": {
                        "label": "Include First Col",
                        "summary": "Forces the first column to be selected even if it is not specified by the Select Cols settings."
                    },
                    "rowindexend": {
                        "label": "End Row Index",
                        "summary": "Specify the row index to end the selection range."
                    },
                    "colindexend": {
                        "label": "End Col Index",
                        "summary": "Specify the column index to end the selection range."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "rownamestart": {
                        "label": "Start Row Name",
                        "summary": "Specify the row name to start the selection range from."
                    },
                    "extractrows": {
                        "label": "Select Rows",
                        "summary": "This parameter allows you to pick different ways of specifying the rows selected."
                    }
                },
                "summary": "The Select DAT allows you to fetch a DAT from any other location in the project, and to select any subset of rows and columns if it is a table."
            },
            "midiinDAT": {
                "label": "MIDI In",
                "parameters": {
                    "filter": {
                        "label": "Filter Messages",
                        "summary": "Turning this on enables the message filtering parameters below."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "id": {
                        "label": "Device ID",
                        "summary": "Path to the MIDI device Table DAT"
                    },
                    "index": {
                        "label": "Index",
                        "summary": "Filter by the MIDI message index. Indices range from 1 to 128."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Logs MIDI events when turned on."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "skipsense": {
                        "label": "Skip Sense",
                        "summary": "Does not log sense messages when this is turned on."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Runs this script once for each row added to the table (ie. each MIDI event received). See midiinDAT_Class for usage."
                    },
                    "value": {
                        "label": "Value",
                        "summary": "Filter by the MIDI message value. Values range from 0 to 127."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The operator whose state change will trigger the DAT to execute its script when Execute from is set to Specified Operator. This operator is also the path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "channel": {
                        "label": "Channel",
                        "summary": "Filter by the MIDI message channel.Channels range from 1 to 16."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "device": {
                        "label": "Device Table",
                        "summary": "Path to the MIDI device Table DAT"
                    },
                    "skiptiming": {
                        "label": "Skip Timing",
                        "summary": "Does not report timing messages when this is turned on."
                    },
                    "message": {
                        "label": "Message",
                        "summary": "Filter by the MIDI message content. Example \\\"Control Change\\\""
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a python script op(\\\"opname\\\").par.clear.pulse()"
                    },
                    "bytes": {
                        "label": "Bytes Column",
                        "summary": "Outputs the raw bytes of the message in a separate column."
                    }
                },
                "summary": "The MIDI In DAT logs all MIDI messages coming into TouchDesigner from a specified MIDI device."
            },
            "renderpickDAT": {
                "label": "Render Pick",
                "parameters": {
                    "customattrib3": {
                        "label": "Custom Attrib 3",
                        "summary": "Specify which custom attributes to return from the object."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "referenceobj": {
                        "label": "Reference Object",
                        "summary": "Object used when fetching position or normals Relative to Object."
                    },
                    "pickcirstep": {
                        "label": "Pick Circular Step",
                        "summary": "Used to reduce the searching within the search area. The search area is sampled at locations that correspond to 'rings' outwards from the center pick point."
                    },
                    "responsetime": {
                        "label": "Response Time",
                        "summary": "Determines when the values are updated."
                    },
                    "customattrib3type": {
                        "label": "Custom Attrib 3 Type",
                        "summary": "The type of attribute is selected from this menu."
                    },
                    "depth": {
                        "label": "Fetch Depth",
                        "summary": "Returns the depth of the point picked on the geometry. This value a non-linear ratio of the point's position between the near and far planes of the Depth Buffer. Column is depth."
                    },
                    "customattrib2type": {
                        "label": "Custom Attrib 2 Type",
                        "summary": "The type of attribute is selected from this menu."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Path to a DAT containing callbacks for pick event received."
                    },
                    "color": {
                        "label": "Fetch Point Color",
                        "summary": "Returns the point color of the point picked on the geometry. Columns cr, cg, cb, ca."
                    },
                    "customattrib2": {
                        "label": "Custom Attrib 2",
                        "summary": "Specify which custom attributes to return from the object."
                    },
                    "uv": {
                        "label": "Fetch Texture UV",
                        "summary": "Returns the texture coordinates of the point picked on the geometry. Columns mapu, mapv, mapw."
                    },
                    "instanceid": {
                        "label": "Fetch Instance ID",
                        "summary": "Returns the Instance ID of the object. This will always be 0 if instancing is off. Column is instance."
                    },
                    "pickradius": {
                        "label": "Pick Radius",
                        "summary": "Controls the radius of the search area for the pick. If nothing is found at the pick's center it will keep searching for geometry in the search area defined by the Pick Radius."
                    },
                    "customattrib1": {
                        "label": "Custom Attrib 1",
                        "summary": "Specify which custom attributes to return from the object."
                    },
                    "position": {
                        "label": "Fetch Position",
                        "summary": "Returns the position of the point picked on the geometry. Columns tx, ty, tz."
                    },
                    "pickradstep": {
                        "label": "Pick Radial Step",
                        "summary": "Used to reduce the searching within the search area. The search area is sampled at locations that correspond to 'spokes' outwards from the center pick point."
                    },
                    "strategy": {
                        "label": "Strategy",
                        "summary": "Decides when to update values based on pick interactions."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "normal": {
                        "label": "Fetch Normal",
                        "summary": "Returns the normals of the point picked on the geometry. Columns nx, ny, nz."
                    },
                    "custompickcameras": {
                        "label": "Custom Pick Camera(s)",
                        "summary": "Picking can be done from the viewport of custom camera(s) by specifying one or more Camera COMP here. If this parameter is blank the cameras from the Render TOP are used. To pick from the viewpoint of multiple different cameras, a camera column must be specified in the input DAT."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "clearprev": {
                        "label": "Clear Previous Pick on New Pick",
                        "summary": "This parameter is only enabled when the Strategy is set to Hold Last Picked. When this is on, starting a new pick on empty space will clear the values. When off, the last values will be held if the pick starts on empty space."
                    },
                    "allowmulticamera": {
                        "label": "Allow Multi-Camera Rendering",
                        "summary": "Multi-Camera Rendering is a faster way to render multiple passes at the same time, and is thus a speed improvement for doing many picks at the same time. This feature may not work correctly for some older GLSL MATs made in 088 though, so this parameter allows forcing off this speed improvement if necessary. Generally it should be left on though."
                    },
                    "includenonpickable": {
                        "label": "Include Non-Pickable Objects",
                        "summary": "Includes the non-pickable objects in the picking algorithm such that non-pickable objects may occlude pickable objects.  For example, if there is only one pickable object in the scene with lots of additional non-pickable geometry is present, turning this parameter on will prevent the pickable object from being selected if it is behind a non-pickage object (occluded by the non-pickage object)."
                    },
                    "customattrib4": {
                        "label": "Custom Attrib 4",
                        "summary": "Specify which custom attributes to return from the object."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "activatecallbacks": {
                        "label": "Activate Callbacks",
                        "summary": "Enables Callback DAT for each pick event."
                    },
                    "customattrib1type": {
                        "label": "Custom Attrib 1 Type",
                        "summary": "The type of attribute is selected from this menu."
                    },
                    "rendertop": {
                        "label": "Render/RenderPass TOP",
                        "summary": "Specifies which scene to pick on, and which camera to pick from. By default the first camera listed in the Render TOP will be used for picking. Another camera can be specified with the 'Custom Pick Camera(s)' parameter, and multiple different cameras can be selected using the camera input column."
                    },
                    "mergeinputdat": {
                        "label": "Merge Input DAT",
                        "summary": "Appends input table to the Render Pick DATs columns."
                    },
                    "customattrib4type": {
                        "label": "Custom Attrib 4 Type",
                        "summary": "The type of attribute is selected from this menu."
                    },
                    "usepickableflags": {
                        "label": "Use Pickable Flags",
                        "summary": "When turned on only geometry whose Pickable Flag is on can be selected by the Render Pick DAT. The Pickable Flag is found on all Object components."
                    }
                },
                "summary": "The Render Pick DAT lets you get information about the 3D surface at any pixel of any 3D render, allowing you to implement multi-touch on a 3D rendered scene."
            },
            "evaluateDAT": {
                "label": "Evaluate",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "dat": {
                        "label": "Input Data DAT",
                        "summary": "An alternative DAT table to be used in place of an input table."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "outputsize": {
                        "label": "Output Table Size",
                        "summary": "If the Output Table Size parameter is Strings, Expressions, or Commands, and there is a second input, you can choose the output table size to be either Input DAT or the Formula DAT.  If the Formula DAT is chosen and its table size is greater than the input data table, then the last cell in each row or column will be used when evaluating the remaining formulas."
                    },
                    "expr": {
                        "label": "Expression",
                        "summary": "Expression used to evaluate each cell if an Expression input or DAT is not supplied."
                    },
                    "output": {
                        "label": "Output",
                        "summary": "Determines what format will be used for output from the DAT."
                    },
                    "backslash": {
                        "label": "Convert Backslash Characters",
                        "summary": "Will convert things like \\  to newlines, \\ to tabs etc. Note that \\ , \\ will be converted to spaces if the input DAT is a table."
                    },
                    "dependency": {
                        "label": "Monitor Data Dependencies",
                        "summary": "If the Output parameter is set to Strings or Expressions, the DAT will monitor any nodes used by the data, as well as check for time dependencies, and cook accordingly. This toggle is on by default. If you only want the DAT to cook based on input changes, you can turn this off to avoid unnecessary updates."
                    },
                    "datexpr": {
                        "label": "Expressions DAT",
                        "summary": "An alternative DAT table to be used in place of a formula table."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The Evaluate DAT changes the cells of the incoming DAT using string-editing and math expressions."
            },
            "oscoutDAT": {
                "label": "OSC Out",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "Selects the network protocol to use. Refer to the Network Protocols article for more information."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "The network port to send to."
                    },
                    "typetag": {
                        "label": "Include Type Tag",
                        "summary": "Includes the argument list type tag in each message. It includes the parameter type keywords (in case the parsing application needs to identify parmameter types)."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the DAT receives/sends information from/to the network port. While Off, no updating occurs. Data sent to the port is lost."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "shared": {
                        "label": "Shared Connection",
                        "summary": "Use the same connection as other networking DATs using the same network protocol."
                    },
                    "bundletimestamp": {
                        "label": "Bundle Timestamp Column",
                        "summary": ""
                    },
                    "addscope": {
                        "label": "OSC Address Scope",
                        "summary": "To reduce which channels are generated, you can use channel name patterns to include or exclude channels. For example, ^*accel* will exclude accelerometer channels coming in from an iOS or iPhone app like mrmr. See Pattern Matching for the syntax of the possible channel name patterns."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT will execute once for each message received."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The operator whose state change will trigger the DAT to execute its script when Execute from is set to Specified Operator. This operator is also the path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "splitbundle": {
                        "label": "Split Bundle into Messages",
                        "summary": ""
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "splitmessage": {
                        "label": "Split Message into Columns",
                        "summary": ""
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a python script op(\\\"opname\\\").par.clear.pulse()"
                    },
                    "bytes": {
                        "label": "Bytes Column",
                        "summary": "Outputs the raw bytes of the message in a separate column."
                    },
                    "address": {
                        "label": "Network Address",
                        "summary": "The network address of the target computer when using UDP. For multi-cast this is the multi-cast address to send to. This address is a standard WWW address, such as 'foo' or 'foo.bar.com'. You can put an IP address (e.g. 100.123.45.78). If you put \\\"localhost\\\", it means the other end of the pipe is on the same computer."
                    }
                },
                "summary": "The OSC Out DAT is used for sending information over a OSC connection between remotely located computers."
            },
            "mqttclientDAT": {
                "label": "MQTT Client",
                "parameters": {
                    "usercid": {
                        "label": "User Client ID",
                        "summary": "Client name when Specify ID enabled."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "specifyid": {
                        "label": "Specify ID",
                        "summary": "Allows naming the client with parameter User Client ID, otherwise automatically and uniquely generated for each connection."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Enable the connection."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "keepalive": {
                        "label": "Keep Alive Interval",
                        "summary": "Specifies in seconds, the maximum time to expect without communication. If no data is sent during this time, a lightweight ping message is sent to the server instead. Can be set to 0 to avoid pings."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT contains functions that are called when connections are made, lost or published data arrives. See mqttclientDAT_Class for usage."
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The operator whose state change will trigger the DAT to execute its script when Execute From is set to Specified Operator. This operator is also the path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "maxinflight": {
                        "label": "Max in Flight",
                        "summary": "Controls how many messages can be in-flight simultaneously."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "netaddress": {
                        "label": "Network Address",
                        "summary": "The IP address to connect to."
                    },
                    "reconnect": {
                        "label": "Reconnect",
                        "summary": "Will attempt to reconnect to the MQTT broker."
                    },
                    "cleansession": {
                        "label": "Clean Session",
                        "summary": "If Specify ID is selected, the server will preserve any state information associated with the connection of that ID, such as subscriptions, delivery attempts, etc."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a python script op(\\\"opname\\\").par.clear.pulse()"
                    },
                    "bytes": {
                        "label": "Bytes Column",
                        "summary": "Outputs the raw bytes of the message in a separate column."
                    }
                },
                "summary": "The MQTT Client DAT receives and sends data from/to MQTT devices via MQTT servers (broker)."
            },
            "serialDAT": {
                "label": "Serial",
                "parameters": {
                    "rts": {
                        "label": "RTS",
                        "summary": ""
                    },
                    "stopbits": {
                        "label": "Stop Bits",
                        "summary": "The last part of transmission packet consists of 1 or 2 Stop bits. The connection will now wait for the next Start bit."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "Selects the COM port that the serial connection will use.  Default port names 1 through 8 are available in the popup menu, though any name can be manually entered in this field."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "This check box enables the serial connection."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "format": {
                        "label": "Row/Callback Format",
                        "summary": "Interpret the incoming data as binary or ASCII data. If the format is Per Byte, one row is appended for each binary byte received. If the format is Per Line, one row is appended for each null or newline delimited message received."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT will execute once for each message received."
                    },
                    "baudrate": {
                        "label": "Baud Rate",
                        "summary": "The maximum number of bits of information, including \\\"control\\\" bits, that are transmitted per second. Check your input device's default baud rate and set accordingly."
                    },
                    "parity": {
                        "label": "Parity",
                        "summary": "This parameter can be set to none, even, or odd. The optional parity bit follows the data bits and is included as a simple means of error checking. Parity bits work by specifying ahead of time whether the parity of the transmission is to be even or odd. If the parity is set to be odd, the transmitter will then set the parity bit in such a way as to make an odd number of 1's among the data bits and the parity bit."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a script command, here is an example: opparm -c /serial1 clear"
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "databits": {
                        "label": "Data Bits",
                        "summary": "This parameter sets the number of data bits sent in each. Data bits are transmitted \\\"backwards\\\". Backwards refers to the order of transmission, which is from least significant bit (LSB) to most significant bit (MSB). To interpret the data bits, you must read from right to left."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": ""
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "dtr": {
                        "label": "DTR",
                        "summary": ""
                    },
                    "bytes": {
                        "label": "Bytes Column",
                        "summary": "Outputs the raw bytes of the message in a separate column."
                    }
                },
                "summary": "The Serial DAT is used for serial communication through an external port, using the RS-232 protocol."
            },
            "oscinDAT": {
                "label": "OSC In",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "Select which protocol to use, refer to the Network Protocols article for more information."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "The port which OSC-In will accept packets on."
                    },
                    "typetag": {
                        "label": "Include Type Tag",
                        "summary": "Includes the argument list type tag in each message. It includes the parameter type keywords (in case the parsing application needs to identify parameter types)."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "While on, the DAT receives information sent to the network port. While Off, no updating occurs. Data sent to the port is lost."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "shared": {
                        "label": "Shared Connection",
                        "summary": "Use the same connection as other networking DATs using the same network protocol."
                    },
                    "bundletimestamp": {
                        "label": "Bundle Timestamp Column",
                        "summary": ""
                    },
                    "addscope": {
                        "label": "OSC Address Scope",
                        "summary": "To reduce which channels are generated, you can use channel name patterns to include or exclude channels. For example, ^*accel* will exclude accelerometer channels coming in from an iOS or iPhone app like mrmr. See Pattern Matching for the syntax of the possible channel name patterns."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT will execute once for each message received. See oscinDAT_Class for usage."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The operator whose state change will trigger the DAT to execute its script when Execute from is set to Specified Operator. This operator is also the path that the script will be executed from if the Execute From parameter is set to Specified Operator."
                    },
                    "splitbundle": {
                        "label": "Split Bundle into Messages",
                        "summary": ""
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "splitmessage": {
                        "label": "Split Message into Columns",
                        "summary": ""
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a python script op(\\\"opname\\\").par.clear.pulse()"
                    },
                    "bytes": {
                        "label": "Bytes Column",
                        "summary": "Outputs the raw bytes of the message in a separate column."
                    },
                    "address": {
                        "label": "Network Address",
                        "summary": "For multi-cast protocol, this is the multi-cast address to listen for. For UDT protocol this is the IP address of the server."
                    }
                },
                "summary": "The OSC In DAT receives and parses full Open Sound Control packets using UDP by default."
            },
            "etherdreamDAT": {
                "label": "EtherDream",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "poll": {
                        "label": "Poll Devices",
                        "summary": "Poll for devices."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "columns": {
                        "label": "Columns",
                        "summary": "Select which columns are included in the table. Click the drop menu to the right to see all that are available."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "Runs this script when polling for devices. See etherdreamDAT_Class for usage."
                    }
                },
                "summary": "The EtherDream DAT polls and lists all EtherDream devices connected."
            },
            "folderDAT": {
                "label": "Folder",
                "parameters": {
                    "refreshpulse": {
                        "label": "Refresh Pulse",
                        "summary": ""
                    },
                    "rootfolder": {
                        "label": "Root Folder",
                        "summary": "The folder in the filesystem whose contents will be displayed in the DAT list."
                    },
                    "pathcol": {
                        "label": "Path",
                        "summary": ""
                    },
                    "subfolders": {
                        "label": "Include Subfolders",
                        "summary": "Includes the subfolders from the root folder specified."
                    },
                    "imageextensions": {
                        "label": "Image Extensions",
                        "summary": "Includes image contents that are supported by TouchDesigner. See supported File Types."
                    },
                    "nameformat": {
                        "label": "Name Format",
                        "summary": "Select whether to include the filename extension or not."
                    },
                    "mindepth": {
                        "label": "Minumum Depth",
                        "summary": "Set a minmum depth for the subfolders the Folder DAT should recursively search through."
                    },
                    "namecol": {
                        "label": "Name",
                        "summary": ""
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "folders": {
                        "label": "Folders",
                        "summary": "Use Pattern Matching to specify which folders are included.  Matches the folder path.  Delimiters used are spaces and commas.  To match spaces, enclose the entire search term in double quotes."
                    },
                    "foldercol": {
                        "label": "Folder",
                        "summary": ""
                    },
                    "dateformat": {
                        "label": "Date Format",
                        "summary": "The format used to display the item's dates in the table."
                    },
                    "movieextensions": {
                        "label": "Movie Extensions",
                        "summary": "Includes movie contents that are supported by TouchDesigner. See supported File Types."
                    },
                    "maxdepth": {
                        "label": "Maximum Depth",
                        "summary": "Set the maximum depth for the subfolders the Folder DAT should recursively search through."
                    },
                    "sizecol": {
                        "label": "Size",
                        "summary": ""
                    },
                    "depthcol": {
                        "label": "Depth",
                        "summary": ""
                    },
                    "extensioncol": {
                        "label": "Extension",
                        "summary": ""
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "typecol": {
                        "label": "Type",
                        "summary": ""
                    },
                    "type": {
                        "label": "Type",
                        "summary": "The types of contents to display."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "When off, the DAT outputs a single-row table with only the headings, useful when dormant or when sending the DAT to a Replicator COMP."
                    },
                    "datecreatedcol": {
                        "label": "Date Created",
                        "summary": ""
                    },
                    "dateaccessedcol": {
                        "label": "Date Accessed",
                        "summary": ""
                    },
                    "allextensions": {
                        "label": "All Extensions",
                        "summary": "Includes all file extensions."
                    },
                    "refresh": {
                        "label": "Refresh",
                        "summary": "When on, it monitors the specified folder(s) of the filesystem. The pulse button reads it once."
                    },
                    "basenamecol": {
                        "label": "Base Name",
                        "summary": ""
                    },
                    "extensions": {
                        "label": "Extensions",
                        "summary": "Use Pattern Matching to specify which extensions are included. Extensions listed here should not include the period. E.g *txt, not *.txt."
                    },
                    "relpathcol": {
                        "label": "Relative Path",
                        "summary": ""
                    },
                    "datemodifiedcol": {
                        "label": "Date Modified",
                        "summary": ""
                    },
                    "limitdepth": {
                        "label": "Limit Depth",
                        "summary": "Turns on the Maximum Depth parameter to limit searching through subfolders. Turning this toggle off will search through all subtrees."
                    },
                    "async": {
                        "label": "Asynchronous Update",
                        "summary": "When on, the update happens asynchronously from the main thread so it doesn't make TouchDesigner drop frames or pause. As a result, the Folder DAT way not update its data within the next frame after the change on disk."
                    },
                    "audioextensions": {
                        "label": "Audio Extensions",
                        "summary": "Includes audio contents that are supported by TouchDesigner. See supported File Types."
                    },
                    "names": {
                        "label": "Names",
                        "summary": "Use Pattern Matching to specify which names are included.  Delimiters used are spaces and commas.  To match spaces, enclose the entire search term in double quotes."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The Folder DAT lists the files and subfolders found in a file system folder and monitors any changes."
            },
            "udtinDAT": {
                "label": "UDT In",
                "parameters": {
                    "protocol": {
                        "label": "Protocol",
                        "summary": "Select which protocol to use, refer to the Network Protocols article for more information."
                    },
                    "fromop": {
                        "label": "From Operator",
                        "summary": "The operator whose state change will trigger the DAT to execute its script when Execute from is set to Specified Operator. This operator is also the path that the script will be executed from if the Execute from parameter is set to Specified Operator."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "port": {
                        "label": "Port",
                        "summary": "The network port the listen on."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "This check box enables the connection."
                    },
                    "format": {
                        "label": "Row/Callback Format",
                        "summary": "Determines how the incoming data is parsed into the table."
                    },
                    "shared": {
                        "label": "Shared Connection",
                        "summary": "Use the same connection as other networking DATs using the same network protocol."
                    },
                    "executeloc": {
                        "label": "Execute from",
                        "summary": "Determines the location the script is run from."
                    },
                    "callbacks": {
                        "label": "Callbacks DAT",
                        "summary": "The Callbacks DAT will execute once for each message coming in. See udtinDAT_Class for usage."
                    },
                    "clamp": {
                        "label": "Clamp Output",
                        "summary": "The DAT is limited to 100 messages by default but with Clamp Output, this can be set to anything including unlimited."
                    },
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    },
                    "maxlines": {
                        "label": "Maximum Lines",
                        "summary": "Limits the number of messages, older messages are removed from the list first."
                    },
                    "clear": {
                        "label": "Clear Output",
                        "summary": "Deletes all lines except the heading. To clear with a python script op(\\\"opname\\\").par.clear.pulse()"
                    },
                    "bytes": {
                        "label": "Bytes Column",
                        "summary": "Outputs the raw bytes of the message in a separate column."
                    },
                    "address": {
                        "label": "Network Address",
                        "summary": "You can put an IP address to listen on (224.0.0.1). This parameter is only needed for multicast protocols."
                    }
                },
                "summary": "The UDT In DAT is used for receiving information over a UDT connection between two remotely located computers."
            },
            "performDAT": {
                "label": "Perform",
                "parameters": {
                    "language": {
                        "label": "Language",
                        "summary": "Select how the DAT decides which script language to operate on."
                    },
                    "customext": {
                        "label": "Custom Extension",
                        "summary": "Specifiy the custom extension."
                    },
                    "logcustompanel": {
                        "label": "Custom Panel Time",
                        "summary": "Logs time taken by custom panels build with Panel Components."
                    },
                    "logdrawchannels": {
                        "label": "Draw Channels Time",
                        "summary": "Logs time to draw channels in CHOP viewers."
                    },
                    "logcook": {
                        "label": "Cook Time",
                        "summary": "Logs the cook time of operators."
                    },
                    "active": {
                        "label": "Active",
                        "summary": "Turns logging on/off. The DAT will continuously log while Active is On. Use resetpulse button to the right to grab a single frame snapshot."
                    },
                    "logviewport": {
                        "label": "Viewport Draw Time",
                        "summary": "Logs time to draw 3D geometry and SOP viewers."
                    },
                    "logmidi": {
                        "label": "MIDI Time",
                        "summary": "Logs time spent on MIDI."
                    },
                    "triggermode": {
                        "label": "Trigger Mode",
                        "summary": "Offers two options for when to trigger a refresh of the logs."
                    },
                    "activepulse": {
                        "label": "Active Pulse",
                        "summary": ""
                    },
                    "logmisc": {
                        "label": "Misc",
                        "summary": "Logs miscellaneous times that do not fit into other categories."
                    },
                    "logobjectview": {
                        "label": "Object View Time",
                        "summary": ""
                    },
                    "extension": {
                        "label": "Edit/View Extension",
                        "summary": "Select the file extension this DAT should expose to external editors."
                    },
                    "logexport": {
                        "label": "Export Time",
                        "summary": "Logs time spent exporting CHOP channels."
                    },
                    "logframelength": {
                        "label": "Frame Length",
                        "summary": "Logs total frame time in milliseconds (ms)."
                    },
                    "logrender": {
                        "label": "Render",
                        "summary": "Logs time spend by Render or Renderpass TOPs."
                    },
                    "triggerthreshold": {
                        "label": "Trigger Threshold",
                        "summary": "This is the amount of time, in milliseconds, that a frame must exceed to cause the DAT to log and output the frame's timing. For example to see what happens when a frame takes more that 33 ms to cook, put this parameter to 33."
                    },
                    "loggraphics": {
                        "label": "Graphics Time",
                        "summary": "Logs various graphics system calls, such as time spent waiting for the graphics card, calls to the graphic driver, converting TOP data to CHOPs, etc."
                    },
                    "logscript": {
                        "label": "Script",
                        "summary": "Logs time spent running scripts."
                    },
                    "logmovie": {
                        "label": "Movie Time",
                        "summary": "Logs time taken to read video and audio from movie files."
                    },
                    "wordwrap": {
                        "label": "Word Wrap",
                        "summary": "Enable Word Wrap for Node Display."
                    }
                },
                "summary": "The Perform DAT logs various performance times in a Table DAT format."
            }
        },
        "MATs": {
            "": {
                "label": "",
                "parameters": {},
                "summary": ""
            },
            "glslMAT": {
                "label": "GLSL",
                "parameters": {
                    "sampler7": {
                        "label": "Sampler Name",
                        "summary": "This is the sampler name that the GLSL program will use to sample from this TOP. The samplers need to be declared at the same dimentions as the TOP (sampler2D for a 2D TOP, sampler3D for 3D TOP)."
                    },
                    "chopuniname4": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "chopunitype2": {
                        "label": "Type",
                        "summary": "The type of the uniform. You can send up to 4 channels into the GLSL shader in a single uniform. For a CHOP with a single channel declare your uniform as a float, for one with two channels declare your uniform as a vec2, etc. The data is interleaved in the uniform. I.e., the .x component is the 1st channel, .y is the 2nd channel, etc."
                    },
                    "fromcomp3": {
                        "label": "Xform from",
                        "summary": "Transform from this COMPs world transform."
                    },
                    "top6": {
                        "label": "TOP",
                        "summary": "This is the TOP that will be referenced by the above sampler name above it.  Exposed by the + Button, texture sampling parameters:  Refer to the Texture Sampling Parameters article for more information on the parameters exposed by pressing the + button. The parameter prefix for each of the parameters is top0 up to top9."
                    },
                    "mat": {
                        "label": "MAT",
                        "summary": "When obtaining deform data from a MAT or a Deform In MAT, this is where that MAT is specified."
                    },
                    "uniname8": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "gdat": {
                        "label": "Geometry Shader",
                        "summary": "Path to the DAT that holds the geometry shader code."
                    },
                    "sampler4": {
                        "label": "Sampler Name",
                        "summary": "This is the sampler name that the GLSL program will use to sample from this TOP. The samplers need to be declared at the same dimentions as the TOP (sampler2D for a 2D TOP, sampler3D for 3D TOP)."
                    },
                    "lightingspace": {
                        "label": "Lighting Space",
                        "summary": "Allows lighting space switch from the current default World Space to legacy Camera Space which was used for TouchDesigner 088."
                    },
                    "srcblend": {
                        "label": "Source Color *",
                        "summary": "This value is multiplied by the color value of the pixel that is being written to the Color-Buffer (also know as the Source Color)."
                    },
                    "chopunitype5": {
                        "label": "Type",
                        "summary": "The type of the uniform. You can send up to 4 channels into the GLSL shader in a single uniform. For a CHOP with a single channel declare your uniform as a float, for one with two channels declare your uniform as a vec2, etc. The data is interleaved in the uniform. I.e., the .x component is the 1st channel, .y is the 2nd channel, etc."
                    },
                    "chop4": {
                        "label": "CHOP",
                        "summary": "The CHOP whose channels will be sent to the GLSL shader."
                    },
                    "sampler5": {
                        "label": "Sampler Name",
                        "summary": "This is the sampler name that the GLSL program will use to sample from this TOP. The samplers need to be declared at the same dimentions as the TOP (sampler2D for a 2D TOP, sampler3D for 3D TOP)."
                    },
                    "choparraytype0": {
                        "label": "Array Type",
                        "summary": "GPUs can send array data into a GLSL shader using Uniform Arrays or Texture Buffers. A Uniform Array uses very limited memory to store its data, and can be access like any other regular uniform value (but in an array). Texture Buffers use texture memory and texture fetches to access the data, which allows them to store many more values.  In both cases the index is the 0-based index (an integer) into the array/buffer that you want to get a value for."
                    },
                    "destblend": {
                        "label": "Destination Color *",
                        "summary": "This value is multiplied by the color value of the pixel currently in the Color-Buffer (also known as the Destination Color)."
                    },
                    "value6": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "uniname16": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "value13": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "chanscope3": {
                        "label": "Channel Scope",
                        "summary": "You can select which channels from the CHOP will be used to fill the array. Up to the first 4 channels scoped will be used (depending on the type of the uniform array)."
                    },
                    "numout": {
                        "label": "Num Output Vertices",
                        "summary": "The maximum number of vertices the Geometry Shader will output."
                    },
                    "chop1": {
                        "label": "CHOP",
                        "summary": "The CHOP whose channels will be sent to the GLSL shader."
                    },
                    "top2": {
                        "label": "TOP",
                        "summary": "This is the TOP that will be referenced by the above sampler name above it.  Exposed by the + Button, texture sampling parameters:  Refer to the Texture Sampling Parameters article for more information on the parameters exposed by pressing the + button. The parameter prefix for each of the parameters is top0 up to top9."
                    },
                    "top0": {
                        "label": "TOP",
                        "summary": "This is the TOP that will be referenced by the above sampler name above it.  Exposed by the + Button, texture sampling parameters:  Refer to the Texture Sampling Parameters article for more information on the parameters exposed by pressing the + button. The parameter prefix for each of the parameters is top0 up to top9."
                    },
                    "top8": {
                        "label": "TOP",
                        "summary": "This is the TOP that will be referenced by the above sampler name above it.  Exposed by the + Button, texture sampling parameters:  Refer to the Texture Sampling Parameters article for more information on the parameters exposed by pressing the + button. The parameter prefix for each of the parameters is top0 up to top9."
                    },
                    "top7": {
                        "label": "TOP",
                        "summary": "This is the TOP that will be referenced by the above sampler name above it.  Exposed by the + Button, texture sampling parameters:  Refer to the Texture Sampling Parameters article for more information on the parameters exposed by pressing the + button. The parameter prefix for each of the parameters is top0 up to top9."
                    },
                    "uniname7": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "top1": {
                        "label": "TOP",
                        "summary": "This is the TOP that will be referenced by the above sampler name above it.  Exposed by the + Button, texture sampling parameters:  Refer to the Texture Sampling Parameters article for more information on the parameters exposed by pressing the + button. The parameter prefix for each of the parameters is top0 up to top9."
                    },
                    "choparraytype2": {
                        "label": "Array Type",
                        "summary": "GPUs can send array data into a GLSL shader using Uniform Arrays or Texture Buffers. A Uniform Array uses very limited memory to store its data, and can be access like any other regular uniform value (but in an array). Texture Buffers use texture memory and texture fetches to access the data, which allows them to store many more values.  In both cases the index is the 0-based index (an integer) into the array/buffer that you want to get a value for."
                    },
                    "chopunitype9": {
                        "label": "Type",
                        "summary": "The type of the uniform. You can send up to 4 channels into the GLSL shader in a single uniform. For a CHOP with a single channel declare your uniform as a float, for one with two channels declare your uniform as a vec2, etc. The data is interleaved in the uniform. I.e., the .x component is the 1st channel, .y is the 2nd channel, etc."
                    },
                    "value11": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "uniname12": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "top5": {
                        "label": "TOP",
                        "summary": "This is the TOP that will be referenced by the above sampler name above it.  Exposed by the + Button, texture sampling parameters:  Refer to the Texture Sampling Parameters article for more information on the parameters exposed by pressing the + button. The parameter prefix for each of the parameters is top0 up to top9."
                    },
                    "pcaptpath": {
                        "label": "pCaptPath Attrib",
                        "summary": "Specifies the name of the pCaptPath attribute to use. When your geometry has been put through a Bone Group SOP, the attributes will be split into names like pCaptPath0, pCaptPath1. You can only render 1 bone group at a time, so this should match the group you are rendering with this material."
                    },
                    "sampler0": {
                        "label": "Sampler Name",
                        "summary": "This is the sampler name that the GLSL program will use to sample from this TOP. The samplers need to be declared at the same dimentions as the TOP (sampler2D for a 2D TOP, sampler3D for 3D TOP)."
                    },
                    "uniname11": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "chanscope4": {
                        "label": "Channel Scope",
                        "summary": "You can select which channels from the CHOP will be used to fill the array. Up to the first 4 channels scoped will be used (depending on the type of the uniform array)."
                    },
                    "chopuniname7": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "chopunitype8": {
                        "label": "Type",
                        "summary": "The type of the uniform. You can send up to 4 channels into the GLSL shader in a single uniform. For a CHOP with a single channel declare your uniform as a float, for one with two channels declare your uniform as a vec2, etc. The data is interleaved in the uniform. I.e., the .x component is the 1st channel, .y is the 2nd channel, etc."
                    },
                    "uniname13": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "uniname20": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "chop9": {
                        "label": "CHOP",
                        "summary": "The CHOP whose channels will be sent to the GLSL shader."
                    },
                    "sampler3": {
                        "label": "Sampler Name",
                        "summary": "This is the sampler name that the GLSL program will use to sample from this TOP. The samplers need to be declared at the same dimentions as the TOP (sampler2D for a 2D TOP, sampler3D for 3D TOP)."
                    },
                    "chop0": {
                        "label": "CHOP",
                        "summary": "The CHOP whose channels will be sent to the GLSL shader."
                    },
                    "choparraytype1": {
                        "label": "Array Type",
                        "summary": "GPUs can send array data into a GLSL shader using Uniform Arrays or Texture Buffers. A Uniform Array uses very limited memory to store its data, and can be access like any other regular uniform value (but in an array). Texture Buffers use texture memory and texture fetches to access the data, which allows them to store many more values.  In both cases the index is the 0-based index (an integer) into the array/buffer that you want to get a value for."
                    },
                    "uniname10": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "sampler2": {
                        "label": "Sampler Name",
                        "summary": "This is the sampler name that the GLSL program will use to sample from this TOP. The samplers need to be declared at the same dimentions as the TOP (sampler2D for a 2D TOP, sampler3D for 3D TOP)."
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "Turns on the polygon offset feature."
                    },
                    "value17": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "value20": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "choparraytype5": {
                        "label": "Array Type",
                        "summary": "GPUs can send array data into a GLSL shader using Uniform Arrays or Texture Buffers. A Uniform Array uses very limited memory to store its data, and can be access like any other regular uniform value (but in an array). Texture Buffers use texture memory and texture fetches to access the data, which allows them to store many more values.  In both cases the index is the 0-based index (an integer) into the array/buffer that you want to get a value for."
                    },
                    "choparraytype4": {
                        "label": "Array Type",
                        "summary": "GPUs can send array data into a GLSL shader using Uniform Arrays or Texture Buffers. A Uniform Array uses very limited memory to store its data, and can be access like any other regular uniform value (but in an array). Texture Buffers use texture memory and texture fetches to access the data, which allows them to store many more values.  In both cases the index is the 0-based index (an integer) into the array/buffer that you want to get a value for."
                    },
                    "choparraytype9": {
                        "label": "Array Type",
                        "summary": "GPUs can send array data into a GLSL shader using Uniform Arrays or Texture Buffers. A Uniform Array uses very limited memory to store its data, and can be access like any other regular uniform value (but in an array). Texture Buffers use texture memory and texture fetches to access the data, which allows them to store many more values.  In both cases the index is the 0-based index (an integer) into the array/buffer that you want to get a value for."
                    },
                    "alphatest": {
                        "label": "Discard Pixels Based on Alpha",
                        "summary": "This enables or disables the pixel alpha test."
                    },
                    "fromcomp0": {
                        "label": "Xform from",
                        "summary": "Transform from this COMPs world transform."
                    },
                    "uniname19": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "value18": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "chanscope2": {
                        "label": "Channel Scope",
                        "summary": "You can select which channels from the CHOP will be used to fill the array. Up to the first 4 channels scoped will be used (depending on the type of the uniform array)."
                    },
                    "fromcomp2": {
                        "label": "Xform from",
                        "summary": "Transform from this COMPs world transform."
                    },
                    "chopunitype1": {
                        "label": "Type",
                        "summary": "The type of the uniform. You can send up to 4 channels into the GLSL shader in a single uniform. For a CHOP with a single channel declare your uniform as a float, for one with two channels declare your uniform as a vec2, etc. The data is interleaved in the uniform. I.e., the .x component is the 1st channel, .y is the 2nd channel, etc."
                    },
                    "value16": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "value9": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "uniname6": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "depthtest": {
                        "label": "Depth Test",
                        "summary": "Enables and disables the Depth-Test. If the depth-test is disabled, depths values aren't written to the Depth-Buffer."
                    },
                    "top9": {
                        "label": "TOP",
                        "summary": "This is the TOP that will be referenced by the above sampler name above it.  Exposed by the + Button, texture sampling parameters:  Refer to the Texture Sampling Parameters article for more information on the parameters exposed by pressing the + button. The parameter prefix for each of the parameters is top0 up to top9."
                    },
                    "value0": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "top3": {
                        "label": "TOP",
                        "summary": "This is the TOP that will be referenced by the above sampler name above it.  Exposed by the + Button, texture sampling parameters:  Refer to the Texture Sampling Parameters article for more information on the parameters exposed by pressing the + button. The parameter prefix for each of the parameters is top0 up to top9."
                    },
                    "chopuniname5": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "inprim": {
                        "label": "Input Primitive Type",
                        "summary": "The type of geometry that will be inputed into the Geometry Shader."
                    },
                    "uniname14": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "value8": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "chopuniname3": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "glslversion": {
                        "label": "GLSL Version",
                        "summary": "Pick what version of GLSL to compile the shader with."
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Selects which faces to render."
                    },
                    "uniname1": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "choparraytype8": {
                        "label": "Array Type",
                        "summary": "GPUs can send array data into a GLSL shader using Uniform Arrays or Texture Buffers. A Uniform Array uses very limited memory to store its data, and can be access like any other regular uniform value (but in an array). Texture Buffers use texture memory and texture fetches to access the data, which allows them to store many more values.  In both cases the index is the 0-based index (an integer) into the array/buffer that you want to get a value for."
                    },
                    "alphafunc": {
                        "label": "Keep Pixels with Alpha",
                        "summary": "This menu works in conjunction with the Alpha Threshold parameter below in determining which pixels to keep based on their alpha value."
                    },
                    "sampler9": {
                        "label": "Sampler Name",
                        "summary": "This is the sampler name that the GLSL program will use to sample from this TOP. The samplers need to be declared at the same dimentions as the TOP (sampler2D for a 2D TOP, sampler3D for 3D TOP)."
                    },
                    "chopunitype0": {
                        "label": "Type",
                        "summary": "The type of the uniform. You can send up to 4 channels into the GLSL shader in a single uniform. For a CHOP with a single channel declare your uniform as a float, for one with two channels declare your uniform as a vec2, etc. The data is interleaved in the uniform. I.e., the .x component is the 1st channel, .y is the 2nd channel, etc."
                    },
                    "chopuniname8": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "chopuniname6": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "fromcomp4": {
                        "label": "Xform from",
                        "summary": "Transform from this COMPs world transform."
                    },
                    "value19": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "uniname0": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "value15": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "uniname4": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "value5": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "separatealphafunc": {
                        "label": "Separate Alpha Function",
                        "summary": "This toggle enables and disables separate blending options for the alpha values."
                    },
                    "uniname3": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "wireframe": {
                        "label": "Wire Frame",
                        "summary": "Enables and disables wire-frame rendering with the option of OpenGL Tesselated or Topology based wireframes."
                    },
                    "sampler6": {
                        "label": "Sampler Name",
                        "summary": "This is the sampler name that the GLSL program will use to sample from this TOP. The samplers need to be declared at the same dimentions as the TOP (sampler2D for a 2D TOP, sampler3D for 3D TOP)."
                    },
                    "chop7": {
                        "label": "CHOP",
                        "summary": "The CHOP whose channels will be sent to the GLSL shader."
                    },
                    "tocomp1": {
                        "label": "To",
                        "summary": "Transform to this COMPs world transform."
                    },
                    "value21": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "destblenda": {
                        "label": "Destination Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel currently in the Color-Buffer (also known as the Destination Alpha)."
                    },
                    "targetsop": {
                        "label": "SOP with Capture Data",
                        "summary": "Specifies the SOP that contains the deform capture attributes."
                    },
                    "depthfunc": {
                        "label": "Depth Test Function",
                        "summary": "The depth value of the pixel being drawn is compared to the depth value currently in the depth-buffer using this function. If the test passes then the pixel is drawn to the Frame-Buffer. If the test fails the pixel is discarded and no changes are made to the Frame-Buffer."
                    },
                    "srcblenda": {
                        "label": "Source Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel that is being written to the Color-Buffer (also know as the Source Alpha)."
                    },
                    "alphathreshold": {
                        "label": "Alpha Threshold",
                        "summary": "This value is what the pixel's alpha is compared to to determine if the pixel should be drawn. Pixels with alpha greater than the Alpha Threshold will be drawn. Pixels with alpha less than or equal to the Alpha Threshold will not be drawn."
                    },
                    "top4": {
                        "label": "TOP",
                        "summary": "This is the TOP that will be referenced by the above sampler name above it.  Exposed by the + Button, texture sampling parameters:  Refer to the Texture Sampling Parameters article for more information on the parameters exposed by pressing the + button. The parameter prefix for each of the parameters is top0 up to top9."
                    },
                    "sampler1": {
                        "label": "Sampler Name",
                        "summary": "This is the sampler name that the GLSL program will use to sample from this TOP. The samplers need to be declared at the same dimentions as the TOP (sampler2D for a 2D TOP, sampler3D for 3D TOP)."
                    },
                    "chopunitype3": {
                        "label": "Type",
                        "summary": "The type of the uniform. You can send up to 4 channels into the GLSL shader in a single uniform. For a CHOP with a single channel declare your uniform as a float, for one with two channels declare your uniform as a vec2, etc. The data is interleaved in the uniform. I.e., the .x component is the 1st channel, .y is the 2nd channel, etc."
                    },
                    "tocomp0": {
                        "label": "To",
                        "summary": "Transform to this COMPs world transform."
                    },
                    "fromcomp1": {
                        "label": "Xform from",
                        "summary": "Transform from this COMPs world transform."
                    },
                    "deformdata": {
                        "label": "Get Bone Data:",
                        "summary": "Specifies where the deform bone data will be obtained."
                    },
                    "tocomp4": {
                        "label": "To",
                        "summary": "Transform to this COMPs world transform."
                    },
                    "loaduniformnames": {
                        "label": "Load Uniform Names",
                        "summary": "This will read all the declared (and used) uniforms in the compiled GLSL shader, and fill in the various name fields for the uniform parameters."
                    },
                    "value1": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "chanscope6": {
                        "label": "Channel Scope",
                        "summary": "You can select which channels from the CHOP will be used to fill the array. Up to the first 4 channels scoped will be used (depending on the type of the uniform array)."
                    },
                    "choparraytype6": {
                        "label": "Array Type",
                        "summary": "GPUs can send array data into a GLSL shader using Uniform Arrays or Texture Buffers. A Uniform Array uses very limited memory to store its data, and can be access like any other regular uniform value (but in an array). Texture Buffers use texture memory and texture fetches to access the data, which allows them to store many more values.  In both cases the index is the 0-based index (an integer) into the array/buffer that you want to get a value for."
                    },
                    "chop6": {
                        "label": "CHOP",
                        "summary": "The CHOP whose channels will be sent to the GLSL shader."
                    },
                    "value7": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "chop5": {
                        "label": "CHOP",
                        "summary": "The CHOP whose channels will be sent to the GLSL shader."
                    },
                    "pdat": {
                        "label": "Pixel Shader",
                        "summary": "Path to the DAT that holds the pixel shader code."
                    },
                    "chopunitype6": {
                        "label": "Type",
                        "summary": "The type of the uniform. You can send up to 4 channels into the GLSL shader in a single uniform. For a CHOP with a single channel declare your uniform as a float, for one with two channels declare your uniform as a vec2, etc. The data is interleaved in the uniform. I.e., the .x component is the 1st channel, .y is the 2nd channel, etc."
                    },
                    "wirewidth": {
                        "label": "Line Width",
                        "summary": "This value is the width that the wires will be. This value is in pixels."
                    },
                    "chanscope5": {
                        "label": "Channel Scope",
                        "summary": "You can select which channels from the CHOP will be used to fill the array. Up to the first 4 channels scoped will be used (depending on the type of the uniform array)."
                    },
                    "tocomp2": {
                        "label": "To",
                        "summary": "Transform to this COMPs world transform."
                    },
                    "unimatrixname0": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform. The uniform should be declared as a mat4."
                    },
                    "uniname18": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "uniname9": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "dodeform": {
                        "label": "Deform",
                        "summary": "Enables deforms on this material."
                    },
                    "chopunitype4": {
                        "label": "Type",
                        "summary": "The type of the uniform. You can send up to 4 channels into the GLSL shader in a single uniform. For a CHOP with a single channel declare your uniform as a float, for one with two channels declare your uniform as a vec2, etc. The data is interleaved in the uniform. I.e., the .x component is the 1st channel, .y is the 2nd channel, etc."
                    },
                    "chanscope9": {
                        "label": "Channel Scope",
                        "summary": "You can select which channels from the CHOP will be used to fill the array. Up to the first 4 channels scoped will be used (depending on the type of the uniform array)."
                    },
                    "value10": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "chopuniname1": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "chanscope7": {
                        "label": "Channel Scope",
                        "summary": "You can select which channels from the CHOP will be used to fill the array. Up to the first 4 channels scoped will be used (depending on the type of the uniform array)."
                    },
                    "chanscope0": {
                        "label": "Channel Scope",
                        "summary": "You can select which channels from the CHOP will be used to fill the array. Up to the first 4 channels scoped will be used (depending on the type of the uniform array)."
                    },
                    "uniname15": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "uniname2": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "chop3": {
                        "label": "CHOP",
                        "summary": "The CHOP whose channels will be sent to the GLSL shader."
                    },
                    "sampler8": {
                        "label": "Sampler Name",
                        "summary": "This is the sampler name that the GLSL program will use to sample from this TOP. The samplers need to be declared at the same dimentions as the TOP (sampler2D for a 2D TOP, sampler3D for 3D TOP)."
                    },
                    "unimatrixname3": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform. The uniform should be declared as a mat4."
                    },
                    "chopunitype7": {
                        "label": "Type",
                        "summary": "The type of the uniform. You can send up to 4 channels into the GLSL shader in a single uniform. For a CHOP with a single channel declare your uniform as a float, for one with two channels declare your uniform as a vec2, etc. The data is interleaved in the uniform. I.e., the .x component is the 1st channel, .y is the 2nd channel, etc."
                    },
                    "clearuniformnames": {
                        "label": "Clear Uniform Names",
                        "summary": "This will clear all of the name fields for the uniform parameters."
                    },
                    "uniname21": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "twocolor": {
                        "label": "Two Sided Coloring",
                        "summary": "Enables support for two-sided coloring. When this is enabled the Vertex and/or Geometry shader can write to gl_FrontColor, gl_BackColor, gl_FrontSecondaryColor and gl_BackSecondaryColor and the correct color will be placed into gl_Color and gl_SecondaryColor in the Pixel shader depending on if the primitive's front face or back face is facing the camera. When this is disabled the values placed into gl_FrontColor and gl_FrontSecondaryColor are passed to gl_Color and gl_SecondaryColor regardless of which side of the primitive is facing the camera."
                    },
                    "value3": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "depthwriting": {
                        "label": "Write Depth Values",
                        "summary": "If Write Depth Values is on, pixels that pass the depth-test will write their depth value to the Depth-Buffer. If this isn't on then no changes will be made to the Depth-Buffer, regardless of if the pixels drawn pass or fail the depth-test."
                    },
                    "value14": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "tocomp3": {
                        "label": "To",
                        "summary": "Transform to this COMPs world transform."
                    },
                    "chanscope8": {
                        "label": "Channel Scope",
                        "summary": "You can select which channels from the CHOP will be used to fill the array. Up to the first 4 channels scoped will be used (depending on the type of the uniform array)."
                    },
                    "vdat": {
                        "label": "Vertex Shader",
                        "summary": "Path to the DAT that holds the vertex shader code."
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": "Specifies the path to the COMP where the root of the skeleton is located."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "chop2": {
                        "label": "CHOP",
                        "summary": "The CHOP whose channels will be sent to the GLSL shader."
                    },
                    "unimatrixname2": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform. The uniform should be declared as a mat4."
                    },
                    "chanscope1": {
                        "label": "Channel Scope",
                        "summary": "You can select which channels from the CHOP will be used to fill the array. Up to the first 4 channels scoped will be used (depending on the type of the uniform array)."
                    },
                    "unimatrixname4": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform. The uniform should be declared as a mat4."
                    },
                    "chopuniname2": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "chop8": {
                        "label": "CHOP",
                        "summary": "The CHOP whose channels will be sent to the GLSL shader."
                    },
                    "inherit": {
                        "label": "Inherit Uniforms/Samplers from",
                        "summary": "This Material will inherit all of the Textures and Uniforms from the GLSL Material referenced in this parameter."
                    },
                    "value2": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "value12": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "blending": {
                        "label": "Blending(Transparency)",
                        "summary": "This toggle enables and disables blending. However see the wiki article Transparency."
                    },
                    "choparraytype7": {
                        "label": "Array Type",
                        "summary": "GPUs can send array data into a GLSL shader using Uniform Arrays or Texture Buffers. A Uniform Array uses very limited memory to store its data, and can be access like any other regular uniform value (but in an array). Texture Buffers use texture memory and texture fetches to access the data, which allows them to store many more values.  In both cases the index is the 0-based index (an integer) into the array/buffer that you want to get a value for."
                    },
                    "uniname5": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "chopuniname0": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "unimatrixname1": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform. The uniform should be declared as a mat4."
                    },
                    "outprim": {
                        "label": "Output Primitive Type",
                        "summary": "The type of geometry that the Geometry Shader will output."
                    },
                    "uniname17": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "chopuniname9": {
                        "label": "Uniform Name",
                        "summary": "The name of the uniform."
                    },
                    "pcaptdata": {
                        "label": "pCaptData Attrib",
                        "summary": "Much like pCaptPath Attrib."
                    },
                    "value4": {
                        "label": "Value",
                        "summary": "The value to assign to the uniform. If the uniform is a float the first entry of the four is used, if the uniform is a vec2 the first two entries are used, etc."
                    },
                    "choparraytype3": {
                        "label": "Array Type",
                        "summary": "GPUs can send array data into a GLSL shader using Uniform Arrays or Texture Buffers. A Uniform Array uses very limited memory to store its data, and can be access like any other regular uniform value (but in an array). Texture Buffers use texture memory and texture fetches to access the data, which allows them to store many more values.  In both cases the index is the 0-based index (an integer) into the array/buffer that you want to get a value for."
                    }
                },
                "summary": "The GLSL MAT allows you to write or import custom materials into TouchDesigner."
            },
            "switchMAT": {
                "label": "Switch",
                "parameters": {
                    "mat": {
                        "label": "MAT",
                        "summary": ""
                    },
                    "deformdata": {
                        "label": "Get Bone Data:",
                        "summary": ""
                    },
                    "targetsop": {
                        "label": "SOP with Capture Data",
                        "summary": ""
                    },
                    "dodeform": {
                        "label": "Deform",
                        "summary": ""
                    },
                    "destblenda": {
                        "label": "Destination Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel currently in the Color-Buffer (also known as the Destination Alpha)."
                    },
                    "separatealphafunc": {
                        "label": "Separate Alpha Function",
                        "summary": "This toggle enables and disables separate blending options for the alpha values."
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "Turns on the polygon offset feature."
                    },
                    "depthtest": {
                        "label": "Depth Test",
                        "summary": "Enables and disables the Depth-Test. If the depth-test is disabled, depths values aren't written to the Depth-Buffer."
                    },
                    "index": {
                        "label": "Index",
                        "summary": "Selects which input to use. The first input is 0."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "destblend": {
                        "label": "Destination Color *",
                        "summary": "This value is multiplied by the color value of the pixel currently in the Color-Buffer (also known as the Destination Color)."
                    },
                    "depthfunc": {
                        "label": "Depth Test Function",
                        "summary": "The depth value of the pixel being drawn is compared to the depth value currently in the depth-buffer using this function. If the test passes then the pixel is drawn to the Frame-Buffer. If the test fails the pixel is discarded and no changes are made to the Frame-Buffer."
                    },
                    "srcblenda": {
                        "label": "Source Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel that is being written to the Color-Buffer (also know as the Source Alpha)."
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "alphathreshold": {
                        "label": "Alpha Threshold",
                        "summary": "This value is what the pixel's alpha is compared to to determine if the pixel should be drawn. Pixels with alpha greater than the Alpha Threshold will be drawn. Pixels with alpha less than or equal to the Alpha Threshold will not be drawn."
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": ""
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "wireframe": {
                        "label": "Wire Frame",
                        "summary": "Enables and disables wire-frame rendering with the option of OpenGL Tesselated or Topology based wireframes."
                    },
                    "srcblend": {
                        "label": "Source Color *",
                        "summary": "This value is multiplied by the color value of the pixel that is being written to the Color-Buffer (also know as the Source Color)."
                    },
                    "pcaptdata": {
                        "label": "pCaptData Attrib",
                        "summary": ""
                    },
                    "blending": {
                        "label": "Blending(Transparency)",
                        "summary": "This toggle enables and disables blending. However see the wiki article Transparency."
                    },
                    "pcaptpath": {
                        "label": "pCaptPath Attrib",
                        "summary": ""
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Selects which faces to render."
                    },
                    "alphatest": {
                        "label": "Discard Pixels Based on Alpha",
                        "summary": "This enables or disables the pixel alpha test."
                    },
                    "depthwriting": {
                        "label": "Write Depth Values",
                        "summary": "If Write Depth Values is on, pixels that pass the depth-test will write their depth value to the Depth-Buffer. If this isn't on then no changes will be made to the Depth-Buffer, regardless of if the pixels drawn pass or fail the depth-test."
                    },
                    "alphafunc": {
                        "label": "Keep Pixels with Alpha",
                        "summary": "This menu works in conjunction with the Alpha Threshold parameter below in determining which pixels to keep based on their alpha value."
                    },
                    "wirewidth": {
                        "label": "Line Width",
                        "summary": "This value is the width that the wires will be. This value is in pixels."
                    }
                },
                "summary": "The Switch MAT allows you to switch between multiple materials."
            },
            "constantMAT": {
                "label": "Constant",
                "parameters": {
                    "deformdata": {
                        "label": "Get Bone Data:",
                        "summary": ""
                    },
                    "targetsop": {
                        "label": "SOP with Capture Data",
                        "summary": ""
                    },
                    "dodeform": {
                        "label": "Deform",
                        "summary": ""
                    },
                    "separatealphafunc": {
                        "label": "Separate Alpha Function",
                        "summary": ""
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": ""
                    },
                    "color": {
                        "label": "Color",
                        "summary": ""
                    },
                    "depthtest": {
                        "label": "Depth Test",
                        "summary": ""
                    },
                    "pcaptpath": {
                        "label": "pCaptPath Attrib",
                        "summary": ""
                    },
                    "destblenda": {
                        "label": "Destination Alpha *",
                        "summary": ""
                    },
                    "depthfunc": {
                        "label": "Depth Test Function",
                        "summary": ""
                    },
                    "destblend": {
                        "label": "Destination Color *",
                        "summary": ""
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": ""
                    },
                    "srcblenda": {
                        "label": "Source Alpha *",
                        "summary": ""
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "alphathreshold": {
                        "label": "Alpha Threshold",
                        "summary": ""
                    },
                    "colormap": {
                        "label": "Color Map",
                        "summary": ""
                    },
                    "alpha": {
                        "label": "Alpha",
                        "summary": ""
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "wireframe": {
                        "label": "Wire Frame",
                        "summary": ""
                    },
                    "srcblend": {
                        "label": "Source Color *",
                        "summary": ""
                    },
                    "pcaptdata": {
                        "label": "pCaptData Attrib",
                        "summary": ""
                    },
                    "applyprojmaps": {
                        "label": "Apply Projection Maps",
                        "summary": ""
                    },
                    "blending": {
                        "label": "Blending (Transparency)",
                        "summary": ""
                    },
                    "postmultalpha": {
                        "label": "Post-Mult Color by Alpha",
                        "summary": ""
                    },
                    "mat": {
                        "label": "MAT",
                        "summary": ""
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": ""
                    },
                    "alphatest": {
                        "label": "Discard Pixels Based on Alpha",
                        "summary": ""
                    },
                    "depthwriting": {
                        "label": "Write Depth Values",
                        "summary": ""
                    },
                    "alphafunc": {
                        "label": "Keep Pixels with Alpha",
                        "summary": ""
                    },
                    "wirewidth": {
                        "label": "Line Width",
                        "summary": ""
                    }
                },
                "summary": ""
            },
            "wireframeMAT": {
                "label": "Wireframe",
                "parameters": {
                    "depthfunc": {
                        "label": "Depth Test Function",
                        "summary": "The depth value of the pixel being drawn is compared to the depth value currently in the depth-buffer using this function. If the test passes then the pixel is drawn to the Frame-Buffer. If the test fails the pixel is discarded and no changes are made to the Frame-Buffer."
                    },
                    "deformdata": {
                        "label": "Get Bone Data:",
                        "summary": ""
                    },
                    "targetsop": {
                        "label": "SOP with Capture Data",
                        "summary": ""
                    },
                    "dodeform": {
                        "label": "Deform",
                        "summary": ""
                    },
                    "separatealphafunc": {
                        "label": "Separate Alpha Function",
                        "summary": "This toggle enables and disables separate blending options for the alpha values."
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "Turns on the polygon offset feature."
                    },
                    "color": {
                        "label": "Color",
                        "summary": "The color of the light reflected from the material."
                    },
                    "depthtest": {
                        "label": "Depth Test",
                        "summary": "Enables and disables the Depth-Test. If the depth-test is disabled, depths values aren't written to the Depth-Buffer."
                    },
                    "pcaptpath": {
                        "label": "pCaptPath Attrib",
                        "summary": ""
                    },
                    "destblenda": {
                        "label": "Destination Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel currently in the Color-Buffer (also known as the Destination Alpha)."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "linewidth": {
                        "label": "Line Width",
                        "summary": "The width of the lines displayed in wireframe."
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": ""
                    },
                    "srcblenda": {
                        "label": "Source Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel that is being written to the Color-Buffer (also know as the Source Alpha)."
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "alphathreshold": {
                        "label": "Alpha Threshold",
                        "summary": "This value is what the pixel's alpha is compared to to determine if the pixel should be drawn. Pixels with alpha greater than the Alpha Threshold will be drawn. Pixels with alpha less than or equal to the Alpha Threshold will not be drawn."
                    },
                    "wireframemode": {
                        "label": "Wireframe Mode",
                        "summary": ""
                    },
                    "alpha": {
                        "label": "Alpha",
                        "summary": "The opacity of the material. This parameter is multiplied by point alpha of the object."
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "wireframe": {
                        "label": "Wire Frame",
                        "summary": "Enables and disables wire-frame rendering with the option of OpenGL Tesselated or Topology based wireframes."
                    },
                    "srcblend": {
                        "label": "Source Color *",
                        "summary": "This value is multiplied by the color value of the pixel that is being written to the Color-Buffer (also know as the Source Color)."
                    },
                    "pcaptdata": {
                        "label": "pCaptData Attrib",
                        "summary": ""
                    },
                    "blending": {
                        "label": "Blending(Transparency)",
                        "summary": "This toggle enables and disables blending. However see the wiki article Transparency."
                    },
                    "mat": {
                        "label": "MAT",
                        "summary": ""
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Selects which faces to render."
                    },
                    "alphatest": {
                        "label": "Discard Pixels Based on Alpha",
                        "summary": "This enables or disables the pixel alpha test."
                    },
                    "depthwriting": {
                        "label": "Write Depth Values",
                        "summary": "If Write Depth Values is on, pixels that pass the depth-test will write their depth value to the Depth-Buffer. If this isn't on then no changes will be made to the Depth-Buffer, regardless of if the pixels drawn pass or fail the depth-test."
                    },
                    "alphafunc": {
                        "label": "Keep Pixels with Alpha",
                        "summary": "This menu works in conjunction with the Alpha Threshold parameter below in determining which pixels to keep based on their alpha value."
                    },
                    "wirewidth": {
                        "label": "Line Width",
                        "summary": "This value is the width that the wires will be. This value is in pixels."
                    },
                    "destblend": {
                        "label": "Destination Color *",
                        "summary": "This value is multiplied by the color value of the pixel currently in the Color-Buffer (also known as the Destination Color)."
                    }
                },
                "summary": "The Wireframe MAT renders the edges of polygons and curves as lines."
            },
            "nullMAT": {
                "label": "Null",
                "parameters": {
                    "deformdata": {
                        "label": "Get Bone Data:",
                        "summary": ""
                    },
                    "targetsop": {
                        "label": "SOP with Capture Data",
                        "summary": ""
                    },
                    "dodeform": {
                        "label": "Deform",
                        "summary": ""
                    },
                    "separatealphafunc": {
                        "label": "Separate Alpha Function",
                        "summary": "This toggle enables and disables separate blending options for the alpha values."
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "Turns on the polygon offset feature."
                    },
                    "depthtest": {
                        "label": "Depth Test",
                        "summary": "Enables and disables the Depth-Test. If the depth-test is disabled, depths values aren't written to the Depth-Buffer."
                    },
                    "destblenda": {
                        "label": "Destination Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel currently in the Color-Buffer (also known as the Destination Alpha)."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "destblend": {
                        "label": "Destination Color *",
                        "summary": "This value is multiplied by the color value of the pixel currently in the Color-Buffer (also known as the Destination Color)."
                    },
                    "depthfunc": {
                        "label": "Depth Test Function",
                        "summary": "The depth value of the pixel being drawn is compared to the depth value currently in the depth-buffer using this function. If the test passes then the pixel is drawn to the Frame-Buffer. If the test fails the pixel is discarded and no changes are made to the Frame-Buffer."
                    },
                    "srcblenda": {
                        "label": "Source Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel that is being written to the Color-Buffer (also know as the Source Alpha)."
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "alphathreshold": {
                        "label": "Alpha Threshold",
                        "summary": "This value is what the pixel's alpha is compared to to determine if the pixel should be drawn. Pixels with alpha greater than the Alpha Threshold will be drawn. Pixels with alpha less than or equal to the Alpha Threshold will not be drawn."
                    },
                    "alphafunc": {
                        "label": "Keep Pixels with Alpha",
                        "summary": "This menu works in conjunction with the Alpha Threshold parameter below in determining which pixels to keep based on their alpha value."
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": ""
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "wireframe": {
                        "label": "Wire Frame",
                        "summary": "Enables and disables wire-frame rendering with the option of OpenGL Tesselated or Topology based wireframes."
                    },
                    "srcblend": {
                        "label": "Source Color *",
                        "summary": "This value is multiplied by the color value of the pixel that is being written to the Color-Buffer (also know as the Source Color)."
                    },
                    "pcaptdata": {
                        "label": "pCaptData Attrib",
                        "summary": ""
                    },
                    "blending": {
                        "label": "Blending(Transparency)",
                        "summary": "This toggle enables and disables blending. However see the wiki article Transparency."
                    },
                    "mat": {
                        "label": "MAT",
                        "summary": ""
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Selects which faces to render."
                    },
                    "alphatest": {
                        "label": "Discard Pixels Based on Alpha",
                        "summary": "This enables or disables the pixel alpha test."
                    },
                    "depthwriting": {
                        "label": "Write Depth Values",
                        "summary": "If Write Depth Values is on, pixels that pass the depth-test will write their depth value to the Depth-Buffer. If this isn't on then no changes will be made to the Depth-Buffer, regardless of if the pixels drawn pass or fail the depth-test."
                    },
                    "pcaptpath": {
                        "label": "pCaptPath Attrib",
                        "summary": ""
                    },
                    "wirewidth": {
                        "label": "Line Width",
                        "summary": "This value is the width that the wires will be. This value is in pixels."
                    }
                },
                "summary": "The Null MAT has no effect on the data. It is an instance of the MAT connected to its input."
            },
            "pointspriteMAT": {
                "label": "Point Sprite",
                "parameters": {
                    "mat": {
                        "label": "MAT",
                        "summary": ""
                    },
                    "deformdata": {
                        "label": "Get Bone Data:",
                        "summary": ""
                    },
                    "targetsop": {
                        "label": "SOP with Capture Data",
                        "summary": ""
                    },
                    "dodeform": {
                        "label": "Deform",
                        "summary": ""
                    },
                    "alpha": {
                        "label": "Alpha",
                        "summary": "The opacity of the material. This parameter is multiplied by point alpha of the object."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "separatealphafunc": {
                        "label": "Separate Alpha Function",
                        "summary": "This toggle enables and disables separate blending options for the alpha values."
                    },
                    "offsetleft": {
                        "label": "Offset Left",
                        "summary": ""
                    },
                    "attennear": {
                        "label": "Attenuate Near Distance",
                        "summary": "Points that are closer than or at this distance from the camera will use the Near Point Scale Parameter."
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "Turns on the polygon offset feature."
                    },
                    "srcblend": {
                        "label": "Source Color *",
                        "summary": "This value is multiplied by the color value of the pixel that is being written to the Color-Buffer (also know as the Source Color)."
                    },
                    "pcaptpath": {
                        "label": "pCaptPath Attrib",
                        "summary": ""
                    },
                    "pointscale": {
                        "label": "Constant Point Scale",
                        "summary": "A constant value that is applied to all points evenly. When Attenuate Point Scale is 0, the point sprite size will be pscale * this value."
                    },
                    "color": {
                        "label": "Color",
                        "summary": "The color of the light reflected from the material."
                    },
                    "destblenda": {
                        "label": "Destination Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel currently in the Color-Buffer (also known as the Destination Alpha)."
                    },
                    "offsetbottom": {
                        "label": "Offset Bottom",
                        "summary": ""
                    },
                    "destblend": {
                        "label": "Destination Color *",
                        "summary": "This value is multiplied by the color value of the pixel currently in the Color-Buffer (also known as the Destination Color)."
                    },
                    "depthfunc": {
                        "label": "Depth Test Function",
                        "summary": "The depth value of the pixel being drawn is compared to the depth value currently in the depth-buffer using this function. If the test passes then the pixel is drawn to the Frame-Buffer. If the test fails the pixel is discarded and no changes are made to the Frame-Buffer."
                    },
                    "srcblenda": {
                        "label": "Source Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel that is being written to the Color-Buffer (also know as the Source Alpha)."
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "alphatest": {
                        "label": "Discard Pixels Based on Alpha",
                        "summary": "This enables or disables the pixel alpha test."
                    },
                    "offsetright": {
                        "label": "Offset Right",
                        "summary": ""
                    },
                    "colormap": {
                        "label": "Color Map",
                        "summary": "The color map to apply to the sprites. The Color Map will be multiplied by the color of the sprites. The Color Map parameter can also take 3D / 2D Texture Arrays (from the Texture 3D TOP for example), and the w texture coordinate will select the correct map from the array.  The final size of the point sprite is controlled by the pscale point attribute (if present) getting multiplied of the result of the next 6 parameters. There are two types of scale this MAT can apply, and they are blended using the Attenuate Point Scale parameter to create one final point scale (which is multiplied by pscale)."
                    },
                    "attenfar": {
                        "label": "Attenuate Far Distance",
                        "summary": "Points that are farther than or at this distance from the camera will use the Far Point Scale Parameter."
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": ""
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "wireframe": {
                        "label": "Wire Frame",
                        "summary": "Enables and disables wire-frame rendering with the option of OpenGL Tesselated or Topology based wireframes."
                    },
                    "depthtest": {
                        "label": "Depth Test",
                        "summary": "Enables and disables the Depth-Test. If the depth-test is disabled, depths values aren't written to the Depth-Buffer."
                    },
                    "attenpscale": {
                        "label": "Attenuate Point Scale",
                        "summary": "This value blends between the Constant Point Scale and the Attenuated Point Scale. 0 means 100% constant point scale and 1 means 100% attenuated point scale.  Points that are closer than or at the Near distance from the camera will use the Near Point Scale, points between the Near Distance and Far Distance will use a blended scale between the Near Point Scale and the Far Point Scale. Points farther than the Far Point Distance will use the Far Point Scale."
                    },
                    "pcaptdata": {
                        "label": "pCaptData Attrib",
                        "summary": ""
                    },
                    "attensizefar": {
                        "label": "Far Point Scale",
                        "summary": "This point scale is applied at the far distance."
                    },
                    "blending": {
                        "label": "Blending(Transparency)",
                        "summary": "This toggle enables and disables blending. However see the wiki article Transparency."
                    },
                    "postmultalpha": {
                        "label": "Post-Mult Color by Alpha",
                        "summary": "Enable/disable multiplying color by alpha."
                    },
                    "alphathreshold": {
                        "label": "Alpha Threshold",
                        "summary": "This value is what the pixel's alpha is compared to to determine if the pixel should be drawn. Pixels with alpha greater than the Alpha Threshold will be drawn. Pixels with alpha less than or equal to the Alpha Threshold will not be drawn."
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Selects which faces to render."
                    },
                    "offsettop": {
                        "label": "Offset Top",
                        "summary": ""
                    },
                    "attensizenear": {
                        "label": "Near Point Scale",
                        "summary": "This point scale is applied at the near distance."
                    },
                    "alphafunc": {
                        "label": "Keep Pixels with Alpha",
                        "summary": "This menu works in conjunction with the Alpha Threshold parameter below in determining which pixels to keep based on their alpha value."
                    },
                    "wirewidth": {
                        "label": "Line Width",
                        "summary": "This value is the width that the wires will be. This value is in pixels."
                    },
                    "depthwriting": {
                        "label": "Write Depth Values",
                        "summary": "If Write Depth Values is on, pixels that pass the depth-test will write their depth value to the Depth-Buffer. If this isn't on then no changes will be made to the Depth-Buffer, regardless of if the pixels drawn pass or fail the depth-test."
                    }
                },
                "summary": "The Point Sprite MAT allows you to control some attributes of Point Sprites (creatable using the Particle SOP or DAT to SOP)."
            },
            "phongMAT": {
                "label": "Phong",
                "parameters": {
                    "emitmap": {
                        "label": "Emit Map",
                        "summary": "Specifies a TOP texture that is multiplied with the Emit color parameter of the material. The object must have texture coordinates. The alpha of this map is ignored."
                    },
                    "rim2map": {
                        "label": "Rim Color Map",
                        "summary": "This map will multiple the calculated rim light color."
                    },
                    "multitexexpr": {
                        "label": "GLSL Expression",
                        "summary": "GLSL code that combines the texture images (look to the start of this section for more details). This parameter can be left blank (which means the maps will just be multiplied together)."
                    },
                    "mat": {
                        "label": "MAT",
                        "summary": ""
                    },
                    "rim1color": {
                        "label": "Rim Color",
                        "summary": "The color of the rim light."
                    },
                    "deformdata": {
                        "label": "Get Bone Data:",
                        "summary": ""
                    },
                    "applypointcolor": {
                        "label": "Apply Point Color",
                        "summary": "Normally the color attribute (Cd[4]) coming from the SOP is used in the lighting calculation, you can turn off using the color attribute by un-checking this parameter."
                    },
                    "srcblend": {
                        "label": "Source Color *",
                        "summary": "This value is multiplied by the color value of the pixel that is being written to the Color-Buffer (also know as the Source Color)."
                    },
                    "dontrenormnorm": {
                        "label": "Don't Re-normalize Normal",
                        "summary": ""
                    },
                    "fastdeformtangent": {
                        "label": "Fast Deform Tangent",
                        "summary": ""
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "destblend": {
                        "label": "Destination Color *",
                        "summary": "This value is multiplied by the color value of the pixel currently in the Color-Buffer (also known as the Destination Color)."
                    },
                    "srcblenda": {
                        "label": "Source Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel that is being written to the Color-Buffer (also know as the Source Alpha)."
                    },
                    "alphamap": {
                        "label": "Alpha Map",
                        "summary": "This map multiplies the alpha of the object. It uses the red channel of the map, other channels are ignored."
                    },
                    "rim2enable": {
                        "label": "Enable Rim Light 2",
                        "summary": "Enables this rim light."
                    },
                    "darknessemit": {
                        "label": "Darkness Emit",
                        "summary": "The Phong MAT calculates the current brightness of color of the objects, after taking into account lights, rim lights, emission etc. It then uses this brightness (between 0-1) and fades in the Darkness Emit Color. The darker the area, the more of the darkness emit color that will be applied."
                    },
                    "colormap": {
                        "label": "Color Map",
                        "summary": "Specifies a TOP texture that is multiplied by the results of all of the lighting calculations. The alpha of this map is used as a part of calculating the objects alpha.  Clicking on the arrows to the right of the map field will open the Texture Sampling Parameters for Color Map.  The other Map parameters below will have their own Texture Sampling Parameters as well."
                    },
                    "specmap": {
                        "label": "Specular Map",
                        "summary": "Specifies a TOP texture that is multiplied with the Specular color parameter of the material. The object must have texture coordinates. The alpha of this map is ignored."
                    },
                    "spec2": {
                        "label": "Secondary Specular",
                        "summary": "Adds a secondary specular highlight color."
                    },
                    "ambdiff": {
                        "label": "Ambient uses Diffuse",
                        "summary": "Uses the Diffuse parameter for Ambient when checked."
                    },
                    "shadowstrength": {
                        "label": "Shadow Strength",
                        "summary": "This parameter will control how much being in a shadow will change the color of the lighting. At 1 the object will take on the Shadow Color parameter, at 0 it will behave as if it's not in a shadow, even if it is."
                    },
                    "colorbuffer3rgb": {
                        "label": "Color Buffer 3 RGB",
                        "summary": "Allows sending things like normals or diffuse color to different Render TOP color buffers in a single pass."
                    },
                    "rolloff": {
                        "label": "Alpha Rolloff",
                        "summary": "Controls how the alpha changes from Alpha Front to Alpha Side."
                    },
                    "darknessemitcolor": {
                        "label": "Darkness Emit Color",
                        "summary": "The color that is used for areas that are in darkness."
                    },
                    "pcaptpath": {
                        "label": "pCaptPath Attrib",
                        "summary": ""
                    },
                    "texture3": {
                        "label": "Texture 3",
                        "summary": "You can specify up to 4 textures for multi-texturing."
                    },
                    "rim2strengthramp": {
                        "label": "Rim Strength Ramp",
                        "summary": "You can specify a horizontal ramp (it will sample the texture at v = 0.5), which controls the the rim lights strength."
                    },
                    "shininess2": {
                        "label": "Secondary Shininess",
                        "summary": "Controls the secondary specular highlights (glossyness) of an object. Higher settings are more glossy, like plastic or shiny metal. Lower settings give more of a matte finish."
                    },
                    "bumpscale": {
                        "label": "Bump Scale",
                        "summary": "A multiplier for the 'bump effect' created by the Normal Map parameter."
                    },
                    "texture4": {
                        "label": "Texture 4",
                        "summary": "You can specify up to 4 textures for multi-texturing."
                    },
                    "diff": {
                        "label": "Diffuse",
                        "summary": "The color of the diffuse light reflected from the material."
                    },
                    "targetsop": {
                        "label": "SOP with Capture Data",
                        "summary": ""
                    },
                    "rim1width": {
                        "label": "Rim Width",
                        "summary": "How far from the center the rim light extends."
                    },
                    "frontfacelit": {
                        "label": "Polygon Front Faces",
                        "summary": "Controls how the polygon's normal is used to light the front face of the polygon. For more information refer to the Two-Sided Lighting article."
                    },
                    "rim1map": {
                        "label": "Rim Color Map",
                        "summary": "This map will multiple the calculated rim light color."
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "Turns on the polygon offset feature."
                    },
                    "alphatest": {
                        "label": "Discard Pixels Based on Alpha",
                        "summary": "This enables or disables the pixel alpha test."
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": ""
                    },
                    "rim1center": {
                        "label": "Rim Center",
                        "summary": "The center of the rim lights location, situated somewhere on a 360 degree circle."
                    },
                    "rim2color": {
                        "label": "Rim Color",
                        "summary": "The color of the rim light."
                    },
                    "colorbuffer4rgb": {
                        "label": "Color Buffer 4 RGB",
                        "summary": "Allows sending things like normals or diffuse color to different Render TOP color buffers in a single pass."
                    },
                    "parallaxocclusion": {
                        "label": "Parallax Occlusion",
                        "summary": "Enables parallax occlusion, an enhancement of the parallax mapping technique used with the height map. Parallax occlusion improves the quality of the texture offsetting in parallax mapping so that the higher parts of the height map appear to occlude the lower parts, giving a better illusion of height."
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "depthtest": {
                        "label": "Depth Test",
                        "summary": "Enables and disables the Depth-Test. If the depth-test is disabled, depths values aren't written to the Depth-Buffer."
                    },
                    "dontrenormeyevec": {
                        "label": "Don't Re-normalize Eye Vector",
                        "summary": ""
                    },
                    "darknessemitmap": {
                        "label": "Darkness Emit Map",
                        "summary": "This map multiplies the Darkness Emit Color. This maps alpha is not used."
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Selects which faces to render."
                    },
                    "fastnormhalfang": {
                        "label": "Fast Normalize Half-Angle",
                        "summary": ""
                    },
                    "alphafunc": {
                        "label": "Keep Pixels with Alpha",
                        "summary": "This menu works in conjunction with the Alpha Threshold parameter below in determining which pixels to keep based on their alpha value."
                    },
                    "shininess": {
                        "label": "Shininess",
                        "summary": "Controls the specular highlights (glossyness) of an object. Higher settings are more glossy, like plastic or shiny metal. Lower settings give more of a matte finish."
                    },
                    "shadowcolor": {
                        "label": "Shadow Color",
                        "summary": "The color that will be used in shadowed areas."
                    },
                    "emit": {
                        "label": "Emit",
                        "summary": "This is the color that the material will emit even if there is no light."
                    },
                    "colorbuffer2rgb": {
                        "label": "Color Buffer 2 RGB",
                        "summary": "Allows sending things like normals or diffuse color to different Render TOP color buffers in a single pass."
                    },
                    "separatealphafunc": {
                        "label": "Separate Alpha Function",
                        "summary": "This toggle enables and disables separate blending options for the alpha values."
                    },
                    "heightmapscale": {
                        "label": "Height Map Scale",
                        "summary": "Scale value applied to the height map. Can be used to increase or exaggerate the effect."
                    },
                    "colorbuffer5rgb": {
                        "label": "Color Buffer 5 RGB",
                        "summary": "Allows sending things like normals or diffuse color to different Render TOP color buffers in a single pass."
                    },
                    "destblenda": {
                        "label": "Destination Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel currently in the Color-Buffer (also known as the Destination Alpha)."
                    },
                    "writecameradepthtoalpha": {
                        "label": "Write Camera Space Depth to Alpha",
                        "summary": "This causes the camera space depth of the pixel to be written to the alpha channel of the output TOP. This value can be useful for post-processing effects, but ofcourse you will not have the result of all the alpha calculations if you turn this on (although they'll get used to multiply the output color, assuming Post-Mult Color by Alpha is enabled."
                    },
                    "depthfunc": {
                        "label": "Depth Test Function",
                        "summary": "The depth value of the pixel being drawn is compared to the depth value currently in the depth-buffer using this function. If the test passes then the pixel is drawn to the Frame-Buffer. If the test fails the pixel is discarded and no changes are made to the Frame-Buffer."
                    },
                    "rim2center": {
                        "label": "Rim Center",
                        "summary": "The center of the rim lights location, situated somewhere on a 360 degree circle."
                    },
                    "alphaside": {
                        "label": "Alpha Side",
                        "summary": "This is used for non-uniform alpha. It is the alpha value polygons that are facing away from the camera will get."
                    },
                    "constant": {
                        "label": "Constant",
                        "summary": "Adds to the final color. Where there are point colors, finalcolor += Point Color * Constant Color. This behaves like there is ambient illumination of 1 1 1. It is not affected by textures or transparency."
                    },
                    "rim2width": {
                        "label": "Rim Width",
                        "summary": "How far from the center the rim light extends."
                    },
                    "envmap": {
                        "label": "Environment Map",
                        "summary": "Uses a TOP texture to define an environment map for the material. Environment mapping simulates an object reflecting its surroundings. The TOP defined in this parameter is the texture that will be reflected. The Env Map is added to whatever the normal lighting will be, so to make an object purely reflective turn the Diffuse and Specular parameters to 0. This input expects a sphere map. An example of a sphere map can be found here. This input will also accept a cube map, created with the Cube Map TOP or the Render TOP's Render Cube Map parameter."
                    },
                    "envmapcolor": {
                        "label": "Environment Map Color",
                        "summary": "This color is multiplied with the texture specified by the Environment Map parameter above."
                    },
                    "instancetexture": {
                        "label": "Instance Texture",
                        "summary": "When provider per-instance textures in the Geometry COMP, this parameter selects which map the instance texture will be applied as."
                    },
                    "rim2strength": {
                        "label": "Rim Strength",
                        "summary": "Controls the brightness of the rim light."
                    },
                    "multitexturing": {
                        "label": "Multi-Texturing (Disables Color Map)",
                        "summary": "Enables multi-texturing. This disables the Color Map parameter."
                    },
                    "colorbuffer1rgb": {
                        "label": "Color Buffer 1 RGB",
                        "summary": "Allows sending things like normals or diffuse color to different Render TOP color buffers in a single pass."
                    },
                    "colorbuffer7rgb": {
                        "label": "Color Buffer 7 RGB",
                        "summary": "Allows sending things like normals or diffuse color to different Render TOP color buffers in a single pass."
                    },
                    "wirewidth": {
                        "label": "Line Width",
                        "summary": "This value is the width that the wires will be. This value is in pixels."
                    },
                    "diffusemap": {
                        "label": "Diffuse Map",
                        "summary": "Specifies a TOP that multiples the Diffuse Color. The object must have texture coordinates. The alpha of this map is ignored."
                    },
                    "heightmap": {
                        "label": "Height Map",
                        "summary": "Specifies a height texture map. The height map is used in conjunction with the normal map to perform parallax mapping."
                    },
                    "dodeform": {
                        "label": "Deform",
                        "summary": ""
                    },
                    "heightmapenable": {
                        "label": "Enable Height Map",
                        "summary": "Enables height mapping."
                    },
                    "dontrenormlightvec": {
                        "label": "Don't Re-normalize Light Vector",
                        "summary": ""
                    },
                    "normalmap": {
                        "label": "Normal Map (Bump)",
                        "summary": "Uses a Normal Map from TOPs to create a 'bump map' effect. Bump-mapping simulates bumps or wrinkles in a surface to give it a 3D depth effect. Your geometry must have tangent attributes created for this feature to work (T[4]). Create these using the Attribute Create SOP."
                    },
                    "rim1strengthramp": {
                        "label": "Rim Strength Ramp",
                        "summary": "You can specify a horizontal ramp (it will sample the texture at v = 0.5), which controls the the rim lights strength."
                    },
                    "texture2": {
                        "label": "Texture 2",
                        "summary": "You can specify up to 4 textures for multi-texturing."
                    },
                    "outputshader": {
                        "label": "Output Shader...",
                        "summary": "This button will bring up a dialog that will create a GLSL MAT and Text DATs with shader code that matches whatever effect this Phong MAT is currently creating. Since shaders are dependent on the number and type of lights, it will list some possible different shader choices, based on what lighting configurations have been used in the current system. If no shaders are listed in the dialog, it means no shader has been rendered in the current session of TouchDesigner. Turn on the viewer for the Phong MAT, or setup a render in a Render TOP. That will create/compile some shaders and will cause the list to be populated. For example if you want to see a shader that does shadow mapping, setup a render that does shadow mapping and you will see that come up in the list."
                    },
                    "dontrenormspotvec": {
                        "label": "Don't Re-normalize Spot Vector",
                        "summary": ""
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "texture1": {
                        "label": "Texture 1",
                        "summary": "You can specify up to 4 textures for multi-texturing."
                    },
                    "alphamode": {
                        "label": "Uniform Alpha",
                        "summary": "Turning this off will make the alpha change depending on orientation of each polygon's normal compared to the camera. Normals that are pointing at the camera will results in the polygon having an alpha of Alpha Front. Normals that are perpendicular to the camera (facing sideways/up/down) will have Alpha Side for their alpha."
                    },
                    "alphafront": {
                        "label": "Alpha Front",
                        "summary": "The opacity of the material. This parameter is multiplied by point alpha of the object (as will as any other alpha source)."
                    },
                    "alphathreshold": {
                        "label": "Alpha Threshold",
                        "summary": "This value is what the pixel's alpha is compared to to determine if the pixel should be drawn. Pixels with alpha greater than the Alpha Threshold will be drawn. Pixels with alpha less than or equal to the Alpha Threshold will not be drawn."
                    },
                    "wireframe": {
                        "label": "Wire Frame",
                        "summary": "Enables and disables wire-frame rendering with the option of OpenGL Tesselated or Topology based wireframes."
                    },
                    "spec": {
                        "label": "Specular",
                        "summary": "The color of the specular light reflected from the material. This changes the color of the highlights on shiney objects."
                    },
                    "envmaprotate": {
                        "label": "Environment Map Rotate",
                        "summary": "Rotate the texture specified by the Environment Map parameter above."
                    },
                    "amb": {
                        "label": "Ambient",
                        "summary": "The color of the ambient light reflected from the material."
                    },
                    "alphamultlight": {
                        "label": "Mult Alpha by Light Luminance",
                        "summary": "When this is enabled, the luminance of the lighting will be multiplied by the alpha, to decrease/increase it."
                    },
                    "rim1enable": {
                        "label": "Enable Rim Light 1",
                        "summary": "Enables this rim light."
                    },
                    "blending": {
                        "label": "Blending(Transparency)",
                        "summary": "This toggle enables and disables blending. However see the wiki article Transparency."
                    },
                    "postmultalpha": {
                        "label": "Post-Mult Color by Alpha",
                        "summary": "At the end of all of the calculations, the color (RGB) is multiplied by the calculated alpha. You can stop this from happening by turning off this toggle."
                    },
                    "colorbuffer6rgb": {
                        "label": "Color Buffer 6 RGB",
                        "summary": "Allows sending things like normals or diffuse color to different Render TOP color buffers in a single pass."
                    },
                    "rim1strength": {
                        "label": "Rim Strength",
                        "summary": "Controls the brightness of the rim light."
                    },
                    "depthwriting": {
                        "label": "Write Depth Values",
                        "summary": "If Write Depth Values is on, pixels that pass the depth-test will write their depth value to the Depth-Buffer. If this isn't on then no changes will be made to the Depth-Buffer, regardless of if the pixels drawn pass or fail the depth-test."
                    },
                    "pcaptdata": {
                        "label": "pCaptData Attrib",
                        "summary": ""
                    },
                    "backfacelit": {
                        "label": "Polygon Back Faces",
                        "summary": "Controls how the polygon's normal is used to light the back face of the polygon. For more information refer to the Two-Sided Lighting article."
                    }
                },
                "summary": "The Phong MAT creates a material using the Phong Shading model."
            },
            "selectMAT": {
                "label": "Select",
                "parameters": {
                    "mat": {
                        "label": "MAT",
                        "summary": ""
                    },
                    "deformdata": {
                        "label": "Get Bone Data:",
                        "summary": ""
                    },
                    "targetsop": {
                        "label": "SOP with Capture Data",
                        "summary": ""
                    },
                    "dodeform": {
                        "label": "Deform",
                        "summary": ""
                    },
                    "separatealphafunc": {
                        "label": "Separate Alpha Function",
                        "summary": "This toggle enables and disables separate blending options for the alpha values."
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "Turns on the polygon offset feature."
                    },
                    "depthtest": {
                        "label": "Depth Test",
                        "summary": "Enables and disables the Depth-Test. If the depth-test is disabled, depths values aren't written to the Depth-Buffer."
                    },
                    "destblenda": {
                        "label": "Destination Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel currently in the Color-Buffer (also known as the Destination Alpha)."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "destblend": {
                        "label": "Destination Color *",
                        "summary": "This value is multiplied by the color value of the pixel currently in the Color-Buffer (also known as the Destination Color)."
                    },
                    "depthfunc": {
                        "label": "Depth Test Function",
                        "summary": "The depth value of the pixel being drawn is compared to the depth value currently in the depth-buffer using this function. If the test passes then the pixel is drawn to the Frame-Buffer. If the test fails the pixel is discarded and no changes are made to the Frame-Buffer."
                    },
                    "srcblenda": {
                        "label": "Source Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel that is being written to the Color-Buffer (also know as the Source Alpha)."
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "alphathreshold": {
                        "label": "Alpha Threshold",
                        "summary": "This value is what the pixel's alpha is compared to to determine if the pixel should be drawn. Pixels with alpha greater than the Alpha Threshold will be drawn. Pixels with alpha less than or equal to the Alpha Threshold will not be drawn."
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": ""
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "wireframe": {
                        "label": "Wire Frame",
                        "summary": "Enables and disables wire-frame rendering with the option of OpenGL Tesselated or Topology based wireframes."
                    },
                    "srcblend": {
                        "label": "Source Color *",
                        "summary": "This value is multiplied by the color value of the pixel that is being written to the Color-Buffer (also know as the Source Color)."
                    },
                    "pcaptdata": {
                        "label": "pCaptData Attrib",
                        "summary": ""
                    },
                    "selectmat": {
                        "label": "Select MAT",
                        "summary": "The path to the MAT being selected."
                    },
                    "blending": {
                        "label": "Blending(Transparency)",
                        "summary": "This toggle enables and disables blending. However see the wiki article Transparency."
                    },
                    "pcaptpath": {
                        "label": "pCaptPath Attrib",
                        "summary": ""
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Selects which faces to render."
                    },
                    "alphatest": {
                        "label": "Discard Pixels Based on Alpha",
                        "summary": "This enables or disables the pixel alpha test."
                    },
                    "depthwriting": {
                        "label": "Write Depth Values",
                        "summary": "If Write Depth Values is on, pixels that pass the depth-test will write their depth value to the Depth-Buffer. If this isn't on then no changes will be made to the Depth-Buffer, regardless of if the pixels drawn pass or fail the depth-test."
                    },
                    "alphafunc": {
                        "label": "Keep Pixels with Alpha",
                        "summary": "This menu works in conjunction with the Alpha Threshold parameter below in determining which pixels to keep based on their alpha value."
                    },
                    "wirewidth": {
                        "label": "Line Width",
                        "summary": "This value is the width that the wires will be. This value is in pixels."
                    }
                },
                "summary": "The Select MAT gets another material from any location in the project."
            },
            "lineMAT": {
                "label": "Line",
                "parameters": {
                    "colorsteepness": {
                        "label": "Color Steepness",
                        "summary": "Controls the steepness of the S Curve for color interpolation."
                    },
                    "deformdata": {
                        "label": "Get Bone Data:",
                        "summary": "Specifies where the deform bone data will be obtained."
                    },
                    "vectortaperstrength": {
                        "label": "Vector Taper Strength",
                        "summary": ": A coefficient to scale the width of end part of the Vector."
                    },
                    "linestartcaptype": {
                        "label": "Line Start Cap Type",
                        "summary": "A menu to Specify the end cap type at the Line start. You can control the size of each end cap type in the Cap page."
                    },
                    "widthbias": {
                        "label": "Width Bias",
                        "summary": "Moves the S Curve\\u2019s bias backward or forward for width interpolation (only S Curve depth model)."
                    },
                    "fovindependent": {
                        "label": "FOV Independent",
                        "summary": "Toggle to make the width independent from the field of view. Note that enabling this toggle can in some case lead to losing resolution independence."
                    },
                    "specifyvectorfarcolor": {
                        "label": "Specify Vector FarColor",
                        "summary": "A toggle to use the far color and interpolate the values between near and far color."
                    },
                    "depthtest": {
                        "label": "Depth Test",
                        "summary": "Enables and disables the Depth-Test. If the depth-test is disabled, depths values aren't written to the Depth-Buffer."
                    },
                    "linejointtype": {
                        "label": "Line Joint Type",
                        "summary": "A menu to select the joint type where two lines segments meet."
                    },
                    "pointtype": {
                        "label": "Point Type",
                        "summary": "A menu to select the Point type."
                    },
                    "vectorfarcolor": {
                        "label": "Vector Far Color",
                        "summary": "Specifies the color value for the Vector at the Distance Far plane and beyond (farther from camera)."
                    },
                    "drawvectors": {
                        "label": "Draw Vectors",
                        "summary": "A toggle to draw the Vectors at each point."
                    },
                    "destblenda": {
                        "label": "Destination Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel currently in the Color-Buffer (also known as the Destination Alpha)."
                    },
                    "widthsteepness": {
                        "label": "Width Steepness",
                        "summary": "Controls the steepness of the S Curve for width interpolation (only S Curve depth model). The higher the value of the steepness, you will notice more dramatic changes (higher slope) in the curve width. Also, with lower values of steepness, the curve transforms into a more linear form."
                    },
                    "destblend": {
                        "label": "Destination Color *",
                        "summary": "This value is multiplied by the color value of the pixel currently in the Color-Buffer (also known as the Destination Color)."
                    },
                    "depthfunc": {
                        "label": "Depth Test Function",
                        "summary": "The depth value of the pixel being drawn is compared to the depth value currently in the depth-buffer using this function. If the test passes then the pixel is drawn to the Frame-Buffer. If the test fails the pixel is discarded and no changes are made to the Frame-Buffer."
                    },
                    "srcblenda": {
                        "label": "Source Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel that is being written to the Color-Buffer (also know as the Source Alpha)."
                    },
                    "depthinterpolationmodel": {
                        "label": "Depth Interpolation Model",
                        "summary": "Depth Interpolation Model depthmodel \\u2013 a menu to select how the width of line items changes by their distance from the camera."
                    },
                    "linenearalpha": {
                        "label": "Line Near Alpha",
                        "summary": "Specifies the alpha value for the Line at the Distance Near plane and any location closer to camera."
                    },
                    "alphathreshold": {
                        "label": "Alpha Threshold",
                        "summary": "This value is what the pixel's alpha is compared to to determine if the pixel should be drawn. Pixels with alpha greater than the Alpha Threshold will be drawn. Pixels with alpha less than or equal to the Alpha Threshold will not be drawn."
                    },
                    "drawpoints": {
                        "label": "Draw Points",
                        "summary": "A toggle to draw the Points."
                    },
                    "roundwidth": {
                        "label": "Round Width",
                        "summary": "Specifies a scale to the width of Round end caps."
                    },
                    "vectorendcaptype": {
                        "label": "Vector End Cap Type",
                        "summary": "A menu to Specify the end cap type at the Vector end. You can control the size of each end cap type in the Cap page."
                    },
                    "pcaptpath": {
                        "label": "pCaptPath Attrib",
                        "summary": "Specifies the name of the pCaptPath attribute to use. When your geometry has been put through a Bone Group SOP, the attributes will be split into names like pCaptPath0, pCaptPath1. You can only render 1 bone group at a time, so this should match the group you are rendering with this material."
                    },
                    "squarewidth": {
                        "label": "Square Width",
                        "summary": "Specifies a scale to the width of Square end caps."
                    },
                    "blending": {
                        "label": "Blending(Transparency)",
                        "summary": "This toggle enables and disables blending. However see the wiki article Transparency."
                    },
                    "lineendtaperstrength": {
                        "label": "Line End Taper Strength",
                        "summary": ""
                    },
                    "arrowtaillength": {
                        "label": "Arrow Tail Length",
                        "summary": "Specifies a scale to the tail length of Arrow end caps (the longer the tail the sharper it will look like)."
                    },
                    "triangleheight": {
                        "label": "Triangle Height",
                        "summary": "Specifies a scale to the height of Triangle end caps."
                    },
                    "vectornearalpha": {
                        "label": "Vector Near Alpha",
                        "summary": "Specifies the alpha value for the Vector at the Distance Near plane and any location closer to camera."
                    },
                    "drawlines": {
                        "label": "Draw Lines",
                        "summary": "A toggle to draw the Line polygons."
                    },
                    "colorbias": {
                        "label": "Color Bias",
                        "summary": "Moves the S Curve\\u2019s bias backward or forward for color interpolation."
                    },
                    "widthlinearize": {
                        "label": "Width Linearize",
                        "summary": "Control the amount of curvature in the curve for width interpolation (only S Curve depth model)."
                    },
                    "pointsizemultiplier": {
                        "label": "Point Size Multiplier",
                        "summary": "Specifies a scale coefficient to the size of the Point. By default, the point radius size equals to the width at the point\\u2019s location from the camera."
                    },
                    "specifylinefarcolor": {
                        "label": "Specify Line Far Color",
                        "summary": "A toggle to use the far color and interpolate the values between near and far color."
                    },
                    "distancefar": {
                        "label": "Distance Far",
                        "summary": "Specifies a far plane with a certain distance from the camera."
                    },
                    "linefaralpha": {
                        "label": "Line Far Alpha",
                        "summary": "Specifies the alpha value for the Line at the Distance Far plane and beyond (farther from camera)."
                    },
                    "targetsop": {
                        "label": "SOP with Capture Data",
                        "summary": "Specifies the SOP that contains the deform capture attributes."
                    },
                    "dodeform": {
                        "label": "Deform",
                        "summary": "Enables deforms on this material."
                    },
                    "pointfaralpha": {
                        "label": "Point Far Alpha",
                        "summary": "Specifies the alpha value for the Point at the Distance Far plane and beyond (farther from camera)."
                    },
                    "attribute": {
                        "label": "Attribute",
                        "summary": "Specify the geometry Attribute to use to render the Vector. Some standard attribute are: N, P, Cd, uv, however it is possible to specify a custom attribute. Note that this value is case sensitive, ensure that the it matches with the name of the attribute for that point/vector."
                    },
                    "colorlinearize": {
                        "label": "Color Linearize",
                        "summary": "Control the amount of curvature in the curve for color interpolation."
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "Turns on the polygon offset feature."
                    },
                    "widthnear": {
                        "label": "Width Near",
                        "summary": "Specifies a fixed width value when the distance from camera is less than or equal to Distance Near."
                    },
                    "miterthreshold": {
                        "label": "Miter Threshold (deg)",
                        "summary": "Specifies a threshold value in degrees for the Miter joint which alters the joint shape to Bevel joint if the angle between each two lines segments is bigger than this value."
                    },
                    "wirewidth": {
                        "label": "Line Width",
                        "summary": "This value is the width that the wires will be. This value is in pixels."
                    },
                    "alphatest": {
                        "label": "Discard Pixels Based on Alpha",
                        "summary": "This enables or disables the pixel alpha test."
                    },
                    "vectorstartcaptype": {
                        "label": "Vector Start Cap Type",
                        "summary": "A menu to Specify the end cap type at the Vector start. You can control the size of each end cap type in the Cap page."
                    },
                    "pointnearalpha": {
                        "label": "Point Near Alpha",
                        "summary": "Specifies the alpha value for the Point at the Distance Near plane and any location closer to camera."
                    },
                    "pointnearcolor": {
                        "label": "Point Near Color",
                        "summary": "Specifies the color value for the Point at the Distance Near plane and any location closer to camera."
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "linefarcolor": {
                        "label": "Line Far Color",
                        "summary": "Specifies the color value for the Line at the Distance Far plane and beyond (farther from camera)."
                    },
                    "linenearcolor": {
                        "label": "Line Near Color",
                        "summary": "Specifies the color value for the Line at the Distance Near plane and any location closer to camera."
                    },
                    "trianglewidth": {
                        "label": "Triangle Width",
                        "summary": "Specifies a scale to the width of Triangle end caps."
                    },
                    "widthfar": {
                        "label": "Width Far",
                        "summary": "Specifies a fixed width value when the distance from the camera is equal or bigger than the Distance Far. Note when the Near-Far Range option is selected as the Depth Model, any point in between Distance Near and Distance Far will be calculated based on sine curve."
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": "Specifies the path to the COMP where the root of the skeleton is located."
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "wireframe": {
                        "label": "Wire Frame",
                        "summary": "Enables and disables wire-frame rendering with the option of OpenGL Tesselated or Topology based wireframes."
                    },
                    "srcblend": {
                        "label": "Source Color *",
                        "summary": "This value is multiplied by the color value of the pixel that is being written to the Color-Buffer (also know as the Source Color)."
                    },
                    "arrowhead": {
                        "label": "Arrow Head",
                        "summary": "Specifies a scale to the height (from the base of arrow to the head) of Arrow end caps."
                    },
                    "arrowwidth": {
                        "label": "Arrow Width",
                        "summary": "Specifies a scale to the width of Arrow end caps."
                    },
                    "separatealphafunc": {
                        "label": "Separate Alpha Function",
                        "summary": "This toggle enables and disables separate blending options for the alpha values."
                    },
                    "liftdirection": {
                        "label": "Lift Direction",
                        "summary": "Specifies an offset for displacing the line points along with the Camera Z or along with normal direction."
                    },
                    "pointfarcolor": {
                        "label": "Point Far Color",
                        "summary": "Specifies the color value for the Point at the Distance Far plane and beyond (farther from camera)."
                    },
                    "vectorfaralpha": {
                        "label": "Vector Far Alpha",
                        "summary": "Specifies the alpha value for the Vector at the Distance Far plane and beyond (farther from camera)."
                    },
                    "specifypointfarcolor": {
                        "label": "Specify Point Far Color",
                        "summary": "A toggle to use the far color and interpolate the values between near and far color."
                    },
                    "distancenear": {
                        "label": "Distance Near",
                        "summary": "Specifies a near plane with a certain distance from the camera."
                    },
                    "roundheight": {
                        "label": "Round Height",
                        "summary": "Specifies a scale to the height of Round end caps."
                    },
                    "vectornearcolor": {
                        "label": "Vector Near Color",
                        "summary": "Specifies the color value for the Vector at the Distance Near plane and any location closer to camera."
                    },
                    "mat": {
                        "label": "MAT",
                        "summary": "When obtaining deform data from a MAT or a Deform In MAT, this is where that MAT is specified."
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Selects which faces to render."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "scale": {
                        "label": "Scale",
                        "summary": "A scale value which applies on the length of the Vector."
                    },
                    "depthwriting": {
                        "label": "Write Depth Values",
                        "summary": "If Write Depth Values is on, pixels that pass the depth-test will write their depth value to the Depth-Buffer. If this isn't on then no changes will be made to the Depth-Buffer, regardless of if the pixels drawn pass or fail the depth-test."
                    },
                    "alphafunc": {
                        "label": "Keep Pixels with Alpha",
                        "summary": "This menu works in conjunction with the Alpha Threshold parameter below in determining which pixels to keep based on their alpha value."
                    },
                    "pcaptdata": {
                        "label": "pCaptData Attrib",
                        "summary": "Much like pCaptPath Attrib."
                    },
                    "lineendcaptype": {
                        "label": "Line End Cap Type",
                        "summary": "A menu to Specify the end cap type at the Line end."
                    },
                    "squareheight": {
                        "label": "Square Height",
                        "summary": "Specifies a scale to the height of Square end caps."
                    }
                },
                "summary": ""
            },
            "pbrMAT": {
                "label": "PBR",
                "parameters": {
                    "emitmap": {
                        "label": "Emit Map",
                        "summary": ""
                    },
                    "rim2map": {
                        "label": "Rim Color Map",
                        "summary": "This map will multiple the calculated rim light color."
                    },
                    "deformdata": {
                        "label": "Get Bone Data:",
                        "summary": ""
                    },
                    "depthfunc": {
                        "label": "Depth Test Function",
                        "summary": "The depth value of the pixel being drawn is compared to the depth value currently in the depth-buffer using this function. If the test passes then the pixel is drawn to the Frame-Buffer. If the test fails the pixel is discarded and no changes are made to the Frame-Buffer."
                    },
                    "mat": {
                        "label": "MAT",
                        "summary": ""
                    },
                    "basecolormap": {
                        "label": "Base Color Map",
                        "summary": "Clicking on the arrows to the right of the map field will open the Texture Sampling Parameters for Color Map.  The other Map parameters below will have their own Texture Sampling Parameters as well."
                    },
                    "basecolor": {
                        "label": "Base Color",
                        "summary": "Base color of the texture, used to calculate diffuse and specular contributions."
                    },
                    "applypointcolor": {
                        "label": "Apply Point Color",
                        "summary": "Normally the color attribute (Cd[4]) coming from the SOP is used in the lighting calculation, you can turn off using the color attribute by un-checking this parameter."
                    },
                    "srcblend": {
                        "label": "Source Color *",
                        "summary": "This value is multiplied by the color value of the pixel that is being written to the Color-Buffer (also know as the Source Color)."
                    },
                    "dontrenormnorm": {
                        "label": "Don't Re-normalize Normal",
                        "summary": ""
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "destblend": {
                        "label": "Destination Color *",
                        "summary": "This value is multiplied by the color value of the pixel currently in the Color-Buffer (also known as the Destination Color)."
                    },
                    "srcblenda": {
                        "label": "Source Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel that is being written to the Color-Buffer (also know as the Source Alpha)."
                    },
                    "rim2enable": {
                        "label": "Enable Rim Light 2",
                        "summary": "Enables this rim light."
                    },
                    "darknessemit": {
                        "label": "Darkness Emit",
                        "summary": "The Phong MAT calculates the current brightness of color of the objects, after taking into account lights, rim lights, emission etc. It then uses this brightness (between 0-1) and fades in the Darkness Emit Color. The darker the area, the more of the darkness emit color that will be applied."
                    },
                    "envlightquality": {
                        "label": "Env Light Quality",
                        "summary": "The sampling quality of the Environment Light with the material."
                    },
                    "fastdeformtangent": {
                        "label": "Fast Deform Tangent",
                        "summary": ""
                    },
                    "shadowstrength": {
                        "label": "Shadow Strength",
                        "summary": "This parameter will control how much being in a shadow will change the color of the lighting. At 1 the object will take on the Shadow Color parameter, at 0 it will behave as if it's not in a shadow, even if it is."
                    },
                    "colorbuffer3rgb": {
                        "label": "Color Buffer 3 RGB",
                        "summary": "Allows sending things like normals or emit color to different Render TOP color buffers in a single pass."
                    },
                    "rolloff": {
                        "label": "Alpha Rolloff",
                        "summary": "Controls how the alpha changes from Alpha Front to Alpha Side."
                    },
                    "darknessemitcolor": {
                        "label": "Darkness Emit Color",
                        "summary": "The color that is used for areas that are in darkness."
                    },
                    "pcaptpath": {
                        "label": "pCaptPath Attrib",
                        "summary": ""
                    },
                    "rim2strengthramp": {
                        "label": "Rim Strength Ramp",
                        "summary": "You can specify a horizontal ramp (it will sample the texture at v = 0.5), which controls the the rim lights strength."
                    },
                    "parallaxocclusion": {
                        "label": "Parallax Occlusion",
                        "summary": "Enables parallax occlusion, an enhancement of the parallax mapping technique used with the height map. Parallax occlusion improves the quality of the texture offsetting in parallax mapping so that the higher parts of the height map appear to occlude the lower parts, giving a better illusion of height."
                    },
                    "bumpscale": {
                        "label": "Bump Scale",
                        "summary": "A multiplier for the 'bump effect' created by the Normal Map parameter."
                    },
                    "roughness": {
                        "label": "Roughness",
                        "summary": "The amount of contribution the Roughness Map adds to the material. Used to calculate specular D, R, and F (blog.selfshadow.com/publications/s2013-shading-course/karis/s2013_pbs_epic_notes_v2.pdf page 3)."
                    },
                    "ambientocclusionmap": {
                        "label": "Ambient Occlusion Map",
                        "summary": "Specifies a ambient occlusion texture map. This is equivalent to the Ambient Occlusion map in Substance Designer. Ambient Occlusion affects the contribution from the Environement Light COMP."
                    },
                    "rim1width": {
                        "label": "Rim Width",
                        "summary": "How far from the center the rim light extends."
                    },
                    "frontfacelit": {
                        "label": "Polygon Front Faces",
                        "summary": "Controls how the polygon's normal is used to light the front face of the polygon. For more information refer to the Two-Sided Lighting article."
                    },
                    "rim1map": {
                        "label": "Rim Color Map",
                        "summary": "This map will multiple the calculated rim light color."
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "Turns on the polygon offset feature."
                    },
                    "alphatest": {
                        "label": "Discard Pixels Based on Alpha",
                        "summary": "This enables or disables the pixel alpha test."
                    },
                    "alphamap": {
                        "label": "Alpha Map",
                        "summary": "This map multiplies the alpha of the object. It uses the red channel of the map, other channels are ignored."
                    },
                    "rim2color": {
                        "label": "Rim Color",
                        "summary": "The color of the rim light."
                    },
                    "heightmap": {
                        "label": "Height Map",
                        "summary": "Specifies a height texture map. This is equivalent to the Height map in Substance Designer. The height map is used in conjunction with the normal map to perform parallax mapping."
                    },
                    "colorbuffer4rgb": {
                        "label": "Color Buffer 4 RGB",
                        "summary": "Allows sending things like normals or emit color to different Render TOP color buffers in a single pass."
                    },
                    "colorbuffer7rgb": {
                        "label": "Color Buffer 7 RGB",
                        "summary": "Allows sending things like normals or emit color to different Render TOP color buffers in a single pass."
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "depthtest": {
                        "label": "Depth Test",
                        "summary": "Enables and disables the Depth-Test. If the depth-test is disabled, depths values aren't written to the Depth-Buffer."
                    },
                    "dontrenormeyevec": {
                        "label": "Don't Re-normalize Eye Vector",
                        "summary": ""
                    },
                    "roughnessmap": {
                        "label": "Roughness Map",
                        "summary": "Specifies a roughness texture map. This is equivalent to the Roughness map in Substance Designer."
                    },
                    "metallic": {
                        "label": "Metallic",
                        "summary": "The amount of contribution the Metallic Map adds to the material."
                    },
                    "darknessemitmap": {
                        "label": "Darkness Emit Map",
                        "summary": "This map multiplies the Darkness Emit Color. This maps alpha is not used."
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Selects which faces to render."
                    },
                    "fastnormhalfang": {
                        "label": "Fast Normalize Half-Angle",
                        "summary": ""
                    },
                    "alphafunc": {
                        "label": "Keep Pixels with Alpha",
                        "summary": "This menu works in conjunction with the Alpha Threshold parameter below in determining which pixels to keep based on their alpha value."
                    },
                    "shadowcolor": {
                        "label": "Shadow Color",
                        "summary": "The color that will be used in shadowed areas."
                    },
                    "substance": {
                        "label": "Substance TOP",
                        "summary": "Reference a Substance TOP containing an .sbsar file. Referencing the TOP will automatically unpack all enabled textures without having to manually fill in any of the below texture maps. Manually filling in any of the texture map parameters will override the texture automatically pulled from the .sbsar package."
                    },
                    "emit": {
                        "label": "Emit",
                        "summary": "This is the color that the material will emit even if there is no light."
                    },
                    "rim2strength": {
                        "label": "Rim Strength",
                        "summary": "Controls the brightness of the rim light."
                    },
                    "separatealphafunc": {
                        "label": "Separate Alpha Function",
                        "summary": "This toggle enables and disables separate blending options for the alpha values."
                    },
                    "heightmapscale": {
                        "label": "Height Map Scale",
                        "summary": "Scale value applied to the height map. Can be used to increase or exaggerate the effect."
                    },
                    "colorbuffer5rgb": {
                        "label": "Color Buffer 5 RGB",
                        "summary": "Allows sending things like normals or emit color to different Render TOP color buffers in a single pass."
                    },
                    "destblenda": {
                        "label": "Destination Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel currently in the Color-Buffer (also known as the Destination Alpha)."
                    },
                    "writecameradepthtoalpha": {
                        "label": "Write Camera Space Depth to Alpha",
                        "summary": "This cause the camera space depth of the pixel to be written to the alpha channel of the output TOP. This value can be useful for post-processing effects, but ofcourse you will not have the result of all the alpha calculations if you turn this on (although they'll get used to multiply the output color, assuming Post-Mult Color by Alpha is enabled."
                    },
                    "targetsop": {
                        "label": "SOP with Capture Data",
                        "summary": ""
                    },
                    "rim2center": {
                        "label": "Rim Center",
                        "summary": "The center of the rim lights location, situated somewhere on a 360 degree circle."
                    },
                    "alphaside": {
                        "label": "Alpha Side",
                        "summary": "This is used for non-uniform alpha. It is the alpha value polygons that are facing away from the camera will get."
                    },
                    "constant": {
                        "label": "Constant",
                        "summary": "Adds to the final color. Where there are point colors, finalcolor += Point Color * Constant Color. This behaves like there is ambient illumination of 1 1 1. It is not affected by textures or transparency."
                    },
                    "rim2width": {
                        "label": "Rim Width",
                        "summary": "How far from the center the rim light extends."
                    },
                    "ambientocclusion": {
                        "label": "Ambient Occlusion",
                        "summary": "The amount of contribution the Ambient Occlusion Map adds to the material. Ambient Occlusion affects the contribution from the Environement Light COMP."
                    },
                    "instancetexture": {
                        "label": "Instance Texture",
                        "summary": "When provider per-instance textures in the Geometry COMP, this parameter selects which map the instance texture will be applied as."
                    },
                    "colorbuffer1rgb": {
                        "label": "Color Buffer 1 RGB",
                        "summary": "Allows sending things like normals or emit color to different Render TOP color buffers in a single pass."
                    },
                    "alphathreshold": {
                        "label": "Alpha Threshold",
                        "summary": "This value is what the pixel's alpha is compared to to determine if the pixel should be drawn. Pixels with alpha greater than the Alpha Threshold will be drawn. Pixels with alpha less than or equal to the Alpha Threshold will not be drawn."
                    },
                    "wirewidth": {
                        "label": "Line Width",
                        "summary": "This value is the width that the wires will be. This value is in pixels."
                    },
                    "specularlevelmap": {
                        "label": "Specular Level Map",
                        "summary": "Specifies a specular level map."
                    },
                    "dodeform": {
                        "label": "Deform",
                        "summary": ""
                    },
                    "heightmapenable": {
                        "label": "Enable Height Map",
                        "summary": "Enables height mapping."
                    },
                    "dontrenormlightvec": {
                        "label": "Don't Re-normalize Light Vector",
                        "summary": ""
                    },
                    "normalmap": {
                        "label": "Normal Map (Bump)",
                        "summary": "Uses a Normal Map from TOPs to create a 'bump map' effect. Bump-mapping simulates bumps or wrinkles in a surface to give it a 3D depth effect. Your geometry must have tangent attributes created for this feature to work (T[4]). Create these using the Attribute Create SOP."
                    },
                    "rim1strengthramp": {
                        "label": "Rim Strength Ramp",
                        "summary": "You can specify a horizontal ramp (it will sample the texture at v = 0.5), which controls the the rim lights strength."
                    },
                    "specularlevel": {
                        "label": "Specular Level",
                        "summary": "The amount of contribution the Specular Level Map adds to the material."
                    },
                    "outputshader": {
                        "label": "Output Shader...",
                        "summary": "This button will bring up a dialog that will create a GLSL MAT and Text DATs with shader code that this PBR MAT is currently using. Since shaders are dependent on the number and type of lights, it will list some possible different shader choices, based on what lighting configurations have been used in the current system. If no shaders are listed in the dialog, it means no shader has been rendered in the current session of TouchDesigner. Turn on the viewer for the Phong MAT, or setup a render in a Render TOP. That will create/compile some shaders and will cause the list to be populated. For example if you want to see a shader that does shadow mapping, setup a render that does shadow mapping and you will see that come up in the list."
                    },
                    "dontrenormspotvec": {
                        "label": "Don't Re-normalize Spot Vector",
                        "summary": ""
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "colorbuffer2rgb": {
                        "label": "Color Buffer 2 RGB",
                        "summary": "Allows sending things like normals or emit color to different Render TOP color buffers in a single pass."
                    },
                    "alphamode": {
                        "label": "Uniform Alpha",
                        "summary": "Turning this off will make the alpha change depending on orientation of each polygon's normal compared to the camera. Normals that are pointing at the camera will results in the polygon having an alpha of Alpha Front. Normals that are perpendicular to the camera (facing sideways/up/down) will have Alpha Side for their alpha."
                    },
                    "alphafront": {
                        "label": "Alpha Front",
                        "summary": "The opacity of the material. This parameter is multiplied by point alpha of the object (as will as any other alpha source)."
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": ""
                    },
                    "wireframe": {
                        "label": "Wire Frame",
                        "summary": "Enables and disables wire-frame rendering with the option of OpenGL Tesselated or Topology based wireframes."
                    },
                    "metallicmap": {
                        "label": "Metallic Map",
                        "summary": "Specifies a metallic texture map. This is equivalent to the Metallic map in Substance Designer."
                    },
                    "alphamultlight": {
                        "label": "Mult Alpha by Light Luminance",
                        "summary": "When this is enabled, the luminance of the lighting will be multiplied by the alpha, to decreease/increase it."
                    },
                    "rim1color": {
                        "label": "Rim Color",
                        "summary": "The color of the rim light."
                    },
                    "rim1enable": {
                        "label": "Enable Rim Light 1",
                        "summary": "Enables this rim light."
                    },
                    "blending": {
                        "label": "Blending(Transparency)",
                        "summary": "This toggle enables and disables blending. However see the wiki article Transparency."
                    },
                    "postmultalpha": {
                        "label": "Post-Mult Color by Alpha",
                        "summary": "At the end of all of the calculations, the color (RGB) is multiplied by the calculated alpha. You can stop this from happening by turning off this checkbox."
                    },
                    "colorbuffer6rgb": {
                        "label": "Color Buffer 6 RGB",
                        "summary": "Allows sending things like normals or emit color to different Render TOP color buffers in a single pass."
                    },
                    "rim1strength": {
                        "label": "Rim Strength",
                        "summary": "Controls the brightness of the rim light."
                    },
                    "depthwriting": {
                        "label": "Write Depth Values",
                        "summary": "If Write Depth Values is on, pixels that pass the depth-test will write their depth value to the Depth-Buffer. If this isn't on then no changes will be made to the Depth-Buffer, regardless of if the pixels drawn pass or fail the depth-test."
                    },
                    "pcaptdata": {
                        "label": "pCaptData Attrib",
                        "summary": ""
                    },
                    "rim1center": {
                        "label": "Rim Center",
                        "summary": "The center of the rim lights location, situated somewhere on a 360 degree circle."
                    },
                    "backfacelit": {
                        "label": "Polygon Back Faces",
                        "summary": "Back Face's</span> backfacelit - Controls how the polygon's normal is used to light the back face of the polygon. For more information refer to the Two-Sided Lighting article."
                    }
                },
                "summary": "The PBR MAT creates a material using a Physically Based Rendering (PBR) lighting model."
            },
            "inMAT": {
                "label": "In",
                "parameters": {
                    "deformdata": {
                        "label": "Get Bone Data:",
                        "summary": ""
                    },
                    "targetsop": {
                        "label": "SOP with Capture Data",
                        "summary": ""
                    },
                    "dodeform": {
                        "label": "Deform",
                        "summary": ""
                    },
                    "separatealphafunc": {
                        "label": "Separate Alpha Function",
                        "summary": "This toggle enables and disables separate blending options for the alpha values."
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "Turns on the polygon offset feature."
                    },
                    "srcblend": {
                        "label": "Source Color *",
                        "summary": "This value is multiplied by the color value of the pixel that is being written to the Color-Buffer (also know as the Source Color)."
                    },
                    "destblenda": {
                        "label": "Destination Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel currently in the Color-Buffer (also known as the Destination Alpha)."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "destblend": {
                        "label": "Destination Color *",
                        "summary": "This value is multiplied by the color value of the pixel currently in the Color-Buffer (also known as the Destination Color)."
                    },
                    "depthfunc": {
                        "label": "Depth Test Function",
                        "summary": "The depth value of the pixel being drawn is compared to the depth value currently in the depth-buffer using this function. If the test passes then the pixel is drawn to the Frame-Buffer. If the test fails the pixel is discarded and no changes are made to the Frame-Buffer."
                    },
                    "srcblenda": {
                        "label": "Source Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel that is being written to the Color-Buffer (also know as the Source Alpha)."
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "alphathreshold": {
                        "label": "Alpha Threshold",
                        "summary": "This value is what the pixel's alpha is compared to to determine if the pixel should be drawn. Pixels with alpha greater than the Alpha Threshold will be drawn. Pixels with alpha less than or equal to the Alpha Threshold will not be drawn."
                    },
                    "alphafunc": {
                        "label": "Keep Pixels with Alpha",
                        "summary": "This menu works in conjunction with the Alpha Threshold parameter below in determining which pixels to keep based on their alpha value."
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": ""
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "wireframe": {
                        "label": "Wire Frame",
                        "summary": "Enables and disables wire-frame rendering with the option of OpenGL Tesselated or Topology based wireframes."
                    },
                    "depthtest": {
                        "label": "Depth Test",
                        "summary": "Enables and disables the Depth-Test. If the depth-test is disabled, depths values aren't written to the Depth-Buffer."
                    },
                    "pcaptdata": {
                        "label": "pCaptData Attrib",
                        "summary": ""
                    },
                    "blending": {
                        "label": "Blending(Transparency)",
                        "summary": "This toggle enables and disables blending. However see the wiki article Transparency."
                    },
                    "mat": {
                        "label": "MAT",
                        "summary": ""
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Selects which faces to render."
                    },
                    "label": {
                        "label": "Label",
                        "summary": "Creates a pop-up label when the cursor rolls over this Component input."
                    },
                    "alphatest": {
                        "label": "Discard Pixels Based on Alpha",
                        "summary": "This enables or disables the pixel alpha test."
                    },
                    "depthwriting": {
                        "label": "Write Depth Values",
                        "summary": "If Write Depth Values is on, pixels that pass the depth-test will write their depth value to the Depth-Buffer. If this isn't on then no changes will be made to the Depth-Buffer, regardless of if the pixels drawn pass or fail the depth-test."
                    },
                    "pcaptpath": {
                        "label": "pCaptPath Attrib",
                        "summary": ""
                    },
                    "wirewidth": {
                        "label": "Line Width",
                        "summary": "This value is the width that the wires will be. This value is in pixels."
                    }
                },
                "summary": "The In MAT is used to create a  MAT input in a Component."
            },
            "depthMAT": {
                "label": "Depth",
                "parameters": {
                    "deformdata": {
                        "label": "Get Bone Data:",
                        "summary": ""
                    },
                    "targetsop": {
                        "label": "SOP with Capture Data",
                        "summary": ""
                    },
                    "dodeform": {
                        "label": "Deform",
                        "summary": ""
                    },
                    "separatealphafunc": {
                        "label": "Separate Alpha Function",
                        "summary": "This toggle enables and disables separate blending options for the alpha values."
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "Turns on the polygon offset feature."
                    },
                    "depthtest": {
                        "label": "Depth Test",
                        "summary": "Enables and disables the Depth-Test. If the depth-test is disabled, depths values aren't written to the Depth-Buffer."
                    },
                    "destblenda": {
                        "label": "Destination Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel currently in the Color-Buffer (also known as the Destination Alpha)."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "destblend": {
                        "label": "Destination Color *",
                        "summary": "This value is multiplied by the color value of the pixel currently in the Color-Buffer (also known as the Destination Color)."
                    },
                    "depthfunc": {
                        "label": "Depth Test Function",
                        "summary": "The depth value of the pixel being drawn is compared to the depth value currently in the depth-buffer using this function. If the test passes then the pixel is drawn to the Frame-Buffer. If the test fails the pixel is discarded and no changes are made to the Frame-Buffer."
                    },
                    "srcblenda": {
                        "label": "Source Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel that is being written to the Color-Buffer (also know as the Source Alpha)."
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "alphathreshold": {
                        "label": "Alpha Threshold",
                        "summary": "This value is what the pixel's alpha is compared to to determine if the pixel should be drawn. Pixels with alpha greater than the Alpha Threshold will be drawn. Pixels with alpha less than or equal to the Alpha Threshold will not be drawn."
                    },
                    "alphafunc": {
                        "label": "Keep Pixels with Alpha",
                        "summary": "This menu works in conjunction with the Alpha Threshold parameter below in determining which pixels to keep based on their alpha value."
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": ""
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "wireframe": {
                        "label": "Wire Frame",
                        "summary": "Enables and disables wire-frame rendering with the option of OpenGL Tesselated or Topology based wireframes."
                    },
                    "srcblend": {
                        "label": "Source Color *",
                        "summary": "This value is multiplied by the color value of the pixel that is being written to the Color-Buffer (also know as the Source Color)."
                    },
                    "pcaptdata": {
                        "label": "pCaptData Attrib",
                        "summary": ""
                    },
                    "blending": {
                        "label": "Blending(Transparency)",
                        "summary": "This toggle enables and disables blending. However see the wiki article Transparency."
                    },
                    "mat": {
                        "label": "MAT",
                        "summary": ""
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Selects which faces to render."
                    },
                    "alphatest": {
                        "label": "Discard Pixels Based on Alpha",
                        "summary": "This enables or disables the pixel alpha test."
                    },
                    "depthwriting": {
                        "label": "Write Depth Values",
                        "summary": "If Write Depth Values is on, pixels that pass the depth-test will write their depth value to the Depth-Buffer. If this isn't on then no changes will be made to the Depth-Buffer, regardless of if the pixels drawn pass or fail the depth-test."
                    },
                    "pcaptpath": {
                        "label": "pCaptPath Attrib",
                        "summary": ""
                    },
                    "wirewidth": {
                        "label": "Line Width",
                        "summary": "This value is the width that the wires will be. This value is in pixels."
                    }
                },
                "summary": "The Depth Only MAT can be used to prevent objects from being drawn by making an invisible barrier in Z."
            },
            "outMAT": {
                "label": "Out",
                "parameters": {
                    "deformdata": {
                        "label": "Get Bone Data:",
                        "summary": ""
                    },
                    "targetsop": {
                        "label": "SOP with Capture Data",
                        "summary": ""
                    },
                    "dodeform": {
                        "label": "Deform",
                        "summary": ""
                    },
                    "separatealphafunc": {
                        "label": "Separate Alpha Function",
                        "summary": "This toggle enables and disables separate blending options for the alpha values."
                    },
                    "polygonoffset": {
                        "label": "Polygon Depth Offset",
                        "summary": "Turns on the polygon offset feature."
                    },
                    "srcblend": {
                        "label": "Source Color *",
                        "summary": "This value is multiplied by the color value of the pixel that is being written to the Color-Buffer (also know as the Source Color)."
                    },
                    "destblenda": {
                        "label": "Destination Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel currently in the Color-Buffer (also known as the Destination Alpha)."
                    },
                    "null": {
                        "label": null,
                        "summary": null
                    },
                    "destblend": {
                        "label": "Destination Color *",
                        "summary": "This value is multiplied by the color value of the pixel currently in the Color-Buffer (also known as the Destination Color)."
                    },
                    "depthfunc": {
                        "label": "Depth Test Function",
                        "summary": "The depth value of the pixel being drawn is compared to the depth value currently in the depth-buffer using this function. If the test passes then the pixel is drawn to the Frame-Buffer. If the test fails the pixel is discarded and no changes are made to the Frame-Buffer."
                    },
                    "srcblenda": {
                        "label": "Source Alpha *",
                        "summary": "This value is multiplied by the alpha value of the pixel that is being written to the Color-Buffer (also know as the Source Alpha)."
                    },
                    "polygonoffsetfactor": {
                        "label": "Offset Factor",
                        "summary": ""
                    },
                    "alphathreshold": {
                        "label": "Alpha Threshold",
                        "summary": "This value is what the pixel's alpha is compared to to determine if the pixel should be drawn. Pixels with alpha greater than the Alpha Threshold will be drawn. Pixels with alpha less than or equal to the Alpha Threshold will not be drawn."
                    },
                    "alphafunc": {
                        "label": "Keep Pixels with Alpha",
                        "summary": "This menu works in conjunction with the Alpha Threshold parameter below in determining which pixels to keep based on their alpha value."
                    },
                    "skelrootpath": {
                        "label": "Skeleton Root Path",
                        "summary": ""
                    },
                    "polygonoffsetunits": {
                        "label": "Offset Units",
                        "summary": ""
                    },
                    "wireframe": {
                        "label": "Wire Frame",
                        "summary": "Enables and disables wire-frame rendering with the option of OpenGL Tesselated or Topology based wireframes."
                    },
                    "depthtest": {
                        "label": "Depth Test",
                        "summary": "Enables and disables the Depth-Test. If the depth-test is disabled, depths values aren't written to the Depth-Buffer."
                    },
                    "pcaptdata": {
                        "label": "pCaptData Attrib",
                        "summary": ""
                    },
                    "blending": {
                        "label": "Blending(Transparency)",
                        "summary": "This toggle enables and disables blending. However see the wiki article Transparency."
                    },
                    "mat": {
                        "label": "MAT",
                        "summary": ""
                    },
                    "cullface": {
                        "label": "Cull Face",
                        "summary": "Selects which faces to render."
                    },
                    "label": {
                        "label": "Label",
                        "summary": "Creates a pop-up label when the cursor rolls over this Component output."
                    },
                    "alphatest": {
                        "label": "Discard Pixels Based on Alpha",
                        "summary": "This enables or disables the pixel alpha test."
                    },
                    "depthwriting": {
                        "label": "Write Depth Values",
                        "summary": "If Write Depth Values is on, pixels that pass the depth-test will write their depth value to the Depth-Buffer. If this isn't on then no changes will be made to the Depth-Buffer, regardless of if the pixels drawn pass or fail the depth-test."
                    },
                    "pcaptpath": {
                        "label": "pCaptPath Attrib",
                        "summary": ""
                    },
                    "wirewidth": {
                        "label": "Line Width",
                        "summary": "This value is the width that the wires will be. This value is in pixels."
                    }
                },
                "summary": "The Out MAT is used to create a  MAT output in a Component."
            }
        }
    },
    "product": "TouchDesigner"
}